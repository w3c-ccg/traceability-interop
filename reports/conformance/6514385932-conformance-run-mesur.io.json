{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5addec5c-5eb0-4c44-85bc-5c5354e6037f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3430f5bc-d929-40d3-907b-2e8775daaa05",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af07d6fe-8e5b-4f3d-8114-312814e43a12",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e48cae29-bcc9-4d41-ad7a-9d81f9186b53"
                }
              }
            ]
          },
          {
            "id": "2af79c33-93bc-469c-9074-75d815758f19",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f54235e-f6a3-432b-a1c0-a94b68f024dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8f751e4e-63f2-46c8-90b1-886311d9e244"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e476b46b-f583-4591-87ee-6a82f31e8a8e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0c86f8a3-cfbd-491d-84bb-dec8068fbedc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3492ac25-ea40-46ef-8a29-687730b13d8e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5734fce0-9a73-4d41-96f4-342a80654c03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2af5770-49d4-4f46-9365-dc81d22ae22b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c6006c9-9109-4c9f-b175-c9d67649aeee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a329f238-ed38-4dcd-afd5-18b9eac504d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "69f3673b-5471-479a-bedc-74c14587df62",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0dffb213-7621-4abc-a9cf-2d4ad1959271"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2848f3d-1e56-4c03-ac6c-dc0112cb9d9b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ddd9acb0-0a62-4361-9b19-34b5b6c14953"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "948f3279-7edc-47e8-9806-68c3afd843bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00072f5b-4189-46a5-8b2d-ef1dcb839850"
            }
          }
        ]
      },
      {
        "id": "5f7d2fc7-faa4-4ed4-a120-d6efe5dee56a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c9c048cf-4344-4351-9141-53fbb2ad6d48",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bafd72f5-05ea-4391-a144-fecd5697150e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d0503974-2cb7-4c6e-a254-bc4dc2def0b1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f80cdb-4d87-4185-b32c-7cf85a4e66bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1658f628-a850-4b34-8c8c-825365c43042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b0da2d-c0eb-42c7-917e-d94579103d6b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797fee64-8180-41c6-88c6-4eb59923da9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c8f53c5-013a-4c4e-81ea-8564ae03a105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd5cc66-9082-4d2d-8e24-002349df96a3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcd0064-f73d-4ec6-8681-d36d99a49aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a65be58-2f58-43f8-a0d4-561553a72215"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "093ce672-f625-415b-a2b9-efad802b7163",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ee3b607-96d8-40fd-99f0-bb633145eb3a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f5427e-42e7-4412-a064-1c9526b28444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e61c5088-16dd-41f3-89cf-b5aa4fa39cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b63bb23-c7b0-4d9e-9309-cfe705282d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf711eaf-6e56-4ef3-bf7f-09b5fdb2312d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d29d9b05-44e9-4fd7-88cc-bb739e84cad8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94d6b8e4-144e-48fa-9f2a-0d44847448a9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b072a66-beb1-47a9-b653-f1b8089e8cc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9850d63b-3ed1-43e2-a830-3a9746e72945"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f4d8805-679c-4172-8fdf-f27131f766b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "be2f08cb-6e19-4fbb-9037-5255fb0d2e6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87e28b7e-6b3f-4240-9442-3d0b78a37b3e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c04e2f2-69ab-4730-874e-e5967abf74b8"
            }
          }
        ]
      },
      {
        "id": "12c17999-2229-4e0d-8ac3-0ac581dbbd6a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0ae215d8-3f32-4b19-ae40-78bf2a449a89",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62581197-1da1-4d8a-b3d3-c035849a40b2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0b0aa612-c096-4844-aefc-468bc9e427bf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f660d002-a079-4f3f-a343-6af3f2935c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fead6c3-942f-4cf6-8c29-dd29438045b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71213ae8-35fb-4178-b6fb-5043c661dd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73487d91-0040-406f-ab82-8bb47bdf05ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6241f6f0-d6b4-41c3-ad04-c7422c3db9a1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15178b05-42a0-488e-9344-b124599c7000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cfdeac3-2a5b-49c3-b507-2e536eedf91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fa06ff-3c60-4c0b-96a4-095a1cc79a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "259f5864-04d6-48a3-8fd2-fdd89cc47bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60f3b05-8c50-43b3-bd62-cfc1bb4122dd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de95929-8a9e-449f-8741-f84c8c7481cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89aebdbb-89bf-4583-8c86-5fe0ff3df715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab055232-9ac5-4919-aa7a-138f0430b98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4794c4c0-7c69-4d61-9008-efce0e7a503c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de072f82-2987-412e-a9cf-752b671da706",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91b8072-a5e0-47eb-9939-bd4dffc8413c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf9d786-4bbe-48a3-bde4-51b6752586b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9967d318-f4f0-4f63-a5c8-639b67f506b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83b79194-9850-4013-8326-70a2bc6ab180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a79c69-6c24-4d3d-9c2a-94c4b0ad64bf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe17da7-fc32-45cf-a947-61dd9ae04fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed484f28-2431-4220-90b6-f4b9e1fd0308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ab60b2-d8c5-4468-b9b7-161ba3c904b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "420476a7-1df2-4690-9b70-872c905ef39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e13730-80ee-44e1-9dc7-6eff47cf68f1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ff921c-9da5-4dc4-8f0a-2930260d4a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50789191-e7b4-4df9-b8bf-813dd5b261bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69710bd9-6b8a-4ed3-a5cc-14e1eb5fab52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e7ec0d2-c5de-43c1-ac4e-01e574dbf018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c267070-68bc-433e-bac7-7b6629c5d54c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe806f83-f51b-4049-bfcf-fd83f7dc77dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518b0afa-969b-40fa-8b43-c2875b8a702f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6722470a-ed4c-4e5e-974f-9caee1b1a938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba5c78f1-60d7-4fff-9b14-faca88d3d41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b645907-9de4-44e9-a774-235b9fe49091",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387a1796-58bc-4440-9f62-ff624a38e36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975242c0-c215-4aaa-baf8-1552c6c89c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9cd865-5112-48f9-b48c-90d1c7681167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3454c21a-064b-4ac7-9b13-9bd1057e39fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f7bee6-494f-4db6-8d6e-de4ba0002b5b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097afc5d-928a-4cf4-8fac-25947409dddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9350d82a-3fe7-4d83-96ef-4d259434c6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a78c0d0-a2e7-434e-bec6-9952d995c935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cdd408e-840b-4ca2-8ba9-7cc43925403e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543b5ac1-4118-4885-ad34-229606815ab9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac5f92a-d850-4859-83c3-417586130f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329615cf-0c4b-43ed-a5b4-b7dbd2f1215f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa1a176-f5dd-428d-be09-e668d45accb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e7f7709-1ee5-4815-94d6-d4d53749a26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95191169-b267-417a-b7a6-113fae510ccc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4171359-2771-4350-bdc9-77ced7fa56bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332da28b-4c26-450a-b6b3-b9bb375f75db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6672954-955f-4ba0-baf4-81611225d791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc95c7e0-8753-4fd4-ac5f-0ef9fea49f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e687125-5348-4d3c-9cd2-4acbabaf6f1a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b62f873-f13d-4be9-bb97-752a078b8d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feed9580-23a7-4c4f-90ce-ef8b198f85c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff05be48-f55d-42bf-878f-1c45945e57af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93677efe-e526-4e4e-9583-970d13c4aa31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59b1602-f085-47a9-b027-2f360f143e0f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c156d427-b374-4f2f-9c42-9f205f5137b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b2093d-917e-4652-9ed4-0deb59b59665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ff90c4-2aa9-4e75-bd3b-07958512c0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f871627b-7f20-4412-ba45-b56783279c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef825ad9-98d7-40f7-8486-8519eaa09b8b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8449e5-dee6-458b-aa75-6741d8ab313f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85657e8-b521-4518-84a5-7cf78f1b8a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa422f5c-a108-43ed-94b8-05585dbafd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f194a987-bc45-4fbc-9c08-82b49500963c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f14b18a-6863-4567-9046-5ab889e5c2ac",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508d9642-d5ba-4747-8899-b44f6a74e3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63f0cbf-2813-467e-b176-d71064acc1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941abcc8-8d97-4bea-8f27-c3048040bc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b84dfba-4d08-4848-bc15-3a5e1864a75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6a5e07-6a41-43b1-a76a-9b1a9b2c69e5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738a4511-f716-4ae2-844b-b581e66fc49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867871ea-a5e6-419d-9ecb-d64befdb3e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead6f562-e5c5-4fa2-aaf6-2ad3c7918eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b266fabc-dc02-4596-a1fd-3c8f4e24e4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e458d3-ecd0-41eb-aa47-99d11c71c4c7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd0e45f-8a91-411c-a2d6-ab3d778d82f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac97060a-5156-4403-8136-a07073a8f293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad2f783-4474-4446-99aa-22b6783e98c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8e21522-d16d-4172-bd3a-207c2226bf9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2b54ba-9bdb-4676-a389-c7a932ba7055",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1e6600-9f51-4f49-97d4-c43a273efa40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcab6f9f-95af-400e-ac4d-c54f42566be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f908b82-5ff4-4ab7-b794-52fea5e4d831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f97de54-2302-4003-9d7f-b00f56c7e48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4ac00a-98cd-4c3b-ab93-c8b82ad8f1d6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdf9948-86ec-43e0-a614-5f24a6d951ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a739462-74ad-4756-9336-edeb0931bf05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf80d9a7-fdd8-4909-851a-788807a2cb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb53b549-90ef-40d5-b250-eb46e34989ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b69e17-5c81-4207-8c1c-795cc6f2acc4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c389b3a-0d1d-49a7-b94c-507952b54728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b34ae6-c17e-4143-86d7-8992b455b662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c07cff-bf88-45ec-8c71-f85233ea7181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9edfd87e-b8e5-40fc-98c2-b34b95ecdd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8369606b-5817-4df5-937f-96149a8930d1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59da4574-24b9-4166-9c3b-44f40eba3812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfea37ac-eec2-45f1-afae-173df1842b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397b8056-e43d-4538-9c4c-e8442b0e8364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "373cc7ef-259b-499e-a239-aedb61ee62d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3b5128-f303-4a3f-93b3-3d1430d62356",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b41c375-48d8-4fb4-98b2-0060f2257f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea0ef0d-9506-427b-ad6c-b78920d3254c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1c1e1c-a1c1-4d1c-aacf-2ec85d46f92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c68ea570-c4fb-4f42-a9c0-fd1a3ea45a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0145cdf-51b1-4250-919d-882984ab295c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bfa0f3-fdd5-453a-9771-5638e2092f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604516c5-540a-4a44-bd09-d974ea9388d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c007e3-c842-431e-a389-df9973fd550f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64375c49-59cf-4395-ba34-4514aa032367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664ce96e-5a66-4f39-9eb9-85bdd8f1e77d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbb0205-3fc9-492a-9e3b-96fa77bd0b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f8c996-c0d5-49f3-86ae-317de2836946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb041174-b8ff-4374-8471-73123471ebe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9986fe25-1b06-45a4-8f52-0e95bc1224ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08e0240-d9b0-4a32-ac68-f5f4efc00719",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9556a8e6-be00-42f5-95cb-443cd1e52d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1ddf88-860f-419e-a287-f6f4a83abaf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee7f4f6-118e-4351-83a7-eb2481ef4aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "093a67e8-9b3d-46be-a4fc-1829aee4f87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45decab6-5895-40a8-ac2a-b738c72648a0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa785b8c-cc3b-4d3e-8709-f721ae412752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6db7478-512d-47a8-9b55-5bd0e84ec9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a8c952-e3d6-4442-b018-c8b26120fae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cec74b9-c16b-4bcb-a574-bf7602b4d0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32936a95-0e17-4b58-8c30-cbb0bce64175",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5aaa19-b696-49c9-85f4-2edd58b669bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7927196f-ba93-46d7-81be-c6c08ad5d38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ebaad0-44b6-45f9-a55e-ffefef9ff15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f05653-88f6-4fff-832c-1fdee4f2307b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c95381-d650-43b1-ad46-896e447ec977",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c89fd52-b249-4e59-a283-97c080d89c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4bbe71-db24-4325-8f1f-c87e3c73c0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ccd873-b25d-4c53-a68f-d75a2f646f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9814de-be26-4bc7-8c4a-490b9b11191d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20add23a-e9c0-412a-b4e5-d9affdd177ac",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0523df-8a60-4a6c-ab45-4fe8b8a3f13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41edc71e-6d91-4b7d-86c0-9f0f55bdbaee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe0d8ba-057a-4eca-9481-e410d21643a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7cc446-5f68-46b9-99aa-82618d2f67d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0ab9bd-b808-4d88-acb8-43fbb045626b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb82d546-959e-4b51-9eb6-bef669ef7eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8aa6567-5819-42f8-a38d-d24825a6e982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd35aa97-3be5-4c95-acce-2e5f153c6fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7b4921-e883-4d5b-84d7-afb945454eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d46c40-70ed-435e-aa7e-92e107c77989",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb7bef9-5b48-4c02-ad1b-1e08f2a1ac07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc55839c-7076-4fdc-b60a-0396714e25c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8a9aa5-ac1e-4fde-b6ef-4708e60a0623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea35885-db93-4c3e-a78b-647e9244537c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4624ca-1028-402e-aef2-30c031bc47f4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c9ffca-cad0-495d-853b-e6004f507513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5de3166-ac45-4d2f-8fcb-323c110c68e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80715876-e872-41d2-8dd2-b583e67720fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52bb5719-9b1c-476d-8365-62b697b48b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30957b99-fc04-4058-8693-05fefacbfbae",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1645e533-4c82-43ec-9e38-be7152ca6fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd65fadc-21f5-4fac-8e18-96da72b3f77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f586cd-a7b0-49b6-9f6f-b2e9292a6c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26618ba3-bb89-4100-85a2-22d6ac1d2dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038a015d-ab68-4f90-812c-5abd8e5769de",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f59d83-3c95-4106-838e-729d13d21f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60148801-1d78-4bfb-a4d6-543672b95fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec016941-b711-4204-a0f6-a7fef49bebe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce9f600-5ec7-4809-8c2a-1ca9074ccbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a9f069-5ffe-46d3-98a3-e79fd9f92451",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932d8083-3415-429c-b8cf-59d39333d2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78e8c76-71b5-4796-8b73-b4850ee83f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba96872-3c06-486f-8516-1bb208d6e731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a8820f-2d4a-4342-b546-6d3d342930ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51c809d-38c5-4dd4-8e95-daf7d2772e70",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b043ec-1934-45bd-8da3-c3ec948a1cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ead00300-f6cb-4b9d-a5f8-705a3d243c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102ba7a9-79b0-430d-8ff0-9b1ea22a9325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb09a3f-f869-4c69-bdd5-4b7a7bc59fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f55982-503d-4b64-ab24-0e5ce21584c5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e351aae-a8dc-4c9e-8f2f-43a7e1508b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d15ce7-12f0-4b99-8631-b6746d530c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81625926-3cc3-40db-b11b-d056b46ca6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2afe8b5-5cb8-473b-bb91-22d0454b7544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4250709d-2212-4a1d-9aa3-f373aa3dde80",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0e7a15-d028-413e-948b-362fab2ac0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5800db62-58f9-4f90-8553-232c57f67224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b10fc4-61f1-4716-a897-b5f214abf332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ace434a-3c84-40b3-a554-f16aa63784c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e55d2b3-fe56-4a3d-a544-021a4f4172e9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9c04ac-158f-46dd-9517-cbcd46f63e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2492c3-19e9-4daa-b51e-9ae4f439a826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521d97f1-a26b-4bfd-ad2b-3b05b53f798e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8af82e1-0847-4c54-bb5b-e47cd11aa337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3935ba5-da37-4efe-b9b2-9b1006590cc4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f83eeea-c84f-4989-9e58-e2c99926af3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e179e6f4-87fe-4d39-8d72-2f1cbb7599aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbd3812-de82-4733-addd-e644f5ffe4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e22b80ee-6721-42ad-946a-043e22a6b0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76500f64-8bc7-4218-a8cb-d011f03a56ce",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf57c2f-1433-47bd-8eda-9d12676b13f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceebe93b-7dcf-4737-897c-6e36cbb93f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e498a9-5495-49ac-9434-aac9e04c6191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ff3a76-3e03-43db-a124-a392cbc2a3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300e85ad-1b9d-4ef4-b211-b1ccac207e54",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbb7bb8-aff9-4e4e-9aab-9e5bc267efcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772a8cc2-cf65-4f91-be88-46d6a65e1683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d30d74-e67d-4849-b92c-0eaa3d7dcb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff93283-e784-44b2-be3f-108356dafe3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bbec8b-78e2-4017-9b5a-6bed2cd163a2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98281d18-ee1f-464a-a215-4e340fbcab28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ecd91a-0f62-4296-91fe-d427e1203ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86789aa2-ee87-421e-9654-b85c5a715f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3753e28-ab02-4bd6-8474-8f30a6a53eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aefaab9-fc6a-4fe1-8701-c7100c99be96",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e66ca1-f2c4-434e-8806-0ff045cc01a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137bcdd1-c3cf-4c30-b762-ab0dcc5adc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b87605-1093-49c2-acc9-8e5372847139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e13f38-3bb3-4158-929e-fd6fd63c1186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1dfe5b-6e4e-4450-9a5d-a5dc791b5be7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93bef27-593a-48f5-bcbf-987f42e74074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc64ed56-77d8-4f97-ab9c-8819819c24fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42e04a0-21f5-4217-bf75-a496b33be20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "73a972e1-1361-4b07-9a43-f2ab7bf84511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a48f647-ee3e-4beb-844a-5ce691b218f7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a273cd-ecf5-4a73-9e93-67a7b830c431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8374b67-77f2-46e8-886d-8960d8cbfd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f059ecab-333d-4d7f-9396-3a3a9dd19eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60584f68-4f66-48bb-9357-022cfe680e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4864e8-f69e-48b6-99cc-7f27f35f8a9e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7f8349-9e2c-4b60-9bc1-dfbd801504db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a73f6d-7f12-4c0d-ae32-c8ce1ad789c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f87dc7b-5cb8-42a1-a59d-4613ecca6727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de7ca579-4ac4-4b4f-9f10-310461e4ab34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13a09c5-e232-4eee-9848-e1982f9525c8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62884dd-3bdf-4ce8-a62a-6b3bcafd97c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd511a70-81b0-4bc6-b99e-a231b47dd043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4719f185-3e2f-44d5-8582-e1928b8a21aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99cb846d-f015-4c75-a302-40705d6579f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f78d43-17d8-4249-9aed-dbd0fa619e83",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61056899-7793-4283-998b-e6f177854d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa37ddd-905a-40dd-b087-8a31d676d8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5adaa2-f724-419e-bf04-0a3d079ccd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd42d9fe-05d8-4ebb-a6f8-ae728b496f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa62b71-74f3-40d7-bf1b-c0070d890c90",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650d91db-2208-4ca9-97f4-92adba848ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5555453-3177-4a9b-a2c3-49694ce5d779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dc8a75-2133-4239-8810-316ce52b8367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f936eeb0-2c3e-45c1-ab7c-ad969594d735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac88a46-c81f-4cde-a641-31d5c71afd77",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b57183-5777-48f3-9228-870e15264c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf563583-14fa-4602-8120-667b4e98a183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6479f0-1df0-4d30-8400-456950885fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0555f3f-6853-4b8e-a623-7f34c6c7d8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a1b6ab-7781-45eb-b5c8-d8a610811e18",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdf8284-ba69-4bdf-ac9f-653d4f7ba816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba9bf77-c517-4beb-9b66-c11bfe312fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b70e2f1-6f1b-410a-a8e8-15ba5cb758f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f5b479-3f1b-48de-9382-650348df1fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3ffb74-f636-4c43-a025-2d7c5066dba8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee09326-7be3-4b36-83c6-05a799034901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588ce069-03fe-4fd2-8fad-af352c02ddb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1f8c06-a033-4973-b1fd-14f138197eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a60e2b-a93f-46c9-8d3a-9c827d6b068e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722968ac-905c-470d-98c5-1a31cbdec54f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9fd22c-9722-461c-88e9-56dde6ddf933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ea77da-50dc-4c8d-96e3-c1657649b09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb638e43-fc0a-419d-9f5c-007f612eb8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9abcc7fa-6dfd-4168-b45a-317da56a5758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcae6ccb-8643-49bd-ad89-8b51d5ad6042",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4aea6da-b1e4-4276-9898-7d0e88880fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315e0bdd-9655-472e-b15b-31ebea08d235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9371caff-c736-4dde-9d64-b0703a4f9643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d82b9061-4349-4212-9454-7837bb49b5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb700f69-021b-4a66-9967-1e677783c377",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7009150-4afb-402e-ad66-fe2726b6b2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09b2341-20b5-4e69-9f4a-63d099926740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed058083-c9ad-44bd-8954-63cb37a01894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2c597546-6460-4a0a-88ff-7518558ed4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05a2a26-5415-4ad1-8e17-e4f2326870f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8ad446-8b81-48ca-864e-3d2c935a03b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3299fec9-b3d2-4443-bf3c-32a3e3d9db7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02838c5d-4b3d-47e0-b916-bf4d52f70c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8da96bdd-6cab-484f-a130-97337a4dc493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49908b7f-e7e8-4e08-b678-a81bca359fe6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1965b16-d2bf-4502-b3d5-d7056875b559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5debebe-1ae0-4c01-9d51-ff7e5ef2ea9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2190f4f2-f80d-4bf3-b469-5a970d7f9696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f62f1dc7-5765-48ca-9d53-2995d20eca6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df73559-3484-4efa-a073-545703c09e95",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21db66f-8ffa-42a0-8db0-ed5d32a42acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bac77f-752a-4821-a911-7efe60ac65a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2411e9dc-9d4a-4147-92a6-9c34d7486cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5354f3a-13ac-47a6-9d62-1fadb5d62eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8f58bf-bd1c-40c8-ad4e-abcf0adbc542",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e18b44-070b-4f4f-9479-4b4383629c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbbddc1-9bad-429b-82fa-1871d66bf0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328a0b08-405b-4faf-994c-9329e12e995b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7af65579-1e6a-459f-ae4c-c4bf77bd0bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351bb24a-ae2d-4668-b17c-8200c48e19bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d23332-8198-4852-a33d-711b3fe00d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d38f5f-4d42-430a-817b-5d8db30dde09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d077f0-6b21-481e-a8d5-2e6a69637843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e520bef-556d-4c6f-8b87-897b3be0f540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce80d420-9250-4fc8-a72b-be3f2bf31d29",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca3b4ac-5889-494e-b7a0-85f6571d0d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29fc49ef-2794-4660-b5b0-89d7fb0354c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9681dbeb-4962-47b0-ad05-cdb997958f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "df8c4dc4-e5d2-4110-89b7-6c2177fee496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7f60b5-6202-4643-8903-85a17271f14d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea701d19-07d0-4757-a522-cac89e90658d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c1e48f-3a4e-4cea-b0a5-cdceb7bb651e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82f4871-82f5-4f17-ac41-366556e774e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a350a91-1ac0-4308-b5f0-e1f7de7e6417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25848d90-02a7-4d2c-a154-cfc4a85cf01d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e85f36-c6ae-4796-8480-34618a306d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4b6725-a8d8-4e3e-9d59-0bf2f3ea6239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9d8e77-9b40-4b4d-a6ba-1e0da9578317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81a03b85-11ee-4e5a-8214-671a9196e42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c0ffaf-c7a3-409b-93e8-8119d1a673d3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd52d8b7-4626-4ba4-a314-8a2b105afbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90bb6b4-a5e1-41ac-86d0-9d69ad67db14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4529a76-0806-4189-aa27-a23f15ff0d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4695197e-0ff5-4fd9-b5ed-0393fe630d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd4419c-e062-4014-984a-e43a6b1d060d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b4dece-5aee-4218-825a-f9212c34a4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db80dc8-7a62-4614-8356-8c34400792f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48f1b63-22de-49b7-8a68-27856aff2dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e41fe041-b575-4e47-99a5-26d3a5551939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd183549-e53c-4ce1-8a65-c5cf9cabd123",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d0c08d-afc8-4b9e-afc5-71c2d6155d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003ad727-3158-4a8c-9648-58023374b48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46cda92-08a5-4f5f-a3bf-82876b8bcbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a737bdac-34b2-415e-bcbd-9ee9e3f07eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6456cf01-2e4f-47d9-b903-cdce93249ec9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a7def5-8234-4fde-9f59-855ebba64c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06bb693-8f72-41a0-bf9e-21dbfbf1a5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cf1a3b-d083-48fa-bd17-985024300bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4099a1e3-4899-42a4-8d44-5d6132d041fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0517d7-fa64-4995-8f5b-90bc6498c6af",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e54d326-c89d-4cc6-ac38-e870a9d206eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e3d8ca-45e4-4b30-b007-8c99ac1f488a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c33004-eafd-410c-bd3d-a4a4a352e4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9726ab89-3a36-49cc-9aeb-5f07856051fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dff18e4-e69a-445e-b012-0c75847632b3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afa1460-d8ff-46fc-973d-8afff8d9451f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0100d8a4-1850-429d-8275-7901f34d63dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9db39f2-1daa-4545-80a6-058ddeb31ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25c84291-87a5-49cc-913b-980966ec61af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1799d19f-9d34-40af-bfb1-48561a488d5f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a961577-8740-4e5f-b333-209ba374e0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0953fe3f-f9a4-4dee-bf04-b46acd25b082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8f4096-227d-47ce-a3f9-8fd581b7707b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b392463-17ae-491b-a92d-7b19ab3626c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37f6b65-62ef-4dc1-8de2-1641f686796c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0509b6-cf37-4430-99ff-e09abf3bc451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4faee7d9-a6f6-40aa-8f23-e72326f43fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e03696-ed9e-447d-8ba2-c84beb6a9b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a091182-bb7f-4507-a807-589cc2ffba39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e575d28b-3326-4a47-8db6-a7a10aa0caaf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ca4e1d-3f32-4808-888d-21443e9563f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8d6e77-c0f0-4763-8e1c-548bda95eb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3479da-778c-4b85-82e1-d7d3563e0c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7088f2f-6e4a-474b-aa32-0a0eceec0ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72ef04d-840d-4f33-accb-0b6ffa612438",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096dbe0a-62b8-488c-8d59-0e5d130e9ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b183a27f-5b51-419a-a6ff-1a0c11c38f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cf93d4-595e-4a17-bb12-744a47a8cca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9026ffd4-3fa4-4eb9-8ebf-a87f6bcdf748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31b048f-8e99-4f21-9038-ff065282854c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e708083d-256c-4958-a180-505baf6d23cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29a5eee-c109-4539-a54f-109b13580d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc1d354-d097-4311-932d-98f30273831b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f5bcfa-3d58-48f4-80a2-38c7fd70fb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d22314-f906-4e6a-93c7-513f7c9bd51e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4390b071-b95a-4526-9160-33926fb9e9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077d5f99-9c66-4ae8-bbf6-c9500e3d9c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58520ae-c28f-425c-9ccd-8beaf59e972e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d2fd0f-4b99-4435-af56-b0829b183bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfde06e3-be33-4d8a-812c-0107a7caa317",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fcfa6f-3338-4f02-926a-537fd57cc90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f004a5-213e-4e8c-8b52-10baf8e16615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cac2e4-fddf-4742-a4a1-0b7dfa9fb08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d086de9-859e-44d7-8321-5fb5b1146b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b88595-5730-4642-a4cf-598ea84f2255",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d9265b-431b-4d79-8d0c-8921bbe96789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b93324a-481b-418b-bac7-a3c440080c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e531be-2515-45f5-94b3-864786e21625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7082f30c-df11-424b-a2c8-5164acda1b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c02cec-7993-4f20-946b-2b1270b7956f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aeded4b-6c1f-4c59-a059-eaee6696fe15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ae3c00-c302-4ac6-89d8-095ce3e66ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c08e60b-225c-43ae-8094-5ed9f67890de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6acaa5b7-8654-4eba-aa82-118efbf7dd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74821353-879d-4d49-989f-b233858d9624",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f013979a-8db3-4ba0-b42e-81579e2713c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737c43b4-9cf4-43d0-862d-734d6c679999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e978afe-8c38-4945-9dcf-f66aed497205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63aba5d4-73fd-4003-8c37-c3a15cdf8048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4fc265-36aa-456f-83dd-24732fb887ab",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6b51a4-a6f5-4e95-b44e-0ae5a617ba13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25e8fd9-c8a2-49f7-8b4f-7359d3b61d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf58a0f3-5f91-4260-b8a5-be33c5e0fa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2bfc4a-3bdf-4189-9b85-27a19d9d1bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c123248-2dca-4d79-a773-ab355a1152ec",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01b32c9-4a9c-4380-9d68-dd00411a7f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db58dda-f1b7-437f-958e-61977b6bf5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddb42d8-9a8c-4201-b607-eef93158b9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40bb38cb-eee1-4780-ae82-5f52f56802ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c87949d-3874-4612-9784-cd1e554178b4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04142a3e-58fc-46c1-b676-ed71bb3b6d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b6cf2c-0f5a-4a3a-8289-b4c990042799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91398f89-e6ca-4858-8639-258a620dca5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6018c2-9b74-40d5-8ee8-b650179b9e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6c4981-78fa-483e-9959-11d73412c16b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb19593-e322-40cd-9721-ab26a2743483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feaceaf0-32a6-4331-91b3-c5ebaa34fa24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072bb8b2-3afc-4202-b007-d7edc6648d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d75c3f6a-d820-49ad-b442-23de732855c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a905fdd-cdbc-4acc-b2ee-ea4724ac9076",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0029c446-e0f4-4dcb-8df4-7e13c272cf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "759c5306-dcfa-4a7f-9d99-2cc1a5daa6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8353888d-0371-4a96-aa00-5a7fb002bacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a82dab6f-6209-4c66-b900-3a940af0942b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd893954-1652-4622-b790-a52f05f15bc3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33b4c75-5527-410d-ba54-b5c3af0eef24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0478f7-1251-48d4-a8d9-af26eb566d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a050e1-ceb5-4602-89f8-aaa160f0b9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18510a63-cb26-4eec-8ecd-28f9706d745c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b303c05-1a44-4acd-a78c-b34853af664e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cc0539-3377-4482-ba54-9c205bc9d630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df45b23-dcd9-43e5-bdb4-ad46e49fc1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506bd39d-b00e-4846-9f1a-3b89c5548ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "93c2823a-3ed8-4c15-a607-3e72cc9f3e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b5cc91-7c9c-4a97-aa83-97f5d5cf898b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29b51c0-b5b8-4c70-afef-d8bf07c972d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36cc593-c148-42e6-b006-1f447e975d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68a2a04-949b-4ac2-8aed-818b4f6ff05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f969a235-bac8-4aa0-8d0f-ad9c9cf43fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe946314-bf0e-416d-9c3a-0c29be34e6d6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125cbb19-f784-4184-ad0a-9715b8fdc1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbdaef8e-6227-4d44-a2ad-5afeadfbcac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b90c364-66f5-4ffc-b4a8-49061ad9d1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3725d959-21c5-4bc1-a7ea-8a38e9ca0968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da74a339-28b2-494e-970a-5ce20babb103",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810c10e2-49e7-4300-bf98-f038b1a75939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7609edab-304c-464a-9cf4-7f0d8e8b245d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c75ee10-b00f-423d-9eb9-bcace6f0f939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5799e2f2-a91a-40f7-bbe0-ccc0ebf1605b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cbf369-ff0a-4000-84b5-89373917d81e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3aea29-27e9-4126-893b-1f72baab17c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1304783e-06a7-4901-a60b-4359cf43b334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e284e7-9abe-49d4-9675-b55275dbbb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8e75ae-e3c6-4524-b986-6d2f91f34f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78b8962-b4f3-4377-ac60-30df4ee5d752",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d957769-df07-4d04-adea-9ec18ad504e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "51cf2a41-c40d-4316-b7e3-2344ef31169a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bdfa4c-cc1a-40ab-9e15-d23d953f41ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c231d091-9296-4ca5-87f5-c20a9f11c83b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0204a9f9-2eee-4fec-aef1-a46ff4409886",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "539a1ad7-25df-4812-997c-27eb24f52acb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f87f67-8fb5-41da-8e2c-8152d7195de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c933648a-bf9f-416b-95a2-f174b83045d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189f2111-6525-4994-a9ff-daeb000ac466",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2898d71e-f933-4377-9f0f-4bdd6e268c33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a95628b-4a69-4973-9d76-d52ce6bc13ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4ec8f5c-4697-4dce-8ae2-3b1d823845b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac1ace4b-41ed-41eb-9b14-22e57b759641",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86483594-6c58-4090-821f-3f5ce0d25440"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1133fb0-4700-4b4f-b3f8-9c004f530b9f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "70c234b7-0c05-4ef8-9d1a-8051f8a62be9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "44e063f8-f354-41ad-9316-661a20658d7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "116100fe-8318-434f-9ffb-c8fe3ca4d2d3"
                }
              }
            ]
          },
          {
            "id": "8dbe92d8-f9bd-4ab9-a384-cd2da948147b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "52ed4262-af57-4f59-bba8-42248ffa1248",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bfb8ea1-435b-4563-9e99-881177a27104",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a3fd1e2-98ad-480c-bb9e-1568ed8c94bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9df596d7-b9a6-4b15-9eaa-48a3dba4762b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4a5a965-1ad7-4424-9de7-cb3fb52edc8d"
                    }
                  }
                ]
              },
              {
                "id": "2f04e4d7-c899-40b5-860a-4d3a97575026",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bc65e7c-d6ce-4f59-9438-a42f87ec502e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ecab416-6b8f-4d37-ba98-8cc0e423f566"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e388f605-9272-4730-a95a-6eba9c7446e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bdff1678-f225-42be-bb9b-bcd8c3feb20d"
                    }
                  }
                ]
              },
              {
                "id": "0eeb767b-4c19-4405-b297-95fc12fcc1af",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07d79633-cb77-4b97-a095-aaad47aa95c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be08a4d0-48d0-4ac7-bf10-c3b74010c67e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d161a2da-a729-4484-9ae3-0d631d064a89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "34b460b7-c477-49df-878e-c0d1a89c428a"
                    }
                  }
                ]
              },
              {
                "id": "29a65ef1-0c8a-4c40-88c7-28b9b6d612a3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e80c42f-f73f-4bc0-ba11-ba0877ea1327",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a01c8b59-1ed2-4f63-93b5-719dc151f500"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b6c5c19-bccb-4641-a3a4-656d7bec641c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2fe4b4b2-32cd-4b00-be22-cdad8ee450b1"
                    }
                  }
                ]
              },
              {
                "id": "107724f0-4e96-465c-9253-fc1184bb7132",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eaf314b8-b20c-4a3c-83b2-a1b021fccea9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "239ea5f0-a204-442b-969c-1001f331c892"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eab954b6-e2b7-4157-ac03-8e891938bba8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "33d39db4-45e8-4980-8e66-e937b7e791b3"
                    }
                  }
                ]
              },
              {
                "id": "aa41e13d-9385-4855-a324-461c09e4b75e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff74717f-b33b-4c50-9fb1-50c0ad570eb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebf35dbd-c895-4d39-b3d0-93e6b0bd1297"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52372819-8d28-4884-a261-bca71a123cb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "977a0d21-ce57-4c92-9d6f-2ed924115ba6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3e4a5fb2-cb0e-4c3b-8d88-20799e0f02d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f810a3bc-00cd-4fbc-b772-fc903af9be58"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "490c5215-246d-4fc0-930e-2d6885cb9d07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6570affa-1ab7-43bb-b688-ee7b03b17705"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e8ce501-1bab-474d-b778-e5b8685f41ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "26176327-b6ad-49d5-b1d8-7e5a931924f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f02f1a6c-373a-4b79-8c49-22f3e6fda43c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "661fa635-6483-4e2a-a661-428152cdde66"
            }
          }
        ]
      },
      {
        "id": "af77085c-8743-450e-acb7-1cae27b9b7db",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3c9a312a-d7e0-4da1-9779-c6dc5cbeeb26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80d60102-c411-4ed8-9497-4152f36ccf52",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7252117-9048-4738-ae62-35c52b12976c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8efea17-6a63-4448-977d-2e45ed4b5bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0fcd6ef-8b37-421b-a631-e2363447dbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2133bd51-ba37-4447-81c9-d1b3246cf29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b040e7f9-be52-4fd2-ac74-a7b704dfe69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a5c2a2-2434-4f71-93f8-4d0a443ca11a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d70e9e6-6a9f-4e2a-8e50-d7587c39a2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4463cd92-7dfa-46a2-a891-5ebd1c260dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70218762-abf9-4296-ba29-3bae19a6c474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "202e39e5-9d49-4a91-85df-5b67108de77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1609f965-7342-434b-af34-ad886a39cb8e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f73392-e21f-4264-87c3-2483132e41f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0883d02-5034-46da-ab33-62d9a8f58d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3dcd962-398c-4583-aac1-042d78996753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6ebbcd-f54e-43f0-b904-1950a3e93628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13dfd417-6fcf-4ce1-a37f-2d6c2c3dfeb0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0bc5fa-6ab8-4bca-95ff-b60d195327a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44006038-2083-416a-8c1d-f26a5727827e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a47f541-0dbd-40c8-937d-8c8a4a44ddcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25886935-c435-4b8a-838c-905ed95f024e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f79ad1e-05ba-47ba-a915-9e5fe9dc7a3e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1662555-6d5c-4480-94da-fa292b588bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e341f2-7afb-44b6-b438-c5004c1abf18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1497bc9a-8588-455f-8b52-06ae06618124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10733a12-eba6-4dd8-a537-6c203b1fad75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44d7e1e-6ab5-4899-9469-fc89f40702c7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270a687a-5e81-460b-a980-3b2aa18cc3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc706cf-6c86-4c48-b99b-e0abe2cb855f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120ffb83-1728-4493-bf0f-b407c72d7d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44e7f8a0-c01e-4d2f-8ba5-7cacddcc5c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723034e8-cecd-4aff-80b6-b1834f3b03e5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd47b76c-aabb-4e31-b5bb-44e7ef16f73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd94be3-bf18-4bf2-abd9-1d3df335fb4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac50111-c28d-4bf4-84ac-a307a11ee53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "885bcf34-55eb-4e6c-9ac3-eb0e11ebf748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44550c24-9ac3-40f8-8e21-b304e328b92b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2673a3-bf60-4774-8f82-8048fc75ab0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8e0306-5018-49e1-be24-9eeae8cf5517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d167a7-686e-4698-a010-325a05c19538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10819b57-e391-47d4-b397-5e92458c76ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d248d4-f8e8-45f1-a188-76ae065c958a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74760a31-5f29-475e-bef3-db18aa3ff42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abac453-6297-4145-b843-fa06afadd363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8912a0-9685-4d02-ae62-4b0389de2bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e566a36-4f41-44f9-879d-27f6a93d2293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c70097-8a94-4a78-8957-168ee5634dc7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07cf2cd-54b5-426f-b756-b488a8808dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc06e18-0104-49ac-9fd6-99ebc520cf8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5698d6-c4ba-48bc-8d41-30430c1cd8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "727200e0-2acc-42c8-8ead-81d3efe49e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50617ee2-5d4e-4361-a2d3-3b40a30cc2ae",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1136ca9-8d98-4ba4-9a3e-648375e5c43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23a2182-5d67-4472-a65d-2f4fbc8f9212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4281150-bf47-4a36-ba77-16214b8c4751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a203b240-bc3b-42f7-8b02-75abe4d925e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba89bfe-cf41-4fa5-9844-7483e58c63c5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b7551b-1c75-4b95-bafb-2fcdd1e5c03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee03ff98-68e3-42ed-b181-0fa818e3a4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f70d13-0b20-4ec9-8ab9-59fd11f74892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26d28dd3-babb-4705-9455-fbac7b6be9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6718337-7688-4644-873b-b3f67282b24e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240ec085-6ca3-4d11-90d1-eb7f7243b656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64264311-3880-4f32-8124-a80271b6378d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d957a9d1-ca27-48d9-a19e-1b7a6f190544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f141d8-83bd-4abf-aa78-187cb47dc47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7e4f6b-9339-4a02-ac13-c69081a6ca1d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d6b0ef-566f-43a4-b345-68d9d5e11ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48ffa9d-e699-487a-82d5-171e04aaa283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32353f48-9fbf-40ac-9f66-49fcd0516127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "863aa85b-31e4-4b35-b992-3e65e34c86e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6f0619-6920-434b-a5f2-2102de72cc89",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd317232-3184-45a4-b86a-55d4af9c1c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b940c1-628d-48c4-b16a-04514e30be7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449125ed-b625-411c-8989-ac1a8eef1ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8cbfcd-a77e-4097-8fb4-cde8c7fbc05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4343d18-cee7-4c42-b58d-11f116ab4188",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4ae611-68cc-470b-b387-6e4e633cd2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b79cd1b-f351-4eb2-b97a-816b41c4b4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10024f8b-a667-4af1-8d8d-8dc7841bcacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "335155f8-6532-463c-b8b3-63147b75ab9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a63034-f423-48a1-ba40-05a736e8c0e8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6405fd5-58bc-4557-af35-77eaef5e8899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49491cd-a40d-43d6-bed4-50aa96f4c1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21352a6-34c3-4e74-b785-e4b0ffa0c484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf96270-7094-4ebc-bb1c-992526be697a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e82a935-4fde-4dda-9376-59da5d257e37",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fea3eb-b3d4-4eee-8903-b8aab0cc9d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c1a786-c247-4624-ada2-a08901839066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a7983d-d7db-42f8-829c-b416d378a24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "afd98389-6780-479a-8a1f-68ec8ed1ef81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd841810-1def-4b19-85cd-0768d621ba4e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6a0490-4c13-4889-b99a-b93b36e1407f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df83874e-9236-464e-9ae5-05c3e11b6ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d86589f-c27f-4677-a3d1-d96dbb933004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8722d2a8-f61b-4e79-bb5c-30b3476e5707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55fd9bb-1eec-418e-937f-994f41fe0cc0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f078bed3-d4be-45fb-b5bf-343c71664865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839bd38c-775c-4413-9490-bb9934ad24dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a629080-3594-4172-b3b3-3c8d7bd6b1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92dcf2d2-1aa6-4db5-acf7-ab39dd6fadb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c1b1c5-bc04-41f7-9918-a9fa957bed83",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26923cf1-49e2-45f9-b439-570f86dd2889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a880455c-8ba0-4bb2-8f1c-3b985fa177b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb986be-a6ed-49ab-8ab6-4e8e126f7bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf4e30b-31b6-4484-beac-9ba93edbd250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290fd3c9-e2b4-4d35-ab97-41052c7129e8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55aec983-ae0d-4462-b03b-4b561fd4c1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6ff97b-84a4-47f3-ab57-86cc40e246a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfb2e49-755d-4260-b722-73158eedbd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ceb454a-63ec-423f-a9c6-4339380e5da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbe60ac-1fd2-46ab-b11f-1fb5874d78ae",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec451d8c-3dcd-4582-a355-111f4955f134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d042d6a-791f-4bf3-af39-8d7429d81f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4491d60e-c369-4c34-8375-f57da6e0df45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65fba601-42b7-4615-abd7-de209eaebfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7f8fea-8b6c-402f-9d15-7acd0eee7265",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4306417-b1c8-4926-a0d4-73501ce06819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adae124f-2e30-469b-b4be-33df28e88667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5511e31-2c01-45e6-98de-740e61b2d382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "deb91a02-c32d-4a7e-8579-101d67f51fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe97179-92d2-4dcb-b6c2-6877a97902f1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c722b7a-93e4-4c56-8221-9b4d05a6c269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27082ff-d7b2-4ad0-9190-eb661a261bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84851bfb-67ab-4815-a06f-59c7025bb2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac550a7b-a0ad-46fc-ad61-72e898570280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07fbb55-010a-4ae3-b513-a17bce82b3a0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1871f4b7-4263-40bb-a533-e85bc41d808a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f683a1c-47ab-43fb-a189-7b15f0860bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7edc9da-28b0-4cb6-848e-f3269c823347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ccf5e1-575c-42ac-b41b-9045c50a054d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efbb343-5a39-40df-a480-e1dabf89f335",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ad4290-d81c-437b-9a52-4260b8d30f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0457b3-eac1-402a-a852-b5781674a25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee30e011-4c7c-4c3d-9a18-609e5d554eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43d1fbd8-6ea4-4790-86e6-157d2f6c3aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d3be9b-85f0-41ee-a30f-ac92a38d178a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb5b053-b365-4255-a032-15446c96a601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d07a23a-c562-4484-a760-e9ca8042f179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119f6fd2-48ec-44cb-b801-22ba454764d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d52720e-d154-4f9e-9173-6f45009c7e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4318c7-73b1-401a-95fc-78cd1097f817",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5df787-492d-42d4-98ce-f604405dc5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b8568a-19ef-42a6-ba93-0f66c17dfe97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76111f96-ab18-47bb-879a-d7d4f0b1379d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4de5f09-f302-47e5-b55f-09d111f3700e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23fc3eb-1a6b-4a5f-8123-2d1a1a61f3de",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518b2a50-e0bd-4f21-91b0-99e3fbea9695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35ffacc-eee8-4518-9f01-604d59535402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee46372b-8c28-44ba-9c21-c79f41932aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78d5a307-01dc-42f7-9760-30f98880eff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748d989f-14da-4f2d-a08c-858da74445fd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978d876b-b1d8-4ae5-bf70-75e98b430f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b334e02e-a071-4a52-b786-acb1d7dc23a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86dcfa7-41f9-4dbb-8ffb-b95b91ab6b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32b03748-2d20-4f22-a352-425b49448f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475f1203-698c-46e4-be92-4e1ef546315f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17489e2a-9ab2-4dc0-9b87-886f0a1e856a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed94d933-b24e-4ca5-8a60-e92240bceb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb0a2a2-c2e8-42c8-aaf6-28a117690cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2da15066-ce33-4cf5-bf51-e7c03fec4a23"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "55caa6cc-1974-4ad6-8453-3fa4a0024654",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd42e128-8fd1-4669-abb2-4c7826b66cb4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b8791c-946e-414b-9f8e-56d2d3158d67",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a5160de8-6e57-47e8-95f5-90dc5c5d0a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c0a6f6-8776-4eac-a9c3-9d86fbc40747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ff0bab1-354c-4d0a-a555-0a96e656ed87"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7dd874c-91a6-457f-9ad9-76973ba79f27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a79fdb18-bfa4-427a-9bfa-c18d6af80357"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3382e7b-d881-42f8-a665-98d0cc9ff28c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37734851-a378-422f-b4ac-62a54e86c65a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0039005d-9cd6-4521-af31-babc0abe16be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dd95db22-ebf6-4854-bccc-13ab473bcdfe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0b7220e-e5c9-4872-8805-ad753dedebff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d70e3a6d-de13-4619-9458-e5a80e957ac0"
            }
          }
        ]
      },
      {
        "id": "8e9d6a18-4e2e-4e0f-8210-30939ba56a1c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ed0d456d-1490-4b69-978c-02d71586075b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "908256eb-ecd5-4358-8c08-339cc4bd3706",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "45dc99e7-1503-4f7a-ae6c-d5352ade7a2a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bd4f0e-9b91-4ab0-94f2-28c7ab61f74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d758a9-42b0-407d-aaa4-d7084034c2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6832ef-64c2-4917-9fb2-c11abd213383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "99d717a7-a90b-4ae2-9322-ab09fd7d9700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fdfec4-7d24-409b-afac-ef0a2fdaaa71",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a297ca81-10b5-4c08-8cd2-3abe1cd4aac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a3a74f-b57b-48cc-a10d-9fd7d94b8336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229a8a35-e9e6-4386-af9a-74e79f15dfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1e7238-5daf-46ab-bf70-900dfd0e571a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f071ac07-a8e8-4a25-bd58-e5359b070552",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861d3e5a-9057-4f7c-afa3-3f96217eea22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6230f4c2-1c94-499a-b599-51b41ff07f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537ec0f4-b200-40b4-8097-828ee92fcd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb83781-9f40-4d5f-8e64-a87ba1dea559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a880eb6c-e0f1-476b-8dda-311bd8763f97",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6735fda0-30f0-466d-96ba-bb4eff7f7031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c91679-29b4-44bb-b2ad-94ffd4eccdbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0701a7ed-be64-4b92-ad32-ed790144d262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b722cc2-c25f-4896-99eb-870fd66e2cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c08b4e-0ab4-4428-ad1a-f40ce0132208",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52769f22-c761-49ea-8e2e-4c2c23564901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a0e2fa-d7ae-4bd4-881c-49bf1729aab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97d1093-8a60-47fb-887f-32a3665acfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "acf0fb06-4a99-45e3-84ec-84189c847c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75108e27-2db6-428a-89df-597ca11265bd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2e3df4-bb1d-439a-b08d-62be8c1e7faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19895fd-37e0-4b4e-8464-26431aec5192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09bd72e-5570-4466-afb8-ed50e0f6be2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "423533a9-89c2-440a-bca6-6ff63619f624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75518f5-04e6-43fe-bd25-8a7342a4da04",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5912948-eca5-4452-8f2d-6a84122f6d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd66304b-7439-404c-84a9-caeb3beb185d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6742b3-5e00-4c90-b32f-42b0a93c63ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c32c0e9f-8a84-4982-9e72-43e4b5d385a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44810e0-881d-48b5-a7ee-7bc625181441",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7b6663-3976-4b48-b371-d13a0312ad80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd220dd-e9e0-43af-ad1b-91b349b92762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef19b941-be32-475c-8660-08b16800954f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2960f641-299d-4e97-835e-4ba48a23c689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7898eea8-22bc-45b3-83ce-58ca42c77c92",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a229cb-7efb-44f4-895e-73b3f08df71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc5515c-f0a1-4c85-9208-9f0afa232414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd6470d-37ed-4a64-a496-42feb1b5fdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2997ae-52d3-4e5f-b622-63331d4fc6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c72588-aaff-4b44-8874-c62cd5d5bd57",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2948289-89ca-4800-80db-1d32b153b523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca46be69-e0b6-4522-b22a-91911fb5e059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342dff54-ebc2-461b-9b94-64fd167b6bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd679625-6a1a-466d-b431-3e53034bb973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a69ec1-65e5-422e-a59a-74cc5634d941",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41312bb7-61b9-4f83-8fa2-a8cbc2973232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b6ec1e-b4ba-4ae4-9f9c-1b6342452a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba10c21a-78de-4db7-bc20-c831b7606d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "81d53c3e-d13b-416d-854b-415f711f428c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cab46d-b039-47c0-8fc3-67cbd5cd7238",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28682fbe-afa9-489f-8307-b07896f1d695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f8e358-8842-4f43-84a1-d6a839d7c2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c6344d-2fec-470c-aca4-809b676b5fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1572c3-ca40-4cdf-a12c-fbff8d45dccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366d04db-916b-4b01-9531-0b40f5820e68",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44629109-cb72-4767-b253-f4f579f8a7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ed12cd-e5d6-4275-9010-d8d3e4ea42e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd0f8b8-3c89-4112-9491-e62413e55ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3defbec6-64ad-492d-8207-7ab4a44a95ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8324933-9b44-4d78-a516-843daa8494dd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4444ecbc-5018-4910-9dcc-ac780819c467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984e54a8-d33a-49ff-8086-b73b943665f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf9e623-0a24-4143-ba7f-8414e25e7427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "755fb8d8-586c-412c-9680-9897f963ab3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c83a306-469c-486e-90f4-2ce0c7747806",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084e4c0f-ccb2-4468-a819-4386d502276b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952a3396-f725-4692-9dc3-ceb75c76b9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4d07dd-e226-4aaf-92e8-b8bf09190399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bae2aaa-3db8-4c85-be28-7d54013598a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85f003f-9efa-4b8c-916e-50ee62f9706b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87695ab1-042d-4895-8ea0-7020428b7fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8173e02c-2151-4366-b585-973166174d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f1bd8c-44b7-4558-a595-5a33786d5132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d8a979-c292-4036-862e-0611756e15eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93947ac-390e-4524-a9b9-f69bc4ac62a6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef83b996-5d42-42f1-a3bf-45c3bd1d3de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48b70d4-221a-45d9-abf8-97f49769727e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e50a9c-70ec-411e-8851-4b0e5908db00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "da79af36-6579-4fc1-a5d3-34284e7f5750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bee518-d053-4183-b455-4ef95402c0e9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07a5709-919a-43ba-aa0f-492b0e9bef71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483e8ca7-a224-4f5e-8930-af2063518d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8151c1-3302-4b9a-ad2c-08415ea250ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "758d24a0-1b22-47a5-a3b2-0b4fe0ce6a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32894aa6-27b2-4fee-a247-874a73c122e2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d9c2fa-76f1-4ab1-bd54-52872880a7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36473063-aa5c-4625-907c-751772775acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b40bea4-ec9a-4700-97dc-6c68ad2876fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d15b1c0-5298-4e9b-8c7d-a535ea7a90a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414d9600-a3f0-4779-80ff-d0f16b97525e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14e3106-9d41-4b49-9bc7-5f80e78c257d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085a033c-84a5-4f21-bf5f-721ef5d8e585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46adaa56-b827-4276-9952-24264aa2221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "840d09a4-de9e-41ea-a48b-08fe2ce67c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501c1206-8ffd-4cc3-ac9b-aab2e5a2a395",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8aafe3-a07b-4777-990c-0267b3a92cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b28861-c718-4d7d-970a-8c7ebe0307c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8890017e-5822-4121-b257-2e649828ff47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc7084d-0543-4ecb-8646-e7c658f96d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b022bd2c-1bb7-4453-a150-4307cfbc27d4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f0ed3e-fe19-4e9b-a947-d2fb01ca5360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce13329-b665-4baa-aa96-9e9cdced7a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4d7b37-cc69-4883-b8b1-bae95d7c6000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84c0c17a-4832-4228-820c-071b9906154d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0d2744-2595-487e-bb41-61e3355742d7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4956bd9-f3da-4056-92dd-f43f584576ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82545bbd-38fb-462c-99e0-fd76d9edcefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b665eeb-90f6-4d3b-9aef-6d1e98a5960f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81511401-12fa-4950-a78c-df04d4c5a60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e04ed2-7569-4832-9e83-7fcd5ecc8123",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b8e64e-a389-4c8d-afea-a1df21d9f5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6028203-3648-4548-90cd-293cea3fc77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496341e8-b722-4a52-aa6c-c89300ede045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "157b83f4-2af6-4406-91c3-d56589b2dc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31274eef-66a5-457f-8144-85ffc3885340",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47b0800-ed01-4ad8-ab37-e526553127d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0996084e-5bba-4266-adab-d974828513b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fac184-309e-43c9-b16d-9cf9679601d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a36ac00f-3240-4319-8f8b-6c9143779ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bb1280-1e5b-4213-b080-09721fc40443",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e732d94a-3d3d-4cc9-9625-494916bb3c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224771ad-7558-4b0b-b0f9-e2f1e4f3b715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972a6c0a-7cbd-4b87-b624-ce5c5e278c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bee17575-c4bb-424a-9a7e-8b6a380b2b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1e88f6-0340-4934-9b81-9dbb16f886a5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df1a7e7-276b-40ab-b559-79c0f08b22bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b7f274-aa1d-4096-b9a0-5496665bd67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d631f079-3552-425f-8b58-4a0182e062b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da45ff28-6def-4642-92e5-dc1dadba75b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca1dcac-7e9a-41fd-ba71-911057de1872",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce4b52c-2623-415d-bde7-9dacd1afb91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f363c04-65fc-4d9e-9494-5d744787d74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe8449a-db2e-4f82-80b8-11d292f5888e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb60530-5c98-40df-8620-9bdf0da7a717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d82ec6-cf6d-4833-86dd-78776e0b7069",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b9fac9-7941-45af-85e6-e769921bb11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592cc43c-f54f-4484-b261-ab067e5af889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff70cd0-beb9-4d84-a95f-7ab1de9408af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff23c33a-b40e-4f1b-b36d-b058d512337c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ee91cf-68f0-40ae-8922-df99219dccfc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdca044-30ed-4627-9743-9b9aaa7880c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28fa549c-8ffb-4eb2-8329-c9b5dd5f47c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c42fb87-892c-49b0-824e-e25a68d80897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d92dac5-4b0a-4924-86e6-205a928c475b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa896435-8dcf-4960-9b42-2a73449b7316",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a032a1ab-2ab3-4046-85ab-e46c1539bb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fade04-161d-4855-ae5f-17c55be228f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0f0394-bd9b-4bc8-9366-bdc051120463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f2ec28-b0f5-4424-a92b-64565adc86c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008c8d28-ced0-440c-88c9-37f96acce16a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09964fbb-8a5c-4aa1-9b2b-b68c8708a47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45166bb-cb47-47fc-bd64-def94c0914f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120521ad-352c-4b19-83e1-d90aa6b578d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96fe016d-8e4d-402b-94d2-c6109e0f734d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47876e7d-33c3-47c8-87b4-3aefe9c1eb6c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba37b72-92c8-4d0f-8cef-6786528e60ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc94770a-6a4b-4529-a4aa-a458f78ce437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e4054b-4843-4203-83a0-d2377a97a509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af796f58-d528-4935-876a-39c8759f93c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c40ec7-755a-4248-b123-63cbaf307ba4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0987b968-a548-4f93-8e1d-293d796a9b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b43055-6fd2-4245-b9df-ca5ac3db7dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ca2853-281f-4759-a7c4-fbe23b684e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89cdd223-c48d-42e7-937a-3011803ef857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5379c4-3cb6-4fce-9034-fc4e2a849cab",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e3e1b2-9260-4fc1-975b-067277e8e12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f0c7b1-1868-4202-9552-810343177174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e07fff6-27e8-4ff0-8446-da89af681762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5253b717-b897-40b8-942a-761c6bcd7033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a6f4a4-047c-4130-9700-055d85b5fd44",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2121199b-91c2-4921-bea5-69ef30a880a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cf7b2b-5e05-4f42-928d-25dc65ea36a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b82b41-41f2-4add-a628-1539e855712a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd4b190-e89a-4fb7-9e71-f0f3fdf760e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02b0243-695f-4bae-89cc-203f14ed89b4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289229bd-b396-4d08-8a9d-122c2aa75e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45219670-825c-4a83-84b4-0110a691db5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8dd4cd9-16b6-42c7-9264-9a8325fa0d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "934872e4-d170-42c0-abe2-8bf2ad790df6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c4ad016-8d5b-4851-8901-0fd6e3778d2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91611df9-0eaf-40c6-9ed0-aa8201a61e83",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f64b17-3dd4-4ab2-b924-c748cfbdd4dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a599343c-d6fb-4b3b-9dd9-1a336dfab772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e331c7d-9ab4-4460-9214-d1a8b57ceca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45ab6d09-954b-4d6d-ac8d-871547671b60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca7e6d0d-e6a8-4a21-b0f9-900a48b66c09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e92a722-cb5b-4c27-b7ab-f6b4016d412e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e272314-3e1e-4df6-a555-d6dd8eb162ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5753f7c7-1eef-486c-b04f-0b27b82bba0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bf41597-0f94-494a-9c08-7b8d132faed0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "23243fe6-de56-4c9b-9154-b979e13688b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac4159d2-4b65-4a96-b126-81456f2f699a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8572aa2d-2e04-43e5-b903-326c858a7627"
            }
          }
        ]
      },
      {
        "id": "54aeb126-8eca-4eee-a451-911d8b6a4875",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8d51595f-3420-4254-a24e-b0c3244cdfcf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f8bc786-48c2-4e2b-9bfc-90186e54193d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "360ba40a-8be7-469e-b436-173b289d2ba8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5d867f-b76a-4827-868e-50c886084d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b450635c-cbde-4521-a54b-a597fb8f3f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fd9a2a-7f8b-40f4-a71c-5b5c7f8c790e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0592702-8081-441e-b760-d3c493789d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2433b3c-da19-48af-b82f-81b509ce9c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f554f3b8-f176-4ca9-9e4b-124631d30702",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af847ff-b5af-4bce-a5dc-55be4fb76962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b17aa47-b8c7-4606-b84b-918550fc5720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcda4c4a-20e1-4ef7-a4ba-fdb4dd8c598c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b217982-7896-4eb4-a2fe-6fb4cfb09c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ab9e11-9052-4d50-a798-a307f609af4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78630a9c-90c4-4c69-8877-4a89c143ce16",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a44d18a-a44b-4e6a-8590-2481d05b1f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a16f9d-85ca-4384-b34a-97e4d3414528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be360ca-3c70-40b7-ab98-e953852f65b7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4d3bfe-c450-4284-9cd6-3989dbb78421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1041e8c-53e9-4507-8a98-becc0b45e3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d42616-6ebc-4651-90e0-386c70c0be3a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7548d08f-cfa6-48ba-9b01-a20ec696db43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7019f08-0045-4e11-853a-65ab7090543e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5779f1-8b6c-43ee-9c99-7db6341e8e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7818f646-a8f8-4330-80a8-525fe764bfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71aede68-176d-42b3-a830-83e85f2ada7f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12eaeae-2d58-4fa1-b153-8968a977cd09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3120c143-0038-4eed-8945-4ecbab93cfd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4871c731-4a80-4574-872c-a70074c24b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc216ccf-d75f-4717-828c-9acc37e8d90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799d40da-1dbb-493a-91a5-f27b467e9e0f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2364d295-869e-4f61-80d8-5d0fe381af82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30417521-61db-45ee-b3fc-51e90ff29a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9920924e-556d-47c8-b58d-02f0a69cfb37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1dfce7f-ec25-4dd3-8d7d-689777f4d296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab0431b-e98b-47b5-82e9-6b159944e669",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a07bda-f017-45f8-a56c-274277537885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f1e1dcc-f75d-468a-846e-971ff98e36c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7309add6-ec2b-44f0-8380-b584f2186b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8cbae9-2542-42a0-982a-def45035aabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ede626-cc6a-4094-94db-9378c4a9908f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0eb66e-d8b0-405d-b554-578f2d94eacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f59ff66-7531-4d6c-bc59-5b3691a611e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc67860a-caf4-4f4b-b414-71c6547b5637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398f4ccc-e49e-41d7-92cb-3e07f6b07a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438a5095-0757-4264-9ce2-948c53f98d7c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1053cb32-45eb-4559-8b7e-d72e74a0d8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cca1e41-37ab-46ef-b861-503a3fd77601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf68076-4bd1-4fc5-8c80-1cf06e8754cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39496c9b-22b0-47ba-b594-3c34ec4e074d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdd9eea-c0df-4a4d-964c-9124519e2725",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744388a3-3fbd-4f7b-a57d-f2f4fc367996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9299024f-91f8-4dc2-b11e-367e4b959858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b42247-3487-4b5d-9820-f4d800c572d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7014c6f0-aae5-4cb0-a390-edac6abf6b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292fc33e-a878-4892-9339-7da24a4ae93a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a842c11-a534-47f8-8069-4158862b9b45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c895a240-9676-4094-aafc-2d614cd7b652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7ba0b6-8cfd-43cc-9572-347f301f93e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63af7da-7591-4ccc-bdba-15577b00fe33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc523291-0d48-4c0b-a409-25c912a56183",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24caf78-0b6d-4442-8449-fdb23e37093b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "005dbf04-1a5e-43dd-a883-b94adb78bd42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e56e04-33b8-4c7d-85b5-fbc92d8d1383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1875a03d-7fc1-4fab-a8ed-e3f1929a7d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab3ee6f-096b-4fd5-8fd7-7628a6fc1e5f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3d8cc3-c6b1-402b-930d-3ec127c6e582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a702e231-1be1-40fb-bb62-ec2e38c55c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7f6249-369b-457a-a197-1004022500ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32438eb9-0120-4b1d-978c-13d1da07efb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b5c892-631e-45dd-adae-7b3cb25556d1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7e62aa-c59b-4cdd-b837-cc316613cd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c17750-bb35-4a86-9e7b-bbded1e357ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2605da-1191-4638-b1d1-3fbacf19406e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58cb1bf4-6394-4678-9ca7-b4ae5dc1354d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae22faf-459d-48f6-a900-4533affeb55e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc35018-131e-41bc-8908-c5db40beac87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099080b1-a642-4482-b750-5991a4a2ebbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4300b7c0-0471-4752-929f-0cd6c096f700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b6058d-caa3-42bf-b6ea-426e0920a654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124814ab-3652-48c9-a847-1c47fc423f7f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cf76a4-5e15-466f-bff3-79a6277b5228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b83f1d-3ab8-491b-b29d-106191dd106e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bd61a1-aa60-4653-b963-4ad64a8f07e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e338462-6c0a-4281-8cdd-1532241f6d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b734aef-8108-4d2d-896e-1e96df80185b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b15b88-1af9-407b-9f3e-cbd5b2bcf96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c6de6a-2fd9-47e5-a5c2-a180e7b2014c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724d515a-eb09-46a5-ab09-eebd4e7f4d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a49b025-715f-473b-806f-2b84fdeffd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0d4c84-a0d2-4993-9678-8df70eb7ffee",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a68b7b-b8e9-46f7-bac2-1280a91d5485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525d0e2b-da81-4a97-bc73-4c08759658a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5b0da4-d2b3-4734-bd8b-c12ff14ea446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15dcd59c-da4c-4611-b389-f31635fe8a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4e5eb0-e0f8-4f8c-9703-d316df55b846",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecc04f8-5edf-4bcb-9286-99ed7dad659e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf5c20e-f216-46c1-aa2b-954bc785c2b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719b0a90-8c52-41bd-9220-27a688e0bd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2234c0e9-26b7-4e9f-85e9-d7a9dfa0d308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459dc286-a3a3-47b9-ac56-37364d3d71a8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e0841f-a3c9-4fee-a4ca-d92c2fe6dc49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55a8e8b-17bc-475e-bb8d-17830a341ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f558327-5d44-46cf-9da2-c55f96a8713a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58505ec-f020-4221-b1bd-e29cedecf3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1ca67b-99cd-4ce4-b820-8eb0280f7177",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eade3e51-21e4-4f33-9530-698ba14e72aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4c8e7e4-73ae-4d33-8daa-3d7effe77e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713c8fee-72e8-4bbf-989f-f3b9a5e08ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709e3c72-5ba1-49ba-bcf7-c799021335cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30c7bb4-2a4b-4789-bc33-0a5cb45405bf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec733ea-971a-4919-b88d-fb0446532378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b9333f5-f0f5-4b9b-a23a-c63e186ff6b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1192d66f-4b28-4630-893d-e3296649a07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade067cb-7d59-450a-af8a-6428d3d5577a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf21af9-097c-47cb-8796-9bd5fbe3f733",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088293ce-e99b-45ab-aa91-3c6fe330b5e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eda6751c-04f1-4d76-80d3-39dd89311f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3409c550-73fc-414d-aab1-fa05bdb22e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcba652-9fb8-47d5-8a8e-4fff20cb066b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdc8ed4-7125-4b58-88f0-15d666b07bfe",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f484df-8ef7-482f-b197-b392fa6bc99f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "819d80f5-42e7-46dd-88e0-1e2aa346eb06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2305346-a47e-4bf3-8bbd-68576dc4d804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1295e823-1fcf-4977-a946-0308cc40e4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b331dec-1f26-4df4-b506-28d83d13f6a9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16941f64-1cd4-4c8b-8a7e-7b0b9cfa7053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f922c4f-7d39-46d9-ba4b-74ff8787d79f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc7712b-b4d4-4c36-9066-9f1679739c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cb6741-3518-41fe-a46e-114687e9c69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035791db-d810-4d70-a9c1-3963726d2e6f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e083bbf5-54f4-42d0-9238-17d4fff3f126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe76df61-a67a-49dd-b833-5b51a3a286b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f708880-71f5-422c-994e-609d457d6504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd7bec3-d805-4a51-b8dc-f61cfa3e3757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47d5fe3-7d9c-44e1-8197-42f77db516a4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cedd9c-a9b0-420b-9c97-98afea075317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36a52445-2298-43b5-933a-e85889c5f707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fe0e3c-3f29-40eb-850d-3670aa53cd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a08d164-0b97-4225-9b74-da3dd21b342b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4af18e-1045-4684-8012-5796e29e076e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65da495a-1067-4388-819a-1ef04875da0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b433cfcc-798a-4ae5-b554-16bb68a9f292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2eca80-8df4-4624-9632-be38ea563fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162d8159-1031-4d4c-9179-f3aa3d94d915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e189abfa-4a98-4bef-be36-56c6c9fbf217",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38766ef1-d954-4f34-b73c-e63cbd35dca6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3dd33bd-3972-4e22-a6df-571189b24c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea68651-4f4c-46e5-a24f-5f59466fa429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477f95d3-6226-402f-bc83-7ce6301cab55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6543f18-4829-44b8-9598-a9c089151770",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259c7d5f-4db3-4f85-937b-9d2b1006f04d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14e6f10-e384-4ed9-bb12-a6dfd8821185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601df890-920c-498b-9148-7a0379119428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0bab34-da45-4429-b0cb-8eb3f3f0f5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4604ef6-113a-49c1-ae83-d86bdaedb444",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567ae8fc-b941-453d-803a-1c3afe5a6061",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b99fc21b-749d-4906-9e36-cf83ea75b8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0385855f-6e15-4586-9021-cc9532ef6b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec283f58-fe41-4c9f-b90e-b8f2b72f2ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6497e0de-961f-4ee2-b89c-3f535f63c47f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe20ae3-0596-498e-8b29-5b6334ba4c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df117d82-4ba8-4a47-a3c0-9fa170055de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8964bf-8571-4c9d-bd5e-0b747aee7cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0183597e-391c-457e-99f8-b013fb9d0bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53046791-be30-46e6-aa45-85ed43c076c3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a5fb09-7a59-470f-8d43-e7e738e45038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c940388b-19d7-4b9b-9ca0-4d8a7b00cf27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c97b698-1c29-4738-83a1-a3e56f96120a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91b8363-ee3e-48a3-8af1-1d5559ff75f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bee126-8ddc-4a2c-9b7c-d3b5e47510ae",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7fb2f9-edb4-4758-a715-4bcb917207ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0f0313-9f92-4c72-b05f-cbe669a67b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e39ba3-952b-4241-92d1-3f7dbb48459a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a9956c-d8ce-4735-b753-d76c66d44c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed84339-a611-4328-872c-904b2edd00d4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608352e8-908c-4b78-a693-2a46eb0a1515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0254299-d84c-4b52-8b46-95200ea79537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b718639f-0966-4367-8926-576e8a50ee4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c43224-9c5f-4105-99ee-aed5687b374e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0956bbc-c20d-4f61-b959-358dea291900",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3756232-6ff5-4467-b751-8ff5bc973720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3cc45b1-6bf1-4576-8c65-181cbf167680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c91b60-9153-4b99-b523-c92e2c05c957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9997dfc2-0ac0-468d-a1b7-091258b30143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d490bb24-0bd1-4251-91ba-697881463773",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929829ad-cc25-4dc2-8a06-2a90b96dc4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60bc83e5-73df-4db6-a1c6-f9208fba5ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e313f7-bdc9-4e7d-ae40-5d62acfa16e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0607fe7d-5329-42df-badb-20f8e0dc23d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10028cfe-e3ca-486b-9430-71e4996c09f9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b237c1-68ca-4367-8e53-ca23e98c26e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efbdde3-e13b-4b6d-b9c7-5010fcf98421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507fb1b1-03ae-4d36-8650-7e6e43bf084b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9311cfc1-7374-4ba2-b56c-ca91badeeebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389a5ec7-ecaf-4bd2-92f4-3b9be1d2c28c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653a2296-15b1-4e6f-8759-7cbb39642860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170c06db-795c-4749-bb60-1480a1e7f624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c09e3ff-8b34-404a-9722-0d59db685657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224cd241-32f5-45be-bdb4-9d9e34249ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252c2241-50ff-497c-8bc3-c30dd37d76a0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c00e70e-a6d1-4c90-be8e-af14dee4400a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184df223-2e16-4e32-b92f-7a6df309ec91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bda72b-e5fc-40b9-b111-b74ad4a51b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e5692e-802a-4c00-a1da-07d5e96641e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377209f0-775b-41d1-b914-de664c79fc70",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfba75a-4600-4e46-a238-a81cdeb020c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bba0e04-d383-4a87-aa32-c1998939a05c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7304282d-fb68-493f-9599-6c6fd3356331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c7eea2-ee9b-4cbd-8670-4efbd9b088ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515477b5-dad0-4f4b-91c5-eda5f76ac769",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049bf9c2-8ae4-40c4-a25f-80fc8e5f4df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652aa468-184e-4718-8ea8-6d9effb9462d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d13afc-5183-45a0-af47-107e18763078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc661545-bcfd-4314-90c4-1dbb93a628b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9fd3d2-6ad3-4bf2-a917-d9a2a8a8373b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bc3015-1c6b-4dde-801c-5338f7f98d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710b5719-503b-414b-9577-1e73c4e93e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675ddf35-ddfc-43cc-8dc2-d655df40b6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0bb618c-ab5b-40d8-bc41-102fe25628ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364d1034-6c96-4d24-8404-844d0e7b83e3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8940598-155c-4609-8d99-b9fbe7ea83ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246f83d0-2263-4370-a8a4-cea79446c6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2708adc9-dc19-4472-b0d8-7ce1fe8cfd2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a88705e-af1c-4d18-a9e0-49ef92b3f080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4b9b63-70b0-47a3-a40d-2d50b7b63f33",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cfa813-7c49-4259-b27d-1086d62bb209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadd3838-6a2a-4df4-bcce-9bcce62f38f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efc8e68-64dd-4d24-b840-368f8c4a4732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd091ec-00e9-435c-b3d8-8cb180167f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a136982-85fb-43f3-b161-bad4ab5b61d6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3f3c44-ec08-4cb7-9b19-c9af8efda3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b10199f-7f2c-44c6-849b-7921a1246064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cc1e93-0598-43c0-81d4-c098b342d08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e245ba7d-be3f-42ca-9a49-429cc5849181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1f5b70-e8d6-4b2a-9108-eac9b429f8e6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3f36b8-ed53-4d4e-ae4c-8d70ac5b0705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5f89cb-4843-4126-9aa7-2cb0ea62f04f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdff1b76-31c1-4644-8617-494782710f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44461bdf-d415-4243-8401-1674eef6b0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6eff317-69e0-4bb5-a1f5-346d631f9505",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8d03df-0af7-4234-85f2-8204be3685e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc135e6a-9dd3-4603-8980-0007dbe71a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653cc59f-e682-4382-8e30-910925da1b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a851b426-1321-47f1-b5b2-392eab4e7934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c50e29-4c8d-4ac6-9aef-a68443b17a73",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e75089c-8bd0-46c9-982c-7ae37acb86cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d9cf34-5223-43a4-8d1d-58a4d50eccc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333b977e-0ac1-438e-ba35-b379b9d22392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66f0354-b9ca-4f0b-af55-1ffeb1c42133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a03f34f-bdd8-40c8-b73d-503746dc497c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d7b877-997d-4b2d-abca-9846536f5a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c524a14-6db2-4157-b907-728b07737100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9105f9-88d5-472b-84b7-c6e40f79ba37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1032f183-ce76-43eb-a467-81bac3a73721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e2524f-5ff4-469f-88bd-d0413e16425f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4401b95e-e762-40e2-9a0a-cb81f5a9eab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ce8793-485d-4506-8b23-5f6dac8d1a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520208bd-ba0b-4379-bf19-99a200c297f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3bacaf-1fe1-4116-9ae2-b0f99bb9c3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb36ab9a-b311-4ede-9bce-3ec189786fbf",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5a8e5a-aadc-41ac-822a-2128d70ce354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e70b19-55e4-493b-aa7b-b388e49fc717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc267923-85c0-477a-a82b-5483f5d0002a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad1973b-1b09-48b8-99f4-dd4c41d66233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef52f56-b6c7-487e-af5f-5eefcb620997",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7359b631-9095-4f5c-9dc5-4dfa07df3ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3ceb28-a964-4b3e-afbe-06b38b98d0a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e75803-31c3-4238-8bb5-453857143b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6cdd79-354e-4ad6-aeae-021dcda5ff8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d0672c-d676-45c5-8615-e3f3554e27d0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c9eb61-6745-4870-87aa-720a7758b399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b764d48-b2c7-4aed-a924-6d7dbdcb2178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0353fcec-4f8e-475d-aec8-5aa6e6b62ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a84352-db5b-4828-9839-8b9cf7a2571d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a7a99e-8541-41c7-a572-9b6d4fbea8d6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2e8fd7-778c-45d2-b863-43cbbf28cdb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2bb552-ce2d-447b-9821-f26f9050d478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaab4f2-8771-4937-a5d5-d55b32f33492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30df8b0-b9ab-4ff2-a430-abbc5e6756ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54899c7f-eb48-479e-9de3-fc332da5b677",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0d3e54-f4af-4f81-8970-bc599e353068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da43608f-4fcc-41c1-8511-aa072c0e3079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8719e1ac-d4aa-4a41-83e7-a1cc4122e02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53eba62-7555-4cf5-bc99-24361a8f94b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56da9861-6d4d-49a3-be10-8673cc241bd5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cba6e59-714b-4577-8890-2aeb1991fff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a383cea2-fe9d-48a8-80e3-d2a3b811b01f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2f3bc7-69e9-46de-8acb-0f9f07262852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3372c88f-7ab0-45c6-96bb-69f569b08fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7755b827-4b5c-4fb3-94b5-7e38fb18d55a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c0a230-55bf-4bff-b595-e4f4a8a38395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3cdce5-ac53-4f5a-978f-8134d9c50dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d2e720-622d-43fb-ac9e-b2ee11aca66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2676cdf8-2ddf-4899-87fd-9eeee50326ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ed67c7-c4aa-42ec-b0e1-a73aa1f34a6c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c851c094-e1fc-4201-89fe-8ecc5ceb0af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13afca05-e951-477b-bedc-17cb6b1ececf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efee2df0-52b4-4475-95ba-540ad1ececa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb085c5-8428-464a-9494-f0a35df8112b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3750e6d-9c54-4954-ab7d-f8a711848796",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0784be-6c9e-4925-8b84-8a576aa45adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3361b669-1846-438e-a185-619f785a0d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f71126-27c7-464d-baed-11daf6e3fe35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acca4dd1-34a5-40a8-9378-51370b777168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a586f9-6290-4e1d-88df-f9f989c6d19a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49471848-17a7-443b-bb3b-7b653cbde393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e46dfb6-39af-45d7-8a3d-0b20537d3c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8618bdc-866c-4d94-bf04-7d3ced339dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3733f8-96a4-4fd6-b9c4-ec16c59014b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed8c1ad-bb38-4578-88df-34250a9f6677",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09f9aaf-c888-43be-a7d3-a3271b9cb3de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6712478-2e22-4e07-8053-aa1923668227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143133ef-2f98-42da-bd59-bd32f6ba8c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44b8345-7bf8-4c79-be5e-a1bd27233816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10532cc-6cf0-43ce-9b40-8db2888c044e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3505239-1645-4a6f-9e69-6bc1a46a4a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28a35ae1-13e1-42ca-a5cc-573b3eef2740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1996d87-2db7-4c27-80ad-a7e03dd4bf25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4141664e-d19e-4ce9-86c7-538fcd46ed4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17c52e5-d6e2-4c57-ae63-31981c2a1e0a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33541ea9-c0cd-4b47-a1d7-ffd8f63a6e50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "078dbf1e-edbb-4f29-a31f-b6917a9e9d44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b529cae0-dd7d-4fa8-b77f-97031fc6631b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1dbb26-ccf1-44db-a420-5af8a987a851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bd7715-77af-45af-8500-da5c5c3f9fcf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979e427f-f923-4bb4-99ff-90ce926260ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c820baac-601f-4980-ab97-70ba3a7dd5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcf4280-24ec-46a0-b120-05101046d4c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862b2794-2cf3-4eca-b054-810f8f3bff54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf0dc26-93bb-4c44-b8b6-b81fdb934038",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d68fae7-5a70-40ed-a368-c3c22108423d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5d2e216-93d6-4a00-9021-147c8686248a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b395952-68cd-4afa-b32b-38bec5b22e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b2f60b-d1fa-467b-af42-05bd583a7598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f920e7-9805-4b4b-9ddb-9552cd4bfbe8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae95537d-ce56-4b8b-9066-b9625d1878ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f33c40-ac00-40dc-8441-d8ce6bdfc1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "680e6c18-f783-409f-aafd-cd57d8d78208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c3f029-39c2-4ece-bef2-070768786c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3d2bbe-32bd-40e8-a308-4695fc313b2c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3046459b-39b1-423d-820c-6624f55ddd0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d3da9d0-79ee-4ca0-a8f0-ab8a3da64b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b0ac65-8c22-456a-8043-e5c7c2610af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5462cbdd-bea8-41c9-a94e-8f0b166df364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27f4d39-450f-4070-8836-5d1d2c76de59",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3a70e1-70dd-4e2b-ba72-d6fb41206271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "387599fa-27fb-4a7e-ae54-e06362bd95f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209605be-ccd4-4109-851c-c0e6e61f50be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1cebfc-455b-49a2-9388-fe009e8f143e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0e129d-8ce4-4865-a5b1-6038e6799fe1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d033df55-b108-4a28-90b2-6f0833ba2e44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2c1d404-5f3c-43aa-b818-5b6058e00967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d3141b-a600-46d1-839d-376788a504d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c62dbf-881e-4844-8b3f-a79a9c249735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9402fd0-cc11-4bcb-9722-218070ae04fd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a21a4a8-fed6-43b0-a392-69ad143fd13b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c91987cf-5c3a-4407-a6d5-175dd6292aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5819069-3e40-4a57-977d-a5b5391d6f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e60b61f-152d-4754-95f9-612477dc9bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271c6651-0252-475d-abc7-b3839d16dd46",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad11d7db-8c57-4812-9b78-1e8872532460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68dcbb38-b2aa-49e6-b28b-bd2f7f8428b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "863f893c-ceb3-440e-b3e0-2fbb46f0b382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2333d6-5b37-47b7-a101-ddd3d3040dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a991c05-4126-4146-9b27-84e29f61b3d1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc3f87a-7f85-4226-8da9-98a760d70daf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59f3bd54-fdbd-484a-a48e-c80a94412a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc05e819-f180-40ed-9345-358b0cada8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "421a39cb-93d0-440a-b9cb-7f79473ca2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e0b795-92d2-4497-94cc-b8dda53180e0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdb7788-d6f8-4b8e-a7a7-c6e2213d266f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11455e1b-7bee-4b36-aeae-6aacf338363a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb169fcf-a420-45c7-a62c-0f82a6a15c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9c5be4-3cb9-483b-ba03-af5cb04bac86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2cc5cd-7023-4cb7-931c-22d6c0947e83",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe1e47a-fe5d-4ae8-903f-d6477d676e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1604c6e3-18f8-4418-8bc9-c305c3b834b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d87655e-4b89-4c78-92ef-45dcf2acf34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1e7781-3712-4ead-89b6-b05d98d97022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85b7356-f41e-496d-a4bc-63d4fd8f9f4d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c0c0d3-0fa0-4808-9157-acf667c9e8c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94a405ba-8890-4650-8425-a417d4636ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c858f25a-d006-454a-94bc-4048c289d2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62832245-0d20-46da-9a31-47af3c64fbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e06a40b-89bb-4497-90bb-943cc41b8888",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c563a481-2a93-4569-9e31-12b8c880ed0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d4c2ea9-1bfb-4758-bbe7-92b43f3aa78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdfb65d-74d4-4e1b-9e87-e0ff45c433e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5a1d55-a23c-46c1-a2e9-7b388dafff8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf6f5f5-876e-40a1-9442-1b60c631a57f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f140056-66e5-465e-93b6-bdb101e75ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43e6f6b2-1552-42f9-8630-712998924593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1352ea59-9398-4d08-903e-d4f33eb31635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5e54ea-1c6d-4535-8f0a-099cfad3baf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39503036-ba1f-455f-b35b-aeb1bdac7a65",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c2246b-3b70-4efb-a1c0-cf43ce77e9ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba0599b-bf27-4517-8b94-6cd0999c6b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f91ee7-a4ef-4ca5-96b0-398b6b020b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052d6022-558b-4bbb-ae92-cd33d932c6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e02f3e8-41ab-481d-966e-ea7a08ece1b5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ba6bca-103b-404f-ab0e-a88c594740da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13fca4ed-c4aa-49b8-8919-4fbcd0d8b13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f55ff55-f565-47f0-933f-3491932bb9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2fa02fb-2447-4f1f-b28e-48404994859c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead9bb60-7be2-4096-924a-22bde851209e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5729fc-62c7-4b6a-9acf-3b9328a07ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef48a057-740a-453f-929e-484e5444ac43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f414ec-f209-4992-89a5-668b315df112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d41558-ae62-417b-b18a-81d1d9170a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ae96d0-a9c4-4116-9382-88558678a3c1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c821c10-d474-41de-a245-a0aab68d6d52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78edab77-11f6-4f58-b5dc-2bf49fdbd067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a021d20a-0584-42d9-8f0f-cc36ce447f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fb5d32-dabb-4555-8ae8-ed76ceaa27d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b52e0d-5e1d-43fb-a392-f647a8892f22",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4d119c-5f2b-449e-84a8-47e6665cd7b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74b6389-31f7-4ec9-be6a-3da10d7207de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3fadce-0dbb-44bd-88b6-9e4aeaef4d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f1bfc6-b339-4afa-9f91-1d1262dfafa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed11a98b-f874-4525-9351-6574ead4ed89",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a3a671-aa41-43e1-b337-a8ffbd176b2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "159582f6-ef8f-4306-8e0f-4de89dafca85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f02254-064e-4a48-8c39-d29f69cc6578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff82ea68-bf4e-4a32-ba38-e3b01ab17ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d862d78b-6783-4a1c-9f5a-630a8b0803bf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8da8202-13f4-46e9-a401-d6d0b6e2ee6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f99a0299-b86b-41f5-b033-49e00351329e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11d2c6c-fc4a-4174-8d61-03290f59fa98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886efcae-d251-449a-954e-3b996cafa85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badea225-8cf4-4204-9377-a872d54764ee",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25bad3d-1e56-43b4-a112-41c1ae5b9a18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3324ea17-49d7-49f5-b8d0-5bbc88f9164d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb5c077-5160-4ee0-9150-5e9b784029d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11fa976e-e17d-4d30-8b46-44cc0905053f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0113e624-6bbf-4baa-914d-ac7609bacf95",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aac7502-1b60-4a6c-8432-eb5873a7c44e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8abceffa-650a-491d-aaa4-422f32706a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c43b14-68b3-429e-a271-101b384ec4bb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9abf44ec-faeb-4bd3-8236-0ee47909090f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bc0533-330e-4b08-955c-0a936dd8d907",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c90fefd-f99a-4650-a4e4-a4b29e2d415d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b921ff28-2772-49b6-b928-03e05dada62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a206d6-5088-43d0-9f44-7c6b8db393df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78c4df8-709f-49bf-801f-f2f999ec52e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d56242-af36-4ffb-9320-0ebd12a14b3c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6b8a20-2163-482d-82aa-d68ea629e96b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6842c927-9be8-4181-a326-27405a44ddab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5f25f1-91ae-42ee-8fa6-6555d553a1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f6c164-c759-425e-804b-10b141eee15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8e57f3-2969-4fc4-8e36-58878aca4077",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbc206c-1cc2-4a10-9805-e037fd9edc58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb04540a-c1e2-4b57-8175-dd6241d24bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483429f4-6291-47b8-b44a-fbfd532b81ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6861455b-e9dd-4064-9738-38991d4165b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c8e4fb-2ed3-47f6-a00c-44f7222afc12",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76aea7ce-0dea-47ee-a07f-99ea3eaaaf7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "149f8402-5633-4bee-bf0a-4764f686cc36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7342245-bbe6-4f08-9235-d3f1b32326b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91342bdd-58bd-4d84-abb2-34a0210fa97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0152c35e-85d5-4d3c-a230-a25542dd0346",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f077eefa-dce5-43f5-a85c-dcefacbe9def",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "427148aa-912d-4e6c-be08-efacd887d557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "576d4c3d-cd07-40a3-bb32-d2aa1f791001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2ad3f8-aa71-465a-805f-63f0d8f501e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bacccdb-53f0-4d5e-a5c5-218e68179d2a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33de9816-bf80-432b-813b-7a95c5562ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c9216b3-b5cd-43d7-a881-1b1978d51b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a03ad4-52ac-4cd0-b776-6227b37f47e7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e074c6-5b18-4842-be0e-7c10d22166b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b56e233-85a0-4dd9-ad1f-c3909a63de0e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956e0307-a7d3-483d-bb7d-cd9f450cde5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd3f94a2-211b-4196-a615-65529ac396a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6450f34b-80be-47b3-8e0f-ba790faa794c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d988572b-bde8-45a1-9cb0-e504a2df240d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3556df68-53c9-4c76-8060-01fe298fd07e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec48a62b-7f0f-4f59-bdba-5fe498b4812d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bdfe231-1804-4024-ac9d-45d9e79bad57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f2fb7ea-7242-4954-abf5-dbdc88197f8f"
                    }
                  }
                ]
              },
              {
                "id": "b99412a2-aa9e-4e72-9080-21ed21af2aee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc837b4e-6c67-4466-995d-9a8d1d920e2a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b48d59-e255-4990-aecf-8df0b524b6f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3909623e-47d2-4c90-8078-fcc15ec15810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e5c158-0560-4140-b7b7-0d66fce97bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42c87182-2fdb-47c6-a20e-8139c7f189ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65e6e425-b31f-46f7-9f2c-e8cb210743d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c738322-1ba0-44f5-bf6b-79b2280c5caf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f79465d-1bf6-48ea-9256-6f6cd9e61e70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f91344a3-fb49-4d2d-a90e-5267c2651db5"
                    }
                  }
                ]
              },
              {
                "id": "1bb04614-a90e-4d49-af86-01a16ce339b8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "08667d84-80da-468d-97e0-9fd21796fd11",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920b42f3-20d4-404c-b188-53609483de4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3e102b4b-9c58-45b1-a42a-97b2713a7246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6eaf3b-e672-41de-bb22-107cdf301c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df892480-5acb-4c7f-9af5-46d0f93bc2f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f03d8ba3-4e3d-43df-bbc8-fbad48b4fd76",
            "name": "Positive Testing",
            "item": [
              {
                "id": "011388a2-e8f4-4a0f-a27e-80c1cc87b115",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9531208b-5f2e-41ad-908a-4190f639f133",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "49c0575b-0b91-44ab-9a2b-3de9ae6dc234"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07ca97cf-d966-4e34-aa11-eb94b565bfb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71716650-0d70-41fc-b3fc-eadacd4b0496"
                    }
                  }
                ]
              },
              {
                "id": "c355e012-bed1-4c5c-bc75-1693be5f9ce7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cd448af-0da7-43d1-a4b8-6a276cc5faf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a5feb8c3-baa9-488d-81dc-f35b6716acda"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d8044c5-9eb8-41ea-b92f-37127064ee44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19990e19-7b3a-4cd9-b9bc-7c70a2d483ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "becf8e3c-0ee4-4853-85ca-fbd75002e2e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "479908aa-6a64-4a17-bde8-5237335d3855"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5583e384-e8e7-4583-a2b3-21f5096b1e64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81c2e7f2-9d56-4d35-aa85-703d0d97ad17"
            }
          }
        ]
      },
      {
        "id": "fbc7bccd-7b77-4abe-b41d-df56d9bd7f3b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b7b0e8f6-c0dc-40ed-b241-870d338b9b0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2eb00b4c-3031-4c60-959d-9d43bb9e18ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6370c9e-9f8e-4971-ac05-441f1b5388fd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88306df8-a918-42a7-bb99-63ab18aa14fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b7b33a45-cac1-46c4-adff-c45ed6240623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc181cf-dad8-49d5-946a-967a8b11589c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ec0c525-1bda-46b8-8de8-b02c73c7b15f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b271beae-d913-4ee1-ab71-4a9831ad27f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "268a9903-7417-4197-ab85-9c96ca238227"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fef344e0-37cc-4ac8-ad50-5e8230b64404",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d259bdc1-541c-4e8d-bd7b-b10e3f286c42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "881e7ed3-b27c-43ae-adb4-1638c36026c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "43edf3f2-b9f1-4374-a5e9-cc9c23b82b44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b576977-a0f1-41b0-ae8e-866bdae0901d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c6747b7-b0d3-4c04-8c7a-346f81481302"
            }
          }
        ]
      },
      {
        "id": "e51597af-256b-450e-b084-78472d2e824f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b03e1609-6f2f-44ba-b563-4333063db80d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ccb0af15-5a52-45fa-ac2c-d8530555f9f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c80f0ef-b3c7-4f7b-b20c-a497e8891b26",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063797b1-8f45-4405-b277-63a30bf92fe4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad78e4c6-97d9-4756-90b9-6bc043187fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b30d651-2855-4359-80a7-dd9bf8e71cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82cfde1a-c9e2-4faa-89b7-68207cba7a30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0522461a-7fe4-4eed-a1f8-fb21a3477f3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbec6fb1-4429-4023-8fd6-edf4770fafcf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bc8499a-43c6-4429-96fc-22a7dd8d5241",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81fbdd4e-95d1-4e5f-bf0f-63f8d7c5d510"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c456aff7-e269-4533-ad1a-f257495f1d7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "06a2d550-ba1b-487f-bdd9-c307716db412"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed8086fe-5507-4d91-809d-43ee4059bd5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7933265-6781-4001-952f-977ec98c1d9f"
            }
          }
        ]
      },
      {
        "id": "d3a295c5-5a8a-40c7-91b2-ac4c948d8153",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3e817063-8eef-47ca-84a0-267c424bce19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c23c7ed-773d-43eb-8f68-06b1fd54ef2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e6573f5-9269-4a34-8c57-1462b9054e16",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4083d23-01cd-43b5-a2b4-24d6097d7cfa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2270ca7-3bf5-4937-8bd6-527a4b815e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68eca0b4-e400-4462-b67c-777ad7b6ad99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1dd6b5e-dff8-4295-a9b7-8a1769e5399d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7b106d9-7b94-49f0-aab0-1bdaf7d6497b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2d760ca-0c6e-4376-849d-153dcd7c8f3a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1af94052-6d96-4b4a-9d9b-e0ac9ba1b7a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07e670a9-a584-4695-ba62-abe216bf27c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea421731-3d3f-4ab7-8d48-a800a53d868c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fe7092ec-d58a-4159-ae12-33c61489fca8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf3c08be-53f9-4e10-83cc-b213ae40bc1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd1aef06-6bec-4ca5-a638-0e6593e0c2f4"
            }
          }
        ]
      },
      {
        "id": "2fa26bd8-0320-4daa-b2ea-975da9f60a9e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d207b80b-9bcf-4943-9932-4d2fe2c7f94b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be94538e-1ad8-416a-aa6f-bb402f24cf9e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "58ae209e-2779-4dfd-8a29-ff3800da0886",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04868210-dbee-41ef-a15e-e8d4240281a8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c9c956c-18e4-479a-ba10-e65ad2567a06",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.62323943661972,
      "responseMin": 5,
      "responseMax": 251,
      "responseSd": 18.45690513744191,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697243544652,
      "completed": 1697243559887
    },
    "executions": [
      {
        "id": "3430f5bc-d929-40d3-907b-2e8775daaa05",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dc3c31f2-be49-466c-aed0-db787b2e8685",
          "httpRequestId": "38a1e890-6f09-4c63-a9d3-8f0caea69b37"
        },
        "item": {
          "id": "3430f5bc-d929-40d3-907b-2e8775daaa05",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3e3335b3-1262-4797-9f6a-d413b095e518",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "2af79c33-93bc-469c-9074-75d815758f19",
        "cursor": {
          "ref": "dc485e4e-94ea-4aa5-8794-cf308ec3d893",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8cbb32bb-420d-46db-b1e5-0e437fcee91b"
        },
        "item": {
          "id": "2af79c33-93bc-469c-9074-75d815758f19",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f3078786-09c5-4af8-af40-30905685b150",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "3492ac25-ea40-46ef-8a29-687730b13d8e",
        "cursor": {
          "ref": "6c6084cd-3f23-4b6c-b3a1-388ab256a945",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ef399c82-cf01-42d9-aa78-69a95504db06"
        },
        "item": {
          "id": "3492ac25-ea40-46ef-8a29-687730b13d8e",
          "name": "did_json"
        },
        "response": {
          "id": "78b630f9-38a3-4959-8b02-5f01cbfe0800",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0503974-2cb7-4c6e-a254-bc4dc2def0b1",
        "cursor": {
          "ref": "4ce5d508-9482-423c-b464-fb50a0c02fb4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1624a0ba-7191-4e62-aafd-dcb9ac0f40c2"
        },
        "item": {
          "id": "d0503974-2cb7-4c6e-a254-bc4dc2def0b1",
          "name": "did:invalid"
        },
        "response": {
          "id": "c10fcf9a-b41b-4f66-a654-665458cc23bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0503974-2cb7-4c6e-a254-bc4dc2def0b1",
        "cursor": {
          "ref": "4ce5d508-9482-423c-b464-fb50a0c02fb4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1624a0ba-7191-4e62-aafd-dcb9ac0f40c2"
        },
        "item": {
          "id": "d0503974-2cb7-4c6e-a254-bc4dc2def0b1",
          "name": "did:invalid"
        },
        "response": {
          "id": "c10fcf9a-b41b-4f66-a654-665458cc23bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b0da2d-c0eb-42c7-917e-d94579103d6b",
        "cursor": {
          "ref": "08cca0df-e4eb-4645-8ed6-a24dfb2dbd89",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "22de98d7-6638-4d54-a6fa-d024298b9a82"
        },
        "item": {
          "id": "46b0da2d-c0eb-42c7-917e-d94579103d6b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2152742e-5e2c-4d86-a7d9-9c4f2b851635",
          "status": "Not Found",
          "code": 404,
          "responseTime": 50,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd5cc66-9082-4d2d-8e24-002349df96a3",
        "cursor": {
          "ref": "fbecd0ef-6d28-41d0-bd52-3be36f4e5cae",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "42dcdb7f-e5d6-4956-b0f8-d2098a3182b0"
        },
        "item": {
          "id": "2cd5cc66-9082-4d2d-8e24-002349df96a3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2959137d-5fd0-4463-985b-af00f27c342b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee3b607-96d8-40fd-99f0-bb633145eb3a",
        "cursor": {
          "ref": "bcbee221-5f3d-4ee3-bd46-6d4462d74941",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4f6578b6-5849-4ed0-adf7-4f609979a639"
        },
        "item": {
          "id": "2ee3b607-96d8-40fd-99f0-bb633145eb3a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "431a08b8-e856-49c8-b557-832354b5851c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d6b8e4-144e-48fa-9f2a-0d44847448a9",
        "cursor": {
          "ref": "e2dc0736-1863-4a7c-8b82-ec537c0db1aa",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d1f4e707-6ec0-4134-80d1-926872b2eb2d"
        },
        "item": {
          "id": "94d6b8e4-144e-48fa-9f2a-0d44847448a9",
          "name": "identifiers"
        },
        "response": {
          "id": "f273da1c-64bd-498a-9c74-af6206ab1cca",
          "status": "OK",
          "code": 200,
          "responseTime": 127,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0aa612-c096-4844-aefc-468bc9e427bf",
        "cursor": {
          "ref": "11027051-e3c8-41a2-966e-026d24452422",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a7feee02-8d91-49e7-92b9-69499c3b8246"
        },
        "item": {
          "id": "0b0aa612-c096-4844-aefc-468bc9e427bf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d02f1a85-7717-4694-a6ee-0998d06850c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6241f6f0-d6b4-41c3-ad04-c7422c3db9a1",
        "cursor": {
          "ref": "f8c2b8d3-e728-4c5d-82ce-41a613632b1e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8d667249-b9e2-4569-b652-3e9823983bb4"
        },
        "item": {
          "id": "6241f6f0-d6b4-41c3-ad04-c7422c3db9a1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3629f7f9-f079-4b78-a560-0fb599e15300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60f3b05-8c50-43b3-bd62-cfc1bb4122dd",
        "cursor": {
          "ref": "41cb12ae-03aa-43c3-bb88-fbfca4ed4091",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "65ae7a5f-0cdf-4312-a38b-f5d93d1afcbe"
        },
        "item": {
          "id": "a60f3b05-8c50-43b3-bd62-cfc1bb4122dd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4aba26b2-ee26-4f99-96d0-1b4d886cbd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de072f82-2987-412e-a9cf-752b671da706",
        "cursor": {
          "ref": "6bcee670-10f6-4040-8f94-976bd99fe84f",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c030a290-6cd8-433f-90e5-cb7920184ecc"
        },
        "item": {
          "id": "de072f82-2987-412e-a9cf-752b671da706",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "86df772c-f19e-4e05-b55b-8d6d951d4eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a79c69-6c24-4d3d-9c2a-94c4b0ad64bf",
        "cursor": {
          "ref": "65f07da5-8abe-4725-82f6-9ef732b37808",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b6ed9f31-1170-410c-a33d-0abeb2a6a7eb"
        },
        "item": {
          "id": "a2a79c69-6c24-4d3d-9c2a-94c4b0ad64bf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4c59681a-0ef8-4c05-b5cd-77d8e7a756af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e13730-80ee-44e1-9dc7-6eff47cf68f1",
        "cursor": {
          "ref": "683636d9-093b-489e-bddd-ceb0086f3f33",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ea1b9d7f-090f-46c8-af29-83c20b3fb2d3"
        },
        "item": {
          "id": "85e13730-80ee-44e1-9dc7-6eff47cf68f1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b6855247-e80c-4491-902d-8893e15e5d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c267070-68bc-433e-bac7-7b6629c5d54c",
        "cursor": {
          "ref": "4c854a0b-973c-4a1a-ba0d-09b9bbc86ff6",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dea8ab8c-819d-4d7a-88bd-e706e9e9b535"
        },
        "item": {
          "id": "7c267070-68bc-433e-bac7-7b6629c5d54c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d4c785f2-d8c5-4366-9ac1-d8dc45b060b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b645907-9de4-44e9-a774-235b9fe49091",
        "cursor": {
          "ref": "d219fa71-5d2f-46b6-a500-5657ab80eaa8",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9a94b66f-cb00-430f-ad73-f6ed91c67ece"
        },
        "item": {
          "id": "6b645907-9de4-44e9-a774-235b9fe49091",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "80059b70-3102-4a2d-8f20-ee01c68e26d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f7bee6-494f-4db6-8d6e-de4ba0002b5b",
        "cursor": {
          "ref": "5ac9eb1a-6cba-4ddc-ac2f-3fdf392cf4dd",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "526c4d47-d0bd-4061-8490-c2cda08dcca5"
        },
        "item": {
          "id": "13f7bee6-494f-4db6-8d6e-de4ba0002b5b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ac46d124-c69a-4872-b630-6f1e7af739fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543b5ac1-4118-4885-ad34-229606815ab9",
        "cursor": {
          "ref": "ac513666-12f7-42ec-8d6e-8bd4d0f02bce",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "10d88ce5-1dc5-4093-9f28-9e90f4309430"
        },
        "item": {
          "id": "543b5ac1-4118-4885-ad34-229606815ab9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7a4f151c-f316-4896-bc0d-62c644038ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95191169-b267-417a-b7a6-113fae510ccc",
        "cursor": {
          "ref": "bbc201d7-0cc8-456c-afbe-9a37e8f29bbd",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c4e38b9f-2f75-4d61-863b-881b30016b24"
        },
        "item": {
          "id": "95191169-b267-417a-b7a6-113fae510ccc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6419b7a3-1441-4e16-9f48-c939403bf11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e687125-5348-4d3c-9cd2-4acbabaf6f1a",
        "cursor": {
          "ref": "1326fb4d-1b21-4927-ac16-78b757b24bf6",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fdcd39ab-fb8c-468e-913d-c7c60c55c7f2"
        },
        "item": {
          "id": "9e687125-5348-4d3c-9cd2-4acbabaf6f1a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "09a7fb29-1b9c-4ba4-9d73-d3069956f189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59b1602-f085-47a9-b027-2f360f143e0f",
        "cursor": {
          "ref": "990325d3-7895-4e86-9cdd-068e8e32cc41",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "852948c0-a7c2-4fc7-b043-ebd8938bb6b9"
        },
        "item": {
          "id": "c59b1602-f085-47a9-b027-2f360f143e0f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5d00a5d2-6b4c-41fe-8d11-1678cfe6c25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef825ad9-98d7-40f7-8486-8519eaa09b8b",
        "cursor": {
          "ref": "5de10067-a234-4b5b-a2bd-4b14a9b34b9d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3f5ed5d5-28b5-4cf6-bb0d-25af4cec5e7f"
        },
        "item": {
          "id": "ef825ad9-98d7-40f7-8486-8519eaa09b8b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4106c2bf-e2e9-4883-8cd1-d4e505966c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f14b18a-6863-4567-9046-5ab889e5c2ac",
        "cursor": {
          "ref": "225bd3c1-9217-4fca-96b8-b64ccb83b0db",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6880b0cd-57e5-41a6-866b-dcdaac805847"
        },
        "item": {
          "id": "1f14b18a-6863-4567-9046-5ab889e5c2ac",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "06247b80-0954-4719-b451-9ff65367307f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6a5e07-6a41-43b1-a76a-9b1a9b2c69e5",
        "cursor": {
          "ref": "c409582f-cb60-447b-b163-800d6d8cbf89",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d31a95f3-772c-4ea2-9157-bc48fa4ef568"
        },
        "item": {
          "id": "7a6a5e07-6a41-43b1-a76a-9b1a9b2c69e5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "33f0e1c0-a359-44d7-9d3d-9aed38c94f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e458d3-ecd0-41eb-aa47-99d11c71c4c7",
        "cursor": {
          "ref": "42e37cab-0216-4cb4-8a7b-e838caf44d85",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ce292f1b-8cc5-4f0e-9489-d273797de2a0"
        },
        "item": {
          "id": "27e458d3-ecd0-41eb-aa47-99d11c71c4c7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "491e04cb-a82a-4a56-ba46-8021947dccf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2b54ba-9bdb-4676-a389-c7a932ba7055",
        "cursor": {
          "ref": "bf771a0f-f0f3-4773-95d0-4e865ae20cc3",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fb95f12f-36aa-45b6-813c-d97b6bac65ae"
        },
        "item": {
          "id": "2e2b54ba-9bdb-4676-a389-c7a932ba7055",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "454b52d1-a70a-43ec-900d-cb5950002e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4ac00a-98cd-4c3b-ab93-c8b82ad8f1d6",
        "cursor": {
          "ref": "d63de780-c86a-4056-b94e-445dd9384f88",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7806ef66-4728-4a1c-b382-69345c0fd2ce"
        },
        "item": {
          "id": "5d4ac00a-98cd-4c3b-ab93-c8b82ad8f1d6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "eb188a28-1114-4f98-a8c2-dad16eeb4a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b69e17-5c81-4207-8c1c-795cc6f2acc4",
        "cursor": {
          "ref": "de99dd3c-5218-46d4-8c06-602d17de1fb2",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b4152361-b376-4377-bd56-bb23aa1cc0e5"
        },
        "item": {
          "id": "25b69e17-5c81-4207-8c1c-795cc6f2acc4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5f8e87d2-36d7-4f33-8306-726cdfbd04b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8369606b-5817-4df5-937f-96149a8930d1",
        "cursor": {
          "ref": "cc844457-cc8b-4588-9029-c9f1f848e2a6",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "be1fbd9c-b624-42a7-ab51-477c0d0c4506"
        },
        "item": {
          "id": "8369606b-5817-4df5-937f-96149a8930d1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "44410b1a-3da3-409d-b8ad-e88744d6fa88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3b5128-f303-4a3f-93b3-3d1430d62356",
        "cursor": {
          "ref": "2609c9cb-c3ab-4319-bccf-3c577cecf7bc",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9a7a01eb-c6f0-4f28-9c24-3681c59b5743"
        },
        "item": {
          "id": "bd3b5128-f303-4a3f-93b3-3d1430d62356",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "608b0295-6401-472c-a8f0-83164a153d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0145cdf-51b1-4250-919d-882984ab295c",
        "cursor": {
          "ref": "2c6233eb-7f47-4e70-9b4a-dea13405165e",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2a5760f1-78c7-4d85-91e0-c0e30be4f01a"
        },
        "item": {
          "id": "a0145cdf-51b1-4250-919d-882984ab295c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "239522f4-bee3-4d26-b180-b88d5958f953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664ce96e-5a66-4f39-9eb9-85bdd8f1e77d",
        "cursor": {
          "ref": "00a61305-3f18-4a0c-be60-bc52c417987e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9cba2942-b1ed-4d7d-87e1-e51ed85b84f7"
        },
        "item": {
          "id": "664ce96e-5a66-4f39-9eb9-85bdd8f1e77d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "14398041-a187-4688-bdb7-0fd27c139b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08e0240-d9b0-4a32-ac68-f5f4efc00719",
        "cursor": {
          "ref": "0c24072c-fb9c-41be-95d5-b40f468d8145",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ac89da5f-6109-4e4e-99fd-279b65bf0e99"
        },
        "item": {
          "id": "e08e0240-d9b0-4a32-ac68-f5f4efc00719",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2916448e-9282-4eaa-939a-c81ba9386865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45decab6-5895-40a8-ac2a-b738c72648a0",
        "cursor": {
          "ref": "1586f8b0-cbc3-4aab-b53e-91abb89e68f9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f7763340-7333-45d6-b566-d36fbf698d13"
        },
        "item": {
          "id": "45decab6-5895-40a8-ac2a-b738c72648a0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8ba01595-6bd3-40ab-aa78-7767bac33ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32936a95-0e17-4b58-8c30-cbb0bce64175",
        "cursor": {
          "ref": "a53b1094-e8ec-40e1-a0df-f131d48044d7",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cc464425-dcd9-421b-894e-72e02e4221f5"
        },
        "item": {
          "id": "32936a95-0e17-4b58-8c30-cbb0bce64175",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ede465ad-ee76-4a6c-aa61-54eb1b111758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c95381-d650-43b1-ad46-896e447ec977",
        "cursor": {
          "ref": "76929097-a1f6-49d2-979e-2adaf3b76505",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ba481c52-64d7-4e6e-a501-1e23e8361e88"
        },
        "item": {
          "id": "74c95381-d650-43b1-ad46-896e447ec977",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0b74a06d-c811-4f65-9b80-cabc4d6fb2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20add23a-e9c0-412a-b4e5-d9affdd177ac",
        "cursor": {
          "ref": "106712a2-aa35-48e1-af1c-6a4048af4ca5",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0ce1e7b8-2d32-409c-9c97-237e99a8c0ac"
        },
        "item": {
          "id": "20add23a-e9c0-412a-b4e5-d9affdd177ac",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ace0c711-c00c-4e82-bd02-725d63cd4e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0ab9bd-b808-4d88-acb8-43fbb045626b",
        "cursor": {
          "ref": "e9f049a8-2201-4c5b-ad2f-d022fce8a2b2",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "52780253-4861-4706-bdca-4526a39a7c86"
        },
        "item": {
          "id": "4a0ab9bd-b808-4d88-acb8-43fbb045626b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4aec9d64-899a-4014-b99d-b03b4d2c97f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d46c40-70ed-435e-aa7e-92e107c77989",
        "cursor": {
          "ref": "ea04b1f1-0c85-4e96-b35d-2f2e22efee31",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "54592fde-29a2-47ec-8b1a-66a609b83d61"
        },
        "item": {
          "id": "73d46c40-70ed-435e-aa7e-92e107c77989",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "99aecb2c-6b49-4e1f-86a1-eb6dbbfb4054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4624ca-1028-402e-aef2-30c031bc47f4",
        "cursor": {
          "ref": "a3192467-577e-47d7-849f-388519026c51",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7fcd34c3-0950-4c9e-8612-c80571f49d0b"
        },
        "item": {
          "id": "1e4624ca-1028-402e-aef2-30c031bc47f4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cb9b7f39-1806-4925-ac51-350f07422234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30957b99-fc04-4058-8693-05fefacbfbae",
        "cursor": {
          "ref": "58a87990-b1dd-4ae0-9e8d-58c72d0a606e",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ed0fbfe9-e733-4870-b419-d046178eceb9"
        },
        "item": {
          "id": "30957b99-fc04-4058-8693-05fefacbfbae",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d5156557-9063-4949-8329-3266215e2518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038a015d-ab68-4f90-812c-5abd8e5769de",
        "cursor": {
          "ref": "b4bcd55b-bd26-4a21-b7de-a0ec9bf44eeb",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c9257556-bb41-47ca-9a04-2aa407095ce4"
        },
        "item": {
          "id": "038a015d-ab68-4f90-812c-5abd8e5769de",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cb9727d5-e77c-4260-9608-7d4dcd84bf5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a9f069-5ffe-46d3-98a3-e79fd9f92451",
        "cursor": {
          "ref": "d6813a70-338a-4d1c-aeb5-04efb484ae39",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bb807edb-b2db-4dbe-bfaf-6870afe28817"
        },
        "item": {
          "id": "03a9f069-5ffe-46d3-98a3-e79fd9f92451",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "eb7db0a9-6bdd-4802-8d49-2e3dbb3e1184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51c809d-38c5-4dd4-8e95-daf7d2772e70",
        "cursor": {
          "ref": "66bd5d62-4dfa-4aea-9423-4c4a32501db3",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f91fdaaa-ddc2-49e0-b3cc-675c3ad3adf0"
        },
        "item": {
          "id": "b51c809d-38c5-4dd4-8e95-daf7d2772e70",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "68dfb7ea-c00b-40f9-89bb-bfba0a8dbd7f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 30,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f55982-503d-4b64-ab24-0e5ce21584c5",
        "cursor": {
          "ref": "e26a0ea8-3e87-4081-bce3-727b53a892ce",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b6757753-cb5c-45e2-b0f7-19ccfed23330"
        },
        "item": {
          "id": "87f55982-503d-4b64-ab24-0e5ce21584c5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1fc217e3-829b-47a5-937e-92b484475ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4250709d-2212-4a1d-9aa3-f373aa3dde80",
        "cursor": {
          "ref": "bb001bfc-ca30-47eb-994b-abb9e020c483",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "64b8c415-1f7a-4e47-bcf7-2006f2286772"
        },
        "item": {
          "id": "4250709d-2212-4a1d-9aa3-f373aa3dde80",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "07bfbb25-965c-43ad-8ce3-c0b03c9902da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e55d2b3-fe56-4a3d-a544-021a4f4172e9",
        "cursor": {
          "ref": "0cfff5d0-7aa4-4c37-8902-ca7678b4860b",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3dc37988-d350-400e-b421-5e1b3709e816"
        },
        "item": {
          "id": "8e55d2b3-fe56-4a3d-a544-021a4f4172e9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "89d96190-844e-4048-8172-3cda7c4ac154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3935ba5-da37-4efe-b9b2-9b1006590cc4",
        "cursor": {
          "ref": "f2987483-93ae-4b67-96c2-1c5a37c03767",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "45603737-4471-4ec7-8c5e-1cb9048e15d9"
        },
        "item": {
          "id": "f3935ba5-da37-4efe-b9b2-9b1006590cc4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9df0c54a-cd9b-4eb7-85cf-3c317e520997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76500f64-8bc7-4218-a8cb-d011f03a56ce",
        "cursor": {
          "ref": "075ec043-3b51-42e9-af42-f9b36a82742e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "98f8b519-b3f8-46b3-b69a-6ddeb336f187"
        },
        "item": {
          "id": "76500f64-8bc7-4218-a8cb-d011f03a56ce",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2ec953bc-75c9-4335-a273-10883b5a0d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300e85ad-1b9d-4ef4-b211-b1ccac207e54",
        "cursor": {
          "ref": "9c476038-98b7-486a-8a44-079b6a38530e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5819569a-7aad-4b9d-88ee-c0bcd1fdc491"
        },
        "item": {
          "id": "300e85ad-1b9d-4ef4-b211-b1ccac207e54",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "db1b2e92-4748-447f-84fe-b6336de302a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bbec8b-78e2-4017-9b5a-6bed2cd163a2",
        "cursor": {
          "ref": "7fc6ac3b-e968-4f52-a8fc-3056ba7e03c6",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d5c0db9e-c861-4d6e-b78b-23befc7713f4"
        },
        "item": {
          "id": "99bbec8b-78e2-4017-9b5a-6bed2cd163a2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6548e7fb-dda0-4ef2-a765-943355ee62fd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 27,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aefaab9-fc6a-4fe1-8701-c7100c99be96",
        "cursor": {
          "ref": "4b342ba6-20dd-45ac-8dcc-7df05ed2dd8c",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9f10e628-0f62-493b-82e3-3bdef4260aca"
        },
        "item": {
          "id": "6aefaab9-fc6a-4fe1-8701-c7100c99be96",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2cfaa7e2-a232-4db0-be53-d30561b9ca59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1dfe5b-6e4e-4450-9a5d-a5dc791b5be7",
        "cursor": {
          "ref": "0a0ea9f2-6a51-4d5a-8754-70d0bc58b4ed",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f76ea37f-ab4a-436f-83bb-584e7219917b"
        },
        "item": {
          "id": "fc1dfe5b-6e4e-4450-9a5d-a5dc791b5be7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "41ee4919-c53b-4b50-9f6b-c35ef1e8d836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a48f647-ee3e-4beb-844a-5ce691b218f7",
        "cursor": {
          "ref": "0254befd-c35f-48f2-94d7-b7f6780427ce",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0c3d9a3a-992b-43ac-af9a-55c70a842aa7"
        },
        "item": {
          "id": "1a48f647-ee3e-4beb-844a-5ce691b218f7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4b343f1e-9488-4b89-b669-5870346a9644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4864e8-f69e-48b6-99cc-7f27f35f8a9e",
        "cursor": {
          "ref": "f664616b-154a-4834-8301-accd0c9e5964",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "69a854c2-9110-440e-a70d-fe8be1fb99d8"
        },
        "item": {
          "id": "4f4864e8-f69e-48b6-99cc-7f27f35f8a9e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1c1bf028-1b1d-446b-925e-4139d2ce1d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13a09c5-e232-4eee-9848-e1982f9525c8",
        "cursor": {
          "ref": "27d63c1f-9541-4e74-bf02-7f66858a9086",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2ce70c10-9b8a-4240-ba41-8820f034417e"
        },
        "item": {
          "id": "e13a09c5-e232-4eee-9848-e1982f9525c8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "acb48191-b562-415b-b449-87d9ee6ce539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f78d43-17d8-4249-9aed-dbd0fa619e83",
        "cursor": {
          "ref": "72278bc2-0afb-4ac4-99ed-cce7fdaedca7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aa764f0d-035b-46e3-b8fb-ac1df59bdde2"
        },
        "item": {
          "id": "c6f78d43-17d8-4249-9aed-dbd0fa619e83",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f8ca2ee1-aa30-41a0-b97a-57bcac780604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa62b71-74f3-40d7-bf1b-c0070d890c90",
        "cursor": {
          "ref": "399e3998-ad77-4f2c-b397-04c3f7949bf9",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "21026213-0dc3-4fb9-9956-b7fd786886ea"
        },
        "item": {
          "id": "0fa62b71-74f3-40d7-bf1b-c0070d890c90",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9027b11d-81a5-437e-a5a4-398cdd13db51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac88a46-c81f-4cde-a641-31d5c71afd77",
        "cursor": {
          "ref": "13fa7757-fba8-4812-b189-a0001f352516",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b1b1b0e2-477e-42d7-b338-837201ea2062"
        },
        "item": {
          "id": "3ac88a46-c81f-4cde-a641-31d5c71afd77",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "00903bf2-1b0c-44e0-b5a3-cb660dfdcbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a1b6ab-7781-45eb-b5c8-d8a610811e18",
        "cursor": {
          "ref": "0b805fd7-403b-4629-9737-9b151eea1065",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e138267c-b68b-4532-8e69-7fa984feb67b"
        },
        "item": {
          "id": "e3a1b6ab-7781-45eb-b5c8-d8a610811e18",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3605d627-8a5e-482b-bddb-30510e190917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3ffb74-f636-4c43-a025-2d7c5066dba8",
        "cursor": {
          "ref": "94e5aaa0-adc9-425c-858e-8fc15c8a18ff",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "51ec529a-e597-444b-8083-67465f9bb21a"
        },
        "item": {
          "id": "5a3ffb74-f636-4c43-a025-2d7c5066dba8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "83af0927-55d6-4683-9714-438b25b72714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722968ac-905c-470d-98c5-1a31cbdec54f",
        "cursor": {
          "ref": "692d4f29-e4dd-4a6e-8754-760e9c7b6a71",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "91bdf67f-ff77-41d4-a58b-f5e193583996"
        },
        "item": {
          "id": "722968ac-905c-470d-98c5-1a31cbdec54f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "096c2d6d-1e50-4c7a-8d86-45259679b467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcae6ccb-8643-49bd-ad89-8b51d5ad6042",
        "cursor": {
          "ref": "63abfef1-7b50-43ef-ace6-ced23c00f62b",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5fb40688-8417-4caa-8b9c-b32fa5f718b1"
        },
        "item": {
          "id": "bcae6ccb-8643-49bd-ad89-8b51d5ad6042",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fdb90b3a-0bcd-4e53-a0c5-037f0697dbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb700f69-021b-4a66-9967-1e677783c377",
        "cursor": {
          "ref": "3460df2b-f0f0-4a31-9972-ede89170c7bb",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "504d381b-def4-43b2-8cb5-56fd8d75cc4f"
        },
        "item": {
          "id": "eb700f69-021b-4a66-9967-1e677783c377",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "53aa1bc4-0493-4984-8da3-26f29cf8549d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05a2a26-5415-4ad1-8e17-e4f2326870f9",
        "cursor": {
          "ref": "0d8d6bca-bb8b-4971-93b4-c583240d3c43",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b7e2b760-22e0-4bd3-96ff-9fcd93766314"
        },
        "item": {
          "id": "d05a2a26-5415-4ad1-8e17-e4f2326870f9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1aec118c-8e1a-42b8-8d29-c3a69c902c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49908b7f-e7e8-4e08-b678-a81bca359fe6",
        "cursor": {
          "ref": "7a08da4e-de12-43e2-a38e-a8b9db97ec9e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1998c7a6-810c-4de3-8e0b-3b4a94bac378"
        },
        "item": {
          "id": "49908b7f-e7e8-4e08-b678-a81bca359fe6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f857772e-d5d0-435b-aa80-3dae35f2fe8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df73559-3484-4efa-a073-545703c09e95",
        "cursor": {
          "ref": "55be1825-184d-4131-ab0f-5d2c8bbc5e0b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5c603695-86c7-4f4f-953d-fd2d6698217e"
        },
        "item": {
          "id": "5df73559-3484-4efa-a073-545703c09e95",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "55dbbd34-b06a-4960-a36a-7f026650e7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8f58bf-bd1c-40c8-ad4e-abcf0adbc542",
        "cursor": {
          "ref": "31860be5-1e5e-4406-bb12-61481ce96ea0",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "22089510-b8cd-4bac-b4c9-ddc7e5786a47"
        },
        "item": {
          "id": "da8f58bf-bd1c-40c8-ad4e-abcf0adbc542",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6a28edca-040b-4fbb-9a23-54fb125e539e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351bb24a-ae2d-4668-b17c-8200c48e19bf",
        "cursor": {
          "ref": "8d9baff0-e1e3-48c8-9896-529d9089bea1",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "96447914-94c9-456d-a6ca-0f6538627083"
        },
        "item": {
          "id": "351bb24a-ae2d-4668-b17c-8200c48e19bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "54cacf54-601c-4e0f-a712-8133ca987d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce80d420-9250-4fc8-a72b-be3f2bf31d29",
        "cursor": {
          "ref": "f2fc4c19-c5af-432f-8851-dec0b0a5f4df",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dc46a632-8d01-43ec-87be-b3388efc8ef4"
        },
        "item": {
          "id": "ce80d420-9250-4fc8-a72b-be3f2bf31d29",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "63395dbf-15e7-4c2c-8aba-39c641b6b81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7f60b5-6202-4643-8903-85a17271f14d",
        "cursor": {
          "ref": "1519247c-ab74-4ef9-967f-686ca8ff56bb",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "38c36851-7c23-4676-9247-5acac295c27e"
        },
        "item": {
          "id": "fc7f60b5-6202-4643-8903-85a17271f14d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "68419159-3924-4cde-8f32-1ecb91beb6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25848d90-02a7-4d2c-a154-cfc4a85cf01d",
        "cursor": {
          "ref": "451b5c8e-de0a-4601-bf4d-6b60965180c1",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bacc4767-89d8-46be-b327-0a55dc9e22b3"
        },
        "item": {
          "id": "25848d90-02a7-4d2c-a154-cfc4a85cf01d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2483fd09-3318-40bb-8466-06a4a5a87711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c0ffaf-c7a3-409b-93e8-8119d1a673d3",
        "cursor": {
          "ref": "b648951e-a5f6-437b-b7ac-5ce25390264e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4bc626f4-21a0-43eb-a046-750c85bf8802"
        },
        "item": {
          "id": "77c0ffaf-c7a3-409b-93e8-8119d1a673d3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c9e06f0f-9b13-4f53-aeb5-0f9e9c8e9f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd4419c-e062-4014-984a-e43a6b1d060d",
        "cursor": {
          "ref": "7ed2a7ea-2902-49d9-951f-1ad2bf9d7f30",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "07fa311f-038e-465d-9c19-37cba81a47ca"
        },
        "item": {
          "id": "fbd4419c-e062-4014-984a-e43a6b1d060d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "07b24efd-bc06-4128-936b-2cab23ede7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd183549-e53c-4ce1-8a65-c5cf9cabd123",
        "cursor": {
          "ref": "7b3717d3-f1f3-4707-9db2-9b8e9395b594",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f6474138-ae2f-49b2-af20-6bd456cce77a"
        },
        "item": {
          "id": "dd183549-e53c-4ce1-8a65-c5cf9cabd123",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b2ce6f37-4596-44f3-815c-615c55dee612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6456cf01-2e4f-47d9-b903-cdce93249ec9",
        "cursor": {
          "ref": "dd0e4bb0-b9e0-4fa5-ade6-5d1c2b6f9968",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e38163ba-ef39-484e-8a09-36ad6737c46f"
        },
        "item": {
          "id": "6456cf01-2e4f-47d9-b903-cdce93249ec9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8ce3b709-e586-4b34-b6cd-e4c879b64df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0517d7-fa64-4995-8f5b-90bc6498c6af",
        "cursor": {
          "ref": "ec1263b5-2d0c-49ed-9e12-c54eed109a70",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f771bdfb-58df-411b-bb3a-94539af1888f"
        },
        "item": {
          "id": "de0517d7-fa64-4995-8f5b-90bc6498c6af",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "90bbe360-768a-4c22-bf03-f006ff44da0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dff18e4-e69a-445e-b012-0c75847632b3",
        "cursor": {
          "ref": "a5ece32a-38ba-46f2-ae0e-9a5e293779df",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6024a7d1-2b7c-4943-85fa-cb6223f05b3c"
        },
        "item": {
          "id": "1dff18e4-e69a-445e-b012-0c75847632b3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "39c17f79-cf0d-4b8f-b839-c7bd40afbca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1799d19f-9d34-40af-bfb1-48561a488d5f",
        "cursor": {
          "ref": "609df9ab-7c23-4074-a96a-23192be7b4e5",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d1decbda-7e47-40b0-b450-f0626d7d9ee6"
        },
        "item": {
          "id": "1799d19f-9d34-40af-bfb1-48561a488d5f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ee139b4c-f59c-426e-83ae-df0bf9853794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37f6b65-62ef-4dc1-8de2-1641f686796c",
        "cursor": {
          "ref": "d8bdefdf-de5b-4e0c-8c4c-917432c0db45",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "80496178-8d4f-4a12-a0cd-ea6287f043fa"
        },
        "item": {
          "id": "c37f6b65-62ef-4dc1-8de2-1641f686796c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0d0984c7-b380-4761-b0ef-774d73752985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e575d28b-3326-4a47-8db6-a7a10aa0caaf",
        "cursor": {
          "ref": "f949d2ea-5d90-4777-8ad4-6601a83f6c27",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fb049b9e-d5ed-41ac-a158-92ba05d2eb30"
        },
        "item": {
          "id": "e575d28b-3326-4a47-8db6-a7a10aa0caaf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6022fd5a-f7ca-42d9-b007-ab7a61afee36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72ef04d-840d-4f33-accb-0b6ffa612438",
        "cursor": {
          "ref": "12af7b71-dc0a-4f62-a0b4-94834d2b3219",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "dd25e9d4-4612-43c6-a070-7691f53e3e76"
        },
        "item": {
          "id": "c72ef04d-840d-4f33-accb-0b6ffa612438",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "33637bdc-735d-4b6c-a3d9-0d9afaaa55a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31b048f-8e99-4f21-9038-ff065282854c",
        "cursor": {
          "ref": "1e54219f-f968-4b42-b71e-01a1f7893bd5",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4684a73f-0862-43fd-9bff-78ff34cf1fe4"
        },
        "item": {
          "id": "e31b048f-8e99-4f21-9038-ff065282854c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4a209cfe-9918-4448-a0bf-22a26c41f48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d22314-f906-4e6a-93c7-513f7c9bd51e",
        "cursor": {
          "ref": "eede50b7-ca28-4e89-8f76-350c150ce63b",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e86031f3-2fbb-426d-8176-ff7b8e2f7631"
        },
        "item": {
          "id": "65d22314-f906-4e6a-93c7-513f7c9bd51e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "75e06992-c26d-48ce-bece-8c3897c1c722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfde06e3-be33-4d8a-812c-0107a7caa317",
        "cursor": {
          "ref": "da75b662-66b0-432f-b77a-8b7ed89cb6c6",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "61de309f-d4b9-4938-82d6-3646f65e2b69"
        },
        "item": {
          "id": "bfde06e3-be33-4d8a-812c-0107a7caa317",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c01dcb95-405d-4199-8137-d2d22bae4005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b88595-5730-4642-a4cf-598ea84f2255",
        "cursor": {
          "ref": "4d016523-08cb-4f85-be4c-eac3ee6a3d9d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f4fdf88a-ab30-432e-b533-e556a3bbdc76"
        },
        "item": {
          "id": "d8b88595-5730-4642-a4cf-598ea84f2255",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "20f302e3-e195-4b7a-819a-d9a2d5c3113c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c02cec-7993-4f20-946b-2b1270b7956f",
        "cursor": {
          "ref": "2ab68012-e94a-41f6-87de-5c577bb90051",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d4df5fa1-ed39-4ff1-9797-517aed8273f8"
        },
        "item": {
          "id": "d2c02cec-7993-4f20-946b-2b1270b7956f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "62492a5a-e853-431f-b5ed-e9ac568d6b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74821353-879d-4d49-989f-b233858d9624",
        "cursor": {
          "ref": "50ed037c-b699-405f-943f-91ea9c288b39",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7e6e3d1d-539a-4eaf-8161-379844a1145f"
        },
        "item": {
          "id": "74821353-879d-4d49-989f-b233858d9624",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "70453da7-9588-4f37-a399-2bf7201a5ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4fc265-36aa-456f-83dd-24732fb887ab",
        "cursor": {
          "ref": "9b301e3c-9a6e-44cd-bf73-a764fbb6e82d",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "72d6cf08-3fba-46e4-90f6-ab2e1b738a58"
        },
        "item": {
          "id": "cd4fc265-36aa-456f-83dd-24732fb887ab",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d420d7cf-d9f8-440a-b0ae-f83cd3b70473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c123248-2dca-4d79-a773-ab355a1152ec",
        "cursor": {
          "ref": "7f0b6c21-e527-4225-a6f0-c3baade107f3",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e228f7b4-fbde-4ed8-92b8-23ea7cf4cbcb"
        },
        "item": {
          "id": "2c123248-2dca-4d79-a773-ab355a1152ec",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "43d5d0c4-8b31-4b69-a69d-7962ab7667ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c87949d-3874-4612-9784-cd1e554178b4",
        "cursor": {
          "ref": "a82e0612-7c3f-429c-9fe0-bb414c2db286",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "31361446-037c-4163-a63f-7cdec2462a1b"
        },
        "item": {
          "id": "2c87949d-3874-4612-9784-cd1e554178b4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6cde7d84-bf75-4105-b051-97bf8f1e1c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6c4981-78fa-483e-9959-11d73412c16b",
        "cursor": {
          "ref": "5a42910a-566a-4cf1-9b89-b47f50a569fd",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6e6c597f-285c-4182-a148-349dd1987a88"
        },
        "item": {
          "id": "1c6c4981-78fa-483e-9959-11d73412c16b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8d337f40-f6b2-4de2-8bbc-a48e2ebdab21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a905fdd-cdbc-4acc-b2ee-ea4724ac9076",
        "cursor": {
          "ref": "a21d47b5-6059-475e-b9d9-1a1d8f1f08e6",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c0a88c6e-2289-497f-8cf8-3960879803a3"
        },
        "item": {
          "id": "1a905fdd-cdbc-4acc-b2ee-ea4724ac9076",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "44c2087c-3e1e-41d1-bf38-6587159c6cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd893954-1652-4622-b790-a52f05f15bc3",
        "cursor": {
          "ref": "6db9df46-47ac-4a34-8410-2e9ca254e6d1",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5a404839-7e5e-42be-8aa9-71ca809ec15d"
        },
        "item": {
          "id": "bd893954-1652-4622-b790-a52f05f15bc3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "14693760-f41b-40a8-bca1-4d006ee980c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b303c05-1a44-4acd-a78c-b34853af664e",
        "cursor": {
          "ref": "25bec438-b318-49d8-a649-d2eab15b2b95",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "72858286-3188-4cec-8249-008b9a496298"
        },
        "item": {
          "id": "0b303c05-1a44-4acd-a78c-b34853af664e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1b528472-3d00-4b63-98a7-83f6fcb82b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b5cc91-7c9c-4a97-aa83-97f5d5cf898b",
        "cursor": {
          "ref": "b4010915-bb1e-4f5a-80b0-8d1a8ae7f4b9",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "48882786-48e2-418e-bef4-9bc3d181924f"
        },
        "item": {
          "id": "96b5cc91-7c9c-4a97-aa83-97f5d5cf898b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "43ded6f2-c767-44ef-a19f-449b69b030ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe946314-bf0e-416d-9c3a-0c29be34e6d6",
        "cursor": {
          "ref": "ae5680b1-33c5-43e6-95e4-2d1e4138b0db",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ce65e328-8620-4247-a128-a00b587c847e"
        },
        "item": {
          "id": "fe946314-bf0e-416d-9c3a-0c29be34e6d6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4b082e95-c9b5-4ab8-a097-64eb285e4f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da74a339-28b2-494e-970a-5ce20babb103",
        "cursor": {
          "ref": "d4816c26-b900-4c1e-8c71-9b90e8846854",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6bb7f5f6-6f25-4c00-b1b0-0c87371d71f6"
        },
        "item": {
          "id": "da74a339-28b2-494e-970a-5ce20babb103",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f00ff391-3a5d-4e4a-87ff-434b2ce11da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cbf369-ff0a-4000-84b5-89373917d81e",
        "cursor": {
          "ref": "e283c2da-2a18-4d90-9fc6-e058434644e0",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d7f8f61d-c2e9-4a29-8c1d-6e99ac2ca5a8"
        },
        "item": {
          "id": "01cbf369-ff0a-4000-84b5-89373917d81e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a20f00bf-b374-40e9-88fe-3270c6d17411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78b8962-b4f3-4377-ac60-30df4ee5d752",
        "cursor": {
          "ref": "55f8f1f5-b1e4-464b-8cb9-da34e8f63f0b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bb318811-316c-4ea7-83a5-8b72ddb068da"
        },
        "item": {
          "id": "f78b8962-b4f3-4377-ac60-30df4ee5d752",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8af02441-c4ac-434f-baa5-cc447388a0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539a1ad7-25df-4812-997c-27eb24f52acb",
        "cursor": {
          "ref": "e670421d-bca3-4de5-9197-de0ffaa359a8",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f10a816d-a67a-4a5b-9878-569ca22d7e1f"
        },
        "item": {
          "id": "539a1ad7-25df-4812-997c-27eb24f52acb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1cac5214-a529-4195-9322-6ba2c7a1f99f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ed4262-af57-4f59-bba8-42248ffa1248",
        "cursor": {
          "ref": "205a42c1-3d6b-4cfe-b60a-9fe3a31a9f40",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "00188d87-10f0-489e-8307-d1bdf84588a7"
        },
        "item": {
          "id": "52ed4262-af57-4f59-bba8-42248ffa1248",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b116e100-152c-4a13-b8f1-5d09475cc85e",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f04e4d7-c899-40b5-860a-4d3a97575026",
        "cursor": {
          "ref": "30ed130f-03ce-4500-a9b5-54a4077e03f3",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "351a9243-5602-4ec4-bfa5-4211aa5903d6"
        },
        "item": {
          "id": "2f04e4d7-c899-40b5-860a-4d3a97575026",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "70d166ed-2536-478d-8729-395c81768a1a",
          "status": "Created",
          "code": 201,
          "responseTime": 119,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eeb767b-4c19-4405-b297-95fc12fcc1af",
        "cursor": {
          "ref": "6ce0e833-e444-499f-aafe-692e6db576f3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f983a71f-a8a3-49bd-a107-4f4a532845ae"
        },
        "item": {
          "id": "0eeb767b-4c19-4405-b297-95fc12fcc1af",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "193e61cf-ea77-450c-b300-e593d66f20e0",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a65ef1-0c8a-4c40-88c7-28b9b6d612a3",
        "cursor": {
          "ref": "ab7a1e5a-3d70-4cdc-8028-dea0922b3bdb",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "728a10f9-9b55-4fbb-b22f-a9cebb377f17"
        },
        "item": {
          "id": "29a65ef1-0c8a-4c40-88c7-28b9b6d612a3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "be64a8a8-2887-43c8-8dd0-0df1ddd82b0c",
          "status": "Created",
          "code": 201,
          "responseTime": 38,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "107724f0-4e96-465c-9253-fc1184bb7132",
        "cursor": {
          "ref": "e976abd4-8853-4179-a33b-a6015a1e1559",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e9a7906f-1850-4e61-b37f-eb29737e5b29"
        },
        "item": {
          "id": "107724f0-4e96-465c-9253-fc1184bb7132",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9453f372-f6f5-4ac7-8932-e5f3be6c01c6",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa41e13d-9385-4855-a324-461c09e4b75e",
        "cursor": {
          "ref": "2ff841c6-27f8-4ba9-972e-5a20d8fd2920",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b22ad30d-1126-45e9-9b6c-04121bec1100"
        },
        "item": {
          "id": "aa41e13d-9385-4855-a324-461c09e4b75e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cadf3376-adb3-4864-99a0-696a6e0d7e63",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7252117-9048-4738-ae62-35c52b12976c",
        "cursor": {
          "ref": "fb4e5064-5f28-43c8-b0e2-00f1beab17b8",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4cab0522-76ab-4dd0-83e0-6012aa9d973d"
        },
        "item": {
          "id": "e7252117-9048-4738-ae62-35c52b12976c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bc451553-9982-4610-8b62-5e46a25434d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a5c2a2-2434-4f71-93f8-4d0a443ca11a",
        "cursor": {
          "ref": "d38cc185-eaea-4b9c-ba78-b3c942c92a3d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f7b0bcfd-554c-44a3-b17c-c9fc5eba0559"
        },
        "item": {
          "id": "83a5c2a2-2434-4f71-93f8-4d0a443ca11a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "21f52200-b63f-4fae-a921-0374a10cd007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1609f965-7342-434b-af34-ad886a39cb8e",
        "cursor": {
          "ref": "64a754f8-a7e9-4fc1-8603-d53dd29b7bc6",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d319e602-0574-466b-97c4-a48c4822dfe3"
        },
        "item": {
          "id": "1609f965-7342-434b-af34-ad886a39cb8e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1974e51c-a997-4ce5-9cec-ab3d5dd195c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13dfd417-6fcf-4ce1-a37f-2d6c2c3dfeb0",
        "cursor": {
          "ref": "2d13b810-803b-466c-ab5c-0d522e3b04bb",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9c1938fb-3e5e-494a-ab79-590d9b0e165d"
        },
        "item": {
          "id": "13dfd417-6fcf-4ce1-a37f-2d6c2c3dfeb0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "70c5a5ee-c80c-4c2c-bc0a-9eebfb62dc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f79ad1e-05ba-47ba-a915-9e5fe9dc7a3e",
        "cursor": {
          "ref": "6abbeacf-807a-4d34-82b1-47349b94db01",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "42221254-8257-4e90-8e16-a2b6d12a3931"
        },
        "item": {
          "id": "9f79ad1e-05ba-47ba-a915-9e5fe9dc7a3e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aabfe043-ccc5-4014-84cf-039fccd06d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44d7e1e-6ab5-4899-9469-fc89f40702c7",
        "cursor": {
          "ref": "6ea8fc01-c694-4e97-b1b4-15e0065a5ebe",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0791f34c-f4c3-4d30-807f-4bbd77dba316"
        },
        "item": {
          "id": "f44d7e1e-6ab5-4899-9469-fc89f40702c7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "eb21b8e5-901c-4a42-b2e5-0ef9f80e57e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723034e8-cecd-4aff-80b6-b1834f3b03e5",
        "cursor": {
          "ref": "9e7866e9-7026-4fbb-86e4-64d50c433cf7",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "210703f6-9ecb-42b0-a644-f55f5da2bdcd"
        },
        "item": {
          "id": "723034e8-cecd-4aff-80b6-b1834f3b03e5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bf7f29a2-428b-45f0-a225-5bdee64546f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44550c24-9ac3-40f8-8e21-b304e328b92b",
        "cursor": {
          "ref": "648f0eff-ea0d-4361-afde-c144e88789fe",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fe60d3d2-bec6-479d-a907-9503165f8b63"
        },
        "item": {
          "id": "44550c24-9ac3-40f8-8e21-b304e328b92b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8a4c18f0-9a18-426d-b6a9-3246f457d45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d248d4-f8e8-45f1-a188-76ae065c958a",
        "cursor": {
          "ref": "1745d140-4270-497b-b14b-66969faf5441",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "03514c84-56d3-45c6-b336-1f8d2e4b2462"
        },
        "item": {
          "id": "01d248d4-f8e8-45f1-a188-76ae065c958a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ddfe31ce-b07c-430d-bf2d-7f0082b7d3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c70097-8a94-4a78-8957-168ee5634dc7",
        "cursor": {
          "ref": "4d3224cd-3c69-4b0c-a0a6-9edc7f3de6f2",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ff351eb0-4f38-41ff-9571-60362564ead6"
        },
        "item": {
          "id": "09c70097-8a94-4a78-8957-168ee5634dc7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ef5e6c35-23aa-423a-8e6a-6591b3d192a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50617ee2-5d4e-4361-a2d3-3b40a30cc2ae",
        "cursor": {
          "ref": "432ce00f-4977-4dbc-9de0-5d732214cc98",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fa07d49f-7554-4b8a-bba7-9d457021bf69"
        },
        "item": {
          "id": "50617ee2-5d4e-4361-a2d3-3b40a30cc2ae",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ed84ec98-7b42-492e-8ca2-d7443d5ad426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba89bfe-cf41-4fa5-9844-7483e58c63c5",
        "cursor": {
          "ref": "cd628ef5-ef59-4873-93df-c3cdbc04ce82",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7aa5226d-27ea-412b-89bf-33bd64920c17"
        },
        "item": {
          "id": "8ba89bfe-cf41-4fa5-9844-7483e58c63c5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ea72bec2-65c1-405a-b6f4-f0b8d7806e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6718337-7688-4644-873b-b3f67282b24e",
        "cursor": {
          "ref": "c7bcea17-2f2b-4b22-842d-9bbdbab304a2",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fd9bf4a1-bb7a-4d45-b12d-995dec3377cb"
        },
        "item": {
          "id": "d6718337-7688-4644-873b-b3f67282b24e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "618e3818-83a6-4191-90d6-1cc31ff9429d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7e4f6b-9339-4a02-ac13-c69081a6ca1d",
        "cursor": {
          "ref": "dd557127-6ab7-4fe1-a4b7-d7e579bc1e70",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6eab7cd6-1c49-42a7-99da-95ed54a61a64"
        },
        "item": {
          "id": "ad7e4f6b-9339-4a02-ac13-c69081a6ca1d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4ec561dc-bd35-4fe3-95d1-196e29953e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6f0619-6920-434b-a5f2-2102de72cc89",
        "cursor": {
          "ref": "b48df5f9-65e0-499b-8acb-9177deeb9518",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3c8bd855-e297-4778-afc5-019f87697ba0"
        },
        "item": {
          "id": "3f6f0619-6920-434b-a5f2-2102de72cc89",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7a979f47-e7f8-4724-8b8c-d1283c3c47a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4343d18-cee7-4c42-b58d-11f116ab4188",
        "cursor": {
          "ref": "7f028a3c-1295-4361-aa51-d0c4b8f4e87c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6ca878b3-f42f-4028-902c-b95cec05feab"
        },
        "item": {
          "id": "d4343d18-cee7-4c42-b58d-11f116ab4188",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d5f1eba5-5063-49cf-8f29-fff263bb6f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a63034-f423-48a1-ba40-05a736e8c0e8",
        "cursor": {
          "ref": "8a249c58-b796-49d2-a42c-ac8fa2bcbf69",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c7418d38-a75c-4a9a-9070-38357b78df60"
        },
        "item": {
          "id": "e0a63034-f423-48a1-ba40-05a736e8c0e8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6c9244f2-b85b-4f32-9698-32dd54bb0d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e82a935-4fde-4dda-9376-59da5d257e37",
        "cursor": {
          "ref": "1c6916f5-05d4-435c-93fd-2e3a072dc7e1",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b2e24bab-d721-4596-a9d3-2f99c562fa81"
        },
        "item": {
          "id": "6e82a935-4fde-4dda-9376-59da5d257e37",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "66b4e8ae-f8b3-40c6-9061-e74a281eedfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd841810-1def-4b19-85cd-0768d621ba4e",
        "cursor": {
          "ref": "f265a024-24f7-4a0a-94f0-151fbc967483",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f5a2bc85-cc9f-4830-8890-a33931a160f0"
        },
        "item": {
          "id": "dd841810-1def-4b19-85cd-0768d621ba4e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a8c96150-c53a-4a8a-b99b-df6e0a24b896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55fd9bb-1eec-418e-937f-994f41fe0cc0",
        "cursor": {
          "ref": "d22d8497-93ec-4c7c-89c4-14a24a47b280",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "99d1ee91-531f-4fa8-af5d-5cc57a61cd94"
        },
        "item": {
          "id": "b55fd9bb-1eec-418e-937f-994f41fe0cc0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "88aa9a45-029f-441b-89e4-eb4a8d174c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c1b1c5-bc04-41f7-9918-a9fa957bed83",
        "cursor": {
          "ref": "1c0fa1f3-6c67-45c9-a969-f128178472a1",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1ccac3ab-81ff-4a0a-b837-16bffde95f0b"
        },
        "item": {
          "id": "b4c1b1c5-bc04-41f7-9918-a9fa957bed83",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "693f5422-3ce1-4c7f-b8a3-ced3044d31d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290fd3c9-e2b4-4d35-ab97-41052c7129e8",
        "cursor": {
          "ref": "61d568a6-fea2-4f90-91a7-7069e78ab882",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7d16ef5f-ccc9-4875-bbb7-ac1939266980"
        },
        "item": {
          "id": "290fd3c9-e2b4-4d35-ab97-41052c7129e8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "335dfb0b-95af-482d-8a66-c790b46f887e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbe60ac-1fd2-46ab-b11f-1fb5874d78ae",
        "cursor": {
          "ref": "1a5bab31-fa5c-4459-bdcf-13bbb45d84c8",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ca30ae35-89e9-4e58-953b-d76d7315f582"
        },
        "item": {
          "id": "4bbe60ac-1fd2-46ab-b11f-1fb5874d78ae",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b27286f3-da78-4e2f-8633-e69622795db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7f8fea-8b6c-402f-9d15-7acd0eee7265",
        "cursor": {
          "ref": "85976baa-2917-48e3-a65a-5f9a51c23db0",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "eff8ec91-3dd1-4d8d-9bd5-5a5d9a6c0634"
        },
        "item": {
          "id": "2d7f8fea-8b6c-402f-9d15-7acd0eee7265",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9d75f040-7239-4296-af88-fba77087f6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe97179-92d2-4dcb-b6c2-6877a97902f1",
        "cursor": {
          "ref": "2982fc12-3a9f-4975-a5ce-cd0bab0a5265",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a75d59a6-317a-4998-aac3-db32c1acfccd"
        },
        "item": {
          "id": "abe97179-92d2-4dcb-b6c2-6877a97902f1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "87b0deb8-7a04-4b97-83a7-f79854c53b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07fbb55-010a-4ae3-b513-a17bce82b3a0",
        "cursor": {
          "ref": "36cb2f5e-7df2-4542-93b3-cbece9c4bf0a",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1ecd235d-4851-4dd8-9b37-2a8b9cb1e4a1"
        },
        "item": {
          "id": "f07fbb55-010a-4ae3-b513-a17bce82b3a0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0d5636c2-0956-4f8e-b848-c48b8cfbb3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efbb343-5a39-40df-a480-e1dabf89f335",
        "cursor": {
          "ref": "c1289c21-2927-48fe-a774-80de0d8591e9",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d8ba1a77-d24d-423e-85aa-8be2f4619697"
        },
        "item": {
          "id": "4efbb343-5a39-40df-a480-e1dabf89f335",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b395b93a-ac13-4759-b2b2-9d441043c879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d3be9b-85f0-41ee-a30f-ac92a38d178a",
        "cursor": {
          "ref": "5bc4982f-0270-4b10-b336-3b6d5aee65a5",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "56dfa611-8328-4c67-9d91-178ae18b918c"
        },
        "item": {
          "id": "28d3be9b-85f0-41ee-a30f-ac92a38d178a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "aebaf043-d245-48de-8bcb-d0b3787863c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4318c7-73b1-401a-95fc-78cd1097f817",
        "cursor": {
          "ref": "3c4b9b8a-9aae-4bd9-a494-0847a615789a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cf077c6d-7db2-4026-aaf9-ec560f499c79"
        },
        "item": {
          "id": "8d4318c7-73b1-401a-95fc-78cd1097f817",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "34e6968b-0384-47ea-9e9f-ce043191ec51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23fc3eb-1a6b-4a5f-8123-2d1a1a61f3de",
        "cursor": {
          "ref": "2bc34d0a-256d-41fd-8765-14b2d4665ee7",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d7d5bbed-8790-481f-9dcd-23931755c560"
        },
        "item": {
          "id": "a23fc3eb-1a6b-4a5f-8123-2d1a1a61f3de",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e303e496-d61a-4394-bb33-13f708728c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748d989f-14da-4f2d-a08c-858da74445fd",
        "cursor": {
          "ref": "c26eec68-5b97-49e2-b0b3-a2719a3a353d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2e919040-bc41-4edd-96fe-c934771bf915"
        },
        "item": {
          "id": "748d989f-14da-4f2d-a08c-858da74445fd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d2314e62-2377-4f85-936a-6e2701eb1975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475f1203-698c-46e4-be92-4e1ef546315f",
        "cursor": {
          "ref": "6e877d4c-5c9b-4cf6-8f81-9a72b4fb466e",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "08587e67-14c5-4aff-94c6-c28f051bc6cd"
        },
        "item": {
          "id": "475f1203-698c-46e4-be92-4e1ef546315f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "05d30439-cd5c-40c3-982b-e2bf2be4f8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd42e128-8fd1-4669-abb2-4c7826b66cb4",
        "cursor": {
          "ref": "649654ea-6702-4bcf-a5b2-db662f8f720c",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7785c001-1826-4024-b9f3-1153a1a6c66c"
        },
        "item": {
          "id": "bd42e128-8fd1-4669-abb2-4c7826b66cb4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0400731f-7241-4ff4-875f-5a08fea89ae4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45dc99e7-1503-4f7a-ae6c-d5352ade7a2a",
        "cursor": {
          "ref": "e48a0987-082f-4904-b6d4-799c206ce243",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "aaa95974-4c91-45a4-bba7-a137b8af8a36"
        },
        "item": {
          "id": "45dc99e7-1503-4f7a-ae6c-d5352ade7a2a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2efc33b0-3518-43fc-9132-e4344e5ab27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fdfec4-7d24-409b-afac-ef0a2fdaaa71",
        "cursor": {
          "ref": "7437ed7f-bd02-4a34-9b13-cadd43b5866d",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "299d35f0-9694-4f0a-a364-b41b80dfdab1"
        },
        "item": {
          "id": "99fdfec4-7d24-409b-afac-ef0a2fdaaa71",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "282fa79e-f1f4-4950-86c9-8deed36f84c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f071ac07-a8e8-4a25-bd58-e5359b070552",
        "cursor": {
          "ref": "3e42e440-42d6-46a2-8b94-1901ee398104",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9237857a-6e17-4c72-8412-ac75731e844e"
        },
        "item": {
          "id": "f071ac07-a8e8-4a25-bd58-e5359b070552",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7f19479b-25f6-43ea-8ee4-7eb4cd90579d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a880eb6c-e0f1-476b-8dda-311bd8763f97",
        "cursor": {
          "ref": "8a0bd35e-a50d-4f14-b256-92ed5461a076",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "587a5e05-7528-41be-84f8-e96f19d1bcce"
        },
        "item": {
          "id": "a880eb6c-e0f1-476b-8dda-311bd8763f97",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d812751b-933c-441e-bebe-50874e86ca7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c08b4e-0ab4-4428-ad1a-f40ce0132208",
        "cursor": {
          "ref": "458b62fb-3fb7-40d8-aa0d-bcb323fa3f5a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d4861c39-9a87-4247-9436-f39a79474a4f"
        },
        "item": {
          "id": "e8c08b4e-0ab4-4428-ad1a-f40ce0132208",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0b392318-78f6-4326-9851-3e9edfb544bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75108e27-2db6-428a-89df-597ca11265bd",
        "cursor": {
          "ref": "54104b72-b945-4869-802c-4f8bf13bf410",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3be5d5a1-5ff3-494a-b425-e5464947552d"
        },
        "item": {
          "id": "75108e27-2db6-428a-89df-597ca11265bd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f8ea56bb-6e20-4653-9215-2e15b8754dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75518f5-04e6-43fe-bd25-8a7342a4da04",
        "cursor": {
          "ref": "057ca005-f4a8-4263-9bf8-fee6176000df",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9036e99c-ef78-4392-adc1-3b71a70ac07c"
        },
        "item": {
          "id": "e75518f5-04e6-43fe-bd25-8a7342a4da04",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0ce33084-988e-4917-b19d-8654fc78d349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44810e0-881d-48b5-a7ee-7bc625181441",
        "cursor": {
          "ref": "42244847-3f22-47cd-8e37-7bca7baf8fc4",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "59214467-73e0-47c2-9779-b67540403834"
        },
        "item": {
          "id": "c44810e0-881d-48b5-a7ee-7bc625181441",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e31802eb-82ac-4e47-8dbe-2d5a32518d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7898eea8-22bc-45b3-83ce-58ca42c77c92",
        "cursor": {
          "ref": "f8416693-f88f-4b95-a905-cd80d6940490",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ee35f991-ff09-4672-82e0-7bc91eca83a3"
        },
        "item": {
          "id": "7898eea8-22bc-45b3-83ce-58ca42c77c92",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6c60ed48-1a04-45eb-a182-dd46fd9ee34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c72588-aaff-4b44-8874-c62cd5d5bd57",
        "cursor": {
          "ref": "53f25db6-6d56-4869-bde7-5e9ca483f763",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "62217cd1-ccc4-47f2-b7bc-2d1c3a778baf"
        },
        "item": {
          "id": "e8c72588-aaff-4b44-8874-c62cd5d5bd57",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c9648670-3abe-411e-b9b1-51226b0c4ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a69ec1-65e5-422e-a59a-74cc5634d941",
        "cursor": {
          "ref": "083a1b8d-5919-408f-b90e-e37df1086fa7",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "42c3c436-b8ac-4569-aa85-6f9966f2d790"
        },
        "item": {
          "id": "a0a69ec1-65e5-422e-a59a-74cc5634d941",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8f56a958-eb15-40d0-a82e-be1b0db90ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cab46d-b039-47c0-8fc3-67cbd5cd7238",
        "cursor": {
          "ref": "f1d8e6a0-184c-4643-8ede-e50686d42e9f",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "45244b14-574e-426f-b82f-10a65e6ee61e"
        },
        "item": {
          "id": "36cab46d-b039-47c0-8fc3-67cbd5cd7238",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "87a46477-1621-46be-9526-b98e72fb6b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366d04db-916b-4b01-9531-0b40f5820e68",
        "cursor": {
          "ref": "a86946ae-8606-41a9-b620-e8766300a2ea",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "46c8d23d-2f77-4652-ac04-e78f209379c0"
        },
        "item": {
          "id": "366d04db-916b-4b01-9531-0b40f5820e68",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4fca4b28-7936-48fa-97a4-ded5143867e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8324933-9b44-4d78-a516-843daa8494dd",
        "cursor": {
          "ref": "06f7a847-5c79-4b22-9cc4-c41d5acda446",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c96d8a6b-1208-41d1-8120-505918adf042"
        },
        "item": {
          "id": "a8324933-9b44-4d78-a516-843daa8494dd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "32ccac05-3bbf-460d-895c-664b7a2dc415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c83a306-469c-486e-90f4-2ce0c7747806",
        "cursor": {
          "ref": "042d544e-2571-4929-b170-e9b4842ec24b",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "64450a07-8d26-4486-8375-27ac0dd1d6f0"
        },
        "item": {
          "id": "5c83a306-469c-486e-90f4-2ce0c7747806",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dc123fad-482d-4cdd-9a37-0b1ada9efd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85f003f-9efa-4b8c-916e-50ee62f9706b",
        "cursor": {
          "ref": "70b6107b-a4d3-40c3-86cc-a4a3bfde0f83",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fdf7dd63-49d1-452d-ac1b-c231af37e677"
        },
        "item": {
          "id": "c85f003f-9efa-4b8c-916e-50ee62f9706b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f8fe7293-e17b-4173-af5e-2dce13f5f93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93947ac-390e-4524-a9b9-f69bc4ac62a6",
        "cursor": {
          "ref": "249cb226-1feb-4765-9b9c-2a565045cd53",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "282d32fd-52d1-46d8-aa6d-4b43eb54bbfa"
        },
        "item": {
          "id": "d93947ac-390e-4524-a9b9-f69bc4ac62a6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9eee855a-47c2-4892-a7b1-963cba6f35aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bee518-d053-4183-b455-4ef95402c0e9",
        "cursor": {
          "ref": "0df156cf-5bc7-417c-8cbd-ba3c066a697f",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cdf561da-4348-4dc3-ac3a-8a3d9087e2c6"
        },
        "item": {
          "id": "e5bee518-d053-4183-b455-4ef95402c0e9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "35377598-04ad-43a8-869b-d36d3802f796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32894aa6-27b2-4fee-a247-874a73c122e2",
        "cursor": {
          "ref": "3654766b-f4ff-4f72-ba93-f2b815bce847",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "309f3abf-6a87-46a7-902e-b559746ac43e"
        },
        "item": {
          "id": "32894aa6-27b2-4fee-a247-874a73c122e2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2ad21e9c-c508-4030-83eb-794b70919742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414d9600-a3f0-4779-80ff-d0f16b97525e",
        "cursor": {
          "ref": "5a4c8089-efa4-4d43-9e2d-0445545deeb6",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3a0455f0-d0d1-42e7-8c4f-b2bc7dce2a0b"
        },
        "item": {
          "id": "414d9600-a3f0-4779-80ff-d0f16b97525e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "68e95cc7-9be8-4a11-955b-51e74e3d1117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501c1206-8ffd-4cc3-ac9b-aab2e5a2a395",
        "cursor": {
          "ref": "63f08121-d4ca-4aea-9892-aa99c62f17e2",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "48dc99a5-fb0b-47fa-af84-539c2d011707"
        },
        "item": {
          "id": "501c1206-8ffd-4cc3-ac9b-aab2e5a2a395",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "14d9d577-d5d3-4466-8be1-46a78bba78be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b022bd2c-1bb7-4453-a150-4307cfbc27d4",
        "cursor": {
          "ref": "7cecd19c-5d7f-4ccd-bcfd-485742b170ad",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6bb3d2ae-e419-4a24-98cc-4e7dd8073977"
        },
        "item": {
          "id": "b022bd2c-1bb7-4453-a150-4307cfbc27d4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5181dad7-ba83-434a-9845-2b79b8294a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0d2744-2595-487e-bb41-61e3355742d7",
        "cursor": {
          "ref": "413df841-a3ca-496d-8602-1151c2606cac",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c75b5cbb-8ddc-416c-bbfe-43d65fef67e2"
        },
        "item": {
          "id": "9b0d2744-2595-487e-bb41-61e3355742d7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "27aa33ef-95f6-419f-b92a-65ce5259b534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e04ed2-7569-4832-9e83-7fcd5ecc8123",
        "cursor": {
          "ref": "f51eae40-2b54-47bf-9803-29a8275a3412",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8d0f5303-1b3d-4b8c-81b6-bec9c42487d8"
        },
        "item": {
          "id": "f0e04ed2-7569-4832-9e83-7fcd5ecc8123",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fa5b0156-c717-4db7-b966-36ccfdf18530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31274eef-66a5-457f-8144-85ffc3885340",
        "cursor": {
          "ref": "675141bf-13d7-4ba7-85ec-aefa95298170",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b6bb46a4-5246-4894-9de3-31ed3f5241cb"
        },
        "item": {
          "id": "31274eef-66a5-457f-8144-85ffc3885340",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "68836d38-816c-47dd-bcca-7af13db0e7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bb1280-1e5b-4213-b080-09721fc40443",
        "cursor": {
          "ref": "4d524893-5954-4dc5-855e-5b5d78e5671c",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "24009bea-fdef-4851-8564-4cc14d8218f8"
        },
        "item": {
          "id": "b1bb1280-1e5b-4213-b080-09721fc40443",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9e957158-eb2b-4322-8b03-cdf1e888f375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1e88f6-0340-4934-9b81-9dbb16f886a5",
        "cursor": {
          "ref": "2957e835-09c3-4152-af05-fa00af7170a9",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d9b59de6-cd90-4972-b5e7-ed9ed0189c1a"
        },
        "item": {
          "id": "cc1e88f6-0340-4934-9b81-9dbb16f886a5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "af6d7331-8f73-4bf1-9e14-b3356f7e17a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca1dcac-7e9a-41fd-ba71-911057de1872",
        "cursor": {
          "ref": "6c81d433-5d71-4296-8486-0c482cd647af",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fac06e01-d1d5-48ab-91e7-62847e0cf9f1"
        },
        "item": {
          "id": "4ca1dcac-7e9a-41fd-ba71-911057de1872",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "709c2642-6b3c-4b94-b33b-1de4dcd05f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d82ec6-cf6d-4833-86dd-78776e0b7069",
        "cursor": {
          "ref": "1833106d-7f40-42b4-b099-b6b5f9c7f25d",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "474b32f7-3542-4503-b6df-a1fee6087e5c"
        },
        "item": {
          "id": "b0d82ec6-cf6d-4833-86dd-78776e0b7069",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "961194f9-8ff3-4318-8391-069d570f1187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ee91cf-68f0-40ae-8922-df99219dccfc",
        "cursor": {
          "ref": "6ea605bf-fb55-4c0e-b051-d3450a783a44",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "eb65bc37-51b9-42bc-b3b5-e340daf0cb82"
        },
        "item": {
          "id": "a2ee91cf-68f0-40ae-8922-df99219dccfc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2bbf5a21-676d-4c92-b167-f8861e0412dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa896435-8dcf-4960-9b42-2a73449b7316",
        "cursor": {
          "ref": "dd8465f6-573c-404b-8e75-58a825f62b88",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0741da61-817c-4079-8a04-e764d00253b7"
        },
        "item": {
          "id": "aa896435-8dcf-4960-9b42-2a73449b7316",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "599a220c-15fc-40b1-982c-a50543080464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008c8d28-ced0-440c-88c9-37f96acce16a",
        "cursor": {
          "ref": "34655f0f-0950-4c33-a2ce-936074e0498b",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bf3d490d-d875-4f53-9c5e-eacfef506519"
        },
        "item": {
          "id": "008c8d28-ced0-440c-88c9-37f96acce16a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "afd326ab-555f-4e5a-9722-6e5d98a6a0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47876e7d-33c3-47c8-87b4-3aefe9c1eb6c",
        "cursor": {
          "ref": "0fd48b1c-271f-4d13-bdb7-8629b549f967",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ddaeaa62-753e-487a-a683-19aa0367d3b9"
        },
        "item": {
          "id": "47876e7d-33c3-47c8-87b4-3aefe9c1eb6c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "61618e47-3e60-42fd-945a-8c7dd4aea079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c40ec7-755a-4248-b123-63cbaf307ba4",
        "cursor": {
          "ref": "c7f3c101-47e4-46a2-88c5-87595fbb6151",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c17eccbc-31b7-43a7-870c-a535c4f1e6cf"
        },
        "item": {
          "id": "66c40ec7-755a-4248-b123-63cbaf307ba4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "00cfa67d-dbb1-4858-a13a-1bf16fb8eb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5379c4-3cb6-4fce-9034-fc4e2a849cab",
        "cursor": {
          "ref": "b3ddf4f6-ac47-49ae-a284-b55d3f94e969",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "690ddd80-4a89-4bf8-814c-065e9c2e166d"
        },
        "item": {
          "id": "da5379c4-3cb6-4fce-9034-fc4e2a849cab",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0a31e822-92b9-49f0-ab2c-0eae9588f2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a6f4a4-047c-4130-9700-055d85b5fd44",
        "cursor": {
          "ref": "759af507-0e80-4c8f-8284-20eefece3bb4",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7658d8a2-3934-4b29-9533-fa3448b9a66a"
        },
        "item": {
          "id": "99a6f4a4-047c-4130-9700-055d85b5fd44",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2a4835f9-ad8a-4d00-9bdd-3f60c0373a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02b0243-695f-4bae-89cc-203f14ed89b4",
        "cursor": {
          "ref": "92ab840c-c077-498d-84de-5e4809bbf53f",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "78005b3c-eea3-4a05-923f-c3ea4b10fe57"
        },
        "item": {
          "id": "e02b0243-695f-4bae-89cc-203f14ed89b4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "58d6333f-c7be-4eb3-acf9-96cfbed49351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91611df9-0eaf-40c6-9ed0-aa8201a61e83",
        "cursor": {
          "ref": "c28e2239-486c-4277-8125-5e11d85227fa",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c2b15464-043c-418c-8344-cb88b0a5b3f0"
        },
        "item": {
          "id": "91611df9-0eaf-40c6-9ed0-aa8201a61e83",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8b681931-50fd-43c5-974b-bd954eecae5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360ba40a-8be7-469e-b436-173b289d2ba8",
        "cursor": {
          "ref": "7fb14d68-0f7f-4b53-8f3e-807732040774",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c617b6a5-d600-4d3e-9716-d8840bdd43d6"
        },
        "item": {
          "id": "360ba40a-8be7-469e-b436-173b289d2ba8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fa6b3d6e-77d2-40dc-9275-acb1f5c0bf56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fd9a2a-7f8b-40f4-a71c-5b5c7f8c790e",
        "cursor": {
          "ref": "78d751e7-a666-4a81-9154-e0e3fa2f7cb3",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "256858ad-5ab2-4ffa-b69b-f326081ceeca"
        },
        "item": {
          "id": "50fd9a2a-7f8b-40f4-a71c-5b5c7f8c790e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ea85af53-2e5f-41e3-96b3-0c7d6af29ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f554f3b8-f176-4ca9-9e4b-124631d30702",
        "cursor": {
          "ref": "d9304e7b-96bf-4f4a-8b27-0adc87ba9bcd",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c801d3a3-df7f-4349-abeb-866c398aa2c8"
        },
        "item": {
          "id": "f554f3b8-f176-4ca9-9e4b-124631d30702",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0f58bf29-5867-44a1-a434-a2d66ca70c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcda4c4a-20e1-4ef7-a4ba-fdb4dd8c598c",
        "cursor": {
          "ref": "44dab3a6-5d24-4fcc-b289-d7403f9b1853",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b0accee6-ba9d-49e9-821a-2ba93076e1b0"
        },
        "item": {
          "id": "bcda4c4a-20e1-4ef7-a4ba-fdb4dd8c598c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "638214bb-8ec8-4f35-835e-96e60966e44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78630a9c-90c4-4c69-8877-4a89c143ce16",
        "cursor": {
          "ref": "b24388b4-da14-4830-ae40-1779b93a59d0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a8fe3dd5-458e-41de-9d16-4f7bef1757c0"
        },
        "item": {
          "id": "78630a9c-90c4-4c69-8877-4a89c143ce16",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "350a4fea-64b2-4d65-b9ee-8261e67703f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be360ca-3c70-40b7-ab98-e953852f65b7",
        "cursor": {
          "ref": "65c9eb62-64af-4ec0-9440-21c357441610",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "383d906b-cbcc-4cf7-b979-a8c190f12eca"
        },
        "item": {
          "id": "3be360ca-3c70-40b7-ab98-e953852f65b7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "13377f90-5984-48fe-9ff9-db39ce4b57a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d42616-6ebc-4651-90e0-386c70c0be3a",
        "cursor": {
          "ref": "08cae232-c397-4d95-9770-445f6657e632",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "eaae0dcf-87d5-45e3-b6c3-cb9c27ad4f2b"
        },
        "item": {
          "id": "14d42616-6ebc-4651-90e0-386c70c0be3a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1e682207-50c0-4384-a9d4-8b93dfe5d36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71aede68-176d-42b3-a830-83e85f2ada7f",
        "cursor": {
          "ref": "b7b0c726-ef64-4a80-a13d-dc5ac016236f",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3e49d790-76eb-4904-be7b-2ba795f4820f"
        },
        "item": {
          "id": "71aede68-176d-42b3-a830-83e85f2ada7f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "94852b3c-db2b-4ba5-a86b-9c4c125f394c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799d40da-1dbb-493a-91a5-f27b467e9e0f",
        "cursor": {
          "ref": "f115e56c-4195-4f87-8dcc-a7314d7463ee",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c49784a8-ae52-484e-8cff-eb74511083ea"
        },
        "item": {
          "id": "799d40da-1dbb-493a-91a5-f27b467e9e0f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8c803e6d-7dac-4a20-afeb-cb9bcd079f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab0431b-e98b-47b5-82e9-6b159944e669",
        "cursor": {
          "ref": "d3b17245-5045-42ce-821b-778919aa8a42",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e4ce5477-97b9-4506-a27c-842cf4257de5"
        },
        "item": {
          "id": "fab0431b-e98b-47b5-82e9-6b159944e669",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f6c10e74-ccc6-4fe9-b879-0e872126acd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ede626-cc6a-4094-94db-9378c4a9908f",
        "cursor": {
          "ref": "8b00e0e1-300b-47e3-93cf-8bac58b99df9",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "aa8ad9a5-03ff-4b66-81ab-651662229912"
        },
        "item": {
          "id": "77ede626-cc6a-4094-94db-9378c4a9908f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7b26d820-0c6b-439d-a84c-eaaf0ae90e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438a5095-0757-4264-9ce2-948c53f98d7c",
        "cursor": {
          "ref": "73c4f668-e9db-4330-8fcc-f25d8f2b668e",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bb67e00a-1739-4cfc-98c2-64cef925414c"
        },
        "item": {
          "id": "438a5095-0757-4264-9ce2-948c53f98d7c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2157e7a7-3656-4d96-a9fe-3525504edac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdd9eea-c0df-4a4d-964c-9124519e2725",
        "cursor": {
          "ref": "de332ba5-0f69-4225-b5c3-ba3e0c120b25",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "235f4d73-6dfc-4ad9-b075-35b91ce7bd75"
        },
        "item": {
          "id": "3fdd9eea-c0df-4a4d-964c-9124519e2725",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7c10d5b2-83fd-4893-b36c-55cf5616c42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292fc33e-a878-4892-9339-7da24a4ae93a",
        "cursor": {
          "ref": "743a2046-c4cc-4d89-8a42-7cff6789eedf",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c2740a17-41da-46f0-947f-f1df0072adb9"
        },
        "item": {
          "id": "292fc33e-a878-4892-9339-7da24a4ae93a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3a4d1284-8580-4ae3-a0c5-0ea95e1c0734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc523291-0d48-4c0b-a409-25c912a56183",
        "cursor": {
          "ref": "4cbbb095-7967-4521-832f-a9a28376c4f7",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c5bd7503-2e01-4ff0-af91-dec23138cb38"
        },
        "item": {
          "id": "fc523291-0d48-4c0b-a409-25c912a56183",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fc13d8c1-baee-431e-9cae-9a1d471371ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab3ee6f-096b-4fd5-8fd7-7628a6fc1e5f",
        "cursor": {
          "ref": "cde80133-5005-4c63-8d88-aaee8d908dcd",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "459f9b53-d780-4258-9426-9ebb3d3bd406"
        },
        "item": {
          "id": "9ab3ee6f-096b-4fd5-8fd7-7628a6fc1e5f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f2aaeeb7-3ac4-4af0-b929-1b091a74c3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b5c892-631e-45dd-adae-7b3cb25556d1",
        "cursor": {
          "ref": "82a8b32f-08fd-4ba0-b426-07664920db82",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2b0d7105-f6b4-4b21-8ea8-c4b79e062c62"
        },
        "item": {
          "id": "d9b5c892-631e-45dd-adae-7b3cb25556d1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "60fb30ba-79fb-4826-8feb-d4b0823185d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae22faf-459d-48f6-a900-4533affeb55e",
        "cursor": {
          "ref": "6c513a44-be6b-48af-a6ca-1aaa143b893e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "717ef960-44da-409c-86a0-437b0b54f2c8"
        },
        "item": {
          "id": "4ae22faf-459d-48f6-a900-4533affeb55e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6ddc5815-d84f-42a3-816c-e502ce97914c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124814ab-3652-48c9-a847-1c47fc423f7f",
        "cursor": {
          "ref": "5b2ba10f-8b8d-43c5-ab1d-8378ac335d25",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a7b6aa1a-5d19-4fcc-9e4e-cfbd6a203428"
        },
        "item": {
          "id": "124814ab-3652-48c9-a847-1c47fc423f7f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "57f8dbcf-6230-4d8c-bdf4-d03ba971580a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b734aef-8108-4d2d-896e-1e96df80185b",
        "cursor": {
          "ref": "3c496670-e150-422b-969a-782c20796964",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f653d844-cb88-41a1-b839-ca57bcaba8bf"
        },
        "item": {
          "id": "6b734aef-8108-4d2d-896e-1e96df80185b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "107accc0-97c2-4632-858e-8c275102233b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0d4c84-a0d2-4993-9678-8df70eb7ffee",
        "cursor": {
          "ref": "189c1113-af03-43dd-b9ac-08c4712956c4",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d7648d86-7c9b-4bd8-94fb-dbc2216b2e2b"
        },
        "item": {
          "id": "7d0d4c84-a0d2-4993-9678-8df70eb7ffee",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "433ac471-2b4a-4b6f-ab04-758a4968820e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4e5eb0-e0f8-4f8c-9703-d316df55b846",
        "cursor": {
          "ref": "a51c0fa7-a18c-4269-8081-3b9b50d7732c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "657c82e0-ac97-46e9-8e31-9e96a51ee0aa"
        },
        "item": {
          "id": "dd4e5eb0-e0f8-4f8c-9703-d316df55b846",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0f8c9ee6-7a6c-43f8-8567-1572bf858aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459dc286-a3a3-47b9-ac56-37364d3d71a8",
        "cursor": {
          "ref": "7e7bb11d-bd82-4485-91cc-45ea10563dcf",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8c55db35-3b1c-4128-9dac-aaa655dc2996"
        },
        "item": {
          "id": "459dc286-a3a3-47b9-ac56-37364d3d71a8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8d4ac9d1-652c-426f-9f70-755df7f8c7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1ca67b-99cd-4ce4-b820-8eb0280f7177",
        "cursor": {
          "ref": "b688ea26-8cc3-467c-b652-8477958d38bb",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cb7de043-cecd-4f08-851f-5acac299374c"
        },
        "item": {
          "id": "dd1ca67b-99cd-4ce4-b820-8eb0280f7177",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ab1459a2-5d2a-4f35-b675-d9b4737bca04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30c7bb4-2a4b-4789-bc33-0a5cb45405bf",
        "cursor": {
          "ref": "4c8425bb-3627-4b36-9852-a74714a02a8c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8a200008-14d5-48b0-8355-bd9d5da700c0"
        },
        "item": {
          "id": "e30c7bb4-2a4b-4789-bc33-0a5cb45405bf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "30ff7b6d-eaff-488b-be03-ebfcff035f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf21af9-097c-47cb-8796-9bd5fbe3f733",
        "cursor": {
          "ref": "00d7dbf7-39b3-452b-a4d1-5e238350fd8d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a72c4523-c87f-482f-a071-b58b1e489e65"
        },
        "item": {
          "id": "cbf21af9-097c-47cb-8796-9bd5fbe3f733",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fa08b9c8-c645-4e5a-a83d-1ce3c3c2a504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdc8ed4-7125-4b58-88f0-15d666b07bfe",
        "cursor": {
          "ref": "d18dc1b5-b83b-49c6-aeb5-4550e2432ad0",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "534fcbac-597e-4fcb-82bf-b5a06b32b439"
        },
        "item": {
          "id": "0cdc8ed4-7125-4b58-88f0-15d666b07bfe",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a01466bf-2a48-467b-9e42-fcdaa22c6a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b331dec-1f26-4df4-b506-28d83d13f6a9",
        "cursor": {
          "ref": "7a34dafa-937c-4746-801b-48f350bae86b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c623dd50-c3ef-4471-859e-ec00c9dece0f"
        },
        "item": {
          "id": "6b331dec-1f26-4df4-b506-28d83d13f6a9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cd20b9d4-ed78-4ac2-aeea-edd5133e9bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035791db-d810-4d70-a9c1-3963726d2e6f",
        "cursor": {
          "ref": "8e4f864f-b3ce-4a19-8fe1-6353a9d301b2",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4a842ba7-bff8-43b7-a2a3-4c515f2438ba"
        },
        "item": {
          "id": "035791db-d810-4d70-a9c1-3963726d2e6f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "60fbf820-8d84-4df3-8ba9-48bac22f7a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47d5fe3-7d9c-44e1-8197-42f77db516a4",
        "cursor": {
          "ref": "5307e1af-d0c4-4f64-a4e1-21f93ee3ad14",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "252a4be0-16f9-4dc0-9544-b01380c2874e"
        },
        "item": {
          "id": "d47d5fe3-7d9c-44e1-8197-42f77db516a4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e0c9287a-6c5a-44a0-ad4d-7fb4bbafe852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4af18e-1045-4684-8012-5796e29e076e",
        "cursor": {
          "ref": "9f6c344c-62ac-4772-80c7-cd22c33021c5",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1a997130-4774-49b1-abcc-44363e93fdc5"
        },
        "item": {
          "id": "0e4af18e-1045-4684-8012-5796e29e076e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5ec47ebd-d8a6-4885-9697-f39ca53f72d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e189abfa-4a98-4bef-be36-56c6c9fbf217",
        "cursor": {
          "ref": "c6b9656a-2b12-4c57-9a7a-29d1fc0ab507",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4d1926ff-28f3-4e00-ada6-9ceb0e10a239"
        },
        "item": {
          "id": "e189abfa-4a98-4bef-be36-56c6c9fbf217",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ffbebb58-4484-45de-bb14-5f4efb616c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6543f18-4829-44b8-9598-a9c089151770",
        "cursor": {
          "ref": "a99ffa2f-4759-4a1b-ac03-f64870622250",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e575c0a9-0479-4cb4-8172-1ec711d4efaf"
        },
        "item": {
          "id": "b6543f18-4829-44b8-9598-a9c089151770",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a583fabf-2ee8-47cf-8374-3264d25ea35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4604ef6-113a-49c1-ae83-d86bdaedb444",
        "cursor": {
          "ref": "36cf39bc-c893-4421-bedf-3fc85c197840",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9f87c7e9-98a9-4098-8617-e616c0e679f6"
        },
        "item": {
          "id": "a4604ef6-113a-49c1-ae83-d86bdaedb444",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d7a7f02f-5b38-48b3-8b28-4cff46314dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6497e0de-961f-4ee2-b89c-3f535f63c47f",
        "cursor": {
          "ref": "961b33ce-76cd-4ed1-8ba1-236164890fcd",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0848746b-b653-4918-a85c-7cba8d2ba3bb"
        },
        "item": {
          "id": "6497e0de-961f-4ee2-b89c-3f535f63c47f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9e171190-661f-4cb2-badb-2869b069644b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53046791-be30-46e6-aa45-85ed43c076c3",
        "cursor": {
          "ref": "76ee7405-ea4c-434d-8762-d3a5ed0d29ec",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4b13006e-8519-4d23-ab7b-1a6d64780040"
        },
        "item": {
          "id": "53046791-be30-46e6-aa45-85ed43c076c3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1aba518c-1124-45b6-9028-4c444e3e38f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bee126-8ddc-4a2c-9b7c-d3b5e47510ae",
        "cursor": {
          "ref": "46ce8c0b-fde0-478d-ace1-28574db414d8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3aba69f9-cf25-473c-a4fc-fa5ca8e5c18e"
        },
        "item": {
          "id": "16bee126-8ddc-4a2c-9b7c-d3b5e47510ae",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b110f171-28a3-4d5e-8c6f-49f173a5e381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed84339-a611-4328-872c-904b2edd00d4",
        "cursor": {
          "ref": "6b793de9-dddc-424f-93ce-996ef8453b22",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cb7ceedb-05d7-4b42-b3c2-aa00b26b8032"
        },
        "item": {
          "id": "9ed84339-a611-4328-872c-904b2edd00d4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "695a174b-01f1-48bf-b5d6-13c848b01828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0956bbc-c20d-4f61-b959-358dea291900",
        "cursor": {
          "ref": "100ce187-f493-4469-8b1c-1b8500e0b6ba",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6e36de76-f4ee-4d5b-a754-7e86c724c692"
        },
        "item": {
          "id": "c0956bbc-c20d-4f61-b959-358dea291900",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "097dac99-2d78-45e5-abbf-fec3dcea6760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d490bb24-0bd1-4251-91ba-697881463773",
        "cursor": {
          "ref": "3a5bb3d0-f1bd-4d7b-8993-5b3df9a798e7",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "193e9664-80d1-4a53-b94a-164d286e7f1c"
        },
        "item": {
          "id": "d490bb24-0bd1-4251-91ba-697881463773",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "459be160-bbf1-4777-8fae-4d818e7a5482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10028cfe-e3ca-486b-9430-71e4996c09f9",
        "cursor": {
          "ref": "0c951528-6a64-440f-8482-9a564438d6bf",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "01fb917d-1222-46ae-ab35-e9b2557487f1"
        },
        "item": {
          "id": "10028cfe-e3ca-486b-9430-71e4996c09f9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "13bfbf8e-ff07-4db9-92f6-666f0cd7ca15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389a5ec7-ecaf-4bd2-92f4-3b9be1d2c28c",
        "cursor": {
          "ref": "2d737a2b-e64e-4770-9668-95e70045226a",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "605dd0f5-55e1-4e1d-8998-8f5aa18d9eb5"
        },
        "item": {
          "id": "389a5ec7-ecaf-4bd2-92f4-3b9be1d2c28c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "13dcba87-e09d-49d1-b9a3-6335178abe41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252c2241-50ff-497c-8bc3-c30dd37d76a0",
        "cursor": {
          "ref": "7466f6d8-3d25-4b04-a1dc-14b025c6fe57",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2eeaf39c-29af-4cba-bdfe-948e4ed29343"
        },
        "item": {
          "id": "252c2241-50ff-497c-8bc3-c30dd37d76a0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "72e39018-eb36-4eb0-b7db-c64c4b8c3a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377209f0-775b-41d1-b914-de664c79fc70",
        "cursor": {
          "ref": "3867f757-962f-4b45-b525-f65544b3372f",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e9f72860-6bea-478d-8c04-f53528a1c6ba"
        },
        "item": {
          "id": "377209f0-775b-41d1-b914-de664c79fc70",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c8a603c1-5804-4278-96e0-e2b730c28d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515477b5-dad0-4f4b-91c5-eda5f76ac769",
        "cursor": {
          "ref": "63b9a4c6-bc10-4912-84be-c39a6c47cc5d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "660903a5-64cc-4d8d-a182-056c49be2192"
        },
        "item": {
          "id": "515477b5-dad0-4f4b-91c5-eda5f76ac769",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3410f0bc-5d75-4bcc-a938-19ee079fd601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9fd3d2-6ad3-4bf2-a917-d9a2a8a8373b",
        "cursor": {
          "ref": "eafe5007-e1d6-4b0f-9a7b-8f5a298a6149",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ea448a92-acda-448a-aaec-46b1635d9386"
        },
        "item": {
          "id": "eb9fd3d2-6ad3-4bf2-a917-d9a2a8a8373b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2f626523-9607-4dce-971d-13f23b844d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364d1034-6c96-4d24-8404-844d0e7b83e3",
        "cursor": {
          "ref": "e028bc9a-2116-4f4e-ab88-44bfd8b1bdee",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2cff8a56-e8ee-4fea-8ecb-7db592de0f30"
        },
        "item": {
          "id": "364d1034-6c96-4d24-8404-844d0e7b83e3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a81d68e8-a761-453f-b3c7-740485050eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4b9b63-70b0-47a3-a40d-2d50b7b63f33",
        "cursor": {
          "ref": "5c1db89e-28fc-4ef9-aae2-ec0385782b06",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "59bc133e-50ad-4e87-8c0a-26cc05be46fd"
        },
        "item": {
          "id": "dd4b9b63-70b0-47a3-a40d-2d50b7b63f33",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "25a6799c-85a1-49be-91c6-1e86a6929bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a136982-85fb-43f3-b161-bad4ab5b61d6",
        "cursor": {
          "ref": "249eb806-f7f6-40e0-8b03-c074a591ceed",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9e8bb628-a120-417f-a0be-ddb919b007be"
        },
        "item": {
          "id": "4a136982-85fb-43f3-b161-bad4ab5b61d6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "44a27bcf-4022-42be-abff-6affccc0a66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1f5b70-e8d6-4b2a-9108-eac9b429f8e6",
        "cursor": {
          "ref": "5436b83d-af92-4d27-b3ee-b4059a66f869",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "16897c21-395c-4410-a30f-af56379fb31a"
        },
        "item": {
          "id": "6f1f5b70-e8d6-4b2a-9108-eac9b429f8e6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ec81f578-065b-4971-be22-93e53c5dc124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6eff317-69e0-4bb5-a1f5-346d631f9505",
        "cursor": {
          "ref": "130521f3-f8f4-4533-b919-c131a4e344c9",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "36706b67-d89b-443b-b8ed-b8fd39bc9327"
        },
        "item": {
          "id": "e6eff317-69e0-4bb5-a1f5-346d631f9505",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9bc35d55-2283-4710-82a9-003d87fd0e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c50e29-4c8d-4ac6-9aef-a68443b17a73",
        "cursor": {
          "ref": "312cadf5-9b27-4db3-bb3e-0671c2d56691",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "19c91e9a-a05b-4d31-b8e3-cfa0d28f5315"
        },
        "item": {
          "id": "13c50e29-4c8d-4ac6-9aef-a68443b17a73",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "856f5e72-07ab-48dc-901d-3e767e47037a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a03f34f-bdd8-40c8-b73d-503746dc497c",
        "cursor": {
          "ref": "2baa1451-17a5-47e8-bbe2-f38b950ecc1a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d7277a63-e1dc-4b2b-8849-71180d0c1e77"
        },
        "item": {
          "id": "3a03f34f-bdd8-40c8-b73d-503746dc497c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dc5a3900-ec15-46da-bf17-884f0392e0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e2524f-5ff4-469f-88bd-d0413e16425f",
        "cursor": {
          "ref": "6fd45859-ae69-4505-9c20-e4622a974694",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ec7b7e76-da14-4af3-9942-14e141c7daa3"
        },
        "item": {
          "id": "58e2524f-5ff4-469f-88bd-d0413e16425f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "eaaf69cc-e125-48ab-a3e1-350d93f4bb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb36ab9a-b311-4ede-9bce-3ec189786fbf",
        "cursor": {
          "ref": "32ee3767-e0f4-4606-a696-f3892fa73e2a",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4769ce5e-5346-493a-bd74-62d427eafdfb"
        },
        "item": {
          "id": "bb36ab9a-b311-4ede-9bce-3ec189786fbf",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ca94ccda-d212-4e05-ac16-b757ba1104b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef52f56-b6c7-487e-af5f-5eefcb620997",
        "cursor": {
          "ref": "8b99d17b-d9a4-49df-a255-fead8afbf275",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "42aa99ef-e9fa-45a5-8d63-686dc4544925"
        },
        "item": {
          "id": "6ef52f56-b6c7-487e-af5f-5eefcb620997",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a282a7b0-5c98-459e-a8ba-d05f57167edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d0672c-d676-45c5-8615-e3f3554e27d0",
        "cursor": {
          "ref": "7672ab22-88bc-4156-8553-d858393bc5d3",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1771a66e-ae97-45db-9409-4aff2602f8bd"
        },
        "item": {
          "id": "e2d0672c-d676-45c5-8615-e3f3554e27d0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b551efdf-e99c-4c99-9927-8ef8052cd255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a7a99e-8541-41c7-a572-9b6d4fbea8d6",
        "cursor": {
          "ref": "554957c2-0d66-4313-9530-b13d2d04bd3a",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5289965c-e782-470e-b38e-4411cb2803b3"
        },
        "item": {
          "id": "e4a7a99e-8541-41c7-a572-9b6d4fbea8d6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "570cc442-cfe8-44f8-888b-e0cbe5c1c133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54899c7f-eb48-479e-9de3-fc332da5b677",
        "cursor": {
          "ref": "21585314-72ff-44d0-9133-1d1b0c9c413b",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "83082963-773e-4f08-b3cf-2a0d6ea35e7f"
        },
        "item": {
          "id": "54899c7f-eb48-479e-9de3-fc332da5b677",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "44312733-a62d-4552-a396-fdb94ffbe3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56da9861-6d4d-49a3-be10-8673cc241bd5",
        "cursor": {
          "ref": "b839e1e7-fd06-4451-b9ec-62f5f5c91c6f",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e9ac208e-e286-4ad9-9004-7daeae38b378"
        },
        "item": {
          "id": "56da9861-6d4d-49a3-be10-8673cc241bd5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "add5627b-8877-49fe-a940-cab41e5677bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7755b827-4b5c-4fb3-94b5-7e38fb18d55a",
        "cursor": {
          "ref": "afc5f16c-b7ff-4ab4-a3ff-1c5d2e6fcc0e",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2ecb7051-925b-496a-8f3c-ff2e56b43fb6"
        },
        "item": {
          "id": "7755b827-4b5c-4fb3-94b5-7e38fb18d55a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3d8ab5f9-7b46-47bd-b13d-37bdb9f82f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ed67c7-c4aa-42ec-b0e1-a73aa1f34a6c",
        "cursor": {
          "ref": "5196fecb-daee-41d1-9d08-16a288bce91f",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b9ee2e71-802c-4975-bd6e-b9dd88878ee1"
        },
        "item": {
          "id": "27ed67c7-c4aa-42ec-b0e1-a73aa1f34a6c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "32270ae0-a78e-499a-969f-71d515139bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3750e6d-9c54-4954-ab7d-f8a711848796",
        "cursor": {
          "ref": "e2a2eefe-b83e-4537-a95c-5839583a4fe6",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7d0b73d0-c760-4803-97cb-35afff99d60b"
        },
        "item": {
          "id": "e3750e6d-9c54-4954-ab7d-f8a711848796",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d19fdd14-81ec-4495-bdb3-b2afe7d469bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a586f9-6290-4e1d-88df-f9f989c6d19a",
        "cursor": {
          "ref": "0229e8ab-6d7f-4632-94e8-3e91679824bd",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e8ec1dc8-6098-40ed-afac-4e1078b1dc51"
        },
        "item": {
          "id": "e3a586f9-6290-4e1d-88df-f9f989c6d19a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dbe15448-f423-4807-8991-42cd484562ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed8c1ad-bb38-4578-88df-34250a9f6677",
        "cursor": {
          "ref": "2ff48106-d5e0-44d3-898a-2cf604f8ba22",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5824d497-4bb4-4fcb-84eb-c97269fce071"
        },
        "item": {
          "id": "fed8c1ad-bb38-4578-88df-34250a9f6677",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c6ed71ea-c3db-49ac-8270-9d0bb656bfaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10532cc-6cf0-43ce-9b40-8db2888c044e",
        "cursor": {
          "ref": "e588272d-78b9-4a3b-b6bf-a7a79145f35b",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "eccc8730-106b-452a-8b57-4b75ea0f9f02"
        },
        "item": {
          "id": "c10532cc-6cf0-43ce-9b40-8db2888c044e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "af89efc3-96b3-43c5-a9ca-f75ecb16fcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17c52e5-d6e2-4c57-ae63-31981c2a1e0a",
        "cursor": {
          "ref": "3d76ea57-6745-41da-9abf-afd44d95e676",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "049a9d94-0fc6-480a-84b7-30f6b178b202"
        },
        "item": {
          "id": "f17c52e5-d6e2-4c57-ae63-31981c2a1e0a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "118337bc-590a-4a26-aa9e-dc116e057981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bd7715-77af-45af-8500-da5c5c3f9fcf",
        "cursor": {
          "ref": "fab8837a-624a-4014-b986-504cf61b1404",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f953f7a0-e737-459b-a4f0-92859d67451b"
        },
        "item": {
          "id": "b5bd7715-77af-45af-8500-da5c5c3f9fcf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8895e31f-2cd3-4432-9f3e-6f3fce6be38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf0dc26-93bb-4c44-b8b6-b81fdb934038",
        "cursor": {
          "ref": "fe6ab38b-c461-4020-bfd9-50b1c9363901",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bf708470-48d4-4e11-b193-f83208d5dc88"
        },
        "item": {
          "id": "ecf0dc26-93bb-4c44-b8b6-b81fdb934038",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "141a2f84-b474-43f4-ad44-810efb296e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f920e7-9805-4b4b-9ddb-9552cd4bfbe8",
        "cursor": {
          "ref": "f0b56a1f-1aa2-4ecf-939b-288504326f8c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7f00e92c-a823-498d-990c-fb74e38068a7"
        },
        "item": {
          "id": "e1f920e7-9805-4b4b-9ddb-9552cd4bfbe8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a186ee02-fcce-4a40-9ba8-e0681ca03293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3d2bbe-32bd-40e8-a308-4695fc313b2c",
        "cursor": {
          "ref": "b212db80-4698-4229-910a-1ef9398e228d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8c6992af-8d39-4e23-98c4-5f58e9fceb5f"
        },
        "item": {
          "id": "bb3d2bbe-32bd-40e8-a308-4695fc313b2c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c9ee787b-a10a-4c7f-be43-58c3a1b526f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27f4d39-450f-4070-8836-5d1d2c76de59",
        "cursor": {
          "ref": "df91af3f-256b-41a6-bf86-62bd9d613c62",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "03970fa1-eb08-4832-8cc1-8cd88583afc2"
        },
        "item": {
          "id": "d27f4d39-450f-4070-8836-5d1d2c76de59",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "94f7538d-758c-421c-aefc-f9cef2f0276e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0e129d-8ce4-4865-a5b1-6038e6799fe1",
        "cursor": {
          "ref": "97d0f9a6-df48-4fe3-85f9-6c7d3d7caf36",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "501ac76e-e923-4c41-b79a-55302dcfddda"
        },
        "item": {
          "id": "4c0e129d-8ce4-4865-a5b1-6038e6799fe1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "477fa418-bb58-4599-a27d-61e4e4608806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9402fd0-cc11-4bcb-9722-218070ae04fd",
        "cursor": {
          "ref": "06676a12-f4d5-4288-afd2-220b4d3b320a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0730d73f-7425-489e-bfbe-3569a6414e32"
        },
        "item": {
          "id": "b9402fd0-cc11-4bcb-9722-218070ae04fd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "967b8ae2-714e-4493-8ffc-c512eacbb53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271c6651-0252-475d-abc7-b3839d16dd46",
        "cursor": {
          "ref": "3a99465e-baf9-4466-86cf-f54d3d53525e",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ed728df4-f77e-40fb-8f8b-4fe785764ae9"
        },
        "item": {
          "id": "271c6651-0252-475d-abc7-b3839d16dd46",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "39b6dccb-5cb0-4d22-8e8b-ef25ab37af54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a991c05-4126-4146-9b27-84e29f61b3d1",
        "cursor": {
          "ref": "7011e654-0300-4a6c-8358-c6cd4ac86db4",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "89df4d8a-01f1-41d8-b77f-ed2f929298e5"
        },
        "item": {
          "id": "2a991c05-4126-4146-9b27-84e29f61b3d1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ba84e025-cff7-473d-ab36-73354b8ca4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e0b795-92d2-4497-94cc-b8dda53180e0",
        "cursor": {
          "ref": "3c40cccd-0524-4744-8c67-6d4e51e7532e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9293c74a-a6bd-4042-8d7b-ed2e4ee206bd"
        },
        "item": {
          "id": "e1e0b795-92d2-4497-94cc-b8dda53180e0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d74858d9-23ed-46d6-bd6a-4bf1c54552e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2cc5cd-7023-4cb7-931c-22d6c0947e83",
        "cursor": {
          "ref": "b85f2e90-288d-470d-a84e-ae6bf55da52f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3f5a20f4-4685-4387-bcff-c457b18af252"
        },
        "item": {
          "id": "ca2cc5cd-7023-4cb7-931c-22d6c0947e83",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5799dbff-5bcc-4d7c-a13f-1bcd87648467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85b7356-f41e-496d-a4bc-63d4fd8f9f4d",
        "cursor": {
          "ref": "e1005d32-9592-4d36-b4a9-8b40be4d7616",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "82b01a66-f328-4f90-bb3c-0074fa417480"
        },
        "item": {
          "id": "c85b7356-f41e-496d-a4bc-63d4fd8f9f4d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fd3e728d-e229-42d5-92d9-b20ac948b717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e06a40b-89bb-4497-90bb-943cc41b8888",
        "cursor": {
          "ref": "a8dd7057-d83c-4fa4-b687-94763a2016b4",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9c6f7401-0202-4a00-9d6f-a66af7d437ce"
        },
        "item": {
          "id": "7e06a40b-89bb-4497-90bb-943cc41b8888",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e5f04ac7-4127-4a4d-91a2-58779fb0138c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf6f5f5-876e-40a1-9442-1b60c631a57f",
        "cursor": {
          "ref": "a46767b5-0851-472d-8d00-958b9ca039db",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a9b722a4-e5a1-41b5-bfe7-42ba3aec7d1f"
        },
        "item": {
          "id": "3bf6f5f5-876e-40a1-9442-1b60c631a57f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7e004a65-333a-4927-9687-657a0046cbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39503036-ba1f-455f-b35b-aeb1bdac7a65",
        "cursor": {
          "ref": "038a91ce-83ff-4a43-a308-d31fe5346d68",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ae7f9bbf-6563-482e-a948-65bcde175cc5"
        },
        "item": {
          "id": "39503036-ba1f-455f-b35b-aeb1bdac7a65",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4a5adc15-d6b9-440a-ab34-930f70876e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e02f3e8-41ab-481d-966e-ea7a08ece1b5",
        "cursor": {
          "ref": "0c78ff7f-15f4-4917-81a9-9866ae111152",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1e62d707-7d89-4a89-adb1-0cb501762087"
        },
        "item": {
          "id": "2e02f3e8-41ab-481d-966e-ea7a08ece1b5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2550be9b-bf16-4a0a-9959-c1b40d9493b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead9bb60-7be2-4096-924a-22bde851209e",
        "cursor": {
          "ref": "aac32306-c2d3-4f32-9806-2c68f5c5e249",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8b1962db-d90c-40e4-b1f3-61cb15e655e3"
        },
        "item": {
          "id": "ead9bb60-7be2-4096-924a-22bde851209e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4f8d31e9-f678-4213-b318-0ff7c54b8b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ae96d0-a9c4-4116-9382-88558678a3c1",
        "cursor": {
          "ref": "eb046f6b-2f11-41dc-b944-f483aac9ba30",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "82b35ff1-f720-40ba-bb7f-ce38b365b79d"
        },
        "item": {
          "id": "59ae96d0-a9c4-4116-9382-88558678a3c1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9c6705c4-883b-4fb4-ab2e-5909a5814d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b52e0d-5e1d-43fb-a392-f647a8892f22",
        "cursor": {
          "ref": "818ef418-462a-48cc-aa06-b65b077fa96f",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "03d4f1fe-9628-4c7c-8719-592fb0143905"
        },
        "item": {
          "id": "66b52e0d-5e1d-43fb-a392-f647a8892f22",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "18d7fd10-4da6-48e7-9d9b-807d7928804a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed11a98b-f874-4525-9351-6574ead4ed89",
        "cursor": {
          "ref": "c6219f4b-1764-474e-b38d-0ac597e1dc44",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0eedf2ab-5c52-4728-857f-0bd2a2bc4e37"
        },
        "item": {
          "id": "ed11a98b-f874-4525-9351-6574ead4ed89",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6075ec24-4c1b-43bd-985c-25674ef73a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d862d78b-6783-4a1c-9f5a-630a8b0803bf",
        "cursor": {
          "ref": "d3ddea07-7ea1-4c26-829a-b9eeaa50ba7d",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4e461e89-8c05-42c2-9eff-dc8cc25e8672"
        },
        "item": {
          "id": "d862d78b-6783-4a1c-9f5a-630a8b0803bf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c729e4ca-48da-4789-b4f6-260021781bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badea225-8cf4-4204-9377-a872d54764ee",
        "cursor": {
          "ref": "341b41cf-63c3-482c-9fb4-0ad59ae17f67",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8eec13ac-f1e1-4734-9c35-02d784e9497d"
        },
        "item": {
          "id": "badea225-8cf4-4204-9377-a872d54764ee",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "507ace99-0528-45a8-9da6-3ff393225e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0113e624-6bbf-4baa-914d-ac7609bacf95",
        "cursor": {
          "ref": "60615896-6543-4be9-bd01-6a13d82c05ef",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1d4de073-adf2-4b4d-8899-5113c79f2baa"
        },
        "item": {
          "id": "0113e624-6bbf-4baa-914d-ac7609bacf95",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e424b94c-436c-4ad4-84bb-0c74c3df37f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bc0533-330e-4b08-955c-0a936dd8d907",
        "cursor": {
          "ref": "ff5df7c1-1889-448e-a6ef-caf7408e3590",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "34d56327-954b-4874-93c1-f38cc61fab5e"
        },
        "item": {
          "id": "74bc0533-330e-4b08-955c-0a936dd8d907",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bbb7ac6a-e6e7-4ef2-a608-d38b973bd5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d56242-af36-4ffb-9320-0ebd12a14b3c",
        "cursor": {
          "ref": "39d67eae-f8e5-457c-9c8c-cfdd53fa4f58",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ddfd7ff5-62d4-4d35-a279-f13508c2d155"
        },
        "item": {
          "id": "17d56242-af36-4ffb-9320-0ebd12a14b3c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "77e2b7f9-97ec-467a-93a1-052ce09b0166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8e57f3-2969-4fc4-8e36-58878aca4077",
        "cursor": {
          "ref": "510d68fe-4eda-4ed2-ac5b-67d5ea6c9a8f",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2e1c4335-aa90-451a-8b99-b5937270da0c"
        },
        "item": {
          "id": "bd8e57f3-2969-4fc4-8e36-58878aca4077",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5fdaa2fa-a91d-4b6b-a11c-3f25e249307b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c8e4fb-2ed3-47f6-a00c-44f7222afc12",
        "cursor": {
          "ref": "38da9907-8c08-453a-864f-fa46e193fee3",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "bd348b75-fdee-476f-b6c3-c7663715acff"
        },
        "item": {
          "id": "67c8e4fb-2ed3-47f6-a00c-44f7222afc12",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "137bfab7-c1aa-4808-8c2a-8fe7a95c7eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0152c35e-85d5-4d3c-a230-a25542dd0346",
        "cursor": {
          "ref": "95ca4055-2e47-4eee-885a-830ad795200a",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7e4817d1-6343-4761-a478-5502dbb72611"
        },
        "item": {
          "id": "0152c35e-85d5-4d3c-a230-a25542dd0346",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "77eac877-edcf-462f-9fb1-d2c44d86893b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bacccdb-53f0-4d5e-a5c5-218e68179d2a",
        "cursor": {
          "ref": "ac8b1329-2f9a-45db-8002-32817ebd6fd5",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "411fca1d-ca87-4df5-b77b-cb5409dc18be"
        },
        "item": {
          "id": "4bacccdb-53f0-4d5e-a5c5-218e68179d2a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a16def57-7c65-4f89-b2d1-ae1efe757f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b56e233-85a0-4dd9-ad1f-c3909a63de0e",
        "cursor": {
          "ref": "fb9c5471-783f-4f23-92e1-0e76ed1ae650",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7b8ba904-4b87-4c33-83e3-f7ab6f4104a0"
        },
        "item": {
          "id": "4b56e233-85a0-4dd9-ad1f-c3909a63de0e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4c17a17a-9618-493a-b3b1-39045575bb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc837b4e-6c67-4466-995d-9a8d1d920e2a",
        "cursor": {
          "ref": "790aeff9-3ad4-4c7a-833c-4c539ca49b13",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f2d95e1f-bdf0-4058-b304-df2a3ccb9f50"
        },
        "item": {
          "id": "fc837b4e-6c67-4466-995d-9a8d1d920e2a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7da4011e-e654-4ff6-9df3-fbded47b49a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08667d84-80da-468d-97e0-9fd21796fd11",
        "cursor": {
          "ref": "f3431181-a155-4fc1-9f9e-09395f7cf4db",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ac2d1674-506a-4da7-958e-f41879703522"
        },
        "item": {
          "id": "08667d84-80da-468d-97e0-9fd21796fd11",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4bdd6390-aa95-41fa-8638-323fa6f267f1",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "011388a2-e8f4-4a0f-a27e-80c1cc87b115",
        "cursor": {
          "ref": "812eefec-95c8-46a4-9884-0c5f93515a54",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c28565df-06fa-4e7f-abf4-fa9f937e18ba"
        },
        "item": {
          "id": "011388a2-e8f4-4a0f-a27e-80c1cc87b115",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b2ebb54d-5836-43d4-96e9-e2532fe4abed",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c355e012-bed1-4c5c-bc75-1693be5f9ce7",
        "cursor": {
          "ref": "3aa2094d-f993-47ca-be5d-72f1d6ff36f3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6072616b-6e99-4ab3-8a95-1b5f14295ec1"
        },
        "item": {
          "id": "c355e012-bed1-4c5c-bc75-1693be5f9ce7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0543135c-61ee-4323-b123-14dbe85926c3",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6370c9e-9f8e-4971-ac05-441f1b5388fd",
        "cursor": {
          "ref": "9e3e458a-d0e2-45a5-8c02-a2ce63a66fee",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c845875d-a9ba-4158-9f2d-12a7a79323e0"
        },
        "item": {
          "id": "c6370c9e-9f8e-4971-ac05-441f1b5388fd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eaf1e668-6200-46c5-b74b-dcb8b3cd0b35",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6370c9e-9f8e-4971-ac05-441f1b5388fd",
        "cursor": {
          "ref": "9e3e458a-d0e2-45a5-8c02-a2ce63a66fee",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c845875d-a9ba-4158-9f2d-12a7a79323e0"
        },
        "item": {
          "id": "c6370c9e-9f8e-4971-ac05-441f1b5388fd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eaf1e668-6200-46c5-b74b-dcb8b3cd0b35",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c80f0ef-b3c7-4f7b-b20c-a497e8891b26",
        "cursor": {
          "ref": "29eb545e-3764-4086-8634-79f5cace35e1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "24101ba3-2de5-4779-b8fe-bb9cac33586a"
        },
        "item": {
          "id": "5c80f0ef-b3c7-4f7b-b20c-a497e8891b26",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fefa8524-f251-4855-b659-a77e873b0323",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6573f5-9269-4a34-8c57-1462b9054e16",
        "cursor": {
          "ref": "38582b3c-e9d3-4771-92f9-2b45006554eb",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b506c371-09be-4233-97a4-0ba90fce05ec"
        },
        "item": {
          "id": "8e6573f5-9269-4a34-8c57-1462b9054e16",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "11918d81-05b8-4427-9a78-d932fd65c367",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}