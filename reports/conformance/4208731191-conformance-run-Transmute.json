{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4c6a46cd-d757-498b-acd8-4f4f8d94edbb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7a6d0639-042b-4a1b-bf43-ea352beb1999",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56b0e125-7923-4ae4-82ef-4f978ad6ed88",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cb8da14b-9a3d-40f5-9b7e-b43c3ae90462"
                }
              }
            ]
          },
          {
            "id": "58645184-6e39-4b18-919c-f423fdf33a79",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "937f1032-a6a1-4777-9875-e9a4308e5304",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f05f773d-829b-4592-867e-7290c75e36ba"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "698ceee4-a9b1-4469-b665-1aa37e4f31d1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "69a3d6ec-e522-42f2-9add-c6006868fb3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "595f5bfc-40e3-4f59-85f7-96eb85a6f32e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fc0a49e-312f-45d2-a7a1-99ac8d271789",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86fce81d-a0b6-4f2b-9595-ea017788f749"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a7e9c94-4f3f-4e73-b64d-dfb60416c170",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "569f2416-a081-4329-8814-ecc0aa0a0d42"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8d55375b-7183-41f1-8db7-beef08f46d10",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e1c15db-054f-43d6-8b4e-6e7329b6c1cc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e08840d5-7810-4a37-8709-d26b62466a2c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2da9c1a6-70ef-4223-88db-e1b290b97a74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dadd40eb-2274-4d31-b3d3-bcf348d94246",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cf04b98-b857-433d-bbb3-645c86ad86b1"
            }
          }
        ]
      },
      {
        "id": "c90c284b-4fbc-40d2-a641-87991af39277",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3c115865-9811-4ae7-94db-1b7124090ec2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71fbd2ce-3b1d-4781-8e85-3bccba74bf96",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7755d3e0-1331-4cf1-8cbc-d2fbbe188e6b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257a2059-0f12-4b8d-bbed-805599cfb99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f0aff2b-a80f-4052-8d06-e9205c71fcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feac2ca9-5ac7-4ba7-943b-93d90d386b1e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81249ec0-f653-4789-ab38-a2d60ae519f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee1050ad-e643-4940-a7cc-3fb071254f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab49327-230c-4420-934a-602aa61b5a6b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c871dc9a-38c7-4b53-88f3-53cc17ac0d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0faa8de9-8d84-4599-8ae1-b95efd97d5bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09c5daa1-57d4-4c1c-bb16-48fcdb2f99a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1bad114f-262f-40d1-9df0-9e415c000a14",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8852f1c-e253-4c8f-8433-ece2be8fb0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b2bbe87-fba2-4dda-b171-ebbb256d47bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952feeb3-3910-4e73-837c-03607609b9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391a2206-b8ba-4743-953b-b22519f8a611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8e87a0-7647-4f55-97f8-464727dbf9dc",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66db6faf-1212-412a-a386-e2bdb686860f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6447831a-e223-44d7-a018-1a5d44c24656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6929403-8684-42e7-a454-6123f94fd97c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "8a053075-3fe6-4ad8-ab58-2326099744f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "edda88c8-3e33-48f7-8422-125413640e18",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c9e0042d-7a41-481c-ba41-597e6a8dd0cc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "291d5d8d-24b9-43ef-8fc6-1befaa362f90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1e955534-238d-4a13-b715-d2914a928f00"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "885e79d7-bb1d-448f-a1a3-6d2b0da7a5d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "818efba6-fa0e-437f-a717-90251f38a8dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1f5e5b7-39b3-4bb9-80c8-f3b49f82787f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b03db6d-170a-47c3-91b6-75c3ccd27387"
            }
          }
        ]
      },
      {
        "id": "91cb8a0d-63a4-4537-9f17-932bc70e5cda",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "990e41b3-d1d0-4d66-bf10-54921622985a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30cfb63b-190d-4a0e-8991-d96b9ef07281",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e3091513-4ee5-4280-bb31-edc743f650ca",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc22008-c699-46b2-95a1-d85a31b93be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047356b0-ad6c-4095-92e2-6a1866b45994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460a38e7-ecf0-4ecb-99c1-41f9dcb6bd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56359399-7824-4575-bb2c-07814ca87016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a65f56-098e-4a47-af22-3588804eec91",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf6a986-4573-4ef7-be37-e814b009a563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63eaea16-c585-435d-ac00-f75af95bccab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c21525-f5f8-4433-a06e-d7de1446cb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc2dadfb-8bda-403b-a71c-0e3d0022ec47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af841ffb-8fb3-4016-9494-40cfee4fef6d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e2c27c-31bb-4211-83f9-fc09f73ccf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae02c7e-0559-4b70-9a7d-6373ae5d5ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17043c4f-6054-4af3-888c-fa4a4857955f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a480daed-3c64-41eb-b585-931a7858fb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7c80ac-9a4d-465b-9f0d-d73bcd56932a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a2ed7a-3ada-450e-86fe-b0c32efb3fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac4fa9a-0323-4baf-978f-81e263ec1443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b63ac4-649c-4362-9583-29c3d52e6fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c32d2b02-5359-4d55-939f-0a9aa23a1ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648e168a-af65-471b-ae41-0d461c9aa198",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23199c48-3e1e-4b2d-855d-9e7d870f444b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4bf493c-cf96-4d0e-8b66-a0b0ab319cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313c5401-6fbe-42b5-94c0-0204d99c6515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06f64a5f-93a4-4eab-bc93-caa8874a50a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a35c54-dfc7-47f9-ae70-4cdc95966c18",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76107d4-dcc5-464d-9127-2719d75c138a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc72ea1-1dbf-490e-81f7-7fcd45a5689b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd175b1d-c6d3-4918-8c30-96ee6edca52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dba2d8ba-1675-4649-b3c2-9b91e0383e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95d0dc1-d69f-41c3-9a07-5352292314e9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c2fb9b-74e5-4960-8f30-fb81808fe2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8a6313-06ba-4330-9837-f64f6067e9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b91afe-1bed-4f45-9252-f74ee284fe3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "592498b1-9a66-4873-9595-baa5942785db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10767f37-de22-4ca9-8734-38b75a43e2ad",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de4e1b0-c4a7-4e52-8d75-c7ba6318cc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2dc615-fe39-45d4-96e1-deb32eaf7876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1651ac6-c746-48dc-b74c-5a24d2ab879d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2ad4014-d257-436b-b589-ab5ad3702a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f523150-7960-4127-956b-30e081b1d98f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363991c0-8aff-4993-936e-2d220d782158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3731fead-0153-4bcb-92b2-27605b92c1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeae1926-0012-420a-b0b9-15756c1c0167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1c176e0-2d43-4db9-b7be-1e9111041fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee9a7dc-8ec7-460e-a591-d687c729b99b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786041fd-ead3-4536-a2d6-0ab35ca3a4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85e1cfc-52aa-4972-be0c-807dfba0383a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f4ef54-19eb-4948-a8c8-2e3fa1befda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9de8f3c-f69d-49ee-ab93-48a4fdb351d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb52bdce-17d8-4800-a943-60609e281554",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c071de4-f5ea-4dd4-801a-7af58e0d5c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab2843e-d34f-470e-b54b-87ea9970bde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b58e37c-f410-40ac-a433-fc41f8ea1998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8988688-2cac-4551-b2c0-cd2911f303a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887843b2-e153-43bc-859f-f21f4331e79e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f5a641-6900-4a64-b22c-798fec5c22f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1884496c-9353-4912-a4d7-5c9e42e17e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c2a09c-0761-423d-8d8e-e5ea6395514c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12a3916c-f031-46e8-a7c8-55660eeb4986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1e80d9-a25c-4484-b359-e00a163e9905",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59116303-be32-4663-a0b4-42452a905e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ac7880-1735-4bed-ac59-ba0720245e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91dc9c1-a05b-440c-aa80-2c2e9539627b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08c6d7f7-3caa-4e4a-962f-96e6d314a347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7143e679-0181-47ee-b19b-f67059d25902",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898839d7-d4e8-4046-8dd3-4ce3fdc49bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f548a660-0342-446f-86a7-11319719572c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47917ec-332b-432c-a00f-323ba5155bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d8d062a-29e8-485b-80c8-fe550d5397e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23ade2a-5816-40da-b359-a0d002199a2f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162297cb-32ba-44c3-8a44-3d521b3dcebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af23e21-7676-47b2-89aa-6d40a37c9ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1aa520-0ab8-4f47-8fea-ee9f19e5f451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa1bb721-9c6b-4055-997d-465e4d94ac53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87002d7b-8c83-43e5-9c95-bac336ffffc1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5dce81-98a8-4bd2-ba2a-f957f3c30086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb006d28-ba20-469d-854f-025fa574a874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4330f1e-68bc-4d44-b547-faa726cf0be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "054971f5-5e7b-406d-a228-9341a7b4789d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038aeb59-7b2e-4da8-b906-0434fc9fbff3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b65cc9-33e4-47cb-8f58-6384bd899dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508d66cc-dd24-4a65-80eb-4f800c937c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87af883b-fd80-4717-b035-22bc78634099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05fe6935-4b00-4178-a95c-92458de0904c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d913da6-75ac-4f9c-9b1d-2ece2d01a8a1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45230276-fc86-4ec2-816d-b62c113b3d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114007c5-5e41-410a-b83d-87b6298dd445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a16c47-c1a6-4770-9bea-6e04c10a2c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7215839c-cdc7-48d4-9ca7-d55d2c5c7564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0272d5a7-bf5b-4f16-8240-211abd818a8e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a99e56-6d1b-46f0-8b16-4b6adb618604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0aa67f-d60a-452a-8f4a-f0b4248dfc6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bc1bd2-aea1-42a6-b74f-43c63bfbd3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8733228-9eaf-4ec7-8ae8-f84632a528d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cbff4b-b7be-4e8a-a187-98c7a28a71ef",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311ee384-1986-4eab-ad76-d27f3feb9dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0185d6-2d13-4f70-938b-5e646d546530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55983046-6451-4b27-9679-2e08414369c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24abdf19-aaaa-49e3-b170-6dbfa582f76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b00993b-d66c-44cb-a3ad-c0f2176f85b1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5173de-71d3-4e19-bf62-ef750fc3709f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5536689-c959-4f78-969b-7974dcc6a8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e35b12-96a1-495f-a4cc-9808cba7717c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18fe9323-931a-404d-aed2-05b0d5f83537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15edadf6-50ef-49f2-9730-b24ba6983c71",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be5d2db-8f0b-4339-880f-3f62c82be444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5582164-9992-436b-b64c-dab95dce7e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de75a3d1-b747-4901-b842-da3dbbf3fbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6296dc67-df8f-48e4-8fb5-94552db801ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0d63f3-e5e5-4a08-8a91-51a66df9f325",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780ae343-27c7-4fba-b7a8-bc94a83bea55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163fc6e2-ff87-46dd-a715-61dd391408b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bd5205-af75-4691-bbe8-9528cd3c2699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9c991d-6950-484d-9beb-c3bcd13b87e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3a4e83-64cc-4935-9ac8-ff4f81690101",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612de38a-ce56-482f-b916-7357be0c7d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd038ce-5208-436c-85ea-2ef004df6412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f13d5d-a990-4a0e-bd8e-71e9d7d44560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0beae65-db3d-4c34-98a4-69281ded1657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb48413e-cc99-4a03-940a-9ad55f264af1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8455bb15-ee1f-4143-b3a3-9489714a07c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57869dd6-1dec-4288-bd49-eb4efa0f2bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1192caa-0234-44da-9ba4-1814bcc188e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb30986-68fa-4098-9c64-6022161efcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc97237-9693-4bde-b5b7-40af75559090",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430d7bdb-7526-4e92-a9b7-02b6085eb5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4ccb6d-4e4a-4709-8866-5535ec27598b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2098c6f5-8fac-469d-bafe-31b31919270c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b38c81-1b66-4b14-ac9d-e21ebfe5b227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895d5706-39c8-4937-954d-7d0e48873b3a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007289c7-dda0-4175-bdda-5c1d8fd09f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea24a42-36b2-4c14-98e1-9c62aae7985e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b53c55-3254-47d1-a1db-63958544f8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a154eb68-28b0-4f67-ab82-83d6a1aba944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b374146b-eab1-4de7-97af-cf1018e7b953",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d142ad13-517a-4906-b22f-3c8049649c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae250248-f47f-4f80-82ac-ec7a5a3863b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15af4697-4a21-4bdf-ae8a-299e50a60f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d6800c-42af-41e4-b68d-e29b682a352a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e3e71d-28b7-432b-bbde-a67d3effa059",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990f80e2-7101-4327-9d26-1ed2906b822b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b7a334-ae8f-4e5b-874b-a3e9d885bf61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ee29cb-a953-4776-ab3c-76ab97f375dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "645c4fa4-0e6e-461e-8db2-8f242aeb0876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49d848f-2480-4a3c-8a6b-591001f1de16",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b3c888-cf9b-4e78-8918-c7afb9f3923d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7806147-38a7-4dd4-8967-c42ea08f8686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bbe53c-36b7-44d5-b005-199958495086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "beb44731-86ae-4aa3-bf9b-330d74d25463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2413e755-3fe0-48de-9e3d-8c3e22274869",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b37558-4467-44eb-833e-d43d0692e382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37dad2cb-830a-41ea-a7b7-87e551158723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7afd60b-9449-4573-a773-1c413c5434e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5450f148-d357-4272-92b6-c8901c959331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e44eea-6cfe-4131-aecb-68329c99f7c2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1195ffa8-21d8-4c85-8b11-6aec285d1f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c685e34-f095-4f2d-9943-352252e8f28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddae284-225c-4d25-b47f-3bbc06d837f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d30d692e-2c94-46fe-971c-4b6027d6f756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a164fca2-041e-4398-ba45-2156f60f249d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efee40c-a531-4350-a995-59d2c03fcf52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f548d551-c051-4fb3-8e69-9ece3fce6eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4852c8-5c25-4d96-aee1-09db8c052eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "581c0d9d-1a64-4f00-94f4-49d552a13ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaca080c-dfc3-48fa-ae9e-efd3cc6d5b9b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc88c66-280a-4958-968a-e87a7d62ecb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cada7ff5-fad0-40ff-841e-ffab07436814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12dc68f-8619-4924-b908-fdec3570ebcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b3cb94-de66-44a9-b0f7-e9cb47c0561c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc8feef-c622-433c-9da5-29a6f78764e5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b02bef3-eadf-4901-ad62-0674a2669113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8fe779-1389-48a8-bd99-596490311099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272830d6-0360-45a0-9ca0-b90b28e7be53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f7dbe274-dcf2-4d24-ae33-475e3dddf9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bc256e-c745-4f1f-ab75-50ccfe5998bd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd5078d-0335-42c2-95b2-27ebccb3ae03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53f2bcb1-2f66-45c3-8123-baec8827761c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63140707-3da3-4d49-a93a-c94e2780de54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "523fb594-3edf-40a7-a51b-e37babf36782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d509b6-1a0d-4225-a5e2-d94f04c7c0ba",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350c760c-0a37-465e-a9a5-b334c43f7ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad195d4-e5c2-4e23-acbb-1a3cfd4f28ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d437966-7d76-4d6e-ae71-b67108e7bd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7707a7d4-feef-4ffb-8c6f-b01157891a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ed5fc7-0a9b-4686-a428-89b91106cb0d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a6dd53-1e17-476e-abc3-03222b2c26c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b576c7f6-d48e-42e4-9ac9-1fe94a3098f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5013eefc-e6e7-4f9c-b12b-ed222fcaf451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "868dc819-2f34-4626-b880-95a88868e074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9f1a9d-979e-4a8b-b49b-04200c1c37b9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36a77cc-6b2e-4cd2-bc18-1b4bc976ee2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c400dc-7222-43cb-b049-1350ededfc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecfce21-6e40-4417-9c61-d038f0301b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "15130220-2abb-4f5a-8756-fd0b752a4824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed038f4d-ca08-469f-bd8c-2a37dd1af9c5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560e5fe6-1e6a-424d-8cd7-617fd6ca52b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba412e76-ee90-4f87-9230-a58b29dd0d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f5603d-e6e6-4ad8-a971-c96f8c50b395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9b626c-d2fa-4250-8d6d-91c110d36b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06b639e-b9fd-4097-aa1a-f8060bc8c6af",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2498c481-eba8-4b25-9c1d-6b806ef6669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e555a5cf-1e24-43ed-af48-16fc47701540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cb3f29-9e2e-4e9f-bafc-15fe460543d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e49ee8-a990-4561-8a33-cd8b9ab6e075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532d68db-f006-4616-9bf9-998022123164",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8223f469-35b5-45db-bf31-a906c4190f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560bdcda-0770-4653-87cd-979da79b03f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd8e534-e0e2-427e-8877-aebc3f751bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "725245e5-3a27-48b1-9ef8-8b327427dc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206f5d6a-f163-46b0-bd64-c20421de6100",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8361e01-901c-4e3e-bc70-0acd5506720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ea8005-51ab-4b67-b9f6-bc5d3a6f9924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1827b3b-7891-4081-a398-43bd3f55a39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "764bc83b-adfe-4528-b741-25094fbcf9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14be3b6-7363-498e-8460-9ff344ac692e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6843f293-a0e6-4748-abff-5fa47342e61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ffb6c66-3fcf-4c40-b21d-660234aaeb13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efa8b5e-b9fd-40ea-8cc2-cc024705ec46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "48bf3be5-44b6-4eda-bb2b-b9a63b1f7dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17429e61-9e97-4491-83cd-7616cddab916",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0183e324-001b-4bd5-8517-267ff8cd9989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1bfc56-9cd8-470a-aa49-4b8543e5450e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e8ff0e-0cdc-43aa-b85f-61a060d33451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ee566c-7202-459a-9406-7d80bbf4ce69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71928848-7085-4355-9478-378e6503beb7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0352db8-19e4-4503-aa14-ce6f0e6c55af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e65cb49-5bcf-41a9-87b0-a162e4fd7658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a059cfb7-7758-4690-a434-3f21c36504c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1734a7e-b4e8-4b51-b09f-a282dedd0a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c020b67-dd29-42ea-ae7c-7262cec09d04",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56c52fe-94dc-4fb9-b7f9-a2022f7c6fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb4d6af-a48a-4571-8d6b-da4cbd5348e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf6ea22-7b08-4c73-a97f-dc317b66d685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5fd9894-fd4b-4dba-8f4d-a75aa5dbf066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38be314c-ecf6-4acc-b988-883fad275a25",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266c617c-f3e2-4413-8b86-c529126c7967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef8a1ab-1fa7-42c6-8bda-aa28d8628496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9f57fb-ff92-46e1-b5ba-018472b39746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3c094c-6d34-4e07-836b-76118d01a676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70931f0-b9dc-4335-9fbf-8b5b44b6eb1d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1293353d-99a6-4a86-868c-a0ab0673d41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097b270b-c9d7-4c90-88bc-df87a550a550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5853e053-82fc-46c7-bc71-788d4e551b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de9b863d-0650-4f30-97c2-298915b59115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfd8a44-ac55-4ce5-bd84-732dcfe9d28a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150bb3a2-fc9a-471c-9abf-de0dce8d13fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9031a93-1090-4188-a1da-6f9550e11f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e63292-95f8-452a-b4d9-c28606a0bf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6d63ca-f411-42d9-b44f-96124e0a1f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f10d899-3ee7-4477-9a75-5852aff6dec1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5d2576-6c88-4f67-86f5-f01bcb8323d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1f63fe-04b1-4538-9cfe-21724f2beae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd346d46-007f-4efd-82ea-9dd7fd713d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef1dc9f-d2f6-4f98-96ae-e2349047d265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f0e378-4467-49c4-b641-faa028c52fca",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24deb0f6-761e-4849-8655-667791a37f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee69d958-ab69-4285-9e82-2d1c2aaf5370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7256568-238f-46b3-8546-7165b9ba7a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27765d90-9195-435a-b748-163acb014200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f483ff57-4a94-438b-856f-93e890e485fd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a3547f-a15f-4591-a847-1de07c8ec9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75889b0a-6492-4939-a426-1e0e53518832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71816b1e-bb9c-4a66-be10-69fe63fc7386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0d999d-fbcb-429d-ab1f-b957f5db9ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef8016b-23c8-4a34-92ca-8dd9d37817be",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd29855a-5bda-4756-9f91-880f9c6f1b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e2b881-2714-4bca-bb82-a52b8cedb83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d58aa27-902b-44df-bbd2-48762de7d2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf1b002-5229-4eb1-a302-799efc82604a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ad2575-148b-4743-b15e-4e1ba7093cf5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cac0071-83e5-4edd-8ba3-7eca51db66f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ed66f7-9921-4e9a-985b-42e0fd659bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcce56e5-c2ce-40b2-ae99-5de5c039ef19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f62b386d-db00-4b26-9e87-3f2cc63ebec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0e5d01-934f-4cf7-81da-3d2694d809cb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1644c66-b49a-4414-a154-6e684825f574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc13b6a-150c-4af1-978f-0e32a08ae7eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9002268-f008-4f66-86a2-d76e4cfa1d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "44ebf739-813c-4714-afc8-4c6cb125da4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48242023-01c9-40a5-ac2a-736e1b8990d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d978666-a4ca-47c8-ae63-b07a99c5d601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddde426c-c213-47c4-bbfd-5da2f18ce7e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa54e4d-1de0-45af-a472-440e601e6716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "be020194-1bf1-4f3d-8927-261ac403e675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dac7cd8-0d52-4d72-9f15-52c8a27dc52e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abeaefd-334c-48dd-907b-7e75e07b9bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a38865-5a44-4ab7-9ca2-536a0f9d5a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff4ff3d-6f3a-4d25-8648-8cfa338173b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "425a2193-8116-4152-9865-6e17a8257ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9a77dc-81c3-421d-9246-d19fb96947ee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b165d1d-09c6-4378-87fd-19609ddd49c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4493cfc-fb36-49b5-ae30-8e4e5aaa6dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf6a207-f983-4260-b24b-4f45639a436e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d71ec689-233e-49ae-973c-2080c1020386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a66275-750a-4b21-a905-292808fb16f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de833b99-6690-4afb-9405-c42659390d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c679a67-747d-4db4-8495-53f9933cd5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ecb2d2-859b-4d08-9e41-e8c8f6fa9951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1507626f-7b4a-49f4-8a4b-e482013a18e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452203fb-8c63-479b-bf81-43f03bd5c75e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d91c63f-39ca-4076-b89d-53bbe67fa6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4065d0b1-ded5-401c-97b4-20efaf5f1747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4329fba8-3eed-4c36-86d8-1cdc6b595acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b956f373-8898-4463-a11f-78d7b30d7cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2625dc-4a48-4f36-ae49-9c6ebee4aadc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0294646-e30a-4b8d-bd44-981a3469963c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c496503-18fd-46a9-8241-bff1b3831573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299b94d6-0e35-4723-94c0-5af3c9289414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7577e850-1284-4386-867a-e8270c084136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5485a0d9-9e17-43bb-b08c-d4738e1bdb5d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c693794-9871-421b-9fa4-35d194e75091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee00773-a5f2-42da-bdb3-5903f6f95f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa97622-5125-437d-852a-62447469eac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f8fffb-62c8-46cf-816a-2bc96a933926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15283a5a-16e7-4a8d-8e98-46a7baf46f6d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34938ed-97eb-4b5f-aaf6-371c5223ba1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fd7c34-7ceb-4884-9036-1f821c92deba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5e2e05-fb8b-4fb6-bbef-6543d8430546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca791059-9b4b-42c3-aeb4-c59fbb5e7432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc654011-f920-46cd-9cc7-a032c656e175",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296a6c10-66ce-4c86-9c10-e1822fb98bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac12404f-6b8d-4dad-b574-4efab36b4fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cb4615-5d11-4468-b83f-5257429d7482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "caae4154-24b5-42ed-9010-c8836915ff2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3bb84c-2370-4d11-b15b-48f5d085aec6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0defb0-e267-467a-9433-bc4d2e489ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb796b7-3825-48c7-894a-67182a8f31c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00814085-8955-40b4-a9dc-1abe4e85f5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49010923-4f53-4d3d-9c74-5c0faa374603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115e0e25-70df-49cc-a379-1ab66b070dbc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97551e3-c55b-4a88-b0f3-32bd32fc660c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f1bfc2-1bbb-4b87-bc27-2394d650f0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af94889-8aa7-4b62-87aa-c192fd7cfcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8c16df-77d4-4ad5-b161-09d4e4e2d9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6440c24-3d1e-4026-a3a3-0a69e85fdf8c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58d2d41-f48b-4790-a84e-4c9612538e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a553c0-6a92-4860-a4a3-ef7d39b8d2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87da2ef1-3a14-4ef7-9861-04db91d2d4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc5a455-7202-4241-b01c-6387c2bd656b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0ff180-cd41-4bf8-91e7-2854914bb9f6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2de48fb-7bfa-40dc-845a-24172fa64806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6772daf4-1477-4e3e-81b8-9631593964f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eb9c7a-bb28-419d-ac99-e92c64f7f138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "61447424-4f88-40d5-bdac-bae5b1aa38b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c803933f-f708-4608-81f4-67b4ed4ebd85",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e3684a-6170-48bc-a793-fd5de6183abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51da74e-9646-4488-bdad-234aaea42422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf9a584-5a33-40eb-8874-c5cf30a3d3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "201a67b2-8b89-403f-88a2-1907d6df208c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4526e53-eaae-4d93-b3f1-d22f6c9931b5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7eae8c-fc99-4c45-9af1-d6c72e166fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394951b4-f52f-4649-aa38-7f6b9360065e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbbe56e-dd5f-4362-9e9f-ed3564670696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f88dc235-fefc-46f0-ad48-133e3f0c4335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef5a59d-0286-4f16-a7d1-16ad659c7a70",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaa1b1d-f862-4ccf-9318-8b6ddb9e865e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d27a0d-ae4e-48ca-a277-facdd1a0e398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4764895b-1a72-4964-9cb9-a7faf29cf221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abfc7268-3648-42b0-85ea-3cf1a3880f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d90b64-a83f-4209-995e-94e0e5bd6e8b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf26c32-38b6-4a39-8259-eae74cad8070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0710af-944a-4736-806e-79c2884460bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab574692-97eb-4f78-93a7-5e3033edb297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b10f18-dcb0-4352-9c94-abf8a09ba9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef60c7e2-60b8-43b1-82e0-c926cfb14237",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aa6087-ed14-49d4-adda-00643c5a1a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3ab73f-618a-42b3-b758-ede00d2b5ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac7420b-1f84-4b93-b6fb-da42a0eaa530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0266c89-d32a-4bde-ad86-d3287d7f3530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df19628-3d8d-4469-930d-6cf85c20d35e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389bcc4e-6d02-4e61-a5b4-1e288897e63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc742aa6-a9bd-40a4-b519-d3ff0c188223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1012ddba-9f8f-4a01-b1ee-5d14b6d8f1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "acd1bb1c-a052-434f-b34d-56f8a6b96695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235a700d-4c4f-4b81-a8d2-316101f87d08",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa773599-7d56-4984-bac6-3c459168bb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df8042c-9433-48ce-881c-5087fc60eb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8218b2-9a0c-4783-96af-af23a75288f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88caf26a-5a4b-46d2-80b1-90702bb1a44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72da661-ce60-4fd9-8f40-a45427c5468e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614b038f-785a-4df8-aac5-d201a9ab0548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3642a3ff-f064-481b-819d-0d37762bd520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dd1feb-f0d9-4563-bbf6-0da092f69ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbc4b90-fd29-41ab-a4aa-e92711521fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a22004-cbc5-4ffb-b6a8-d339b1672903",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66af006b-0e0e-4dc6-b83a-5e99120117e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b14d26-b15b-4928-97be-6df5ea44ab3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b83c82-e73d-4462-bd38-56131988ef34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f30dd3e-4ae0-4a3a-978e-346e541be347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14af0bd4-4f3f-4a6a-8f98-c0dba290b065",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14b5d52-fc1d-47f3-b2c6-864e37c73df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fab8e8-7339-4092-810f-708a77cbf3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442a2351-3e73-4a87-9210-7c47a8e62868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "796d8f2d-94e0-4c9b-8c88-48585cb1c1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f42980e-c921-4a15-8f99-dd99ee497287",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4e712a-16b2-4035-a8f7-81dc94fdb887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e6c977-5b38-422d-bd60-c98856556cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe427e4-628a-4a88-b3b5-12ed179eaff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02304a32-7f06-4265-a9c0-e81387841202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29d1383-b305-41c0-a0f8-0bf593f4970f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655a20bc-baf0-43b7-8941-c0be524cdfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d57fd1-35e6-4563-bcad-9c6fc44d96db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88775a2a-c36c-4d38-a8b3-d2f90a2bf9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "df0a047a-66c3-43cb-af14-3b265665ff45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4671a6b9-49a1-4acd-8b3d-5c0510ba44f0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae719b4-95cc-42db-92b2-a041563cd826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b86e5f8-75fb-462a-a518-3a447a639880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c17693-441d-461c-8228-07ad6a8707ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8230db1-cb29-41e7-8b18-ef59ab770167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c368e6-eff8-4987-b4a4-d7389dd31e40",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e4d6d0-a0e1-4cac-bfd9-5bf99e60a694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac35e04-d645-4b36-9839-3ea45365eb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345a27f3-3ec9-415c-bb55-04ee6f179abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dda1cfa-1472-4ec4-b32b-040d42162c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d3e980-39bd-4aa9-ba99-366ae027604e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eeeed7f-fcad-4db5-8d54-5e0977c2652b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7262fe2a-e162-434f-8f97-df781c7b816c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7ed064-21d4-451e-9851-3e85724256ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9fa779c-e31d-4033-bf95-2e71b9c063d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c35a0e-f7e8-46ff-8fb3-c98e45354fd2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474fc520-0c2c-44f4-8326-c4a1ac1f1c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0bfba8-3d4e-4f94-a274-abe110378014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ad47f7-c642-4bbd-af6d-06b196852c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9eff7b3-04c7-4164-9d51-1cdd6bb690f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909ee2b3-ea9e-4ceb-a90b-3023d9febf2e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbf570e-393f-4615-8ba3-2f0e3f0b03f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8319aa62-623f-475d-b0af-f86147fec9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67e0357-1559-42f3-aa6c-6eea73c4e6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7387e998-f86d-4a9a-a9c5-52ec317ac663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e727090-6a04-443a-83b3-6982c5748b17",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8332b4c-021a-4bfe-b76c-47e7009afff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa636136-96c4-492e-b59b-3534e3525052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ab2a52-a73c-41ec-aca6-49461fff55e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1dcdfa8-f781-4a17-a0a8-6dc2c6ef9438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a57563-c8ac-4131-8ffb-b19897baacfa",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337e7d72-6c1e-4702-9153-77b9f87e86bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94bfe45-06f5-4b5e-9956-d8ada443be82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4fcfe4-fa36-4266-a58b-8759ced11cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd6c7d2-727c-4274-a74c-5eb44805d5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b79e554-2362-4a8b-96d6-0d2f8b0b19b1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbb4230-a927-4ecb-9abc-21e89ba15ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e28825b-1f2d-4efb-a3cb-82ef3532330b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559ee494-c6ba-447f-b579-f4335c723e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "758b471a-c762-441a-b72e-f484c4f8efbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c9a85a-a7c8-4387-b06d-d95d9ee895cf",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea03cc1-2887-4fdd-a95d-ab24d3a735b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7eae31-f4c8-4766-a8e7-8c711f83be4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c16388-a4ba-4a08-a496-8ce3cc2021c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ed0631-7b49-4938-8125-c864e9fd135f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7962ab36-9a18-409d-9b8f-cd13af8456da",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd3a690-604b-4356-af7c-9292336e1b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e698145-9581-4ac3-a47d-c1e3bd323c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd769f6b-69b3-41cd-8ab3-0eda98717b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "757efe1c-4406-4fdb-9e56-f8727cd42eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68ea93b-51cf-4292-9707-59095650d52a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff0e8c1-3bb5-44f9-ad2d-81beb3bcdf8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5dfec4a0-cb21-4fba-a427-55a5bc0d50a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6ca2af-6215-4fb5-a994-320a907a9b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3eb3437-bb3b-4b7c-8dd0-0943b84cb01c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5701d87c-3a8d-4515-9979-59ab9103bbcf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "258d98d5-8364-4d4b-8771-0faa2c19565c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce62d26-f321-46db-b90f-1f401349065b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47f4a48d-0575-44d3-b1d8-2aee126691d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dc9a39-bdc5-48ca-bdd8-2096b4a896f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "8a0e2a9a-67b8-4604-8cb8-2316184e5f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d471bde-239c-4164-8ef7-f2069c01ee81",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e341da4d-64d6-4092-a778-aa5bcd298fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f1d32e2-f606-4b7a-bd6b-7065b8577599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38ded21-2a32-40a5-a463-fc513c824def",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "c8737cfe-4122-4915-9ee3-541cdf7dc3e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d6fe3d4-38fe-4042-b9ca-278523208667",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec6148b5-b6a3-4343-8c0e-e83c7a90c5eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60dd27ad-dc13-4270-9d50-bb9c01cd10c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ce3d1e5-bec9-4648-aa38-db56958e8500"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0db58e0-b6af-42e7-a6be-45a27650a84f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74904474-fa78-4df3-92b0-a214570a57ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e3538a3a-4978-47ec-90e9-4d0a2344ef81",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb311869-d063-49b3-a39b-20d6fc7bf1a0"
                }
              }
            ]
          },
          {
            "id": "8049a558-2ac3-4d46-8e9c-b21894dbe80f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed4054da-b77d-4a02-adc8-6c1e0abc068d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f2cba2a-f968-4cce-bb89-90ca34bbcab1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8974a7c-3849-4e18-a7da-d78c702fe895"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9668b980-1f1e-4817-8fdb-c15037805ba5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1b7033fd-6219-4839-a725-b0628ae135a3"
                    }
                  }
                ]
              },
              {
                "id": "ce13c306-902e-46b5-b593-68cf407f7fee",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e093b145-edaf-46bd-8450-eb2394be0217",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "214e4e1c-20fb-40d0-b8b7-9863d761cbc0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f1f5752-1df5-4c3c-ba81-f3ff5a5f5c54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f73fef3b-d45d-4726-96f9-2dccde19e067"
                    }
                  }
                ]
              },
              {
                "id": "42cdeef2-588b-45c0-96e2-246ee0517cc3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21bbfa6b-3588-42a0-bbbe-695c17623a10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "422aaaed-0f3f-4b23-b851-334639428599"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c4ca0a3-77f4-43ee-835a-d5e4afece6ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9770a7d4-f038-411c-8c94-010c7702fe37"
                    }
                  }
                ]
              },
              {
                "id": "728f2391-74df-4998-8d30-425edd095baf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da5209f2-5bdc-4691-af5c-c4a47545f22e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10a961b3-07ba-415c-bfae-f1989ea81818"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b86eb6fd-932e-42f7-ad3a-053b54f38e5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cdbf69c2-abb2-4849-b4e3-2b864f2c3e81"
                    }
                  }
                ]
              },
              {
                "id": "2f2740cb-32df-4c00-ac7a-6d0df80d421b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9f600fc-be8a-4224-be20-9e28f49f82c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a9a3f71-c06b-4a8a-9148-75c1cab92411"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54ddf1ac-5db9-491e-8207-5917c4e70dbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ae3c929e-0198-42dc-99f3-775af000ce8a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e3014802-75d4-43a1-8e2c-424eaf4d26f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50bed25c-c2f2-41f3-803d-b721daf158de"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "269da9e4-9458-425e-997f-197f450ba51a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24f2fbd5-58dc-4390-9209-106776809dad"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e32d6bf9-760e-4186-9a92-85f0f1725281",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a90cd109-652e-4399-88eb-43e645212323"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6364dd67-0ff8-46e9-8c1e-680ef67b8e7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83853f55-b7f8-42ec-b41e-529c4adefe79"
            }
          }
        ]
      },
      {
        "id": "34d3ad81-c3d9-43cd-b9e9-840934f76588",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d3178fa3-d5fe-4606-aa53-d90016a8bc58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e0a3520-a9e5-43e3-b3b5-2f77fb3f20b3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "178dabd2-53dd-4609-b89e-31c48c06e518",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04099fa-2e9f-4140-a1fe-a16ba7ae8f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7988035d-8179-432c-8f59-b4250338d7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a38e4de-db68-4506-865d-d201c4636dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b92226c3-c3bc-462a-adea-76ec180e3372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbee8db-4343-412a-9bc8-0228dc26cd08",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b373d433-0129-483d-b813-b73070f62020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fc1b62-a595-4154-88f6-75b88f22ee75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b15c904-bdf5-402a-9858-46648f6548b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95b8026c-5377-4ef3-a570-5bfe8f517e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cb4c7b-6069-46ec-b70f-4c390bed194e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b13f309-c4e0-4713-8741-b82caa7d76d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b0b209-b773-48e3-aa9f-8e7b5d0a1163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94991914-85fc-467d-a51f-9547b4f9a361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d17def9b-d089-4b8b-80da-8ccbeaf1be2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cad9ae-bb3a-4e19-88fa-d5150d86df07",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ace66a-68b3-427d-b703-397432034985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a65d27-4eb0-4271-b655-242664f6c563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adce7466-5331-44cf-9fbd-3135e7c3b20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be39292-cb8e-4253-b1a2-ee489e5a1c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d615e6-8108-4481-aede-960cb28116e3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2bd072-3fed-4720-8fbc-c1e4d1742357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a938c6-a163-4034-af52-052eb2f9d1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7769a211-0cd0-434b-9377-9204f1e7dafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c5e1d3-fc15-45f5-ad85-ca14232c92d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9260b18-0986-4255-a91f-bbb64c238b1c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0436a4-86db-4cb0-b2a1-e113f3b2a470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9191d9f-2abe-44b7-a22a-090d3d95fcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e363b2-29f6-4217-bd1b-496cf1112566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91fd7968-1fc8-4471-a0b7-a32af7368654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7732ae-b031-42ef-a9b6-ad5a033a1ec3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f6abbf-09a7-4534-ac5a-0df5599de3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbbaf88-411c-43cd-adc6-f876792066cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ec4945-7d70-421b-8501-cb2340b25f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3aa24b-86b2-40f9-8f1c-13cf2086e6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3884cca7-5dd8-4a17-a61d-1cf955c1dfb4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b331dd7b-22e3-4d1e-973c-238bafff9c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02b2c8c-288a-4f23-8dec-4c8203b344b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df68363-8a16-413f-8516-022460028bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddf8e4b-2bd8-48ca-a680-a24f88a803e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c59092-e2d5-4237-a24b-7af6f759ea70",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba82f4b-b0e3-49fb-b5da-3a4b9ab97041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6638b850-f5c9-4bbc-9760-d6cf6f666576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c04a7f5-7ce6-4002-9d3c-d12e5e26b518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74e279c9-d88e-4979-86ef-63729ff4f305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cb5d17-b337-4560-a4ef-8cd1d9fcbaa8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1e1e53-116e-47b5-966a-1c2287131ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e494e648-7309-4a84-85c0-0ab22e6f5149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abef8bf8-d3be-43d1-b9b5-00ab6916bfdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b2a161-cbfb-408b-966c-68e448d3df01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c9c965-2651-44be-b447-9b0a7e8d996c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7dc04b-1725-47e6-a3fc-4ee45f2b37a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2cc3db-42c8-490d-9964-8b26dea31ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d53d694-4ee5-4beb-924b-b588623cae42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a8346a26-bc86-41f3-b7df-a503be0af980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0412d35e-34ae-4a5e-b1b5-9c94f14e8a6c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d5d89a-e25f-41d6-8abf-cc86aea2a8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6c6279-73f5-466a-a0e6-8e3f20ff88e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627374f5-9f97-4314-aba8-9fd85fd20967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e428cf18-b203-43c7-9572-77c23b102ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c44ddc8-2a5e-4f81-8643-6c6dd7c520a3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51a18a9-0a27-433c-8779-430b43f001c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da98bb0-0577-401d-b66e-ed435eb12767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fe5d22-2462-4cf5-92ba-98225614d942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "652074d1-9390-41e0-be02-dcf336f6852a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2b4ebf-624a-4253-9682-1eda69ab34d6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da468c4b-5e12-4cf5-98ed-3d8eb2d17792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac230f7-55bc-4650-9fa4-a42e37d62485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b69e05-3ced-42ec-aa57-0574ed9aa3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa18da42-247e-4c46-80af-2b2deeb77ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b3b1c5-9f63-4955-b154-f9eb436b7289",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039cc379-7419-40cb-a4b8-2bb1e9e64e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425d91d5-3776-453f-804f-ca2b0cc6a57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d8bacf-8037-4ed3-bf01-4deb7de40ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f63911-eb51-46c2-a1ef-f6493bbe3d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982541ef-9e15-4ba9-8c06-30d60d9fe61f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6480f72c-6a09-4682-9d7c-a8fba9852658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b831039b-1e8a-4ae5-b03f-6de87a219938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db52356a-904b-4217-952b-10b79135c31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "be9d6811-e562-4d6f-800c-28ce929833f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3feead-5157-4032-992d-9e915972a06b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96eca2d7-23f8-4527-bd34-4778c68851ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5508459-8bf4-4b45-9283-5c707195a97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66477d1-2d64-4173-ba57-d37a424f0b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1de90408-d156-4e7f-b570-b34fdcff750a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89993b66-deac-41cf-938c-869ee64b5efd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341efda1-ee08-480c-9878-6eee113f1a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b50b1e0-8856-4ea5-9ea3-05f605e496e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c171e379-78a9-42c6-a7d1-da1d935507ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "866d797a-2996-4c8f-bcdc-e914c05b0574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77bd9e2-a7c0-43a0-a561-f29bcd18fff4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa256a92-a514-461a-87fc-6817cbc58019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f460e0-772c-4401-82f9-726af7166a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2834845d-02ef-4f29-81e1-ec68d38c23f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ceca58-a57c-4953-a4fd-17489e79abe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00150dc3-1d74-42f0-a5c0-e9e2ca00320c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec85461-f313-4758-a24a-ab0401b45846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c0514f-f3ce-4624-a7ad-5c8ad9fe3e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4840081-570d-4534-b6ec-d2c4205ae9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8feddd07-d14c-423c-b2cc-37684ac772c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4a54a5-c095-4c59-b396-6f8f899ca170",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f787089-80f4-4aa4-ab16-9e257891083c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d02cb2d-52ff-4097-978b-be546facf1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ecb928-c8ac-4a2c-a973-de1b8f72fc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f902c1c-07b8-4bbc-93fb-c85a92d0343f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58871171-bf81-4af2-9b53-b75bf6fd3f55",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964aa039-f264-4aa3-9ff4-262a27feac6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccc5225-b5ba-47ca-b727-d332b8b9642b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485eaf76-f89b-4b9b-a412-1875b90f96a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d50d565-2be0-423a-8ee4-94820bed2dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a936f3c-1035-48d4-b58d-3cf67b1a93ef",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df064490-4807-4f93-8141-930bcb98f220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1dd5f20-82c4-4107-8e21-76f128666935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fa656b-b366-4459-b06f-167cb42ff1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99e9c8f9-45e9-4fb2-a94a-2e288876cbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6ac7ef-2fec-44a8-98e1-1b8df7c91e28",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f85f03d-f9da-4c41-9b61-11cdbc973db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2d56bd-1a35-4db9-a1d5-cc5c0d7aceed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcbaef2-e7ed-4463-9a01-e3a2fc295e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c71f749b-65d7-4748-a516-a71f7bbf310a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3fd006-7c12-45f7-b5a4-750009263a4b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ab8be2-ba3b-4db1-ab0f-644861c78270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0670f8a-b4e2-407a-b872-b7db39ff0bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ded377-1d04-4a5a-93b4-4d5e810f5100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85796767-4470-4203-aa13-5a5cbcdb7bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fcb30e-d54c-4990-93de-9d196efbc6b0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ecb8b9-a815-4ff0-924c-a93a1dc4c0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91b2413-dad5-4f51-92ac-4f0a17862ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259a6c71-ecc6-4160-953c-32662e19ff16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58888ad0-6874-4f59-bff9-52e4d90ac020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6f7a62-1079-46bf-8d7b-3cbbaa5c3cc1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc487be7-9773-4491-bf9a-bf80eab23f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82d526b-8e68-4e04-b2f3-ecc594e21528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406d0fa0-53b8-4fd3-8f57-a1fa0a8648b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "720bda7d-271e-4509-8a0f-a17776719e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a3f833-c59d-4e79-beb8-b89299e91a77",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46aaf11e-65ec-4436-8bd6-941b2bb816fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d683f969-c565-4bd0-9741-8e5946fe6c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a94dccb-f6ec-4bde-b15e-9c0993d72216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d046492-7b08-47b4-87ef-19dc67523367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a311146-a291-453f-8871-e2437829fde3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31defbf-bbdf-4976-b197-41282b7c6391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b11eb1-3e6c-4d78-b647-4e2a9641a12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e517af-efdf-4e7e-b40f-79f0412c631b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3876afb6-e5e6-4e20-b07a-1c575adc9900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc65cc9-fa59-46fd-966d-82012727f030",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f858ed-5657-4df0-9ac3-934c967fedab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524fcfa7-44ea-4452-b4ec-59ea6dfa8890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0646806a-63d5-452d-9b58-f3ab68b23475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7cd2ac-90bd-40c0-9de3-1c08cdf29cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7835c46-07b6-4fee-bf99-20b1ff744f46",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef45ed3c-cf3b-4b38-aed9-3eb95cf3a924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1961593-621d-4ccd-997f-be59e27172c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97076a5-9d48-45ac-a1d1-74cdce14df48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f207c6e-e7e5-4b73-9412-71f2ff058189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40de0206-11ee-4560-85eb-1fa6a8992924",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62910c0-5dd2-40fb-acf7-027968de5f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300dd3c5-939d-4877-a66e-feeca9ba9913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb3331f-8a8b-4141-896a-99c3fcfbeb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30c0deb1-5a56-4759-a41c-057a1f4af761"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc7f437e-ba08-49c7-a4b5-4cbc02893de4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9da2a5b7-6379-4dd1-929b-62a425f5b8fd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7befe37-d7ca-4068-8371-a521c4b08f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9187280d-2e6c-4638-bac9-21f000202414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d151ec-1510-41a9-bea6-eb17f827c6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df185db2-694b-4e0e-a057-22cb4b2f1874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6674554-878d-41bb-93bc-7907fc6e5803",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d203bbe2-98a9-4d51-a52a-1ea6120ea960",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "555d2de6-16f9-4e92-9f90-085f82084828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf5bc5b-e37c-470f-84b7-a8706ce79bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b8da88c-3af4-48b1-ad14-d95a1e37d021"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4137d612-fcff-4232-ad9d-a62db0707d7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0794bdd3-8599-4f51-a360-d835d40a7ef1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4ce46aa-ce31-476f-a576-5c1ffda232f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a33a367-b6a8-4da9-bb35-3d9640ab322a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03582658-6c99-4171-9850-f88ec0110791",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "568d23fa-b286-4285-ae94-2ba44a681b50"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c63af1df-7d5e-4c5d-87b1-9836fde06deb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "041b4b76-e44a-4011-8d5a-c9c1405fc6e1"
            }
          }
        ]
      },
      {
        "id": "49fa7776-dc00-4b46-89eb-7e21b5987e8a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e38cec23-0975-4cd1-a669-190a26241a41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "406185ec-f97c-455f-a7c7-e3df0c2db77c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "29b7f59a-1828-4ba3-9799-6ab63c35ced0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa110a1c-de91-47d0-b32a-b84f8fa84335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19e0e80-5543-4353-88fb-0c7dd31f8c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6fb985-c37b-4c59-a084-d0502801fec8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fef8d3c-40f6-402c-aebb-a79dcef43d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a891368-9b3c-4b15-b91d-feae3b866e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0fd912-db47-41d6-bf7f-fc28b763c684",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95403824-2e54-470c-9372-7fac20515267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61381ff-2eb2-4c94-b7ff-a330d89991d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2c5e64-096f-4dd5-afe4-a39ca9c2345e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73545073-3eb1-43a6-b6d8-3082896db4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845c6f0a-9be9-42b4-a16c-cde05a50333b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c31469-86eb-488b-bf5d-286850e53cd8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2b446f-ddfd-4c71-acba-5f1efc3167ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0b06ad-77ef-4ebc-a407-f8ee5c0672ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cabe4c2-edfd-47b2-a912-31f1b7f6a50f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8be694-5040-47e1-8525-6904fefb990e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e82959a-0e1b-4676-9b78-898728813eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcb2fbc-604f-407b-aece-511e823774c4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201bf574-c91d-4b74-82cf-a0afb296f788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878859ea-8333-4319-9d0f-2c18f1873118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ffc5dd-4dfb-42f0-96e5-da36d79e78c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a4b60a-48f2-47ea-88ce-d6ed5da8cc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c02eb5-c479-43b9-99b6-1e35672bb0ae",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d6d1e6-ae71-4d0f-91ad-341c1e658b7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd6ee327-68a4-426b-8ce9-e003f112a00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0d5026-f262-4edf-b2ab-b52581420eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7804c902-30ed-42e7-a441-760a7398de4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d48aff6-7a7c-4863-94e6-656ea771c328",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eae78e5-9a8e-40c0-8f9f-19c614f2caa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "064d9429-7b0b-41f3-95e3-beeaa11cc61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee943570-17c4-4e25-994b-c8fd2af34ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b445fc23-2743-4a57-bf3d-ba2ce7dd5d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4837a3-ac89-4fb6-a0ab-b8e8c96a1cdb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ceffac4-8fe2-49bd-9501-e5870194beda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c41d4e0-f632-479b-84fe-8ff566d9c64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a99519-0e32-4449-8283-c10e393ffe2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8791de6-8880-4841-935e-c5d879e57678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedb417e-90a7-4b74-9261-3fa1b746f5ec",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeab56f0-2a2c-4dac-a112-6e560a2a0be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddfa158-732e-412b-a075-15e85bc6bd27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf66b5a-a8c8-4c43-97d7-6eb58727a8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5007fe95-0439-45ee-aaa1-3e8abbc71ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240c6212-5730-45e1-a740-1d6b776efc59",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75a1e2d-379f-4f5a-9860-e7f4b63a7723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dfbc97-4dbf-4b7a-a612-6a4edfcfefe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca315090-2555-4633-818e-1de2b5d4fb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce37775-c47f-4eab-acaf-eeeb60345943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb7aa2a-9dd4-43b1-bb8d-cdb4aa8ee0ca",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30eaabd8-65ba-41b5-b369-d490da5d9117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "521419ce-fb98-46b8-bda7-fd3797fbc7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9140325-4df4-4f54-998d-372c6d584dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7007e6cc-22ff-4f39-9830-048f3b095bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216c2944-ace0-4a6f-a0fc-cebb101d6f41",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa178239-74bc-4f17-a1c7-91a1b36cd83a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad54b4e-6ff5-4ffb-affc-2c95930a0e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b2eb2f-3a46-4aa6-a7fa-cd3e84bb4f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4faf6bdf-037a-4baf-8146-2f8dcd10ffb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0ec723-ba44-4c8e-aa28-653f9ba2a7fd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457db59d-e44c-4f19-be53-e80872475d5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9629602-9e56-4ac9-92a5-c57411e8f75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8298693-b9a1-4ee8-9e35-236e0e857121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66ae494-b4a0-4147-af1c-6c31c877104b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297866c9-d511-40f2-b617-49bff2913e9a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a676e220-5495-484e-8382-28990b61d751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bee2413-f95f-48e4-a31b-c3e907aa9ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec28eee4-0618-4d75-83b1-b808077835ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fae50ca-4ece-48a3-ac94-542d111aecdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c4871c-3f9a-4eb0-abc3-ab23a71a9697",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90021d2e-9845-483e-bc87-ec48dbfabdbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305d87b1-90d8-4a49-9264-b4ff9574d5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e3bbfb-5ab1-47dc-88b6-d84569e437a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0bff5f1-60a6-4b80-af3b-8370c12665a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841ba874-5a08-424a-b276-e4ef08c59e3c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a125dcf3-e7b2-41a3-8750-0c03369a1001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66948c18-1b2c-4eeb-90a7-3456119408e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd1089c-183e-48b5-912d-271266c5ae0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c91a48-d2a2-49ee-9897-e817ad6b480e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3cfdf4-0077-4b72-9d3b-032cb34e19b5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d503d0e5-8440-40b1-bc54-800e0a3d0527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ab046a-4e74-45ad-b56c-8b428bbd8fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8f69fc-456d-4471-ab76-3d1bfc0e77bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe2d197-8407-4ade-9076-bd3c98746f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dd2dbd-c09e-4057-88e1-afbeadf902c8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e482a4fe-dda9-48e0-96c0-b7c4674f080d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffa649a-d863-4326-8d49-68b579070f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19318aa7-b1da-4a6f-af24-d35b47d47b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df541fc-471f-4979-a38e-e55a274c7c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba5644c-dbfc-4905-8735-49f61949ab30",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b2b1ce-a333-4f6e-bc9d-8c855e865aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f08bc71-64ff-46ba-9980-5ff2b7bd2486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c048df3-9a74-428a-b83a-80c23372393f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399ed1d1-bce4-4969-8e59-ff4194941b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7217e4d0-cf54-45e3-a7bb-3cd48ae667b8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0bff56-b243-4a02-856c-ab656de32d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e758d5-13dc-44fd-8ee0-22c90674f127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a312ec39-505f-42a7-b046-9ace46e45463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e73821-39aa-4770-8c19-914a84dfc76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3939f5b0-ff40-446e-a248-92f022edc3c1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c893b566-ea66-46c1-a563-17548b1b8e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23204bfb-6436-4c36-b63e-b32337b59d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31637f77-e96d-465a-9223-3b39d8a161e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c108e1ad-b386-4ec8-9c1c-2c74179e0583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69a0917-2957-43f8-ac98-6519b611d8dd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4626a2-0531-496f-9fab-f7407e00bbaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4de3470-71d3-4560-b7a5-5daac60e30b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb92401-3316-4079-95e7-232aed33f23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9713de19-0f7f-4d3b-917b-0c832221bd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d74c36-dda3-4009-9884-ca9453c0497e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753fbccf-20cf-4c20-8fce-3bd7924e01ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa49f3fc-95cf-440e-803f-8fd30c234135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0893f7-1f82-4e0f-8c0c-bbed203431e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b331b363-f9f5-49f7-8364-04950bdd4038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebe9b4e-8b87-4141-b612-87b10bd47d7b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7335068-590b-4872-a0ce-716daa3e03a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4e8c6b2-2de0-4208-ab4a-8bd4fcbfd4a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cea7a8-502f-4c44-8b92-21f6be5e0afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1479a60c-512c-4f51-b53a-5e123ac1cd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc847ca-0afa-4cbb-8ec6-897ca786cf70",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff78916d-16e8-4518-86a5-3135cdd101da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4a452cf-f5fd-4bbf-b4c4-6f2bdcce00a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3429af7d-bdec-4b37-a4a2-288fc58fad07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2465ac6-c83a-4c84-bc65-881b021be803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f50d49d-894c-4457-a05a-16f52df9889f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910c9733-8973-445e-bd74-3cb7ee2e9243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5173e329-4e2e-4ae5-b10b-9e0bc5026859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf128920-bc49-4a92-9825-581581dfd60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1279dc6-9673-4843-b32f-64a17a743739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b59f60-808d-47e5-9d2b-23d0928dbc0f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336e7d56-2665-4072-981d-cf09cca9994d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42494172-f3b3-49be-967d-10ae1219537f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f773b2-8f23-400c-b636-124ab61175b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1afab90-49af-4693-b888-d2b98c474101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021c64ab-f0e2-4b14-be2f-dda2eba1aead",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3356d5ee-a76a-49cb-bcdd-5d418e580718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e77af387-5c8e-4c3c-9271-0db548c20a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721ea0af-1fde-4dc3-8f3a-6e92ca28cad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4361d3d-d2cd-45f1-b5ac-23038c8fe5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8995d4e-c69f-4fb7-bcc8-b3c1d5f994c7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acb1169-ac91-4b4d-81e1-4c2738b5c375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dc5a219-1f6a-4e1d-8fe1-ea7ee9ea7c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831e3c39-8c63-4830-8eef-e076cd2bb4ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca13497-86ec-4813-877a-d403996b5d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a5bafc-621a-44f8-9ed7-edae450f6c58",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b34c55-c9b3-4916-ad4b-685e230c6f22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30853c80-25f5-4791-a38a-fe8dfb1fd7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e6077b-0d9e-4258-b974-795aebcd5ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e630970d-24f3-4514-b2b5-279a1cdb5c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47eb065a-b627-4204-aaf7-e39e3448e887",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1c3481-c1e6-40fd-a79d-ac37d0e995da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7965710d-bb0e-4b42-883a-f1c4bbffa219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462c2fa0-b738-4a3e-aa8f-6148e3598e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2bc0bd-5aed-47bc-badf-3e17631fe781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e23aa52-f78c-4041-a546-b239bddb8787",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e579ac50-598c-405f-a30b-25ce4701a244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e313edb8-01a6-4704-964e-c2a9cbce85d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1530227-fbfc-4c6e-b0d1-0fb6b2944d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81cd08e5-ac39-4daa-94e1-253bc3c60959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f98072-0a12-42e5-a306-d83cd13473fc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b8b33d-1e19-497c-ad55-f287e855fa07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a33236-b66c-4547-9569-aaa2847b0d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816c5a4c-7e25-4f09-a681-40d80f502c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ebe8b6-7fe3-4f2a-9f23-436b098eea32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b277867e-cf48-4eb2-9869-46f181b762d2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5748126-0d01-4c69-9081-df35bb17c5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee90078-895b-4dfc-9cf6-2c7715e1d961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6216e9ca-c231-48cc-bcb1-c4a1d7f16614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83b2bda-18fc-47d8-a8fe-bc93a06524b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1e33f6-a00b-4eb5-8eaf-9fe6c9c93afe",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76593236-9fcb-4560-96ef-13dd9c3ae204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a347e6e-3ff9-42fa-a60c-09aa9588f17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe94042b-c396-40de-80f1-09a60c97b12e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc63d5a-fa98-46d9-b79d-2b91dfd73934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94de30c-854d-4fd1-bca7-1a7345f644f3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7005aa9e-36a2-4ef8-8662-49d8da12bed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5723e09-0bb9-4d77-9048-b27c19f5a332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5961d3a-99d9-47a7-a59a-b39df97fea36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7baaca8e-37a8-4dc0-9f14-1b5326197826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b812c086-8404-4e26-9e24-aa0c3e531b66",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081e660c-c862-4c38-a702-fcdb5feb7e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6814f622-14d4-492d-b9bd-041fbb7376d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6a076c-4df7-4b6b-8de5-799a767ac96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac1c650-13f0-4204-9795-928456969d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7592091-2da1-41eb-8036-d4aef6665e19",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee7553d-9286-45a4-a675-f9bef27139a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe48ee4-a804-4406-8693-42b76b93770d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1922c261-ce21-4543-bfa6-610d8b680ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b564fe-9381-4274-85de-7124f15a82b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9470a66-197f-42f9-a0cd-09b44184bbe8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077de2f6-f30b-4bdc-a4cf-ef63ab85b054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795b63c0-7ead-4abb-ba0a-51a8d19a985d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d4b355-ddfa-4efc-9a8b-9e8a098d1d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6805f1-3420-4054-af4e-ffc19d759410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d496482-7106-426b-9030-9870770911fe",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5429ad0-f03e-4923-a13a-6cd5b6f30e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0bc11e-2cd8-47c4-85c3-56a4cc20bcd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "502be4bc-4fac-4b14-b4af-4184c0eda642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f836679e-9aef-42bf-b1d6-c2fed275d91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037e695b-b56d-4806-9c31-099281718576",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cf5b93-3394-4841-9ca8-a809a0b5c4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0444f324-fc5d-4785-8092-e47949f0c649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa845b4e-292e-483d-bed4-01f6a1ce39f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5166a87-697e-40b6-bccd-6cb66d01f974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc923243-1a00-4d06-a498-4986d3cb1bea",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c08c8e3-8ab9-4e48-a902-59508aff5b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d91136-a008-495d-9f84-c6cea31e3d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d40bc32-61fa-4f9d-8b80-fed0276675bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5617228-6112-4eb2-9c05-ef296ca8e312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001db1d4-7fc2-4452-abc6-a18f7663fadb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb2b506-b9a9-4e05-a2e2-2172543e2099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5205ff-b43c-4f24-be69-28a91b7db93b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671388b3-588a-4c7d-b55f-ea53c5f2584a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e05672-98ec-404b-894b-1a53713f71c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8907f111-544b-40cc-af08-adecbac47774",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93e7482-8ec8-4235-b156-e37d78be74a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5eaeccb-c7a0-4f3c-81e5-82d0ea1c7cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fed3cb2-0bda-4f99-82f4-3803179fbbec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057874b1-c8e8-4aad-851c-adff040ef298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcaa7ab-3aea-4754-80a9-54a47636a3cb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da24acc-7f41-4446-9d4c-c75e220093a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f47ff7f-c909-47e2-a2c9-c0bc83fcd2e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd3e57d-7388-4da6-9848-f30457802584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a4913e-bbd1-440e-88f1-b214501e571b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8989e4b4-0ee8-4aac-be3b-e880eb594260",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ec32cd-3df3-46a1-8b7b-32d0edfc317c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56eacafa-dfb2-4438-99ab-fbf548143db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7aabd0-7cf0-4c4a-9471-3b12a90b0148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f1f3fd-a220-4ab7-b6a3-5a7d174bc60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b86e687-a6f3-443e-8c76-96c51fb53264",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d47815-bf49-4e2f-870d-633fd7a745c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4938cbd-880c-4484-bc3c-23329011f6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9dd450-da38-4048-b7d6-5a49a4eef2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297571d8-3fe8-4efa-aa5b-b6c3f741a5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb86ecb-5a2f-437f-b0b6-bf9a1d8406a9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05b56b2-5c65-475f-afd5-92b581c316bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4c572d-5e70-432f-bf37-deb0e3dbe945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95877c8f-9939-45d8-ba10-f45590c68b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51832d07-9202-4471-8dbf-ac121c3857aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2db8e65-aade-455d-ad34-e3d2a687ebd8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18221ff8-af09-4fb8-96fd-63a92cfb5778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9ba3c4-7e67-4e6d-bdf6-87b28d2cff20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef456f9-cb11-45b3-9f5d-02de4e6689cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e65a1c-93a3-4a2f-b00b-c02035e4577f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483330e6-55fa-47fa-bdf6-95f41faebed2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257e717b-c26e-4aa9-8a39-85daadf9bdf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88220426-c942-4f66-b559-85a026030717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9589a18b-0677-47b7-883a-e5c6a7274232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a9f4ab-ca94-4a08-8de0-a9cea3dfd478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514e3c4f-b653-43d7-b7f5-ee3d3ea53d91",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d45aa46-2072-4886-a05a-361d25f87e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5400dd45-2ad3-4d50-8ea4-0b783cc3877a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7514ab9f-23b5-49bb-aa86-fc4672e4fe74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2720422d-24dd-4f57-9a30-90245acee296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928a6686-f768-43c5-903f-52be0df8b755",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7fba97-6ad1-413f-be03-0b9af74feb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de344649-f53d-4b30-8257-67d07e965b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e1f89f-d344-48b7-9db0-257250140d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff66969-bead-4439-8f4c-0e23f50e7131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e43872-8d54-4b89-92e3-aedf8a7de877",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74d3454-063e-4cfe-8c6e-a6b8243fd2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a836a00e-4243-489a-bfda-b092335c36bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ca2de0-204a-46e0-b7bb-f316c9897011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac3aff0-ca70-4512-ad94-ffd07b6d10d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef7498e-3bd0-41b4-8e56-044fac3307dd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5fc245-6c55-4291-9e3e-ee684523fa43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342e9d42-5aa7-4864-aacb-d11d170d60c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a470c9d5-9a79-45c3-9c9f-d1693329b1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33f47f8-3f29-48a4-bd39-cb3d5a67ced2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcd1951-8e4c-4da2-80b3-ed797484001e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588df67a-1bfc-4dd1-9992-b3a4547443b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe1326e-97e5-441f-a387-4e0364d69d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590a8935-f14a-4216-9102-3c3711317a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7dbf280-2c9f-4e65-9a9f-3a475dccae14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1cf640-5f9e-4f7b-91ca-68c917731345",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdc4c14-d499-4a48-a375-c4006dff0efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9778ecf9-1c9b-483a-a33c-ae36e90e0822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "346f7065-69f3-4bd1-8081-3ed5ecbdf2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e4b5a5-f6b8-493e-9247-aab250e1158e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff564bfc-993c-4e2f-9899-f43291544bf4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e418193-fda5-464e-8e8e-36c2539a928d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3c9976-4598-4d5d-bc34-cc8a6ed43b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45ee381-3631-4d86-8481-e28787a5f5f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b5f1e2-985b-450f-813a-a2d4f9af24fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad153762-ca7f-4ae3-ade4-e476baa2ffdc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bc1d07-dc38-4ff5-8796-2cc6df4a812f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5260ce-f327-4683-964c-4fbf82b96311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b182343a-5890-43af-9c33-015efcd84711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d44b446-e2a5-47c8-85ce-e000fe9e8cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac59b9a-91d5-4c8b-99ca-6514d30c3a79",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d93975-47a2-4eb3-9319-f5f6316b767b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2a973b-d684-43cc-a7db-090f3f200e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f451d0a-e729-468b-8594-67f88a15b5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2c503e-4d47-4bef-b0ae-355a1d887632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c862cc1a-aed4-4388-a30a-bf61691dde85",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c8e031-3591-4c03-a74b-bac3f101060a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041d5d79-4a22-41a2-b348-292ed980d9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42887f31-029b-44d9-a12a-f3438f50a48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add91e82-001c-480d-a18e-f58857ecd672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44123836-a31a-4939-9935-448c1f431a03",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9a260f-ac5d-4efd-99e1-14388e3fa5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609db67c-ed6d-4539-95f6-8c8c1dcd7ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50e3413-21e5-4872-86e4-d60a6fa5d7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6779b3db-71cc-44dc-9d75-c82cb2da7a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17a7d65-10a0-4772-b352-2b1c74b3a5fe",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a252c3-3a57-452d-b91e-beb2e49b3f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0bfaed-5785-4c4d-a4d4-c4ea328f8717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bbcb63-d038-4afc-bb60-e3de834c7a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee45c17-660c-455a-a273-9bf6435ecf94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd27f9d5-6f9c-404f-8999-1dbe3f689198",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf51568e-6da2-4f05-a2ec-f1eee6871c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3907993-60aa-4dcc-a743-cf727ba05dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f0df08-97f2-4159-ab9d-7fd8ee0eafa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be183cbd-6f60-483a-9b50-8072bd482a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa88690-4655-42e5-a0e6-78bb9e83176d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b43c9d-43c7-466d-bc73-7bdcfecf2bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1eab08f-4eee-443b-b37c-aabcf5016fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e337f901-2184-4d81-88cf-a5d170378093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981e5c6b-1570-48cd-918c-3adcd23772c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a0fcd8-d820-4e86-890d-b8c58e6fc34e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6534a8f4-f4a8-4df0-861d-b62095ee676b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "109c06d5-3e4f-4949-bccc-5a305f556553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b385c9a-b6c2-4e59-8341-884e284a9c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38777b5-7d3e-494c-951d-62424bddf472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc5255a-fa23-45cf-b40d-c38fbe5a9295",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcd175c-6263-4e25-b288-9384b82904fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c5e6ac1-0c23-47ff-b16b-e3fcbe3e3c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ffa26b-356a-48c3-9097-6955d2a9ba70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3a8057-813f-49a1-91ac-fc32113bd228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9f038d-c318-4a10-8870-a6929e3836b9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447f71c6-7a72-4538-9279-23e0c1f078b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5c513e4-1c77-413c-90cd-a2410920cf59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beacf566-4318-49cf-aa19-770de311a3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2b627f-a998-4744-af31-d6e8a84c4d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c28a340-3792-44f3-86f7-f30528b607f2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ef7beb-2947-4cfa-9e79-0656a5e9e1b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27ab79ea-20b0-45e4-aaa7-46a0743c47a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4365daca-6f79-476d-8cb6-c6248f582f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc70495c-3c4d-4c5a-b39b-3855bfdf96c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01cb013-7221-4695-a7af-b19533351f1f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db573ff-1659-4494-b591-faac0dcd8795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9beea39e-b69e-4e5b-9888-49fd6547d62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408b7122-fcd1-47aa-812f-e5cf377ebfcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8beacc-58cf-45fe-bf4c-f59953d66d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be02f3f-236e-4347-a82e-3775a21b9523",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9405f880-fa4e-48a3-b1b0-a9ca7cad7638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a681d597-fe70-4351-a6a8-06b32dc337b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ece4379-ca4c-4e2a-8e9b-aef7a1ab8871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215b1e7d-30a3-4ecf-a73b-e1f3ad735b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82e1b66-bd8e-4e91-a436-d4a672e032e1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfe6daa-4582-4b90-ab44-504f3589a440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07d941ff-7906-4ac8-bf17-0c3cd524fe90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4850e513-fed9-45a4-a6be-c1f98a1485e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3bb141-b225-4dc2-9520-b3b941c6fca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cfb527-49bf-47d3-840a-88b7609ba32e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9c9636-1fc8-4966-b2e2-02c9eeedd6bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5d9aa08-1890-4d87-b0d9-f6cdcd535426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596035cb-5722-4b91-9b28-160c5d095bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6e7918-cf7a-43e5-a26c-035e1ca49810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d806e527-298c-4324-825a-82f37724229e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8077ff3-c956-4188-82eb-df83fca5ed99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b0a8330-222d-4519-9fb6-790c493da9fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc09612-981f-471e-8068-1a7d760b642b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa6fc35-933e-4b32-8717-8e40d113fce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcda7b01-4abc-4252-97ac-9f14de981e67",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb80cab-f288-4927-b03a-884d0458b100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4ce5897-41e6-4fc1-9437-6439317cb966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b55c733-fa98-46f8-a1d7-6e174fcee7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02f8c7f-63e0-4832-8288-736a8a1b4491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3753b1-b5d2-45ce-a7fc-21f14cbff9b1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe244c7d-56fb-46f9-8385-fdce793e294f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7468d7ac-42ab-4fa2-8c3a-8bd25614271b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fb36ef-3114-4077-8a3a-458f7cc7a57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39ca709-4114-4f6b-938e-12b5a17d761d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a996ba04-4201-4c3b-9ed9-00efccd2178b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3575816c-7101-4115-9cdd-9c06c861ae37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11350b33-a949-4c8f-996a-4de19ed6a3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2543a9bb-78bc-43bc-9dad-cf40c436ac54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3245cfe2-ed92-4889-bb1e-ba613b6462be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de367d4-0ef6-4c09-a6e0-b663298dcefc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4108fe-97b3-49cb-8889-59d4b857001b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ff880e-de63-46a0-864a-4b8d2001fca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dd4479-df02-409a-baa4-c72d135d27de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99958fc-8dd6-48de-9224-faf41ba680e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f742d97-abf6-4f39-9ff4-3a322d9fc04a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62897a8-1997-4bb7-aaee-0ff32e3fe132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd202d6-7fff-4f5b-8749-2e7faa360504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33438c7b-0be9-435a-b83e-8a01b15e10c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bd1df9-8323-4f2b-a452-499b3661526a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f2dfee-1ba3-4513-9f48-c54aa6a9cf5a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3902bb53-98af-4131-a6df-cd913202007c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "970691af-02a7-4a0d-8db5-0139e58546f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc0f24f-016d-4d4d-bb7b-a664ac3f6912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4436c91-34e7-4268-9aa3-67b0dcbb5216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577d4091-5777-412d-af3c-9855379aae19",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23bbccb-1f50-4199-9b7b-5bf1e1740b0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5edfd3ff-e4e6-4c60-997a-6a3ed2f9b6c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6aa578a-8181-4d36-b292-125efef3fb72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ed1b81-fef2-4abc-af6f-6a90b12d22e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e6b483-e6f0-41dd-bcdf-62aaef61dd2b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbc7171-9885-4a29-94c2-ac1e2a74c7a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99f26a1c-6343-4fbc-8efb-399dadd9e8bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b19fbf3-f233-4b32-b6bd-5bd3ba012cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32dce252-f5f9-48d3-be25-096c2122ead9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5b6f38-c08c-40be-a170-94a230cc2ada",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c127a432-f647-4fd8-b531-f62cede5699f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea04e11-6992-438d-9e68-62b9ac710906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85aa96b2-dbf7-4fab-b1f9-787661d41e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1809e232-e596-4ea1-8c67-7480e8be2842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029687f0-a862-4874-b916-6ae9e812ff80",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbfe4ac-5a19-4f97-84d6-c6ed45bc2fcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "191bcfd4-4f87-4331-ad14-3836782874b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc03519-366e-4e3b-8c78-4f549670ebe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54cd6c2-2f49-49fb-beb4-22c558317982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721b678f-2826-4e6c-b4bc-7f3b80fc48fa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0807238-9cd9-456a-a880-95233954cb6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c946409-dad9-45a9-b97e-eef5b14f7bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71472143-bb1d-41f1-9356-76498847934c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5662ab12-c96e-4014-a4bb-6d547703534c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19925545-c8fc-4aec-bea9-5683369e43a3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74873146-3fdd-4b36-a583-83871677b2a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ebfa553-c55a-47d4-8f94-6469a639932e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773c9d70-079f-4c8e-8dc4-9ffe746da798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f087f77-259b-4254-be70-a358882312d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7627b3-da7f-4238-addd-2fc6c9df9bdc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9faf8b-a9c9-4ec9-9ab8-e87f73904023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d2fa3f3-1b5b-4c0a-9c56-7b894936b2df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9837b42-91ce-4c56-96b6-f101340dcf87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629b7703-4a50-4a84-acff-ac2118afedee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7596e07a-6eb7-46ed-89d7-13042a8d7921",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ee057c-c1ee-4fe5-8bf8-17cb923caac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "144c712d-acb2-4bc1-91f1-dad8447d2d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddb58b5-0865-40c9-9a0c-37f2e90e1d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb707dcb-4778-4850-a113-b68de1f798d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4473f1-4083-47a4-8ed2-61bb8318c659",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8833fd9-dd68-42a2-8393-fd3529b11af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2706ff32-a25a-43fb-92e6-f0ce8feed45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b00495-308b-445f-972b-9e6f721bf07a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e25fcc-a027-4cb9-8a11-7364d378829b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650dc9df-52c4-4a23-b0ed-a156a2127c03",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b29200-c27c-41b9-b351-24fa939196af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84e89d89-4de1-452d-8b6f-c493a627c23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2566d12b-d96c-4c8d-bdb3-6c7f041718e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5214397-9775-4795-876e-d078c7212954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ae2229-0e45-4fdb-abc6-b5eaf78f5b36",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f686188-9874-446a-affa-b8c4be5e476b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3669ae59-12b3-40a3-b0be-529ea48ea5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8f8094-6588-4e0e-ab6a-f8d1da32b0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15527bcd-9534-4a78-9480-1c379b7755de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f73be7-a755-42a0-8ead-5c1fa6c8268d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ebbf34-dcb7-4b79-9a92-cb243ee52365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53240bd0-5c9d-485b-86b5-45f685198f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "293d835a-501f-447a-9167-456ca2f4211f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8f97ea-cd01-4259-b967-440738c78c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3efd8e-d68e-49f5-80c9-68e1f4bd5e5a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af94879-0625-4f87-be32-fd330b708695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7f9cdab-e5b3-431e-bb2c-38357c483316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03feb64c-f03e-4042-b616-07e2820dce2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c1270b-2067-49d9-9c5b-861938fc933e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eec409e-71e9-4ad3-8940-0b43c5ccdf39",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a15c19c-cdf9-44f4-8dcc-30ebb45e6124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f9a9853-2dd6-432d-ae4b-8a9b0faf9089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a76b614-dcc6-4422-90df-d9a8457319e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a6c603-74c5-41f0-b6c1-c53623e13f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c179f478-4ae2-4312-9286-b14b101d18ef",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea49601d-580b-4180-b862-9bf30843ee7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5c3f267-cc88-4d32-b7a8-ae7fd2141394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c95361-4082-4c20-9153-c09f569442ee",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d806d8d-55b2-4ae1-ae2b-f499186fa2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ef579b-a9ae-4ac3-86eb-1974178c891d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825f3404-baa3-4122-a789-6190cbbba95d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b76c62e-3c71-4006-be7a-514cbf3925aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4c3b1f-dc5e-4c7c-83c0-3ff2b10a9acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5fecd3-d646-445a-a706-c19e9041c3e4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d648a9e-0cf2-435a-9631-6f09ce2f8302",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e208d1e-1ddf-4dbf-bc6d-bf9824a427e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49068eee-f764-40cb-8add-e31f5e8006bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00ce6527-854c-44f9-9aa9-1b1030b4685d"
                    }
                  }
                ]
              },
              {
                "id": "ab001f07-b829-4694-80b6-44287a127505",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87d359f8-a56e-4d49-b833-2750af13cf11",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fae3c9b-cab6-42d9-9e77-f827f1370ebf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "02a709db-bdf5-4275-a090-5715332cd68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9961744a-7956-40f5-9bdc-e4b9a2ad8058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0cec747-a6cf-4c74-af83-c6ab420bbdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582da4b7-ddff-45b3-ba97-8c00d35b986b",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268ab7f3-50b2-4ff1-9733-871244fb0ca0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fb88003b-dac7-4763-8356-33770eba091d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76b9fd5-c88e-40bc-b58b-ee8440c1f34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe750911-ed87-49ea-8b68-50820b6c9aff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16744358-9f1b-42f6-8ae5-2a18d73b191b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ffd4f47-8abe-4990-974b-714945f7918c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bcfd1f2-41b6-48b3-9bc3-1fdb159693dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d800e47-95d5-4c32-a2c2-2d5e8025ba13"
                    }
                  }
                ]
              },
              {
                "id": "e26f10d5-cf4b-49cf-874d-820b4b37dba9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "119d5119-cd92-4a65-ad25-9609299c3fe4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c26555-29b6-4889-80e9-e5e568193b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ce6c7878-475c-414b-9742-320dcf6dac61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54b60b7-2e46-4e1e-8817-662cb248ae7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5cbd03-978c-41d0-863c-a6988baf4098"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "27f313c6-b01a-4789-9776-31188298eb18",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1fb6c1c-88e8-458e-9498-75461010ca68",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0b5b53c-361d-4c37-9368-578d426b95eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "35e47c7b-f9e5-4109-856e-794ea905135a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51d37026-562f-459a-83e3-41edd4921849",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e2ea640-907d-480a-adb1-5e533da72fa0"
                    }
                  }
                ]
              },
              {
                "id": "c1b865d5-5bf7-486f-bf89-91ce2d5e7504",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e847c714-b69e-4605-8aa1-1ccae91f7ea0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e3ffaef5-6d01-4894-bd88-b5c5525681e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b68c0767-3562-43f4-980e-f27545814388",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c39bef5-200c-4f58-9818-f570e24b719c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf3ee53c-5a0f-4ce4-bd59-037ce0b335d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b5a34920-436e-4dd0-b61c-916533fe1908"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01774505-fac7-4b02-a63e-240fa27801b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e16559e7-6b42-4265-97a7-993bfd4afa81"
            }
          }
        ]
      },
      {
        "id": "c609da1f-f46f-4c5c-9d9d-d5935f439c2f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "086a9853-73bb-446f-b275-edb6b355d38f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b16b42bd-d476-4711-a04e-5fe8fbe6b3bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6550cca-cf34-4d2d-a2b2-77b5002514c4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a4e262-66b5-45d7-b0b8-695d155c3cf6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9e7fafe5-be1c-4f63-8d78-9e2397e716a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa9b6ec-f3a7-4e24-8b71-73dd8f8cc57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8aae123-00f0-48d7-87ea-e2b03d74b5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4dc911-bf76-4c4a-bb16-65b27fb660c7",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77501998-164d-4b6b-a1de-3a79c3855a79",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c6a96def-421e-492e-93be-3dafa6f26001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399c533a-7683-4ab7-a467-3d28c8818a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae8cfc9d-8fe9-4e47-b3bb-c12a03d4a5d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "011af57d-c23a-4339-b899-a44a3f3386a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd0be294-93a8-4ae8-9e7b-799322fc1424"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfce44ed-cde8-41ec-b182-e57ca83a29cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd07be51-16eb-46a7-9636-269738850aca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42542fe7-9b04-49b4-8607-a130b4cdfba0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d9539d5a-d4c0-4b0b-be82-b00060b2df3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60460aa4-ffba-4268-a9db-d7d139110199",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9066dfc-7cd8-4095-a9c8-c0eda4cae7f6"
            }
          }
        ]
      },
      {
        "id": "59206db3-f4e5-445a-b272-e9fc9a90f886",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "758697e3-650d-4483-ad9a-be66bbd48e8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30d7f008-595b-42d7-8c0e-2daefa21229f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27969a5a-1412-495f-b537-6eceafc40728",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50eaa453-33e8-491e-9f69-4ae30a4d5f39",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2f6d16a0-dbe7-463c-8dec-4676085a5cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf79ac3-1e71-4d48-a930-6aac0c4c7448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0515d6d-6a1e-4d5f-87a0-2505f8776c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b751ea4-bff7-4abf-be8b-b69056997da6",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056c472c-947f-4871-949b-1096450e552a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "57a33fa2-4f37-4ba2-b20a-77267f3ac3c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d146bb7a-56ad-45c9-aaad-626e672c79e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a812663-acfa-4b3c-b871-6aa280421a36"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9b0e4bc-9ecd-4dcc-9cdf-789cdacc0df4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee76482f-656b-4c84-b70b-d95d0bc1d64c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc1be94f-b7f1-4db7-bc05-752dd1be6b06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c14208e-4496-4a6d-8763-6a76a78540a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79ec5253-2af4-476c-83e0-cd3425164c5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "85659804-123d-4988-8341-b1fe244cd8fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4c9ced9-4c26-4c51-80df-908a3b1f1376",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2f7d429-25da-4a43-a3e9-b98540c244d6"
            }
          }
        ]
      },
      {
        "id": "1934159d-40ac-4c67-89d9-635fd144267b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "da51b38f-85f3-474a-919a-d15e120cc7e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c6ce112-7a6c-4326-94c9-3cab34e19630",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c830ab8-c5b3-4369-a3fe-7d59883c34ac",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e436435-bfb4-4fa6-9312-1b87c9ecc620",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1cdfe251-ff7d-411c-aafb-2e2cf0e0e77c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9c363d-d8c3-49de-9044-7ecba526b606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee5cf20b-939f-4b17-9eb9-c1236e544a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0747c0ff-e9f4-43fe-a990-8f25af76643a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407bad48-7e47-4e55-a961-a5d2234f4b3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3d260d6a-cfff-4edd-a944-641407f1d946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d483436-db8d-403b-a550-5dc36629c1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6a27d94-0fcb-41b5-9942-5ba92fcd9c7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fba4000-7bd9-4b74-a829-5d571c999dad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de31bd4c-e8e4-497b-8153-aee0a15622d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c12a14a7-08c8-4a38-99ea-c53051d7aefd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9603847-2fee-47fc-ac09-330ff747f022"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f8666cd-a646-43f1-b0a8-6d785ca8ea1e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7060a782-9567-426a-af33-d163b88e479f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea31408b-5876-4b38-bdd6-74d10f46d91a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4af63032-f4c1-44ab-a313-2d6930d43c41"
            }
          }
        ]
      },
      {
        "id": "e9f6d041-8118-4409-bfd6-d5630cde1024",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4316235-0c24-4022-9903-ea7a6571a9b7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64891bcf-cf53-40d4-91ef-40c37686e40e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7e598af4-f3b9-4e09-822c-686244cd72a8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5715400f-49f6-4f63-928c-2c8d0fe26102",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "970fabea-4f82-4f00-825c-3d2c55a22d32",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 22
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 662.8918918918919,
      "responseMin": 17,
      "responseMax": 4633,
      "responseSd": 660.8298543655128,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1676680850267,
      "completed": 1676681032479
    },
    "executions": [
      {
        "id": "7a6d0639-042b-4a1b-bf43-ea352beb1999",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b5c50d02-3a97-4c60-bc85-7df6d81a7406",
          "httpRequestId": "b50df8c8-275d-4ad6-9f8e-d550779229f4"
        },
        "item": {
          "id": "7a6d0639-042b-4a1b-bf43-ea352beb1999",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "026496e2-491b-4fd4-9e18-d2729bdceb7f",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 0
        }
      },
      {
        "id": "58645184-6e39-4b18-919c-f423fdf33a79",
        "cursor": {
          "ref": "194e841c-614d-40d4-a9e4-6f84ccbc614c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ef7b3bea-33ab-4177-8980-43a06186d74a"
        },
        "item": {
          "id": "58645184-6e39-4b18-919c-f423fdf33a79",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0483cceb-bd9b-48f3-af45-b12661018fb7",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "595f5bfc-40e3-4f59-85f7-96eb85a6f32e",
        "cursor": {
          "ref": "08126241-4948-4e21-a80e-f83d58a846be",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8f4349a0-b5df-4bbd-859d-b56604c20a8e"
        },
        "item": {
          "id": "595f5bfc-40e3-4f59-85f7-96eb85a6f32e",
          "name": "did_json"
        },
        "response": {
          "id": "d8391fcc-6bbe-4522-9e21-70057c7c2e82",
          "status": "OK",
          "code": 200,
          "responseTime": 929,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7755d3e0-1331-4cf1-8cbc-d2fbbe188e6b",
        "cursor": {
          "ref": "fe607874-0582-422c-801b-3446bd0ff0df",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "37dc6a1c-1e43-42e4-a422-cdb692a8ab15"
        },
        "item": {
          "id": "7755d3e0-1331-4cf1-8cbc-d2fbbe188e6b",
          "name": "did:invalid"
        },
        "response": {
          "id": "6bc9ea03-d743-4e63-8959-e15db6786dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1213,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7755d3e0-1331-4cf1-8cbc-d2fbbe188e6b",
        "cursor": {
          "ref": "fe607874-0582-422c-801b-3446bd0ff0df",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "37dc6a1c-1e43-42e4-a422-cdb692a8ab15"
        },
        "item": {
          "id": "7755d3e0-1331-4cf1-8cbc-d2fbbe188e6b",
          "name": "did:invalid"
        },
        "response": {
          "id": "6bc9ea03-d743-4e63-8959-e15db6786dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1213,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feac2ca9-5ac7-4ba7-943b-93d90d386b1e",
        "cursor": {
          "ref": "a12eccac-c343-46c3-b20f-1807fe23e857",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7dc3a79d-7d86-443c-bfc6-0853b4e1c76e"
        },
        "item": {
          "id": "feac2ca9-5ac7-4ba7-943b-93d90d386b1e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f2f09018-5820-4fdc-ab7f-b7e6b930b6c1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 683,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab49327-230c-4420-934a-602aa61b5a6b",
        "cursor": {
          "ref": "155fdc00-052e-4a6b-b94f-e05ab90bbf35",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cc8f6f01-9377-4978-9508-ec887695a73d"
        },
        "item": {
          "id": "1ab49327-230c-4420-934a-602aa61b5a6b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "98719ec0-aa8a-49c3-8000-ee4a7e490ca6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 710,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bad114f-262f-40d1-9df0-9e415c000a14",
        "cursor": {
          "ref": "ec0f1bf0-6648-477c-a1c3-4d27858a3cc2",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "136e509d-0308-4a61-b4b4-e525a440bcf5"
        },
        "item": {
          "id": "1bad114f-262f-40d1-9df0-9e415c000a14",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "14242fbd-128e-4bfb-ba3d-953f0b8380cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8e87a0-7647-4f55-97f8-464727dbf9dc",
        "cursor": {
          "ref": "ff82ac91-e472-417a-bd34-3639311beb15",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c5660e5b-06d5-4ede-af6c-12d8a2b3dbf4"
        },
        "item": {
          "id": "3c8e87a0-7647-4f55-97f8-464727dbf9dc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "949810b2-77a1-434a-a8e1-c1ece6925f3a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 593,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8e87a0-7647-4f55-97f8-464727dbf9dc",
        "cursor": {
          "ref": "ff82ac91-e472-417a-bd34-3639311beb15",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c5660e5b-06d5-4ede-af6c-12d8a2b3dbf4"
        },
        "item": {
          "id": "3c8e87a0-7647-4f55-97f8-464727dbf9dc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "949810b2-77a1-434a-a8e1-c1ece6925f3a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 593,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e0042d-7a41-481c-ba41-597e6a8dd0cc",
        "cursor": {
          "ref": "010337aa-08da-4808-ad16-33d4fd23ee3e",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3a509fb4-efd6-4fdb-b133-01b9d8e7266b"
        },
        "item": {
          "id": "c9e0042d-7a41-481c-ba41-597e6a8dd0cc",
          "name": "identifiers"
        },
        "response": {
          "id": "8fdf8d63-ce97-4422-a329-b3747b39fe2a",
          "status": "OK",
          "code": 200,
          "responseTime": 956,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3091513-4ee5-4280-bb31-edc743f650ca",
        "cursor": {
          "ref": "9fcd9289-765f-4ec6-a9de-5bbce49232e0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e21e39c3-299a-424b-8b14-5d7702c62e3d"
        },
        "item": {
          "id": "e3091513-4ee5-4280-bb31-edc743f650ca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3c0d6a8a-92db-466e-8660-dece8c3d04bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3091513-4ee5-4280-bb31-edc743f650ca",
        "cursor": {
          "ref": "9fcd9289-765f-4ec6-a9de-5bbce49232e0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e21e39c3-299a-424b-8b14-5d7702c62e3d"
        },
        "item": {
          "id": "e3091513-4ee5-4280-bb31-edc743f650ca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3c0d6a8a-92db-466e-8660-dece8c3d04bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a65f56-098e-4a47-af22-3588804eec91",
        "cursor": {
          "ref": "c29030f4-9dae-4f27-8636-0235c3b7cc8c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2bb60d36-dfae-49ce-ab85-958137d1c110"
        },
        "item": {
          "id": "21a65f56-098e-4a47-af22-3588804eec91",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d247269a-50c7-4998-914b-6935634936c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af841ffb-8fb3-4016-9494-40cfee4fef6d",
        "cursor": {
          "ref": "334462a9-661d-4fae-95d2-1adb3ce979d6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "01c48718-15fa-49a8-adf5-0e16100aa8a2"
        },
        "item": {
          "id": "af841ffb-8fb3-4016-9494-40cfee4fef6d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7c528219-9ec3-49dd-aa34-6ec8f12e99d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7c80ac-9a4d-465b-9f0d-d73bcd56932a",
        "cursor": {
          "ref": "d2a7c80c-a728-4cbd-bbbd-0730dcb62d42",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e0e7fd74-2123-419d-8905-9b54ad95beaf"
        },
        "item": {
          "id": "3b7c80ac-9a4d-465b-9f0d-d73bcd56932a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "010f39b3-d432-496a-833e-e9251c04438b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648e168a-af65-471b-ae41-0d461c9aa198",
        "cursor": {
          "ref": "c3b9e238-6cf4-40ba-aa50-76ec67df0aa1",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e817ed21-f614-47ad-88d9-1a558c38c7e0"
        },
        "item": {
          "id": "648e168a-af65-471b-ae41-0d461c9aa198",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "51fc3124-16eb-4e66-a6b7-fd92e6089383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a35c54-dfc7-47f9-ae70-4cdc95966c18",
        "cursor": {
          "ref": "07f20887-9c03-48fa-abf9-0468079ae09c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "086adef4-c086-4708-9951-ef620a973181"
        },
        "item": {
          "id": "87a35c54-dfc7-47f9-ae70-4cdc95966c18",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1f668bc1-4d98-4444-8fde-2b6c020c3cf6",
          "status": "Created",
          "code": 201,
          "responseTime": 2605,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:15)"
            }
          }
        ]
      },
      {
        "id": "d95d0dc1-d69f-41c3-9a07-5352292314e9",
        "cursor": {
          "ref": "b7b51a7c-0e27-41a8-84cf-9d2b85936f00",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c824a787-25fd-4754-8ffc-dc26066bbed6"
        },
        "item": {
          "id": "d95d0dc1-d69f-41c3-9a07-5352292314e9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2ab3bd3a-d25b-4f89-9301-29ef12aabee3",
          "status": "Created",
          "code": 201,
          "responseTime": 3040,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "10767f37-de22-4ca9-8734-38b75a43e2ad",
        "cursor": {
          "ref": "aced5622-b328-4576-9f37-0967ee8e91aa",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8fb13f75-7a85-4699-9446-56b23ab68a68"
        },
        "item": {
          "id": "10767f37-de22-4ca9-8734-38b75a43e2ad",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ca9f7ca8-8b8f-4694-b5ac-2ca80bd99036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f523150-7960-4127-956b-30e081b1d98f",
        "cursor": {
          "ref": "0e5e5aa3-8638-4b9f-866a-ad8497ecc312",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "56c36e77-37e7-49fd-8ffe-4489e982d1d0"
        },
        "item": {
          "id": "5f523150-7960-4127-956b-30e081b1d98f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3991af31-e037-4f23-b659-b6e225936fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee9a7dc-8ec7-460e-a591-d687c729b99b",
        "cursor": {
          "ref": "ddea4dbd-1a43-4353-b2da-82b6d4aa360a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e27a7ee1-19ee-46f0-b268-edff53ce7274"
        },
        "item": {
          "id": "2ee9a7dc-8ec7-460e-a591-d687c729b99b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "39af8088-5bba-4bb8-8bb8-b59dd97234a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb52bdce-17d8-4800-a943-60609e281554",
        "cursor": {
          "ref": "e937a775-ea05-4bb0-9ce6-321cf4d3a0c2",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6b0c6df7-ae6f-453f-aa42-9caa3a07799b"
        },
        "item": {
          "id": "bb52bdce-17d8-4800-a943-60609e281554",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a5d81389-10e6-48d0-9eec-c19bdf83c319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1014,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887843b2-e153-43bc-859f-f21f4331e79e",
        "cursor": {
          "ref": "d79366c3-ad32-48e5-af39-2fb0623597af",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d78cf026-07a0-4999-bc22-80cbc6f650ee"
        },
        "item": {
          "id": "887843b2-e153-43bc-859f-f21f4331e79e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9e02b99a-6bea-480d-a26f-6b7af37e11be",
          "status": "Created",
          "code": 201,
          "responseTime": 2794,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:21)"
            }
          }
        ]
      },
      {
        "id": "6d1e80d9-a25c-4484-b359-e00a163e9905",
        "cursor": {
          "ref": "68fda256-734a-46fd-90a3-e7e460e124ec",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bebb8312-7cb5-44fd-bc41-c80fc094041c"
        },
        "item": {
          "id": "6d1e80d9-a25c-4484-b359-e00a163e9905",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "713acec9-0ef0-4ff1-b178-d443e64e5a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7143e679-0181-47ee-b19b-f67059d25902",
        "cursor": {
          "ref": "94eba819-949a-4708-a984-a6c97f900a5c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "de2d0f85-b432-4606-8a5c-a95c75c75b4c"
        },
        "item": {
          "id": "7143e679-0181-47ee-b19b-f67059d25902",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8b7f76c7-3718-4bf5-9ec9-22d3f54bca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23ade2a-5816-40da-b359-a0d002199a2f",
        "cursor": {
          "ref": "effe732e-eac2-40f4-9ef2-9e80ec0998f0",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9cf3f759-158b-4bf8-8ebd-9b8eb17688bb"
        },
        "item": {
          "id": "e23ade2a-5816-40da-b359-a0d002199a2f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3713d458-4865-4f2f-ba82-d028b996dc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87002d7b-8c83-43e5-9c95-bac336ffffc1",
        "cursor": {
          "ref": "2517d83c-808c-45e4-95c6-0de36c9c0fb0",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "18c8cd7f-3369-45af-91d3-ae1c2dd435b9"
        },
        "item": {
          "id": "87002d7b-8c83-43e5-9c95-bac336ffffc1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d825b8eb-053e-4d39-93b0-52edda63fb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038aeb59-7b2e-4da8-b906-0434fc9fbff3",
        "cursor": {
          "ref": "3553e6fa-3b38-432a-962f-a4d7769681bd",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "22189c65-1f34-4984-bb4a-4277dc661e3b"
        },
        "item": {
          "id": "038aeb59-7b2e-4da8-b906-0434fc9fbff3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cdc848df-9aa0-4ab6-929d-de055bd4fd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d913da6-75ac-4f9c-9b1d-2ece2d01a8a1",
        "cursor": {
          "ref": "2381963f-ab3b-45fe-8d29-867a9e33863d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f20752ac-e800-4603-a1a0-64ab0d2c88a0"
        },
        "item": {
          "id": "6d913da6-75ac-4f9c-9b1d-2ece2d01a8a1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ff525437-7a74-49c6-9e62-efe6fd824d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0272d5a7-bf5b-4f16-8240-211abd818a8e",
        "cursor": {
          "ref": "bad73edf-c89e-437d-9b14-6962eea7a47c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9dfa58e6-e38c-49b5-aa56-d7ad85fb7798"
        },
        "item": {
          "id": "0272d5a7-bf5b-4f16-8240-211abd818a8e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "965420d6-88ce-4965-9efd-c9a996159622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cbff4b-b7be-4e8a-a187-98c7a28a71ef",
        "cursor": {
          "ref": "85e32cda-134a-45f2-b26e-e232c695b490",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ea5a8798-5e6c-452d-8fa9-3c0cbbb67554"
        },
        "item": {
          "id": "78cbff4b-b7be-4e8a-a187-98c7a28a71ef",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "84c5701a-bfed-4982-b68a-b1318d95d6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b00993b-d66c-44cb-a3ad-c0f2176f85b1",
        "cursor": {
          "ref": "7169390c-6d13-44d1-921d-f36cfdbd0b28",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "44aa8cbb-2274-4403-853f-d4b63fa809bc"
        },
        "item": {
          "id": "4b00993b-d66c-44cb-a3ad-c0f2176f85b1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1dc180a8-b3d4-4965-a606-f1540f9dfbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15edadf6-50ef-49f2-9730-b24ba6983c71",
        "cursor": {
          "ref": "0b23283b-55d6-432f-9ac3-fa4d53550bf1",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "769a1254-00ec-43a8-8f0f-5c99873aaa93"
        },
        "item": {
          "id": "15edadf6-50ef-49f2-9730-b24ba6983c71",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "894afdb4-0195-499d-8b8c-4bba3131e05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0d63f3-e5e5-4a08-8a91-51a66df9f325",
        "cursor": {
          "ref": "30e52389-3d2a-455f-8b20-eb49c151e0b9",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3b2ff44e-f55c-4abb-acb7-e6a8c291377a"
        },
        "item": {
          "id": "ee0d63f3-e5e5-4a08-8a91-51a66df9f325",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4e128893-e257-4869-a2c9-a1f5337ed253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3a4e83-64cc-4935-9ac8-ff4f81690101",
        "cursor": {
          "ref": "b395593a-3114-4ca1-87d4-c394fe16d4a5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "50d95900-b55a-4588-9e7b-b06d8e7138a6"
        },
        "item": {
          "id": "ac3a4e83-64cc-4935-9ac8-ff4f81690101",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e1a27c4b-3b0e-4480-9333-454ce23826f6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1961,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:33)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:33)"
            }
          }
        ]
      },
      {
        "id": "fb48413e-cc99-4a03-940a-9ad55f264af1",
        "cursor": {
          "ref": "4c94b0c3-c149-4f97-a15e-41e0e4edb03b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2c20e2b7-31f4-48c4-bb92-fefce902ce70"
        },
        "item": {
          "id": "fb48413e-cc99-4a03-940a-9ad55f264af1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bbe0c11b-b9b6-4181-a36a-9c73bf300475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc97237-9693-4bde-b5b7-40af75559090",
        "cursor": {
          "ref": "a7a79612-4dba-4e77-85c4-d9f511d7c55d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8bcdf7a9-69d4-4990-a007-3c419c601dbb"
        },
        "item": {
          "id": "5cc97237-9693-4bde-b5b7-40af75559090",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8bb27176-a10c-41ff-aeaf-8c0699ff62af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895d5706-39c8-4937-954d-7d0e48873b3a",
        "cursor": {
          "ref": "bac50f7d-6ab0-41a7-8848-3ebfa9da73cd",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d8e7d6c1-1328-4cb4-849f-10e4a4c1f036"
        },
        "item": {
          "id": "895d5706-39c8-4937-954d-7d0e48873b3a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0dab3b67-1cc8-4938-be01-2ec799ec3328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b374146b-eab1-4de7-97af-cf1018e7b953",
        "cursor": {
          "ref": "0d9ff8c5-b73a-467e-82e3-86287a59600f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f8aebf78-8430-4806-9b3a-5dc73183e485"
        },
        "item": {
          "id": "b374146b-eab1-4de7-97af-cf1018e7b953",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "78416477-4399-452a-beb8-dd1070fc6a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e3e71d-28b7-432b-bbde-a67d3effa059",
        "cursor": {
          "ref": "5881b432-4a78-422c-8451-7807949771cf",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bf56b517-6c04-47f8-9fca-af8e4c1e6da6"
        },
        "item": {
          "id": "e3e3e71d-28b7-432b-bbde-a67d3effa059",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9ab8875c-49fb-406c-9ff7-89fe97f92129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49d848f-2480-4a3c-8a6b-591001f1de16",
        "cursor": {
          "ref": "799a617b-b815-414a-8e5e-1c16d8f0697e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "82769665-080d-4e94-b322-fd47a4b38b5a"
        },
        "item": {
          "id": "d49d848f-2480-4a3c-8a6b-591001f1de16",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f29ecb22-1cab-4861-bfc1-9e13479a04bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2413e755-3fe0-48de-9e3d-8c3e22274869",
        "cursor": {
          "ref": "b4d75783-3260-420e-ae33-eeefe0d927ab",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4e0660a1-c65c-46bb-9fba-57318ece5a8e"
        },
        "item": {
          "id": "2413e755-3fe0-48de-9e3d-8c3e22274869",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "58b27758-45d1-4394-807b-d2fa212c0b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e44eea-6cfe-4131-aecb-68329c99f7c2",
        "cursor": {
          "ref": "4cdb096c-9ccf-4118-98a5-9e9d37a22edd",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "dcaa8092-849f-4932-ab26-97f2b3cc6180"
        },
        "item": {
          "id": "d9e44eea-6cfe-4131-aecb-68329c99f7c2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7a8a787c-ca9e-4774-a26e-00735a7538df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a164fca2-041e-4398-ba45-2156f60f249d",
        "cursor": {
          "ref": "c1bc2cf0-c34d-4ffc-8869-329e3329286e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0b1dcca0-3fea-4468-93ba-b49fa5fb3f84"
        },
        "item": {
          "id": "a164fca2-041e-4398-ba45-2156f60f249d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3c10eb9d-6b2c-4815-9a69-1ad8ce09ba29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaca080c-dfc3-48fa-ae9e-efd3cc6d5b9b",
        "cursor": {
          "ref": "a5152fb9-32ab-4458-b2cb-88536d8eaeff",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "28238021-7208-4c9e-a1b1-9758537b7734"
        },
        "item": {
          "id": "eaca080c-dfc3-48fa-ae9e-efd3cc6d5b9b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f654b1b9-9521-41b0-acb6-6cce4701886a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc8feef-c622-433c-9da5-29a6f78764e5",
        "cursor": {
          "ref": "fe4d4817-35a4-4833-b584-60b5bc33fd38",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3af7d0fe-f8d3-49eb-8b24-b5ad92f9fa14"
        },
        "item": {
          "id": "0dc8feef-c622-433c-9da5-29a6f78764e5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "98fcf0e1-17f8-4b08-9238-f95cde33f501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bc256e-c745-4f1f-ab75-50ccfe5998bd",
        "cursor": {
          "ref": "f4b6d253-7f27-4b70-a58f-716a394f6d2a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e852cb54-4448-4d8f-8872-3148ca842b06"
        },
        "item": {
          "id": "73bc256e-c745-4f1f-ab75-50ccfe5998bd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ef4c1531-654d-46ae-8d78-bc5313a9f685",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 908,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d509b6-1a0d-4225-a5e2-d94f04c7c0ba",
        "cursor": {
          "ref": "b7c1ac1e-eb47-4ffb-aca4-282acd77015d",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5ef49716-b2dd-4591-a11b-112fd8918940"
        },
        "item": {
          "id": "43d509b6-1a0d-4225-a5e2-d94f04c7c0ba",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c6e5aa10-748e-4f16-8f47-c50a4344aafb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 802,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "03ed5fc7-0a9b-4686-a428-89b91106cb0d",
        "cursor": {
          "ref": "d998c19d-a3e9-4e7a-ad3b-f09d7f35d7b1",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5e859337-40b9-4046-bdc7-500e3a4f50b9"
        },
        "item": {
          "id": "03ed5fc7-0a9b-4686-a428-89b91106cb0d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cdb5149f-cee0-48ae-bd6a-158c87932d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9f1a9d-979e-4a8b-b49b-04200c1c37b9",
        "cursor": {
          "ref": "a4f23365-8f90-4222-829c-9cd346012b89",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "37b1737d-394c-463a-9908-9599a24e1faa"
        },
        "item": {
          "id": "8e9f1a9d-979e-4a8b-b49b-04200c1c37b9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7c896df5-7e88-46bd-9df3-4981605e8047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed038f4d-ca08-469f-bd8c-2a37dd1af9c5",
        "cursor": {
          "ref": "95cdc55a-5176-49d8-a7f9-a992890544e2",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0388ca6a-9432-4800-9a01-926188230250"
        },
        "item": {
          "id": "ed038f4d-ca08-469f-bd8c-2a37dd1af9c5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "650c0966-5f3d-46b3-b98d-386f1a3cc67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06b639e-b9fd-4097-aa1a-f8060bc8c6af",
        "cursor": {
          "ref": "95b762b3-4bc7-4ae2-9544-ead553c54611",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0f8844ff-3b1b-4fba-a488-bcd229c27bad"
        },
        "item": {
          "id": "b06b639e-b9fd-4097-aa1a-f8060bc8c6af",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "28ca89b1-1ff8-49ac-838d-0286d6a99fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532d68db-f006-4616-9bf9-998022123164",
        "cursor": {
          "ref": "d88c48a9-00c1-4762-ba2d-3709f65bcf5c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e0a04601-e896-4465-aa86-32f445a5564c"
        },
        "item": {
          "id": "532d68db-f006-4616-9bf9-998022123164",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2200df9f-f5b0-4136-835a-0626091842a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206f5d6a-f163-46b0-bd64-c20421de6100",
        "cursor": {
          "ref": "ebae83af-c12b-42bf-aa30-6154fa6440d5",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f09ed613-bcbe-42c8-9eec-2910f72f85c9"
        },
        "item": {
          "id": "206f5d6a-f163-46b0-bd64-c20421de6100",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "330467c8-97d9-42a2-8f32-5d76848be938",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1241,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14be3b6-7363-498e-8460-9ff344ac692e",
        "cursor": {
          "ref": "eed989ad-a816-4201-ad15-5aa78a92c46c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "59442aee-3828-4489-89af-ac8d9f965b84"
        },
        "item": {
          "id": "f14be3b6-7363-498e-8460-9ff344ac692e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b2bd50d2-547e-483f-892d-3a743427494b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2293,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17429e61-9e97-4491-83cd-7616cddab916",
        "cursor": {
          "ref": "c601561d-0883-423f-9d3a-02190984a6fc",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "19a428b4-ffcf-41db-9b45-4fee75e7eaa8"
        },
        "item": {
          "id": "17429e61-9e97-4491-83cd-7616cddab916",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fbcf57ca-f91e-41af-b5f2-5c9879a78192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2059,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71928848-7085-4355-9478-378e6503beb7",
        "cursor": {
          "ref": "a3c5354c-d744-4a63-aba2-47a27d645764",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "13f0e9fc-581e-4809-a8a9-bd12336eb701"
        },
        "item": {
          "id": "71928848-7085-4355-9478-378e6503beb7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a8424283-ea0e-4a19-b99d-c172a017ec65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1997,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c020b67-dd29-42ea-ae7c-7262cec09d04",
        "cursor": {
          "ref": "b820b6b4-ed48-4dae-9a6c-5157c5d267d0",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6c2f26a7-0404-4e51-a6e3-e2a0c5ef791e"
        },
        "item": {
          "id": "2c020b67-dd29-42ea-ae7c-7262cec09d04",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "259c8f75-bc9c-4cb6-8337-5a7aaf8657da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1214,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38be314c-ecf6-4acc-b988-883fad275a25",
        "cursor": {
          "ref": "45a4e230-9402-4fac-971b-b8986afe0163",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aad5b646-79fc-49bd-94dc-277bd70298ef"
        },
        "item": {
          "id": "38be314c-ecf6-4acc-b988-883fad275a25",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0d2e85fa-9b33-4734-83d4-eb7cc2061b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70931f0-b9dc-4335-9fbf-8b5b44b6eb1d",
        "cursor": {
          "ref": "fc52cecd-39d7-4af4-9d99-f3cb1206386e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3ccd77f1-ed8a-4eb7-ac44-d1c066c27a2b"
        },
        "item": {
          "id": "c70931f0-b9dc-4335-9fbf-8b5b44b6eb1d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4392b2e6-70ba-4f4e-ac4f-8fa4acf1a7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 939,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfd8a44-ac55-4ce5-bd84-732dcfe9d28a",
        "cursor": {
          "ref": "0c423569-df83-4bbe-b091-2db14ed3a440",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "94783009-e4a7-496d-a906-7ebd97f1d976"
        },
        "item": {
          "id": "edfd8a44-ac55-4ce5-bd84-732dcfe9d28a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3cc484b2-1676-47e5-8315-2cfd42042a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f10d899-3ee7-4477-9a75-5852aff6dec1",
        "cursor": {
          "ref": "a565c5ec-c30a-4bf2-adcb-4b3c7fbecb6e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7e7915ff-d445-431c-8da7-d7c53031feac"
        },
        "item": {
          "id": "1f10d899-3ee7-4477-9a75-5852aff6dec1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "15d355a9-0973-4c27-8533-ee7f71bbf98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f0e378-4467-49c4-b641-faa028c52fca",
        "cursor": {
          "ref": "1d0da97c-5f07-4b59-b0cb-33f0dc727866",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c6c602c1-7964-4bb6-8339-951641f11b7d"
        },
        "item": {
          "id": "72f0e378-4467-49c4-b641-faa028c52fca",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c0c4a117-c810-42db-ab61-0be60000e94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f483ff57-4a94-438b-856f-93e890e485fd",
        "cursor": {
          "ref": "5869d62e-9812-43db-864d-201a08127838",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "40b4b52f-2f2a-41be-bfb4-6f9a30fb2402"
        },
        "item": {
          "id": "f483ff57-4a94-438b-856f-93e890e485fd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e316ebae-93b1-4458-b74e-13812f680ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef8016b-23c8-4a34-92ca-8dd9d37817be",
        "cursor": {
          "ref": "a1975a79-a187-4ef3-a917-5489157140b5",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "50ecd761-a470-4e7b-a579-ba6bfa68c91d"
        },
        "item": {
          "id": "aef8016b-23c8-4a34-92ca-8dd9d37817be",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4e0578cd-7fd7-43c5-af95-4de4507664a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ad2575-148b-4743-b15e-4e1ba7093cf5",
        "cursor": {
          "ref": "c9b824bd-bb64-4570-9526-34303227e3d4",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "91e3442c-e8c0-4135-bda3-d3a0e5400fee"
        },
        "item": {
          "id": "a8ad2575-148b-4743-b15e-4e1ba7093cf5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "239f3731-2c26-42e2-be18-820d41639ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0e5d01-934f-4cf7-81da-3d2694d809cb",
        "cursor": {
          "ref": "f44849d8-0f78-473f-a4f7-8687d44de641",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c8cce2f1-76a7-49d0-9cfe-b2fae609b251"
        },
        "item": {
          "id": "cc0e5d01-934f-4cf7-81da-3d2694d809cb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0e9e99c5-3612-43cc-86eb-83b34c06ce46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48242023-01c9-40a5-ac2a-736e1b8990d1",
        "cursor": {
          "ref": "0503d43d-4457-4f17-b6e6-68cc559fe5fd",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "eb48a8a8-53df-4c8b-b12d-087f533954ef"
        },
        "item": {
          "id": "48242023-01c9-40a5-ac2a-736e1b8990d1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a8d2529c-d795-4e70-b7c9-211ae2bdeda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dac7cd8-0d52-4d72-9f15-52c8a27dc52e",
        "cursor": {
          "ref": "ddabb5c2-6e56-4720-967b-3f46f67992d4",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "51973d3d-fa69-456c-9472-34fb193ba340"
        },
        "item": {
          "id": "3dac7cd8-0d52-4d72-9f15-52c8a27dc52e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f7c9d987-20bd-42a5-b4e4-ef051946b7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9a77dc-81c3-421d-9246-d19fb96947ee",
        "cursor": {
          "ref": "03c76463-2e08-4059-b4ee-f681f0ebdee4",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b7a1de56-58a8-4277-b388-7b4181ac89f3"
        },
        "item": {
          "id": "fd9a77dc-81c3-421d-9246-d19fb96947ee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f0a84074-9f0d-4251-bcaa-46f1059d6210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a66275-750a-4b21-a905-292808fb16f3",
        "cursor": {
          "ref": "131fe493-6fa0-46fc-81d0-2c9803d33530",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8b8ca43a-3683-4444-ad1f-b03e25c34a46"
        },
        "item": {
          "id": "d2a66275-750a-4b21-a905-292808fb16f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ba45dd44-e490-4872-a678-f06b8fcfd08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452203fb-8c63-479b-bf81-43f03bd5c75e",
        "cursor": {
          "ref": "8f0f4215-04ce-4126-b848-3bf697e953cd",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7c4f733e-fc19-44a8-b59f-64c0f2913749"
        },
        "item": {
          "id": "452203fb-8c63-479b-bf81-43f03bd5c75e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "554bd95b-5827-400a-ac3c-6700338b3dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2625dc-4a48-4f36-ae49-9c6ebee4aadc",
        "cursor": {
          "ref": "b8402a87-e7bf-4486-9eed-20d69450be3b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "37224f23-e0c5-4065-bd90-a7e84b6962b0"
        },
        "item": {
          "id": "2f2625dc-4a48-4f36-ae49-9c6ebee4aadc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a95a5c99-8859-42c5-80c1-1686b946b9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5485a0d9-9e17-43bb-b08c-d4738e1bdb5d",
        "cursor": {
          "ref": "40dc78c4-1658-4af2-b568-feaa0787a049",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "82f80086-4e0f-4c9e-b040-22375fd2e29c"
        },
        "item": {
          "id": "5485a0d9-9e17-43bb-b08c-d4738e1bdb5d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cfa8616d-e096-485f-b483-9a34e70df1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15283a5a-16e7-4a8d-8e98-46a7baf46f6d",
        "cursor": {
          "ref": "280cd22a-7ca4-4279-8ad0-964c400d9771",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "efea42b8-2e8f-4c6d-9098-22afb394a122"
        },
        "item": {
          "id": "15283a5a-16e7-4a8d-8e98-46a7baf46f6d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b543183b-f287-4222-b373-d56e8622d6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc654011-f920-46cd-9cc7-a032c656e175",
        "cursor": {
          "ref": "029f6170-8938-467e-8ab3-1c8d9cecfbc3",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0c1be72c-e50a-4182-8a21-9cf835ee877d"
        },
        "item": {
          "id": "cc654011-f920-46cd-9cc7-a032c656e175",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2e561f1f-a5c4-4435-a1e6-8ef416b27c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3bb84c-2370-4d11-b15b-48f5d085aec6",
        "cursor": {
          "ref": "1cb9a1d8-cc26-4f70-b3d2-4be986915bbb",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "804b09e9-d8db-4a01-9bbc-214c6f54c738"
        },
        "item": {
          "id": "4b3bb84c-2370-4d11-b15b-48f5d085aec6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7ecbfbcf-86cf-48ea-801b-844b45538c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115e0e25-70df-49cc-a379-1ab66b070dbc",
        "cursor": {
          "ref": "a445fee7-698b-400b-9cfd-d20b6349b0d3",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "04db7b08-9a60-4a93-aedd-65fa8f874610"
        },
        "item": {
          "id": "115e0e25-70df-49cc-a379-1ab66b070dbc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a4285268-0030-4022-b23c-bc76e9213465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6440c24-3d1e-4026-a3a3-0a69e85fdf8c",
        "cursor": {
          "ref": "9ec6c5fe-b80a-43a6-86b9-6d5ba43029f1",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "49c67061-ed31-41d0-a314-ee800437d419"
        },
        "item": {
          "id": "d6440c24-3d1e-4026-a3a3-0a69e85fdf8c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ed8dc7a4-0540-4632-8ad9-ac8d84d33f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0ff180-cd41-4bf8-91e7-2854914bb9f6",
        "cursor": {
          "ref": "27710b4b-0aa8-48f1-a3df-36c900bb6311",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ae5564e1-3122-4553-9cf6-405f2332d679"
        },
        "item": {
          "id": "9d0ff180-cd41-4bf8-91e7-2854914bb9f6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f476bc1a-71a5-4dda-b7f6-da62459174b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c803933f-f708-4608-81f4-67b4ed4ebd85",
        "cursor": {
          "ref": "7bfc1dce-8d0c-4ba0-8ce7-13a48eea6d14",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "551541cd-6958-4a5c-b9ba-8b49cc5c2d95"
        },
        "item": {
          "id": "c803933f-f708-4608-81f4-67b4ed4ebd85",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9aff2031-55c9-482f-b0f6-ef8f47347159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4526e53-eaae-4d93-b3f1-d22f6c9931b5",
        "cursor": {
          "ref": "25ddde53-6c04-4aa5-a957-0f1491927e25",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b5c735ed-128f-48c9-8343-ad957546893a"
        },
        "item": {
          "id": "a4526e53-eaae-4d93-b3f1-d22f6c9931b5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a49c61d3-994a-47d0-b664-983d4f74fe05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef5a59d-0286-4f16-a7d1-16ad659c7a70",
        "cursor": {
          "ref": "e02cb35f-eadc-4958-9c1f-87cce043740c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "31b61b68-ec5d-481a-b7c5-7390c27346ea"
        },
        "item": {
          "id": "2ef5a59d-0286-4f16-a7d1-16ad659c7a70",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bec3b13a-df0c-4319-b86b-07f7dfec3210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 888,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d90b64-a83f-4209-995e-94e0e5bd6e8b",
        "cursor": {
          "ref": "937b5ffe-6f59-4175-ae75-e7247cd9c8b7",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f2e49797-aeea-44aa-948f-419b2424aa21"
        },
        "item": {
          "id": "55d90b64-a83f-4209-995e-94e0e5bd6e8b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "af994b2a-b573-42de-bccc-d9cecfe443af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef60c7e2-60b8-43b1-82e0-c926cfb14237",
        "cursor": {
          "ref": "ff6469f5-7f47-4faa-a271-d9d9c7117d92",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c65bec58-d04d-4a59-bedd-12e0ca8ae86b"
        },
        "item": {
          "id": "ef60c7e2-60b8-43b1-82e0-c926cfb14237",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "193968fe-ca14-4c16-ae9b-075e49ba0c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df19628-3d8d-4469-930d-6cf85c20d35e",
        "cursor": {
          "ref": "d6ed8c14-5f68-4554-82d9-f1e70cb1b028",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "745fa93f-5612-451d-9709-bd521bd2595b"
        },
        "item": {
          "id": "2df19628-3d8d-4469-930d-6cf85c20d35e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d8616a38-9ac2-44db-be0e-d042aab497cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 941,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235a700d-4c4f-4b81-a8d2-316101f87d08",
        "cursor": {
          "ref": "2fcc5094-92e8-4ff0-8c2e-14e1ae45e27b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f6b44071-3d70-4104-beab-6800f03f5025"
        },
        "item": {
          "id": "235a700d-4c4f-4b81-a8d2-316101f87d08",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ccb283ba-b292-4a46-8583-0618723383c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72da661-ce60-4fd9-8f40-a45427c5468e",
        "cursor": {
          "ref": "8bfe7e0b-f312-4f85-a38c-bf275e53c14c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "eb4b9a76-48f5-4365-ab60-1b7fca4b5809"
        },
        "item": {
          "id": "c72da661-ce60-4fd9-8f40-a45427c5468e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "844ebb4b-cc31-4d7f-adf7-246009efc0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a22004-cbc5-4ffb-b6a8-d339b1672903",
        "cursor": {
          "ref": "ec6a9ea3-1ce5-4ca8-8cbc-c14d7d3723b3",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "980c301e-f352-426a-9f5d-f8447a021805"
        },
        "item": {
          "id": "73a22004-cbc5-4ffb-b6a8-d339b1672903",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "47418d4e-6ee3-4cd8-9d5e-36571f55a133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14af0bd4-4f3f-4a6a-8f98-c0dba290b065",
        "cursor": {
          "ref": "e23da837-8c12-4388-9f6b-39b12ab765e3",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "25216d44-566b-43fe-887d-80012c88ebfd"
        },
        "item": {
          "id": "14af0bd4-4f3f-4a6a-8f98-c0dba290b065",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e9ac8b49-ba52-4247-b5bc-67be415dea65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1034,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f42980e-c921-4a15-8f99-dd99ee497287",
        "cursor": {
          "ref": "e3fc908b-1354-4381-9ded-7e2a973d65cd",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bcc88d5a-f590-4f60-ab08-0e62170b29d0"
        },
        "item": {
          "id": "8f42980e-c921-4a15-8f99-dd99ee497287",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b44cdb14-e786-44f2-95e5-0797a9f1a932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 904,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29d1383-b305-41c0-a0f8-0bf593f4970f",
        "cursor": {
          "ref": "128d5ea6-20d7-4ea8-95cb-0eba471f2934",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ae74618f-7fc8-4f89-ad34-474307bccdf3"
        },
        "item": {
          "id": "a29d1383-b305-41c0-a0f8-0bf593f4970f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c9121051-dd81-4fb3-a6b0-5f55173c6c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1118,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4671a6b9-49a1-4acd-8b3d-5c0510ba44f0",
        "cursor": {
          "ref": "885d37b7-a833-4c1b-bd43-aafa49db28f9",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0d41aac4-134a-46ed-806c-5f85d34464ea"
        },
        "item": {
          "id": "4671a6b9-49a1-4acd-8b3d-5c0510ba44f0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7d1216d4-ddc1-4d3a-acc7-9a86c1d9ab13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c368e6-eff8-4987-b4a4-d7389dd31e40",
        "cursor": {
          "ref": "00966e9a-ee9e-42d2-a118-057ba0c7a278",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f5be2d82-8179-480e-923d-5def91451a64"
        },
        "item": {
          "id": "25c368e6-eff8-4987-b4a4-d7389dd31e40",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "630b1d48-04d0-4af4-a33b-0f7c1a86456c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d3e980-39bd-4aa9-ba99-366ae027604e",
        "cursor": {
          "ref": "422b1c02-ca5c-4648-99cd-ed11a0c20930",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a5dc7b8a-1a70-481c-84b8-186846b763e2"
        },
        "item": {
          "id": "18d3e980-39bd-4aa9-ba99-366ae027604e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ee20f840-d80f-47e3-82da-b035eb183a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c35a0e-f7e8-46ff-8fb3-c98e45354fd2",
        "cursor": {
          "ref": "295a8257-b5f1-4e8c-b329-43488069634c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ab2bc442-e4ec-4df8-aa17-b67477110cc9"
        },
        "item": {
          "id": "37c35a0e-f7e8-46ff-8fb3-c98e45354fd2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cb355db5-98c1-4261-b561-37844ec88540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909ee2b3-ea9e-4ceb-a90b-3023d9febf2e",
        "cursor": {
          "ref": "c0bc74de-73d4-4b3f-858e-f864cc08e9b5",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "155d7ad3-3ccd-42cc-b535-a3711bc21515"
        },
        "item": {
          "id": "909ee2b3-ea9e-4ceb-a90b-3023d9febf2e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3d37fdbf-5294-42ca-bece-7872cf9b5681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 893,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e727090-6a04-443a-83b3-6982c5748b17",
        "cursor": {
          "ref": "94512646-1664-4e85-98e4-dd94f5ea6fae",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1078211d-0645-4c5f-bf0c-3a09b3f44426"
        },
        "item": {
          "id": "5e727090-6a04-443a-83b3-6982c5748b17",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "30c0255d-2412-45ab-ab78-7db9808a09cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 968,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a57563-c8ac-4131-8ffb-b19897baacfa",
        "cursor": {
          "ref": "55c4311f-99d2-40dd-a220-10424689161f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "47fda711-fcc5-412d-8ca2-1e5537d85fac"
        },
        "item": {
          "id": "66a57563-c8ac-4131-8ffb-b19897baacfa",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "56bcfe8e-efcd-4940-b609-d6d1e18571bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1061,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b79e554-2362-4a8b-96d6-0d2f8b0b19b1",
        "cursor": {
          "ref": "78620c9c-ce0c-433f-8408-63c5bd756382",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "91389bcb-77a9-4b61-8f96-0c2b2fd88c2c"
        },
        "item": {
          "id": "4b79e554-2362-4a8b-96d6-0d2f8b0b19b1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "62bc5388-64d9-4e00-ba25-c4150175ce53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c9a85a-a7c8-4387-b06d-d95d9ee895cf",
        "cursor": {
          "ref": "46daa06c-c61b-48bc-b6f2-3b9b74837512",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "87e4af47-565f-4f8d-b9be-5820985cde6a"
        },
        "item": {
          "id": "a8c9a85a-a7c8-4387-b06d-d95d9ee895cf",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9ef5edcb-22bc-4137-842b-79b04a03b864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7962ab36-9a18-409d-9b8f-cd13af8456da",
        "cursor": {
          "ref": "7b1443d5-4a21-4885-835b-b75eb7269037",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d9f02d9b-6eb0-4221-aef2-397e82971311"
        },
        "item": {
          "id": "7962ab36-9a18-409d-9b8f-cd13af8456da",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7d587004-11de-408f-9fd8-556da41b6d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68ea93b-51cf-4292-9707-59095650d52a",
        "cursor": {
          "ref": "b5e5612e-96e5-481e-8338-d315cb343613",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a76b8928-4e27-4c77-9ab5-f8f0d50ee67a"
        },
        "item": {
          "id": "b68ea93b-51cf-4292-9707-59095650d52a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ca757421-f40a-4506-aad2-5c0edf2acc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258d98d5-8364-4d4b-8771-0faa2c19565c",
        "cursor": {
          "ref": "371f6308-ce69-4c72-9a22-38da1d6b3399",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b0c3bf40-3725-4362-a650-be8cad8485bf"
        },
        "item": {
          "id": "258d98d5-8364-4d4b-8771-0faa2c19565c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a593b914-7948-4eab-90be-715ff68e9150",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d471bde-239c-4164-8ef7-f2069c01ee81",
        "cursor": {
          "ref": "f9680055-bdb2-455e-9c0e-eab0f4133040",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "016e11fc-7f00-4ef0-bab0-d45de8ac6ecf"
        },
        "item": {
          "id": "7d471bde-239c-4164-8ef7-f2069c01ee81",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "753c072d-cdf4-49fc-8775-160f3cc6b5fd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 589,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4054da-b77d-4a02-adc8-6c1e0abc068d",
        "cursor": {
          "ref": "014885b6-3017-4283-991c-248b2000f0b7",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1743f88f-0b3a-424a-b2b8-7a2daf23716a"
        },
        "item": {
          "id": "ed4054da-b77d-4a02-adc8-6c1e0abc068d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ef79a187-d4a9-45ae-8689-878723c090f6",
          "status": "Created",
          "code": 201,
          "responseTime": 4633,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce13c306-902e-46b5-b593-68cf407f7fee",
        "cursor": {
          "ref": "46120392-9ad6-47c3-9291-f9250dad9cc8",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "89647d77-8c0b-4af0-a8fe-a942872544ec"
        },
        "item": {
          "id": "ce13c306-902e-46b5-b593-68cf407f7fee",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8e0e6109-837f-4786-9975-9696c5080d4d",
          "status": "Created",
          "code": 201,
          "responseTime": 4358,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cdeef2-588b-45c0-96e2-246ee0517cc3",
        "cursor": {
          "ref": "c07771b0-51bd-49b4-a024-b6a8c7ce7a2f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d6f7bc38-4000-4c22-9fbd-419286ccf08c"
        },
        "item": {
          "id": "42cdeef2-588b-45c0-96e2-246ee0517cc3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "05608640-5581-4736-80fb-dd8890214dad",
          "status": "Created",
          "code": 201,
          "responseTime": 3883,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "728f2391-74df-4998-8d30-425edd095baf",
        "cursor": {
          "ref": "028ad52a-102e-45a1-ae91-8e1c593dbb5a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4775f858-afdf-4877-bbef-e4d5a19034a6"
        },
        "item": {
          "id": "728f2391-74df-4998-8d30-425edd095baf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f40d46ce-fc2a-41e4-ad78-0d8cbf04774b",
          "status": "Created",
          "code": 201,
          "responseTime": 3920,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2740cb-32df-4c00-ac7a-6d0df80d421b",
        "cursor": {
          "ref": "d8ccf71e-9a9f-4603-aee7-2310529527e4",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d21093a0-8665-4719-9e13-6c107a7610b0"
        },
        "item": {
          "id": "2f2740cb-32df-4c00-ac7a-6d0df80d421b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "aa526add-e8cf-4c6c-be0d-d80c76b3f6cc",
          "status": "Created",
          "code": 201,
          "responseTime": 4612,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "178dabd2-53dd-4609-b89e-31c48c06e518",
        "cursor": {
          "ref": "54ee971c-1c1f-47e7-8cdf-2da76ede3397",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e3ff07e6-4fe8-46d9-aef2-a48bb7c19e69"
        },
        "item": {
          "id": "178dabd2-53dd-4609-b89e-31c48c06e518",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8e98e56a-ed38-4185-b0b9-a2cd0b6a21e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178dabd2-53dd-4609-b89e-31c48c06e518",
        "cursor": {
          "ref": "54ee971c-1c1f-47e7-8cdf-2da76ede3397",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e3ff07e6-4fe8-46d9-aef2-a48bb7c19e69"
        },
        "item": {
          "id": "178dabd2-53dd-4609-b89e-31c48c06e518",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8e98e56a-ed38-4185-b0b9-a2cd0b6a21e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbee8db-4343-412a-9bc8-0228dc26cd08",
        "cursor": {
          "ref": "99f014d5-405e-4b80-9005-99c280ae63ca",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8b7ac9ef-c3d1-463b-8d0e-fd29fa4cb4fa"
        },
        "item": {
          "id": "7cbee8db-4343-412a-9bc8-0228dc26cd08",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e59f5244-6373-43bc-844b-3486fccb13d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cb4c7b-6069-46ec-b70f-4c390bed194e",
        "cursor": {
          "ref": "e0af4985-32b1-49ca-8f7c-719757dcf13e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fc8a92c2-5e6c-4953-b8ef-2a18aac75084"
        },
        "item": {
          "id": "25cb4c7b-6069-46ec-b70f-4c390bed194e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "960f5def-21f2-4f59-abac-9d4f00187c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cad9ae-bb3a-4e19-88fa-d5150d86df07",
        "cursor": {
          "ref": "d49e779e-7ccd-4fce-88c1-4a24de3bb3c5",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8ad42571-9385-46c9-b2ff-68f704e85f78"
        },
        "item": {
          "id": "54cad9ae-bb3a-4e19-88fa-d5150d86df07",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ade7fb2e-be22-459b-91fc-ebc3edc5bc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d615e6-8108-4481-aede-960cb28116e3",
        "cursor": {
          "ref": "7224b0ea-945c-45f0-b4dd-88bb219b3c8d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "059fe6c8-22d8-43f3-81a8-32405ea1c42b"
        },
        "item": {
          "id": "05d615e6-8108-4481-aede-960cb28116e3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cfedf071-04b5-4fca-a6ba-fe3ccec6bfaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9260b18-0986-4255-a91f-bbb64c238b1c",
        "cursor": {
          "ref": "e00b2ba6-acf0-4145-9e37-27077a5fbe8b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c6507ebe-462b-4bb9-8b07-bd9626801735"
        },
        "item": {
          "id": "e9260b18-0986-4255-a91f-bbb64c238b1c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b116f7d1-1379-4621-9180-bd0bdf6b72e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7732ae-b031-42ef-a9b6-ad5a033a1ec3",
        "cursor": {
          "ref": "8d0084ce-706d-4596-b416-e36ffa3e833c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "50d71128-5a40-493f-9094-0435c99a3dde"
        },
        "item": {
          "id": "5d7732ae-b031-42ef-a9b6-ad5a033a1ec3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a132f586-9586-44b4-be20-377ce4f3771e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3884cca7-5dd8-4a17-a61d-1cf955c1dfb4",
        "cursor": {
          "ref": "a017ab47-2569-48fc-92ad-26903c035835",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "05bdfd48-8e02-4be0-8194-edd314de6551"
        },
        "item": {
          "id": "3884cca7-5dd8-4a17-a61d-1cf955c1dfb4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a6820eff-c16b-49ed-9c0f-54663dcde400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c59092-e2d5-4237-a24b-7af6f759ea70",
        "cursor": {
          "ref": "bfff5507-cb60-44b2-8407-e48373f1f13d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2dcc3775-7a29-4e50-9b51-0792946edf33"
        },
        "item": {
          "id": "39c59092-e2d5-4237-a24b-7af6f759ea70",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3d4c0747-7db0-483c-9d83-b89ddaa15888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cb5d17-b337-4560-a4ef-8cd1d9fcbaa8",
        "cursor": {
          "ref": "8b94fa9f-d1b5-42d1-88f8-d9f79632e1ac",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cd14c3f6-4fa2-4009-aa5d-b725650e395a"
        },
        "item": {
          "id": "28cb5d17-b337-4560-a4ef-8cd1d9fcbaa8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "03dc322d-ea1a-460f-bbad-70c3aa5a8aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c9c965-2651-44be-b447-9b0a7e8d996c",
        "cursor": {
          "ref": "3f9c7e2b-bab3-4254-bc07-dbb1502bb4c1",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f8611771-850c-4dab-87fe-65282fd406c6"
        },
        "item": {
          "id": "41c9c965-2651-44be-b447-9b0a7e8d996c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "15ba7f68-de45-4b35-a3a5-993a6f9bd683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0412d35e-34ae-4a5e-b1b5-9c94f14e8a6c",
        "cursor": {
          "ref": "e0034700-8e77-4eea-bfa2-0f71f78b0541",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e190a198-06ba-41c5-abd0-eeaeda33aa8e"
        },
        "item": {
          "id": "0412d35e-34ae-4a5e-b1b5-9c94f14e8a6c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "949e22b9-8966-40db-ac51-7b24e6884be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c44ddc8-2a5e-4f81-8643-6c6dd7c520a3",
        "cursor": {
          "ref": "f24a08e4-83c4-4071-90b7-b95e693c1211",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8625c41b-d819-4ef8-aaba-f76d03b5b32b"
        },
        "item": {
          "id": "5c44ddc8-2a5e-4f81-8643-6c6dd7c520a3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "40c16ac3-f459-41d9-a5cb-ec27abe8ec75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2b4ebf-624a-4253-9682-1eda69ab34d6",
        "cursor": {
          "ref": "95de0ee7-e3d4-40eb-a1ce-d50a08cc9783",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4d1f5069-8442-4366-a6d9-e6a1bf0b7c2e"
        },
        "item": {
          "id": "5b2b4ebf-624a-4253-9682-1eda69ab34d6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e71ee1b3-327f-4a4d-8c79-1e4bb066ca42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b3b1c5-9f63-4955-b154-f9eb436b7289",
        "cursor": {
          "ref": "5c59c80f-905b-4c24-bd40-f79e96ca19b4",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7dc1f32b-8a1a-464d-81e3-2ce6c93e33a0"
        },
        "item": {
          "id": "10b3b1c5-9f63-4955-b154-f9eb436b7289",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3c4312d8-4bd4-4aed-a335-ffaa7a28a512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982541ef-9e15-4ba9-8c06-30d60d9fe61f",
        "cursor": {
          "ref": "54a52e33-aec3-4029-b803-7c8bf75eabdd",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "90f8c605-f30f-4d8b-a18c-63375b60be8e"
        },
        "item": {
          "id": "982541ef-9e15-4ba9-8c06-30d60d9fe61f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b439b78e-597c-45f7-8ee0-fd473be5f8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1874,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3feead-5157-4032-992d-9e915972a06b",
        "cursor": {
          "ref": "f93231e0-dc76-4a48-8c3a-0e2d2925f38d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "58a54f2c-2798-4346-9e62-c2e49e57de98"
        },
        "item": {
          "id": "6d3feead-5157-4032-992d-9e915972a06b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2b903748-6e7b-43ce-91e2-e0a7bb903aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1846,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89993b66-deac-41cf-938c-869ee64b5efd",
        "cursor": {
          "ref": "0833257c-68a9-4453-b936-b3b2b84cfbf5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bbad5a42-e389-4075-950c-6c84947ff0ac"
        },
        "item": {
          "id": "89993b66-deac-41cf-938c-869ee64b5efd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "23cabc2d-de11-4a2b-bf86-4e5306149324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1636,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77bd9e2-a7c0-43a0-a561-f29bcd18fff4",
        "cursor": {
          "ref": "66a1d527-e650-41cf-a87d-1edaacb4f85d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b7011c33-a3f2-41b6-bb67-a613b5fa7465"
        },
        "item": {
          "id": "e77bd9e2-a7c0-43a0-a561-f29bcd18fff4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ad651454-5b84-4602-97c6-76247b070d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1264,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00150dc3-1d74-42f0-a5c0-e9e2ca00320c",
        "cursor": {
          "ref": "b9b92d71-d618-4859-8461-d0d54566aece",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5b1a89dc-a672-498d-b348-07f0e8bd4525"
        },
        "item": {
          "id": "00150dc3-1d74-42f0-a5c0-e9e2ca00320c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "76d7e3ab-5dc4-4e6a-8d28-f29085cf9f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4a54a5-c095-4c59-b396-6f8f899ca170",
        "cursor": {
          "ref": "52c6ae54-5962-474e-88ba-185c5d57522f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "31eac91c-9785-470f-b4a4-c85d49883e73"
        },
        "item": {
          "id": "1f4a54a5-c095-4c59-b396-6f8f899ca170",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "701f33da-d3af-452e-a8ac-23055defce58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58871171-bf81-4af2-9b53-b75bf6fd3f55",
        "cursor": {
          "ref": "a151a608-bbd5-45e3-8873-df7acd6a32f6",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "77717aaf-5c0d-42c1-bf05-f1f0360700a8"
        },
        "item": {
          "id": "58871171-bf81-4af2-9b53-b75bf6fd3f55",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "68eb545d-1cd3-47bc-aeea-0d26794b5546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a936f3c-1035-48d4-b58d-3cf67b1a93ef",
        "cursor": {
          "ref": "942450c7-71ce-443a-b719-63bcf99f8ce3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e86255f4-1847-46a0-b851-10af65c9c68c"
        },
        "item": {
          "id": "5a936f3c-1035-48d4-b58d-3cf67b1a93ef",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cb3b11fd-3172-424c-9b13-38a9c47fca78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6ac7ef-2fec-44a8-98e1-1b8df7c91e28",
        "cursor": {
          "ref": "e4f90d87-0404-4237-9f2c-3584eec630bc",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a2d3e7b1-e5c0-4a82-b395-903e44f62c3a"
        },
        "item": {
          "id": "8e6ac7ef-2fec-44a8-98e1-1b8df7c91e28",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "63f8b190-fef0-4d2a-9dad-72a086489458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3fd006-7c12-45f7-b5a4-750009263a4b",
        "cursor": {
          "ref": "948d43de-ade0-41ee-a7f8-cc03164254bf",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4c502e9e-85e0-475f-a88b-d3073063d1b4"
        },
        "item": {
          "id": "ae3fd006-7c12-45f7-b5a4-750009263a4b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9f5c2252-c07c-48c8-a5e3-e5da2bb0ffbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fcb30e-d54c-4990-93de-9d196efbc6b0",
        "cursor": {
          "ref": "0689a9f9-50ee-4627-96e9-0019c0eeddeb",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c06da7b0-1757-41d8-9493-38b3b19cdf35"
        },
        "item": {
          "id": "71fcb30e-d54c-4990-93de-9d196efbc6b0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1e9fab49-e85e-4472-9438-669f6275d292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6f7a62-1079-46bf-8d7b-3cbbaa5c3cc1",
        "cursor": {
          "ref": "ae8d08a2-21c2-47eb-8d14-aed29a7a3620",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2eb579dd-6523-4aea-8a3a-677586681098"
        },
        "item": {
          "id": "2b6f7a62-1079-46bf-8d7b-3cbbaa5c3cc1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "906df983-6586-49d3-82bd-e7b644e9e328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a3f833-c59d-4e79-beb8-b89299e91a77",
        "cursor": {
          "ref": "d390cc61-7f2e-4cc8-9f2b-c22d47be5ba0",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1161b138-0461-430d-aa71-85db05bd1c07"
        },
        "item": {
          "id": "c0a3f833-c59d-4e79-beb8-b89299e91a77",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9156fa8a-d5bf-4496-90e8-0d58dd01c7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a311146-a291-453f-8871-e2437829fde3",
        "cursor": {
          "ref": "c39b65ff-9dfb-4a55-86e1-d9dc8efa95be",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b9b3f612-1bb6-466a-8091-8c8aa150c0ba"
        },
        "item": {
          "id": "9a311146-a291-453f-8871-e2437829fde3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "21761e13-8373-4b00-b11a-198b87df9f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc65cc9-fa59-46fd-966d-82012727f030",
        "cursor": {
          "ref": "692741af-6ab6-4105-9b88-53124f80acb6",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "03dd1420-cf15-4a85-9d42-2c7e0f21e22c"
        },
        "item": {
          "id": "1fc65cc9-fa59-46fd-966d-82012727f030",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1526e6ba-d295-4ed0-ac66-be25c38177d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7835c46-07b6-4fee-bf99-20b1ff744f46",
        "cursor": {
          "ref": "0ec7c24b-a5c3-4716-abdd-d58fd1579f38",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "37b5599b-b125-4d77-9c0c-be6502c7e4bc"
        },
        "item": {
          "id": "f7835c46-07b6-4fee-bf99-20b1ff744f46",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f5e99b10-8eb0-48fd-802e-ddeb4e4224d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40de0206-11ee-4560-85eb-1fa6a8992924",
        "cursor": {
          "ref": "13af6ba1-f5e8-4ede-ab1e-f49b70a33844",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1bb8e332-da5e-4a29-8511-9b1665bfeeab"
        },
        "item": {
          "id": "40de0206-11ee-4560-85eb-1fa6a8992924",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1534719c-f868-4f38-bde2-e32467ec90e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da2a5b7-6379-4dd1-929b-62a425f5b8fd",
        "cursor": {
          "ref": "60a3ef24-df4c-4afc-9fc9-89da7542aad0",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a29a5c7b-09a0-40f4-a3b5-2d691b695911"
        },
        "item": {
          "id": "9da2a5b7-6379-4dd1-929b-62a425f5b8fd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3fbfb2db-da05-4e7f-b5eb-a528a52b4735",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6674554-878d-41bb-93bc-7907fc6e5803",
        "cursor": {
          "ref": "e94d5aef-88d9-43ed-ae1d-0ad636732054",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1396a982-2302-41a5-b308-1c6349747202"
        },
        "item": {
          "id": "d6674554-878d-41bb-93bc-7907fc6e5803",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "7587dcb5-9c17-43bc-9224-c44dafcc9e6d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 570,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b7f59a-1828-4ba3-9799-6ab63c35ced0",
        "cursor": {
          "ref": "73ef341c-267d-4249-9456-0f2f8296bc04",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "60f25123-ba46-4e2f-ba89-2518bde51bf6"
        },
        "item": {
          "id": "29b7f59a-1828-4ba3-9799-6ab63c35ced0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dd2991ed-d183-4822-ae39-ba010691c5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b7f59a-1828-4ba3-9799-6ab63c35ced0",
        "cursor": {
          "ref": "73ef341c-267d-4249-9456-0f2f8296bc04",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "60f25123-ba46-4e2f-ba89-2518bde51bf6"
        },
        "item": {
          "id": "29b7f59a-1828-4ba3-9799-6ab63c35ced0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dd2991ed-d183-4822-ae39-ba010691c5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6fb985-c37b-4c59-a084-d0502801fec8",
        "cursor": {
          "ref": "a2771fd9-5bcc-44cc-baf0-1593974392fb",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fccd2769-9930-491e-8597-369e3cde3eca"
        },
        "item": {
          "id": "7d6fb985-c37b-4c59-a084-d0502801fec8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3186a47e-cdd8-4de0-b6ed-c33826dad23c",
          "status": "OK",
          "code": 200,
          "responseTime": 493,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "1f0fd912-db47-41d6-bf7f-fc28b763c684",
        "cursor": {
          "ref": "5d0e510b-3644-436f-8d96-ef099ad7d7b7",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "22dbdc43-cb59-4198-860b-3879eab204a5"
        },
        "item": {
          "id": "1f0fd912-db47-41d6-bf7f-fc28b763c684",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4e53a224-abb2-4807-8d06-8fdafacd6b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2c5e64-096f-4dd5-afe4-a39ca9c2345e",
        "cursor": {
          "ref": "5f9341a9-ee91-44b1-916d-aef8015746f7",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c3bffeff-509f-4931-bfa7-39d69f800b32"
        },
        "item": {
          "id": "9b2c5e64-096f-4dd5-afe4-a39ca9c2345e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cd5731eb-f05c-411f-b002-c19cd8e2bb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c31469-86eb-488b-bf5d-286850e53cd8",
        "cursor": {
          "ref": "72783021-c34a-4372-8555-8ebab73b97c8",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1eae796e-e7ed-4fec-9a23-ff4047a81a37"
        },
        "item": {
          "id": "35c31469-86eb-488b-bf5d-286850e53cd8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "037871c8-8431-4811-b63e-235fb6526195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cabe4c2-edfd-47b2-a912-31f1b7f6a50f",
        "cursor": {
          "ref": "b43fb1e4-e4bf-4bda-8b2a-fd48354707bb",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fa788345-f428-41ca-9ffe-621d0f02b30f"
        },
        "item": {
          "id": "8cabe4c2-edfd-47b2-a912-31f1b7f6a50f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b16ea677-ad03-4922-855a-d4a8e4ab4b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcb2fbc-604f-407b-aece-511e823774c4",
        "cursor": {
          "ref": "9f25c217-a1dd-40b4-ba98-eeddf54c16ce",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "435df9c6-01cc-49fb-92f4-0ec576d32b5e"
        },
        "item": {
          "id": "5bcb2fbc-604f-407b-aece-511e823774c4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "96af8d1a-0ac8-4ebf-ae4c-f4c3d22b304d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c02eb5-c479-43b9-99b6-1e35672bb0ae",
        "cursor": {
          "ref": "9b2044cb-2868-4390-bffa-c0f0c8d8614a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "71e375ca-b9b1-441e-9601-aa0ea9ac9e79"
        },
        "item": {
          "id": "95c02eb5-c479-43b9-99b6-1e35672bb0ae",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8f150174-7588-4cbb-8f59-882e093fd813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d48aff6-7a7c-4863-94e6-656ea771c328",
        "cursor": {
          "ref": "fc2afd83-5851-402f-bbcf-07717e4b7695",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8fc2bf02-3a57-49c5-a4d8-57765fe32168"
        },
        "item": {
          "id": "0d48aff6-7a7c-4863-94e6-656ea771c328",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d9db70e0-a8da-4430-b1bf-f7b337fc9ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4837a3-ac89-4fb6-a0ab-b8e8c96a1cdb",
        "cursor": {
          "ref": "07cf3b2c-3829-4268-9aa1-ff57548f711d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f7636410-14fe-4854-9733-4742c9196fc7"
        },
        "item": {
          "id": "7f4837a3-ac89-4fb6-a0ab-b8e8c96a1cdb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "82cac7a3-d3ca-4f1f-9801-75d245c32703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedb417e-90a7-4b74-9261-3fa1b746f5ec",
        "cursor": {
          "ref": "7e926259-82fd-4269-b1ee-582234a2bdab",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0137fa11-91f8-47a1-9b31-ffa840771898"
        },
        "item": {
          "id": "dedb417e-90a7-4b74-9261-3fa1b746f5ec",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "225b6513-eed7-40c3-97af-ce5cf04d6447",
          "status": "OK",
          "code": 200,
          "responseTime": 355,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:153)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:153)"
            }
          }
        ]
      },
      {
        "id": "240c6212-5730-45e1-a740-1d6b776efc59",
        "cursor": {
          "ref": "d0c140d1-f195-4093-886b-e5437186049c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1766716a-bcd6-435b-88bc-07635834c58d"
        },
        "item": {
          "id": "240c6212-5730-45e1-a740-1d6b776efc59",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "672f3f10-653f-4575-9198-fdd9f1c3e0a8",
          "status": "OK",
          "code": 200,
          "responseTime": 397,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "beb7aa2a-9dd4-43b1-bb8d-cdb4aa8ee0ca",
        "cursor": {
          "ref": "8d2fc952-d927-40cc-a8ac-2c88ec9e4a58",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "97f5d159-b37e-4cac-baf7-08411209b93f"
        },
        "item": {
          "id": "beb7aa2a-9dd4-43b1-bb8d-cdb4aa8ee0ca",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "80828313-b6db-4ef1-8e4c-39421509aafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216c2944-ace0-4a6f-a0fc-cebb101d6f41",
        "cursor": {
          "ref": "698386af-024b-429c-aa54-38345bce3788",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dbf5cf8b-0c23-42d3-bc4b-376083692d81"
        },
        "item": {
          "id": "216c2944-ace0-4a6f-a0fc-cebb101d6f41",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5a9f868b-bb48-43fb-8260-6ff4c6f68053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0ec723-ba44-4c8e-aa28-653f9ba2a7fd",
        "cursor": {
          "ref": "44eaf0cc-f9b4-4bff-8ac8-a8e9951ee800",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b2f82e7c-d15a-45b9-a587-ca3303cd7f9a"
        },
        "item": {
          "id": "6e0ec723-ba44-4c8e-aa28-653f9ba2a7fd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8f93409e-2501-42cf-b550-d0f388c5fbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297866c9-d511-40f2-b617-49bff2913e9a",
        "cursor": {
          "ref": "3e5637c6-bb51-4b01-ae6a-8f4861fc115e",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5ae5221f-6d84-489e-a5d9-415c14867f60"
        },
        "item": {
          "id": "297866c9-d511-40f2-b617-49bff2913e9a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fd936ba5-c21f-4524-9803-975c92271b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c4871c-3f9a-4eb0-abc3-ab23a71a9697",
        "cursor": {
          "ref": "494fc64a-5083-4d1f-97c7-628a43a69a40",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e6a50317-c93c-4139-8771-90473d030235"
        },
        "item": {
          "id": "c4c4871c-3f9a-4eb0-abc3-ab23a71a9697",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0ab3e9eb-3441-4f2b-bdf1-435b8fdd9fa2",
          "status": "OK",
          "code": 200,
          "responseTime": 411,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:159)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:159)"
            }
          }
        ]
      },
      {
        "id": "841ba874-5a08-424a-b276-e4ef08c59e3c",
        "cursor": {
          "ref": "557ad426-4ca7-4632-bbbc-5854410376b3",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "31aa3f9f-8b47-4f11-b7dd-b3faf2995ff9"
        },
        "item": {
          "id": "841ba874-5a08-424a-b276-e4ef08c59e3c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "13441a77-5950-4f79-b8bb-cccabd46e252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3cfdf4-0077-4b72-9d3b-032cb34e19b5",
        "cursor": {
          "ref": "e1111a51-8d23-474e-b653-a75d346f872f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5b06fb2f-907c-4012-a15d-4ceb63f0c271"
        },
        "item": {
          "id": "be3cfdf4-0077-4b72-9d3b-032cb34e19b5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "33284c78-6174-430e-9a9e-28f1ffdcb5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dd2dbd-c09e-4057-88e1-afbeadf902c8",
        "cursor": {
          "ref": "02474857-786a-4e5a-b1b9-f04fa3e5d71b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3e482a85-3b71-48a3-9722-e24daa42a2f0"
        },
        "item": {
          "id": "97dd2dbd-c09e-4057-88e1-afbeadf902c8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f500ab8a-804b-4152-ba96-761cb5c47a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba5644c-dbfc-4905-8735-49f61949ab30",
        "cursor": {
          "ref": "2799ea78-ca29-4ab2-84fa-d4d9304f5a48",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "72b6e405-eecc-4569-87d6-89c8b7d3cdb0"
        },
        "item": {
          "id": "1ba5644c-dbfc-4905-8735-49f61949ab30",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "492cbf6a-ab35-4d26-88de-8bcc39b3406b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7217e4d0-cf54-45e3-a7bb-3cd48ae667b8",
        "cursor": {
          "ref": "25438867-030b-43e8-90a5-4620ba9a85a7",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "06ae0c0f-5ce7-423c-bd95-02243b907b64"
        },
        "item": {
          "id": "7217e4d0-cf54-45e3-a7bb-3cd48ae667b8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a8bddfd4-e6e4-4b29-9ff4-70cabbb5c212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3939f5b0-ff40-446e-a248-92f022edc3c1",
        "cursor": {
          "ref": "3ab738d4-ffd1-4cec-9f66-ce5df351efef",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "401a5b80-17db-4d9b-8b7d-8a05035f297a"
        },
        "item": {
          "id": "3939f5b0-ff40-446e-a248-92f022edc3c1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e688ef89-a872-491c-9b24-82f23b3a3849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69a0917-2957-43f8-ac98-6519b611d8dd",
        "cursor": {
          "ref": "dce514dd-ab27-4237-8ca0-88bd103d2f9c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9b215a98-6676-448b-a6ca-5c31afd2e34d"
        },
        "item": {
          "id": "b69a0917-2957-43f8-ac98-6519b611d8dd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8ad747eb-c84e-4de8-aed4-efad14163415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d74c36-dda3-4009-9884-ca9453c0497e",
        "cursor": {
          "ref": "12a1a4d0-5f83-4f29-a604-ac81f0ea5fb1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2f27d5ce-22c1-47eb-8cb8-dd56965dc82d"
        },
        "item": {
          "id": "41d74c36-dda3-4009-9884-ca9453c0497e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d2c5ea27-5efd-4b40-8098-6f3c64dfdb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebe9b4e-8b87-4141-b612-87b10bd47d7b",
        "cursor": {
          "ref": "a32179a2-bfe7-49ef-ba0d-df338ab0142d",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0c421c48-a5a4-4cde-a7ea-1a64f1f16356"
        },
        "item": {
          "id": "6ebe9b4e-8b87-4141-b612-87b10bd47d7b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "46b023c7-4f95-4dbe-8c66-af030e78c4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc847ca-0afa-4cbb-8ec6-897ca786cf70",
        "cursor": {
          "ref": "f1cd5869-63f9-4530-abd1-3de85cba33d1",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e6937fac-b78d-4cb9-b89f-1c3329c2f38f"
        },
        "item": {
          "id": "abc847ca-0afa-4cbb-8ec6-897ca786cf70",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "85cdcf94-1755-4554-b9b2-42306ea5892c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f50d49d-894c-4457-a05a-16f52df9889f",
        "cursor": {
          "ref": "20ea5b9d-5a39-4fcd-8cec-44a7d6bb2dec",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0de2e7ac-fc98-42b3-9bce-4d3255784d63"
        },
        "item": {
          "id": "6f50d49d-894c-4457-a05a-16f52df9889f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0862fc69-68c8-4b2e-9b0f-44a6c71fd453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b59f60-808d-47e5-9d2b-23d0928dbc0f",
        "cursor": {
          "ref": "0ca72aeb-4a8a-4434-97f7-2cf8274f9670",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5cc871c3-50d2-452e-a757-8fa857fb4d5a"
        },
        "item": {
          "id": "44b59f60-808d-47e5-9d2b-23d0928dbc0f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "694bc842-2489-429a-b819-74fde718fcd3",
          "status": "OK",
          "code": 200,
          "responseTime": 363,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:171)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:171)"
            }
          }
        ]
      },
      {
        "id": "021c64ab-f0e2-4b14-be2f-dda2eba1aead",
        "cursor": {
          "ref": "437739b3-fee9-4d7c-b21f-e65d504de935",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b473e3fe-a5b3-4398-80dd-be52975eca21"
        },
        "item": {
          "id": "021c64ab-f0e2-4b14-be2f-dda2eba1aead",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "18938a59-5576-4087-95ad-02cfa77c9712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8995d4e-c69f-4fb7-bcc8-b3c1d5f994c7",
        "cursor": {
          "ref": "48fc7f53-b9ae-40bb-ac81-a74b53664abf",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8039ef16-963d-4ae5-8859-ca46f3d88165"
        },
        "item": {
          "id": "e8995d4e-c69f-4fb7-bcc8-b3c1d5f994c7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e19bb5ef-5886-4aa0-8059-2aad498d6753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a5bafc-621a-44f8-9ed7-edae450f6c58",
        "cursor": {
          "ref": "ff202f3d-ad29-41f4-8e76-8c33d09f7619",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b5f0ed0d-9760-4be4-814f-c5e64dc4b56a"
        },
        "item": {
          "id": "b6a5bafc-621a-44f8-9ed7-edae450f6c58",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d878b85e-cd5e-449a-a9a2-31f12116b807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47eb065a-b627-4204-aaf7-e39e3448e887",
        "cursor": {
          "ref": "579af3d6-dada-4a69-89ae-edbdf4edbd59",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3e7a14b5-855d-47b7-b0e2-b99ad84fd49d"
        },
        "item": {
          "id": "47eb065a-b627-4204-aaf7-e39e3448e887",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "de1a0f1d-d0be-4c59-a98e-9fc469bc37d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e23aa52-f78c-4041-a546-b239bddb8787",
        "cursor": {
          "ref": "a9252762-ad25-4e5b-a898-fa8e1ad83d17",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2a98c948-e055-4f6f-9a95-d3961443c267"
        },
        "item": {
          "id": "2e23aa52-f78c-4041-a546-b239bddb8787",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6ac01b89-dcfc-466e-acc3-87f2d7f93a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f98072-0a12-42e5-a306-d83cd13473fc",
        "cursor": {
          "ref": "823c1cdf-f91f-4c1e-a184-16b5a69abab1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a8605853-b7f2-4985-bdb3-3eb3a7db1459"
        },
        "item": {
          "id": "c4f98072-0a12-42e5-a306-d83cd13473fc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6a6aeff8-7fb0-4558-a21c-e1d337e0ffb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b277867e-cf48-4eb2-9869-46f181b762d2",
        "cursor": {
          "ref": "df4fee92-532c-4245-afbb-ee9247bfea9a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3de97e77-8243-48b9-8f4e-68b0856d861b"
        },
        "item": {
          "id": "b277867e-cf48-4eb2-9869-46f181b762d2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7e419db3-115e-4727-8021-cfe0da245d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1e33f6-a00b-4eb5-8eaf-9fe6c9c93afe",
        "cursor": {
          "ref": "5ffd6e99-26d4-4ea5-8ad2-694b2e6c2441",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4b0417fe-6f91-4920-962f-93839d995516"
        },
        "item": {
          "id": "5c1e33f6-a00b-4eb5-8eaf-9fe6c9c93afe",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9defdca5-e95a-48ab-8169-c5545ada0620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94de30c-854d-4fd1-bca7-1a7345f644f3",
        "cursor": {
          "ref": "f9e33aa1-f0e5-4143-b37e-9c85a6febac2",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4040af76-4c4f-45c2-8a4c-6eb8c30ec41a"
        },
        "item": {
          "id": "e94de30c-854d-4fd1-bca7-1a7345f644f3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c085daa3-816b-45b7-a8c4-8d4a7e85daba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b812c086-8404-4e26-9e24-aa0c3e531b66",
        "cursor": {
          "ref": "9a4dfa30-f8c6-40b2-9aea-474b960b4978",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1e60ed28-33eb-4a3a-b406-be1ecd4dae07"
        },
        "item": {
          "id": "b812c086-8404-4e26-9e24-aa0c3e531b66",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f879ab17-1c4c-4735-b4f9-4488b9479bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7592091-2da1-41eb-8036-d4aef6665e19",
        "cursor": {
          "ref": "1520c7e2-262a-4a7d-aefb-800734d562cb",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6a4ced23-7c8e-437d-9089-218a398641d5"
        },
        "item": {
          "id": "a7592091-2da1-41eb-8036-d4aef6665e19",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "223d7d97-7ba6-4e77-8119-c27c9b8816dc",
          "status": "OK",
          "code": 200,
          "responseTime": 278,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:182)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:182)"
            }
          }
        ]
      },
      {
        "id": "a9470a66-197f-42f9-a0cd-09b44184bbe8",
        "cursor": {
          "ref": "87ce55cd-c50a-4c87-b129-a376e644d319",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "71af38ed-7d67-4ba4-a9db-866e17e6b363"
        },
        "item": {
          "id": "a9470a66-197f-42f9-a0cd-09b44184bbe8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8c091500-91be-4ea5-83e9-3f7eb8fde239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d496482-7106-426b-9030-9870770911fe",
        "cursor": {
          "ref": "3fe1215a-4f6f-4619-afb7-12e5966b46a6",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5b14be3f-5d57-4e5f-b8ed-c1caeea71bad"
        },
        "item": {
          "id": "1d496482-7106-426b-9030-9870770911fe",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "05ae6171-5c78-4208-852d-b32943439110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037e695b-b56d-4806-9c31-099281718576",
        "cursor": {
          "ref": "49987c3f-f37c-43c7-9c9e-f95ded33d707",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "13d8ade7-e91b-4227-96ef-5386c8f77e2e"
        },
        "item": {
          "id": "037e695b-b56d-4806-9c31-099281718576",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dc0a3147-f7a9-49a2-9f3a-bb5c6b26f49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc923243-1a00-4d06-a498-4986d3cb1bea",
        "cursor": {
          "ref": "308bfad2-c511-40fb-8723-4842b6edd857",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e60c911c-11ec-496c-bd2d-85b65523eb16"
        },
        "item": {
          "id": "bc923243-1a00-4d06-a498-4986d3cb1bea",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8c75b53f-099d-4070-afdf-5dc5b74dab59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001db1d4-7fc2-4452-abc6-a18f7663fadb",
        "cursor": {
          "ref": "f80e302c-4b52-4754-9ac7-a0f0f710461d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "29461a65-7250-4ac1-82b0-4206facee9e5"
        },
        "item": {
          "id": "001db1d4-7fc2-4452-abc6-a18f7663fadb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "438d7377-6d1c-464b-8edd-c42b6a53028b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8907f111-544b-40cc-af08-adecbac47774",
        "cursor": {
          "ref": "0e055935-b7bb-45d9-9f3e-ec4f264d10e0",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "211a4795-e793-4848-8684-64af2f717adf"
        },
        "item": {
          "id": "8907f111-544b-40cc-af08-adecbac47774",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "40d77a67-665c-486d-979e-eb33aa9db509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcaa7ab-3aea-4754-80a9-54a47636a3cb",
        "cursor": {
          "ref": "ae779d30-b289-4cbb-bd99-b98e7aabd4e8",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "54e4ecf5-28be-453a-8551-4db558eba11b"
        },
        "item": {
          "id": "5bcaa7ab-3aea-4754-80a9-54a47636a3cb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d982faee-02b3-4c82-846f-e02aae1d37cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8989e4b4-0ee8-4aac-be3b-e880eb594260",
        "cursor": {
          "ref": "f19042c8-5880-4b6d-ab0f-7fb53df7867d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3f7cfa1b-9b29-4a6c-a78c-4516da7aaae1"
        },
        "item": {
          "id": "8989e4b4-0ee8-4aac-be3b-e880eb594260",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a62ade2f-5540-4d97-ad75-039dc1fc380f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b86e687-a6f3-443e-8c76-96c51fb53264",
        "cursor": {
          "ref": "2e92209f-3c67-4050-9098-1d9e6667cf02",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "14fd6fa2-3d7b-4889-a1eb-cdb75e43f30b"
        },
        "item": {
          "id": "3b86e687-a6f3-443e-8c76-96c51fb53264",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c940453a-9a55-41cc-9338-d40d319474c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb86ecb-5a2f-437f-b0b6-bf9a1d8406a9",
        "cursor": {
          "ref": "758ede1c-e6a9-4889-918a-354999392f2d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c2ad625d-06eb-4d4a-8275-5063eaa1b119"
        },
        "item": {
          "id": "7bb86ecb-5a2f-437f-b0b6-bf9a1d8406a9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "025394f3-a778-4b83-86aa-c9d0467e1a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2db8e65-aade-455d-ad34-e3d2a687ebd8",
        "cursor": {
          "ref": "0165ee8a-4d16-43c8-b52a-783689bb3fba",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f6ddb7c2-1036-4777-89d1-85e02429b3cb"
        },
        "item": {
          "id": "e2db8e65-aade-455d-ad34-e3d2a687ebd8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "99395a21-34c9-4283-8704-8cf7648b3b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483330e6-55fa-47fa-bdf6-95f41faebed2",
        "cursor": {
          "ref": "071cde00-8452-4958-a127-35e292a8f700",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9336b5b6-f7bf-482e-9702-8aba812fa440"
        },
        "item": {
          "id": "483330e6-55fa-47fa-bdf6-95f41faebed2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e5a63efc-a66b-4f35-8d93-1e86d0745105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514e3c4f-b653-43d7-b7f5-ee3d3ea53d91",
        "cursor": {
          "ref": "aafc34bc-def5-4ac2-85d4-6a06e1204388",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f68321e1-f18e-41c1-acd9-69d4c0194327"
        },
        "item": {
          "id": "514e3c4f-b653-43d7-b7f5-ee3d3ea53d91",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0cf58170-c4da-4bb9-b5f6-29fc7e721095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928a6686-f768-43c5-903f-52be0df8b755",
        "cursor": {
          "ref": "21642702-da00-4d1e-9824-9682f1bfa7d2",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4a3a806f-51f2-4475-8952-e5822265a07b"
        },
        "item": {
          "id": "928a6686-f768-43c5-903f-52be0df8b755",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fd8863e3-e281-40bb-bcc6-4ee459df275c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e43872-8d54-4b89-92e3-aedf8a7de877",
        "cursor": {
          "ref": "06d4309c-e55a-4dbc-8d86-28fe516850b0",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0d6faf9d-3857-49a5-ae8b-0937140fdfeb"
        },
        "item": {
          "id": "48e43872-8d54-4b89-92e3-aedf8a7de877",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2cdb0917-fa64-4de3-ac72-011850992470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef7498e-3bd0-41b4-8e56-044fac3307dd",
        "cursor": {
          "ref": "40bf099e-f180-4e49-b7f5-7182dfabb47c",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "607f6308-f026-43da-89f8-53cb89fa52c1"
        },
        "item": {
          "id": "bef7498e-3bd0-41b4-8e56-044fac3307dd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6190fa87-6523-430f-a146-25857f214be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcd1951-8e4c-4da2-80b3-ed797484001e",
        "cursor": {
          "ref": "d41ecf00-aabf-436f-9307-e9fcbd5fbdd0",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dcc75bd5-2efb-4447-9b2a-cb27b354ef99"
        },
        "item": {
          "id": "3dcd1951-8e4c-4da2-80b3-ed797484001e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "35b11e59-0c8b-4336-89bc-37754fbbba1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1cf640-5f9e-4f7b-91ca-68c917731345",
        "cursor": {
          "ref": "836a2448-9d79-496d-9567-cee295198933",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bc4ffc83-f8d3-4594-94c8-ebf5429d86b2"
        },
        "item": {
          "id": "7c1cf640-5f9e-4f7b-91ca-68c917731345",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9e0335be-c711-4ed6-a793-fb211b911c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff564bfc-993c-4e2f-9899-f43291544bf4",
        "cursor": {
          "ref": "d64598b0-f041-48f6-9032-9d059a6862dc",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "83384d16-d396-4625-8cfe-e3421df74c43"
        },
        "item": {
          "id": "ff564bfc-993c-4e2f-9899-f43291544bf4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "048400da-65c0-43e5-bbae-19a433fef7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad153762-ca7f-4ae3-ade4-e476baa2ffdc",
        "cursor": {
          "ref": "f3b65506-cddf-4d02-868d-feefa0cb2c50",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ffc95442-c0ca-45a8-a99b-12efd12e796b"
        },
        "item": {
          "id": "ad153762-ca7f-4ae3-ade4-e476baa2ffdc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d4e213ea-7fe1-4174-be24-d844b644c27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac59b9a-91d5-4c8b-99ca-6514d30c3a79",
        "cursor": {
          "ref": "993c2dc2-92d6-4e20-a657-f848e051fea3",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "02e9b437-bc74-44d8-a521-eae30eb76caa"
        },
        "item": {
          "id": "cac59b9a-91d5-4c8b-99ca-6514d30c3a79",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "478fb11e-b788-4ed9-994c-4912c5288e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c862cc1a-aed4-4388-a30a-bf61691dde85",
        "cursor": {
          "ref": "a12b3d4c-5fb8-4d7c-983c-d5d91122310d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7c6b8946-0aca-453f-9eac-75ab35c39e98"
        },
        "item": {
          "id": "c862cc1a-aed4-4388-a30a-bf61691dde85",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "92470c40-87cd-457a-9cd5-81415ea6da3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44123836-a31a-4939-9935-448c1f431a03",
        "cursor": {
          "ref": "097ea54e-6699-444d-a9fd-e82ba9a54384",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6385f1ec-9d15-4730-9282-e7c4905d1101"
        },
        "item": {
          "id": "44123836-a31a-4939-9935-448c1f431a03",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b22e59b6-1534-42de-be04-5123dfbd6853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17a7d65-10a0-4772-b352-2b1c74b3a5fe",
        "cursor": {
          "ref": "e87df668-b4c0-43b9-ab9a-7445eda4d839",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "81969d07-4aab-40b5-9fbe-7d142c5e2e79"
        },
        "item": {
          "id": "e17a7d65-10a0-4772-b352-2b1c74b3a5fe",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c9e4cf97-970d-43eb-bebb-db6664dcbc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd27f9d5-6f9c-404f-8999-1dbe3f689198",
        "cursor": {
          "ref": "65cc3772-aee3-403a-a482-ba41460ebbc9",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0cefeea1-5e76-4af0-be09-53ce2d9bb3a1"
        },
        "item": {
          "id": "bd27f9d5-6f9c-404f-8999-1dbe3f689198",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7d04ed40-7416-42b2-b749-75bc0c69fdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa88690-4655-42e5-a0e6-78bb9e83176d",
        "cursor": {
          "ref": "9cd585ff-d68f-4d26-9bdc-a32e9d6998d6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3ea61fa9-755b-4dc4-97a1-245af63de0a1"
        },
        "item": {
          "id": "faa88690-4655-42e5-a0e6-78bb9e83176d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3f8259f1-e8d3-41f4-b97f-bd7e82581abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a0fcd8-d820-4e86-890d-b8c58e6fc34e",
        "cursor": {
          "ref": "80f0307a-1d9f-40bb-8afe-34b008920bbb",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "88d3f0d3-5313-49cc-a8b8-2698c5565f31"
        },
        "item": {
          "id": "58a0fcd8-d820-4e86-890d-b8c58e6fc34e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1703aa78-ee38-4a47-8509-801238f0d56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc5255a-fa23-45cf-b40d-c38fbe5a9295",
        "cursor": {
          "ref": "72d87024-75d0-47a1-adde-a67608384624",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1718a771-73e3-4ec3-bfd9-bc874cf1fbd7"
        },
        "item": {
          "id": "9dc5255a-fa23-45cf-b40d-c38fbe5a9295",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fa8b9928-0479-406f-828a-edbc0fda510e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9f038d-c318-4a10-8870-a6929e3836b9",
        "cursor": {
          "ref": "c98c84e3-fb56-4092-95eb-2d1ba1402e0e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3e922e56-7042-4659-84b9-d4360a96dcb9"
        },
        "item": {
          "id": "bd9f038d-c318-4a10-8870-a6929e3836b9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "06339a6b-9244-43c8-bd4f-f8be7f6ab7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c28a340-3792-44f3-86f7-f30528b607f2",
        "cursor": {
          "ref": "72d409b2-8b65-4dbf-9981-b0094cf26fd6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5fad3bda-cebd-42a1-8e96-6e44de94aff8"
        },
        "item": {
          "id": "5c28a340-3792-44f3-86f7-f30528b607f2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c3652e90-d02c-45a6-b642-4ccbb2e37d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01cb013-7221-4695-a7af-b19533351f1f",
        "cursor": {
          "ref": "e08ea53c-3159-4a77-a41e-def13cd55d62",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5cd2f20d-e8ca-4e90-b9f6-efe35e636717"
        },
        "item": {
          "id": "d01cb013-7221-4695-a7af-b19533351f1f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c92b115c-302e-4604-8058-b4ccf024fd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be02f3f-236e-4347-a82e-3775a21b9523",
        "cursor": {
          "ref": "4bd6e0af-5a2d-48ab-8166-3ee5a9b72767",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "80712c03-4591-4cc3-ae16-c113aa540de3"
        },
        "item": {
          "id": "1be02f3f-236e-4347-a82e-3775a21b9523",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4f8f6367-4d16-4be2-a0c1-6857a56a0cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82e1b66-bd8e-4e91-a436-d4a672e032e1",
        "cursor": {
          "ref": "eaf375e7-0cac-43db-8f5f-b29177a63f46",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "36ff7fd7-aea8-4144-a263-accbcd1c3a08"
        },
        "item": {
          "id": "e82e1b66-bd8e-4e91-a436-d4a672e032e1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1ae2b581-fa70-4903-b9ce-10794b34df21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cfb527-49bf-47d3-840a-88b7609ba32e",
        "cursor": {
          "ref": "1eb432fb-e0b8-4451-86b6-c1a2e51047b8",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4801ceab-fca3-4ecf-9200-9a86e6c21f82"
        },
        "item": {
          "id": "42cfb527-49bf-47d3-840a-88b7609ba32e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "99ef8b7c-64d1-4b76-8757-0bafee6893f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d806e527-298c-4324-825a-82f37724229e",
        "cursor": {
          "ref": "3b7689c3-8918-4b7d-9320-ed82040e18a7",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a3c634bf-cb52-4e52-9561-6b83c805ac9d"
        },
        "item": {
          "id": "d806e527-298c-4324-825a-82f37724229e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "978cca7c-664e-42cb-b535-f0f262cae9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcda7b01-4abc-4252-97ac-9f14de981e67",
        "cursor": {
          "ref": "05680b58-9ebb-450a-bf86-a4fd1f39b7a5",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cbc6d704-d9c0-46a8-987a-ebf17000dc7f"
        },
        "item": {
          "id": "dcda7b01-4abc-4252-97ac-9f14de981e67",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "11d63141-1a86-430e-8ac5-d61045de2fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3753b1-b5d2-45ce-a7fc-21f14cbff9b1",
        "cursor": {
          "ref": "33a050b0-c8e1-474e-95d7-3aad63a25a62",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a59bb176-aa60-4997-80a4-edfa0918602f"
        },
        "item": {
          "id": "8a3753b1-b5d2-45ce-a7fc-21f14cbff9b1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0d8c3166-9dcd-43e2-9727-5bab0ca6c433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a996ba04-4201-4c3b-9ed9-00efccd2178b",
        "cursor": {
          "ref": "377a2575-dd64-43d1-a531-9827aa08f1a9",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "aad4ed20-7263-430f-b2a8-34fef9d4fcdf"
        },
        "item": {
          "id": "a996ba04-4201-4c3b-9ed9-00efccd2178b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0cd4769c-9147-4aab-8d2d-5ecb46a807d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de367d4-0ef6-4c09-a6e0-b663298dcefc",
        "cursor": {
          "ref": "bf4e51b2-b9ca-4fc2-9934-44c19f8ed296",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5d1ba0c3-7c5c-4076-b17d-a7e5186b5ea4"
        },
        "item": {
          "id": "2de367d4-0ef6-4c09-a6e0-b663298dcefc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cec633ef-ed67-4d05-9024-20533fc890e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f742d97-abf6-4f39-9ff4-3a322d9fc04a",
        "cursor": {
          "ref": "04ee2a1c-38b4-4277-86ee-f5a8db9cf46f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "338de195-e6c5-4155-8c47-67c039e0b773"
        },
        "item": {
          "id": "3f742d97-abf6-4f39-9ff4-3a322d9fc04a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "81a62910-bf49-4bc1-8577-769411fa8b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f2dfee-1ba3-4513-9f48-c54aa6a9cf5a",
        "cursor": {
          "ref": "82cfde54-90db-4106-9256-3d52f73171e2",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "409992ab-9d63-4eb4-bf87-92dfadac2fe4"
        },
        "item": {
          "id": "01f2dfee-1ba3-4513-9f48-c54aa6a9cf5a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "77013e2a-fd01-478a-991e-883d221e055d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577d4091-5777-412d-af3c-9855379aae19",
        "cursor": {
          "ref": "7528a7bc-2f29-4f32-842e-6e793f584b0c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ac3ee5ea-7699-477f-870d-b7d9338e6afd"
        },
        "item": {
          "id": "577d4091-5777-412d-af3c-9855379aae19",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ab2e18de-f348-4730-8b81-07b438d9632f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e6b483-e6f0-41dd-bcdf-62aaef61dd2b",
        "cursor": {
          "ref": "a60aaeca-9c68-4270-8169-9cfb45dd6f08",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "604f5a5f-7c48-40f9-9b84-e75f7256de12"
        },
        "item": {
          "id": "c3e6b483-e6f0-41dd-bcdf-62aaef61dd2b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "841cf2a8-5f99-4345-bbcd-087283fd1f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5b6f38-c08c-40be-a170-94a230cc2ada",
        "cursor": {
          "ref": "11e558e9-6a96-4730-8132-1d21b3734d97",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "57567341-18b8-4ab3-92f5-95d464b64869"
        },
        "item": {
          "id": "ae5b6f38-c08c-40be-a170-94a230cc2ada",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8e029c24-c030-42e5-b776-ac2d7247eab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029687f0-a862-4874-b916-6ae9e812ff80",
        "cursor": {
          "ref": "ab73c895-6f29-4656-86be-ad2b063c5dd1",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "16ff832e-0841-4249-8612-4ba6dbc7548a"
        },
        "item": {
          "id": "029687f0-a862-4874-b916-6ae9e812ff80",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "57c7ff7b-a4f4-495f-b586-9a599b95ddc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721b678f-2826-4e6c-b4bc-7f3b80fc48fa",
        "cursor": {
          "ref": "2c538945-69c0-42cb-ac8f-7c513c54954d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bc170971-908f-469f-ba35-626f0c671272"
        },
        "item": {
          "id": "721b678f-2826-4e6c-b4bc-7f3b80fc48fa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "49b12a6d-19a6-4b8b-a47c-40f8fe0d2450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19925545-c8fc-4aec-bea9-5683369e43a3",
        "cursor": {
          "ref": "f77ebf6f-0ac0-4162-b17f-dd760683ce2c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c0a2f8e1-c9cc-49df-a334-a81e59e1f6a4"
        },
        "item": {
          "id": "19925545-c8fc-4aec-bea9-5683369e43a3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "85e6c785-c670-4637-80ac-71e7c5e5844f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7627b3-da7f-4238-addd-2fc6c9df9bdc",
        "cursor": {
          "ref": "f52fa021-adbb-4f7f-8636-0b39c859b5ea",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8916a4a6-8bb9-4f33-a0e9-0db1265328ae"
        },
        "item": {
          "id": "af7627b3-da7f-4238-addd-2fc6c9df9bdc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9ff6faea-8c9f-4428-8d6c-9d275128ce46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7596e07a-6eb7-46ed-89d7-13042a8d7921",
        "cursor": {
          "ref": "cf9c938b-2e42-4dc7-8716-f2c882e49781",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "32f3c770-600f-42d8-8002-6219d7ec51be"
        },
        "item": {
          "id": "7596e07a-6eb7-46ed-89d7-13042a8d7921",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6cbe6363-3f9b-4db7-851d-63ddca365eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4473f1-4083-47a4-8ed2-61bb8318c659",
        "cursor": {
          "ref": "9c580c66-f938-428f-b12e-2de5abea0044",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8ba76813-2e39-441a-9a89-74e7fc8569e9"
        },
        "item": {
          "id": "2b4473f1-4083-47a4-8ed2-61bb8318c659",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e2d19b84-ca6a-4ab1-8c95-e79f1ec5ee89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650dc9df-52c4-4a23-b0ed-a156a2127c03",
        "cursor": {
          "ref": "fbced94d-5c54-4063-a6d7-eb9578eea3f5",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0aea67d1-946e-4c9c-aac8-08285cdf6295"
        },
        "item": {
          "id": "650dc9df-52c4-4a23-b0ed-a156a2127c03",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b7cf1ef5-3e08-4c52-82a1-a804d4443c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ae2229-0e45-4fdb-abc6-b5eaf78f5b36",
        "cursor": {
          "ref": "457e4cc4-6aba-4a3a-b82c-1e52273201eb",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "34a25374-5db8-4946-b0c2-6fbbad232aa2"
        },
        "item": {
          "id": "11ae2229-0e45-4fdb-abc6-b5eaf78f5b36",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "425374b3-6425-441d-8959-36bdb5cfc70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f73be7-a755-42a0-8ead-5c1fa6c8268d",
        "cursor": {
          "ref": "a76ccec7-48cd-405b-b61a-bcc26648c858",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f333f519-b31e-4ffb-9dac-a979b97d0322"
        },
        "item": {
          "id": "d2f73be7-a755-42a0-8ead-5c1fa6c8268d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "721f16df-0154-4a40-8564-945705874cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3efd8e-d68e-49f5-80c9-68e1f4bd5e5a",
        "cursor": {
          "ref": "c1ac52bf-52e9-4a04-9f92-4f78d33ac565",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b93d9888-4dbc-4bca-bc3b-8c48baf306df"
        },
        "item": {
          "id": "8d3efd8e-d68e-49f5-80c9-68e1f4bd5e5a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1edd5ad7-f050-4d91-b9d6-416102fce34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eec409e-71e9-4ad3-8940-0b43c5ccdf39",
        "cursor": {
          "ref": "bd61a355-ee9d-4c34-a97a-1673e1a70ed7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7fe22c04-e17d-4093-a583-b312338c2d1c"
        },
        "item": {
          "id": "7eec409e-71e9-4ad3-8940-0b43c5ccdf39",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "43fd49e4-5598-4c6b-902f-6f67ef4003e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c179f478-4ae2-4312-9286-b14b101d18ef",
        "cursor": {
          "ref": "60d83c4d-997b-466f-ad89-314e37402ec5",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "09786360-44ce-4d21-86e5-653893c486be"
        },
        "item": {
          "id": "c179f478-4ae2-4312-9286-b14b101d18ef",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4686e8e7-55d3-49e5-8b3c-81e96449df40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ef579b-a9ae-4ac3-86eb-1974178c891d",
        "cursor": {
          "ref": "10f4cef6-4ddd-4a64-9634-06a72993f3e8",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b6e06624-b74f-4e16-806f-ac7fba111cd4"
        },
        "item": {
          "id": "d8ef579b-a9ae-4ac3-86eb-1974178c891d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5d047dbc-fb51-4df4-976f-81d6ecd1f8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d359f8-a56e-4d49-b833-2750af13cf11",
        "cursor": {
          "ref": "4d44ebfd-b8a7-4b84-8a29-40dc34d75a18",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3a7c5326-74af-4e0c-b663-ee93efadd7b0"
        },
        "item": {
          "id": "87d359f8-a56e-4d49-b833-2750af13cf11",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2bbef078-6db2-4f63-b427-870341327f07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582da4b7-ddff-45b3-ba97-8c00d35b986b",
        "cursor": {
          "ref": "44bb1f85-643a-462d-a4bc-d50187849733",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "31a9c54a-9f7d-4b5e-a4a6-ff7aaa722a3d"
        },
        "item": {
          "id": "582da4b7-ddff-45b3-ba97-8c00d35b986b",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "bf6b6f0c-5f9d-4d29-8d2e-9209822a49ce",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 299,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119d5119-cd92-4a65-ad25-9609299c3fe4",
        "cursor": {
          "ref": "31e00613-c71d-413f-9db8-a341c079de77",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "dbbe0497-df41-4838-b191-91f3819c4941"
        },
        "item": {
          "id": "119d5119-cd92-4a65-ad25-9609299c3fe4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "388e1cbc-d63a-4ca0-ae2c-ad9992f70935",
          "status": "OK",
          "code": 200,
          "responseTime": 340,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fb6c1c-88e8-458e-9498-75461010ca68",
        "cursor": {
          "ref": "86f57ea4-e30f-426b-890c-1c060c29d2bb",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4e5d8087-049f-46a3-a8c9-25a4cac4bdf8"
        },
        "item": {
          "id": "e1fb6c1c-88e8-458e-9498-75461010ca68",
          "name": "credentials_verify"
        },
        "response": {
          "id": "852ddb74-7398-4f0b-929e-f29bf588a45c",
          "status": "OK",
          "code": 200,
          "responseTime": 1834,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b865d5-5bf7-486f-bf89-91ce2d5e7504",
        "cursor": {
          "ref": "e5ee0b91-b249-4087-9920-1cd515cfc13c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ccb12a38-cf05-4f9b-b054-671f4aaff803"
        },
        "item": {
          "id": "c1b865d5-5bf7-486f-bf89-91ce2d5e7504",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8b0efed4-f0e4-4287-a306-4f257142fd4c",
          "status": "OK",
          "code": 200,
          "responseTime": 1884,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6550cca-cf34-4d2d-a2b2-77b5002514c4",
        "cursor": {
          "ref": "10fe3dc6-25c5-432c-b03b-7dd2494a58b0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1bb68f99-bf6b-43a3-903c-72c188b38d1d"
        },
        "item": {
          "id": "d6550cca-cf34-4d2d-a2b2-77b5002514c4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a041a62-5d11-4688-8b48-8653a5683ae8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6550cca-cf34-4d2d-a2b2-77b5002514c4",
        "cursor": {
          "ref": "10fe3dc6-25c5-432c-b03b-7dd2494a58b0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1bb68f99-bf6b-43a3-903c-72c188b38d1d"
        },
        "item": {
          "id": "d6550cca-cf34-4d2d-a2b2-77b5002514c4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a041a62-5d11-4688-8b48-8653a5683ae8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6550cca-cf34-4d2d-a2b2-77b5002514c4",
        "cursor": {
          "ref": "10fe3dc6-25c5-432c-b03b-7dd2494a58b0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1bb68f99-bf6b-43a3-903c-72c188b38d1d"
        },
        "item": {
          "id": "d6550cca-cf34-4d2d-a2b2-77b5002514c4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a041a62-5d11-4688-8b48-8653a5683ae8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4dc911-bf76-4c4a-bb16-65b27fb660c7",
        "cursor": {
          "ref": "d9e006db-ca23-406b-bd13-d0a74a448dac",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ab475abf-d9cc-467d-af75-32b90c534241"
        },
        "item": {
          "id": "cc4dc911-bf76-4c4a-bb16-65b27fb660c7",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "5402d602-1e87-4831-aebf-51bcf61bb60c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 297,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27969a5a-1412-495f-b537-6eceafc40728",
        "cursor": {
          "ref": "59851418-28b1-4f78-a712-ff7c9c02062c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3d91fa24-749d-45c8-8504-3a05789ecd27"
        },
        "item": {
          "id": "27969a5a-1412-495f-b537-6eceafc40728",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c4684e0a-4ffb-43a7-8211-055a47a78d83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27969a5a-1412-495f-b537-6eceafc40728",
        "cursor": {
          "ref": "59851418-28b1-4f78-a712-ff7c9c02062c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3d91fa24-749d-45c8-8504-3a05789ecd27"
        },
        "item": {
          "id": "27969a5a-1412-495f-b537-6eceafc40728",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c4684e0a-4ffb-43a7-8211-055a47a78d83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b751ea4-bff7-4abf-be8b-b69056997da6",
        "cursor": {
          "ref": "bc0cf86f-87ff-43c7-8d7e-0c548df5178a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "95e34b93-0987-403d-b0de-118e2fa4251d"
        },
        "item": {
          "id": "5b751ea4-bff7-4abf-be8b-b69056997da6",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "009e71e3-8927-42bf-9251-bd06edefa607",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 517,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c830ab8-c5b3-4369-a3fe-7d59883c34ac",
        "cursor": {
          "ref": "2e266423-f2dd-4240-ac9a-3f2b9a7f8db6",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2f5b6bc0-eaf9-447b-a371-3710d3bdf85f"
        },
        "item": {
          "id": "3c830ab8-c5b3-4369-a3fe-7d59883c34ac",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "10d6505d-6e88-4a5b-8d85-809826b4d942",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c830ab8-c5b3-4369-a3fe-7d59883c34ac",
        "cursor": {
          "ref": "2e266423-f2dd-4240-ac9a-3f2b9a7f8db6",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2f5b6bc0-eaf9-447b-a371-3710d3bdf85f"
        },
        "item": {
          "id": "3c830ab8-c5b3-4369-a3fe-7d59883c34ac",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "10d6505d-6e88-4a5b-8d85-809826b4d942",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0747c0ff-e9f4-43fe-a990-8f25af76643a",
        "cursor": {
          "ref": "cdf670a0-3cff-4596-8188-7cab9aff60d0",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "159ed44d-fa46-4f65-abe3-c1339679d54b"
        },
        "item": {
          "id": "0747c0ff-e9f4-43fe-a990-8f25af76643a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "8dc611ec-86dd-4991-b28a-8fc5c5171369",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 546,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}