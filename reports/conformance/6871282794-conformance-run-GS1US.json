{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6a7645e2-80e1-4924-af05-b86aa3f16a1f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0f4c304f-a4ff-4f27-a54e-48c09dc7ee5b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a44f0bb-881f-4030-b89a-1488aedf45f4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d4b59d1d-add6-40b6-a87e-f7f27a8c97ef"
                }
              }
            ]
          },
          {
            "id": "31f2aa23-2978-4c59-b985-7d8dc7db64c1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dee42b1b-5747-4b55-bf2e-4df8d9b2b45e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d0b4a4b7-2665-4753-9d33-6ba8ef42dcd1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "209c6a5d-520e-4edd-96f0-de1e366d5117",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4bc9da7d-1ced-44de-92dd-acdbc5c7d5e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29887ed7-6fb6-4de9-8c78-a30c0231eac2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a3c0539-5a69-4927-a68e-bbefbdcb2fde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b5b9b3d-5ef7-4672-80d4-fe06d2a98a75"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ea97c683-dc3e-49b6-9eda-e2eed1930246",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad002740-a857-42dc-be5d-d1b61258de2f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5222d49f-e5ca-44d5-a7d7-73944d58e0f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c8c64f5-9c00-4faa-8609-2f1fe858e133"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "724fc14c-0bd0-4ad7-828b-85b7d694879b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4bc8f6a7-09e6-4ca0-8d7e-bc60094230ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4a6e2c9-16e9-49fc-8b92-8db0e952f57b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea75050a-783f-40cc-88f5-6fe7bed3640a"
            }
          }
        ]
      },
      {
        "id": "62d24753-806c-46d8-8b9c-1de0919abc58",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bfba7377-8a55-46fc-b033-9066c825c7d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf01ca73-e808-44d5-96a0-2423103935f8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e89143a-5a6c-41a1-b86d-8b1f5fae5752",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d8e782-bc72-4794-bd44-a5c5630b873f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2050b3bd-3c1b-4b1e-9447-3434d120d829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e96f7bc-8e84-480f-a9f2-4401819e4313",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5749e091-425d-4c70-a259-353d40d0cd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71781604-6ba9-46ee-88c1-df4f1fa42d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc367bf1-e48f-427d-82e9-2e96490d9bfd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f0c0dd-32c0-4f36-8188-eb6210fef0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98d62506-d36a-4697-a2a6-9ec1ac74462b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1afebf54-0e06-4f8d-8c51-cc129c02d185",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7983f43-7e3a-4a94-81c8-63da0f008142",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3506d47b-94cb-4c72-962b-5d32199c68fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dffdc78-fa24-41a5-aff3-4a7374c160b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2354eb-4cf5-4aad-b80b-457581172939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4314d37-ea4c-4931-ab8d-ee1231253d9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "169b248d-a35f-40ac-a10e-27e536cc6200",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ee1abc23-4488-4642-b51e-6bcceab2e7d9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f24fdc94-59b2-45a1-8255-0d02108777d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b69ddc2c-3b07-4bc9-9391-8656e86c165f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb98d875-8ded-483a-bdb3-6eaa011c5d82",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "51947195-60c5-44c6-9f21-d2570d6e1f59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2dcd0ec0-531e-4985-b480-0a04574cdbff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "432074fd-4303-4ca4-988e-69c8823fbc59"
            }
          }
        ]
      },
      {
        "id": "c2932eeb-f641-45f4-8584-23f936f22823",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d2445cae-6547-4776-89c3-68d245c21ae0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e087fb5a-8b99-4110-9657-8809b859c394",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "338892ec-6a44-4722-bf10-b30b348a5986",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328b3717-a5a0-42c1-be0f-187b45eeef24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54156f77-c075-4001-a7d4-fba45926d2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901f4895-35ac-4616-8819-e2867774d99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29e38b67-97e5-4e78-b6fe-55ef2646d9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c57f0ab-a897-4ac0-a57f-30955ed82db8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfab6b0e-0d30-4e03-9fef-d5bcd75867e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44abbf4e-4057-488d-aa29-4a82c5757539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daff9e0d-b50f-453e-b195-0a6a10d2ddfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17341c5e-3fe4-41c6-94c2-846429cda396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f476b6-9714-4f8f-97e2-cf3436303753",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e5b648-c948-4511-ac9a-edb34f5c48b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0e0fe1-58d8-4294-b4f1-f7e70630511a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b00562-2649-466f-814f-87132c3e9729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fc57b78-2ede-4c5d-beba-94e36c810022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a55145-b23e-4505-91be-fa688631d8f2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327c4e1f-1f47-4090-94c4-7f1e7f9e92ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37e252a-690e-413c-a322-f2f4077c6421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754c0e29-4b14-476c-be1f-b1737e75adac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f265556a-c1c1-4b18-af3f-d095b4f97acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e6bb83-4b50-4c41-882c-e16c606ed08f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee8541c-3dbd-4b6f-b0ee-bc6773a28140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7721aa04-10d4-4e25-94a6-6165e16abb4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdd8779-4dd5-43c3-bbb2-8ddd35c8d208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5a3387e-f669-4114-9933-4ff020ce195e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78795cac-8507-4064-9c4c-5b886f4953c7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cea39f-c26c-4f0e-aea8-33b360b287bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294a6941-6ea5-4c6e-989b-b1cf158db85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fe6d32-d51b-4e7d-903d-5ee58feaf532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7aa7c239-9f5f-46dc-844e-5430f8156cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdf05f3-5fad-423a-8938-c720db5a47ee",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c968d746-c0f2-4ad2-bcba-32eff54d8981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7ae88b-c407-45e1-ab70-b94c1e283117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2d787d-2a93-4e34-ae9c-459d315e0754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a946b93e-82ab-435a-b4ea-811a740e87fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce8ab6e-a4af-4779-b11c-884ccf2934ee",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4fbe67-a3b4-4f15-93d2-3b5309cd2bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422d0469-cfd0-4786-bc91-a7aa1ca70bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953f2c22-9838-4011-97d7-32b735e6405a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f928b13-9a4c-4ee5-a3ec-040ebbf8a34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b625c86f-409f-4262-95a1-312d1aa48e27",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412c669e-d8d3-4dd2-8022-68498e83b418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8447bb0c-aed7-4c23-8d24-6c1652124942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b9f026-b915-46d6-9a45-0cbf549206bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e067e68-c97a-4dba-ab21-862923fb50d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c587f7-d69f-4860-8310-d1d32e8c45cf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7177687-124c-4617-b699-e2ff28e60a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ac6f8f-68f4-4915-9772-f7fe3fd8cf91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca018d25-b5fd-400c-a096-1905e9e0dca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "194d8c05-270f-4c58-88a5-62743fa17aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa8c12a-0ca4-40f2-bdd7-4da3604762a9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79094909-df9f-41a8-9dd0-d4de8684d202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a36b410-25f6-416e-b74f-5ae15e5cde5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac4f8fd-539b-42ea-8b1d-b256de6381da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab82c7d8-d14e-43c8-932d-f18072d7422f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344c216c-fdb9-41ce-b7a7-41ba9aa6a1ac",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35f2829-3d4d-4172-baa9-c575e17d8d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81756c83-8a75-4e67-8553-bb55265b17b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68d2329-9606-4cf5-ba9c-ca916fa4d472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3674186b-35ce-4219-b58e-1b83465ccca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a905750b-b5be-4e1d-aba9-17108e37a854",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdf5e84-ac84-4282-bd62-165e25ecf698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775058a1-eda0-4232-ab04-d2e1cbde3411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fded9fb-de6b-4027-9c8b-d43f68169236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a792e2c-13d0-4f70-90a5-dd406df186a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83f2ace-8e20-4a48-8c58-ebd7fcedc695",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56d3b62-1b1e-492c-bb35-64d0a74a8122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d940634-5301-4ac0-b7c8-e02a2658ef35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab232602-dc56-44d1-ab07-584e10c0916e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f920105-a2bd-41d0-9ddd-4591bbb229f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c790a368-61e6-4dfb-ba24-bfab74625ffc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e06d927-e9f0-4574-95c6-20ef97c397cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915d656d-e3cc-4607-9058-c7672686174f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f91f854-442e-44a9-9224-371d9a21ce28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa7af32f-faaf-47ba-b27b-28eb34aabe0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d407045a-c38f-4acd-b73b-a222802f7220",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a688b4c-8d68-455d-800c-0c4b426e82df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c1be5e-852d-4f33-ad40-a11db50eebe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fe7161-159d-4897-99f7-93fb34c45720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c3a3db3-bbe3-40cf-b513-153f57820e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870db1cf-8d2d-4cf4-aa7c-de99a0180d15",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147d2bd3-5a3f-4f3e-808a-922605429455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af3ced5-8e5e-4e92-bd54-4e5e9d6d58ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54180f9-cd26-43f3-9b72-e40ac7c734c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa463b2f-d905-49a5-bcc2-6ec92c8073f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0889ddae-db7d-4a91-a6fd-fca196db8e07",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9989b640-308b-40d8-853d-bcfb95f3aa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2464cb-f598-408a-bd85-3d2a08ef1cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fc873b-7ad1-4f4d-a76a-b9e9afe467a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3d305a-1d8d-490b-a972-0d2b0167b5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78287c92-1901-4fe6-a054-87136bec8fd6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc65668-f655-4ca0-8e1b-b8c9a68dd3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c16a38-a250-4adb-ac03-38e0fc3dfc2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b4aaaf-afab-4cd5-8dc7-b2833cad7a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e67ad949-1b39-4537-a2c5-ac1a6bef6f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8deb487-7100-4d7c-84fd-1b11951aef75",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e18ca6-77f9-458f-a7bc-a180d08d50b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8678737-20db-472a-820b-493d6f9b4112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f882ec7-94c3-4c71-aaa2-dfd9645c42be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eaea0b3-e53f-4a4c-8ece-714ded2868c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f290747e-675c-4a93-ad49-d885ecf75438",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7dfaac-8cf4-4947-a45d-439669ab3674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f2bb26-ac80-4ca5-a075-4fd38a75d43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf655fb-8631-4727-b1c1-d29425e46a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9829d35b-6d41-47e9-b902-e40bd86c69e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc7847b-b3dd-471a-8111-4db5f8285833",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bee1b7-f3ed-4055-b075-45c0b765f128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfeebf2-f1b0-418d-8836-70ed28f2bedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63eda6c-4fa3-4cac-9b63-a93621a81bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48899d42-28dd-4915-a79c-a586cdafc5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19ac0f0-4d9e-4cb4-b217-e7afcd18ae97",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5ffd2e-84a1-4d4a-bb9c-53a0ba383618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7533f68b-f321-492d-a5f7-a31976f9299f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902bee38-bec6-4a40-969e-d067365ba8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8702c701-711f-4b88-9a46-fede2491cae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef67921-970b-4b1a-ac2c-4c3beeeb1399",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bfd6b7-381b-4399-bc15-96109aa44fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6a8082-ad2c-44b1-81ba-d307ee25f563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074e524c-cfe9-4746-aa28-a4287fd3c5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e567b588-eda8-4987-9e17-060e88f9fc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8b2e4e-7f4e-4149-836f-56d284b16812",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755e84ad-a408-44fd-90f3-74470cb725ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cd2274-8760-4d30-96dc-2e6bcf817feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6234b4be-2cb8-4c94-b74a-a162b909eb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65e28ab9-2d97-40a5-9023-f56c4db2815c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c827831-8727-4b5e-bfc4-ae2382033558",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee21780-97bf-4977-9ab6-456863ec9a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b5aead-56ea-4b44-bab4-0f089f040cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33c502f-afd7-4b2e-a681-433b9b96e830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cab90cf-6c9e-46e3-a321-ee8948316923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed78915a-9511-433a-8bcb-25cf653d027b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd483ce5-0869-496c-9ef5-568e88726557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d025b40f-3b27-4bda-a800-bd1cc0f13b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cac277a-9180-4e27-8285-c5b0ecdbd6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0254fdb5-b014-4baa-85cd-f83337e3a3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c913dd-e112-462f-bf7d-05be5f2c573c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0afa72-8acc-455d-b7a7-66bbcd4923f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd0a953-2e55-4e70-9bd4-f9530e37e3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1517ea7f-0197-4a71-ab90-ba42d117ea21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa44e056-7955-4884-b67d-84d00bda8b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b767f279-54b4-4b18-8bc3-751ee5fddbca",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa709977-1fc6-46f4-8103-473bc61d57d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e19c65-5227-4728-8925-1fb5446d0dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009c9705-0bb8-45ef-93a0-1cbe8644a01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce712f0-1862-42da-a2cb-bd4603ea4878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9216d4-0aad-4e27-a026-c0eccc8725bc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5982933-252b-4d9a-a9d4-a5847a99c33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830be4c2-1e50-4f69-be84-d5e6a62f42e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b22d3a-5163-4058-b992-8eef8353cdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1ea8b5-8ef3-4707-b1df-89a4e0605444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5a6a9e-33c4-4ea3-b23e-4515ecd1dae8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be86e3a-3415-425e-9032-871c05a1bb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7398b23e-49ea-4f42-ab64-2019e1c5b473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f761ddbe-ea7a-4e01-ab02-5f0665b5238d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4578aa05-504e-4b3b-8f58-f45a18144edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8665dd74-87e0-4645-b2f9-a07e987add32",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a04b51c-1bda-4b39-8e25-de0a198726bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d48854-1cd4-423c-b948-5ab9a2788631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d955f87c-29e3-4d19-97d3-c553df3da5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf6d2b1-3743-4aba-8d69-5c9a7b91d8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646b67bb-4bc9-48f8-960f-5c7678e4ecce",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8072c1aa-9f63-4366-9a9a-5f59d84b6c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840f985e-6b09-423e-afa5-a9525146bad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfee0e1-e6bc-46db-9665-7a07006b8ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8f5dbb-5bb0-4b8a-bde8-eab433d2a014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7db41b-8356-4738-8f97-ab9685243d02",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a5d9ae-350d-4fb6-9328-6b02e32fd43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8046842-ccec-4955-9e3e-3a66734d5638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69635a7e-d1ac-4c42-8f43-5ce116e143ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f49c2297-c9bd-46a7-9c83-93908a6b47f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353dd686-4c68-4d42-8771-3c89172bb0e8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd2f652-2d98-44f0-98ba-9d5bd1030080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a851ad-a73b-4933-9e68-6e59f3d85132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760beaaa-8845-4be8-9e3c-d8cba765a25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "eb30038a-c48e-4cb9-a58c-69b50024fa91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c282ab-7190-4b67-aa42-834cdc1982f0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084748ad-9880-4946-9e6f-966250880f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60c5aaff-b7aa-45f0-abd1-a356f5393c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad545a5-6e9d-4214-87bc-1bd49e2b52a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb20d4d-a2b9-43d8-9aa2-279bd813754e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b27cfa-ad2c-4fea-a7df-c3e26422495d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41711110-3a67-45f7-b095-11ce75afb2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291c1d03-3d76-45b1-8793-45d006b78885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710b0950-b406-4fa7-9bfd-2cc76caeb0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c90662b3-8f0d-48da-ae9b-373634108fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9cff10-17f9-4fa5-bba3-417fba803857",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c042e05-df78-4151-8d70-70371f428ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9142442-53ca-4d27-a34d-2f0d4c875b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2ef842-6052-4d3b-9e20-fe8c558ba1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "24f86a1a-e830-490b-a3d2-392e9408b8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35db2c31-1b4e-4462-9b0c-079cef80dc72",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db09d52c-9886-4ae0-9a0e-2eb79d6f396a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8f5707-d2e0-4da4-9313-afcf025b6dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d554d5f-3adc-4a6b-a6d7-fe1a4ba40a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "41ab1ba1-816e-4258-9702-52f3339e34ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6664a1db-9a83-4f5b-92b8-063cc1763f1c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b047dfea-423f-49db-8434-54bbb2b3f358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23730537-228f-4250-aff2-192026ab979c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5633672-c51f-4ced-8967-ef4ffe7635d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c668a8a0-621d-44d1-b9bb-18cf9109b5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b8bf46-3f8a-4cee-b30f-b130fca3836c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340aa4fa-cb08-4844-bba3-07e3f5d0249d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075379d6-b0e1-4f2b-97df-121d1dbdba8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa3888c-e037-471b-91f9-bbfa5480b203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3220c2-0fa4-4ab0-a345-b5608ef9b39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68d0dc8-2263-4b37-a736-d2b57ac84b6c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680c8bc0-3ce8-4d68-8b69-79404bc85261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c127ee4-145f-4ee3-b44c-a610b4e2c366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b568e73-89aa-4504-8dae-b280e327c9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b563f2ea-4cf2-4c3a-9944-8a38485cdf8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95cdd07-269f-4d58-9e1f-81a4b263a27f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d09374-2d5a-4411-9db0-d00071b0d177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa050af-bc53-4bbe-b29f-aee239dfb783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afd9990-58be-49e6-914e-fa1fd03686c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2faf2d-3ee5-4837-a4aa-ea77af8d0c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcd716b-8b62-474b-960c-b11b9530a6a9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e61fca-138f-475d-957c-f834bc52a2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c228e601-999c-4ea8-9fb1-0b6f5f595533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735ff195-a400-45e7-bc2f-e15a13d21c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0923a9d-bb3a-4da9-9bdc-38a7f4e3c102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963449fe-f17d-4f3c-aceb-79b4037e61ca",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fb02d3-370c-42b3-b531-1951b945d043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51acb26-8b0f-4bac-b140-f8e0f408f857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9860dfac-5fba-46ce-9b9e-733a58c493f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7af6540-e362-4406-ac98-a7972e8246ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b10e9b-168a-4931-8e86-cbd4a24b1c1d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86873f0-bc35-45c3-9f42-d8cd162a945f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18cb9ef-1638-4687-bfff-d1836464f2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2279337e-b049-4740-af1e-f6e571660fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b78b9e8-681f-4c2e-b35b-282d1c026bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a61e611-2b5f-4bab-b758-8aa91fcc985a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99343bac-04f2-49d7-9fa7-afa0b32ce887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8fbe5e-88b6-4ec9-b629-be844ffe914b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee20d5d5-6525-419e-9cce-2def0d9885fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd122be7-3f91-45ac-90c6-f9db1f51cdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcda134-71fa-4034-9f13-aca0a51e5f0c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb3afd5-bc0e-4fea-b1c8-ad18118e2cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40625e6-a835-4940-ac0a-e59c7c2fe61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f994600-8bdb-4dcc-930f-ddb8f9659576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56ccb7e1-d924-4238-9819-715b8175a4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b8cd4a-db4f-44dd-89a7-35a07bebc380",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19f24eb-0098-4a62-aa63-ab1f0110aeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779bf046-69f2-4c18-aa13-6347c5de4bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c35aad-b957-4745-856b-831d706f676b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8de51ec8-7bee-4e41-a9d1-986112a30691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a76a34-e7fc-49d1-9cd5-2eeb9791d84c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a6c72d-0330-46de-abad-771a0e454635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb815cb-31a3-4818-8cbc-97355b19d75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fd94d0-2b50-4f68-a6c9-92879e3599c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6dd8f58-4512-4922-ac3c-424cda28216b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc49d3ad-2101-4d76-81d2-4445591f3d2c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a76c3ee-f176-4919-9adb-c1e7b87722f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f42f4c-6674-4f2c-99db-eba44e015193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5748eec-ee35-4a87-9129-edae65fd469f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "05dd3194-18a7-4f98-9132-cbdf900e5993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2570513d-9438-4a27-b3c2-182aafad5cd6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd307596-60b4-4fb8-a0df-f3d4416d75a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2f1049-d501-4282-b1cc-298bd817b926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3463a06f-3f4f-49a6-9922-5a555aadd0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "137ee2f6-2202-467c-8f33-ed407ce1372f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c8edd1-cbd9-4b64-be3b-329619b50a44",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453a9b08-3e86-4979-9513-f054e2a64f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d39e00-80a7-4903-8250-45801e148638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7386a6ef-288a-4bfe-a4dc-e1d434067684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41ca4af8-7e07-419b-8922-9d9cc92f6281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7846e943-a3d0-40d7-8098-71d13a5728a9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a51821-a2ac-428b-9cf3-cb2938dfdacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309092d3-ca3d-403e-bc68-1fce60c54f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfa7c0f-d2ab-4375-a7df-7c1d35c16a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6023a60-6219-4d1e-bea1-e3c2d721ad80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07cf258-c1fd-4c39-9144-2a5d8560e7e0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934c36dd-1db6-4e8b-8e76-7f8074dace54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1473f594-d289-42c8-ac85-a287b435041c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4155ac-a54b-4cfe-8822-1e9b93dfd90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b31527-fc1c-4e3b-b05e-d0c1ad6ccbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831737f7-0bc5-40a2-b27b-00e2bfa89539",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21677d63-f9a0-4da2-95b7-e85e23449b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c4e971-7559-41ae-9e36-f48ac2caf19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9493dce0-32f3-40dc-be17-16425960f9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fa607060-1a0f-4438-90c4-a8305572ca48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cd221f-e2de-4006-8eed-6807b9dc4ba2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c69686-e813-4e13-b2de-b6bd581d6b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f5e943-2c14-4267-b91c-3c2e0d432291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8395c745-8f5a-41e4-9d76-a932ce0f911c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6c3a7d-6ec3-42d6-b49e-32cc021332d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bea5a1a-1995-4d57-b603-e54d00b90ad0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9d67d3-23d3-43e2-a0e5-cbf79ba1831a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3378074-dd98-4b94-813a-f2ebb3c60749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2321db9-3d0f-4c90-8af3-4b99ad7d0a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8c7fe9-713c-474e-8a10-9e0252f7db74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8011805-fc31-40e7-b391-f2f0e865b1dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68774b0-a640-4c63-bf2f-0317f8bd17e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dadb9ea-c5ca-4709-a614-e2ef1ad4269e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bade9ba0-2361-4490-a0d8-6b58e7b54dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a11f45ac-ddf7-4092-8eda-d3d2f4d2da06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269c103d-ad02-4db0-881e-84f1b327a199",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40dcdcbb-23d2-4833-911c-06c7bf7bdb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a9fae1-eb80-4112-8917-bb5debbea0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a5e8f9-6e83-47c3-9eee-12a78e91a60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ba2ca3-ee0a-4f3b-a075-f1a4c5955343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b642d7cc-bfc0-445d-8d16-67cccbedaf66",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8556bef-f53d-4185-bca1-d1c0b117f869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4054d216-08bb-403e-a536-cedd2c4526c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cd814c-776f-4ac0-9b40-8e4b0c02061d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0337b2f1-a726-4db0-81bb-685e114bf093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bc0fd5-f5a2-4b90-89f9-a4c4f091ede4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704fa6fd-431e-47c7-8efe-bea26b1695f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0604e1e-dcd3-43cc-83b0-ce1b8c22d465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a3d291-2116-4120-a697-0537810dc67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "adb4e96e-444c-4dfe-8fad-9df0e957b58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a033f18e-d29b-4bc7-887a-cb633dd2804c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91a72fd-8121-4de2-8997-4850c97108ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ef1850-b5cc-4661-9a27-85316717be09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e493eb7-3f63-4a87-908d-023c732d01ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "50bfcad2-7989-4d4c-9ba7-6b0502574cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07debb27-b40f-4023-b2c1-a48041050085",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d8cb16-9be5-4276-b8a3-575637e1c1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a422eb3-0a75-444c-b7bc-06a1a4a837ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2046814a-3b6f-4055-a2e6-5eea398b7dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bebfe436-26f2-4639-97d6-8f629af74d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5924ce7-24ec-495b-80c7-1114002ebea2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367a55bf-544f-46f8-a7ae-ac0476b4efde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7410b84-92b5-4212-b8c9-de4114ac25ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d562d4cd-e5b1-4cd8-9fff-d5343a459d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28f03edd-daaa-4ae8-b112-ef05b658c2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5731f4-0477-4b60-879d-7c72768cb256",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5f15a3-1594-4e11-b50a-a7b25f9ad40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e0b15f-2ac0-44c3-bd47-dedf0fc76c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424914fb-eeac-46b8-9e8a-69e8746e88f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b71f7d3-b8ab-442c-a18a-4625b55eeaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469be8df-5116-4ec6-9d1d-0953d002318d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99227b59-e1f4-41fe-876d-9fe19ffd45cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912442a3-785b-48b9-bc56-48e257cf2cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83305717-391d-4e6f-b5ca-c46475668a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9267d75-64be-40fc-8ad0-66468863ef69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfdbe98-9d33-45c2-ad79-98d333403b8c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8498b736-20e8-472e-9ca8-bb6a68035de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b70f526-21a5-4b40-bb02-1046a6da2582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5746a712-e1ca-49ee-8d73-cd606a94892e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad69c37-f0d5-4ffd-84d7-e42e5693b464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd45eb6e-7ccc-4796-a071-d6bfe70c1ec3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642a55a2-5775-464c-b3e3-6f2b12da525b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db005be6-31be-456c-94df-752bc7743720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d446a327-ad93-48e8-be05-05e947036c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a10e00ba-b75b-47dc-bbaf-e351c90bd3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0ca526-cb8e-4e09-b602-0ee85c72bdbc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff727bc-b407-4596-8272-0881eb16205d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b269e96d-9dbe-47fa-8c79-92e7a4579e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3697366b-d49b-4218-bb79-572ea0ba52c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0e3e38-8c45-4751-9925-73770c64a0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a4facb-e8b6-415b-bb1d-1e8d53132526",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acd70d8-fe44-4cc4-8f16-1e7cf0792ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9c8e86-bec4-4a35-8ad4-7fdb4addace6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2ffb12-755e-49b1-a111-399e07753dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26dfac76-287a-4bf9-adfa-ce646606c301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8b9519-a83e-450b-ba08-d0f23d5d8827",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf487af6-9f12-4c8a-bfbe-f983dc3db671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79be4b3-c272-4c21-af25-02b520e4f850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062e330a-451c-42e6-ac98-32ce768a776f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43961507-a63f-4f1e-8da5-4e04f6786bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198edf10-cca0-4846-8b9d-39f7d9813de9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf95c2c-8429-4416-9433-422435475d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa9fd06-47cb-4904-a3c8-418e7ee308d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecafc537-e7e0-474f-b3d6-aebbac35163e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "98698123-ac6b-4896-9dae-1a4be6ed7aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec00f99-ef19-471a-8aba-f4d023d520ac",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc468b34-52c6-4f74-907e-f75012e2a460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3c8db3-cc5a-409a-aea0-8d2fa4ab4ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d81a8a3-1bec-4643-8cb9-addb2c952fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abb592b5-d780-4e7b-acb3-937dccc93b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5ab367-29cc-4af5-b729-90bd67133bb1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007c2fc7-e8c3-4717-a159-034d665e43af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b63791-8b00-4759-bdce-5a698831b3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ecfe37-bdd4-4312-92a2-2efa86c81e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b919a94-6b9b-4d42-9e3c-7997fb6dd466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a3820d-2c59-43c1-8277-b0c519881763",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9382631-09cd-485e-b905-2d9ff3881552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0786c710-84e6-4c8f-87e6-e45111726ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ee1938-4617-4af6-8903-25b2bc67f56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "195075e2-ad6d-4dae-9882-9c71e9cc77e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d67362d-dcc3-48a8-a676-848c3bf90eb3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65c5a17-e21f-4ffc-88b4-368b0a922d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da98acf1-5208-4d26-8474-9de94614e36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8f8688-e443-42db-b0c8-b2266df392bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc14d4bc-508a-4019-a12e-89596f2e05bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dca442-864a-460e-a7aa-677e222b4d7d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffe61d5-60a0-4384-ba7d-c474e53ebabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb556a1-e8f4-4e76-8acc-686b46c91fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45affdf7-e7c0-4f2a-82fc-afa43def81ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "220e6115-33ab-4350-a4b4-0cee7b0a34f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137df7e2-78f7-4ebb-9d22-7a685da5f774",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95180336-6439-4048-956b-01669afd8b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c56c9fe-8028-4f34-b9f3-607c148cc92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5252a8ca-da3a-45f5-931b-2b8ca7114dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f291bd7-3784-4e95-b1d5-d17fd37be42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de817354-8a22-418b-b04a-12a92449a2ba",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b3b7e4-c993-460f-9cc4-a40fd8d2cde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473ffaf8-e4a2-42b2-9303-03e5d4119db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b457be-926b-460a-9aed-0cedd9f43ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f939efe-14ff-4528-b5bd-68e91c9785f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6241fdad-3658-49ee-b703-0c07de64b631",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592094fc-1b05-4f31-8ff0-e8e57d1b2a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe0920b-84f7-42a3-8602-d94513828397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e61d2e2-2750-4f09-a999-cdd884ea33f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c21cd99b-91ec-4679-b297-3524cf5c1af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cb1699-4b92-4900-86bc-e53eeef762f2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a024851d-1082-4990-a442-304af4ae4c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bb74cd-7d63-4d28-92f2-d29b6ba9416c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504f34cb-da90-4de2-8057-3a03b10ca43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "feea801d-a989-4309-9e63-41283ad8f1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c223b4ee-544e-467c-8d79-62e1835d8978",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3bba9a-858f-4ab2-8ab1-5fd03fe0bda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76456437-0bde-4830-b16e-b6e2f1927f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffeb583-8a1c-494b-b703-b29cdb77aef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf8567f-44fb-429d-ada1-4bdbbe0f33a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436aad7a-d286-42e4-80c0-2684f50529ff",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f65b5f-14a8-4b4d-8df9-5b36b5ef9f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f186dd8-ee67-4dca-8288-fbc824544a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4e044c-7924-4d1d-b0e0-7bcebf037684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "929f20e8-45fb-40a4-b9a5-a2ef0df75bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c2ed74-48cc-4d74-9b76-8b6377ff1789",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa92cdab-bbd6-4ad1-8eb1-54b1a7edb4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd0d532-deaf-48ee-a424-7a7890947118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dadf17d-7530-4f9d-ac61-d4476d9b1c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "356982f6-3dc2-4cc2-8569-dd5931cd7b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9512fd6c-8ec3-481c-ba34-7d1b158d7b03",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ade9384-4e23-4f5f-b30c-e5c6f52c6dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3fe574-ad9a-4354-bfff-fef7d1fc71be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06017085-82cf-4f2c-9e17-57f892e9f43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92cf7e0a-52fe-496c-90c4-72c9052b9bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361f7e85-9423-4471-9651-65969359169b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149d8a95-8f41-41f7-b8b6-a5b167fde56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817125d9-933b-437c-b189-7839794f9269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73eaf48b-d44c-45b9-a88c-43fc24516013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3cba47-e8ce-4f2d-81b3-84841d713e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0658aa98-509e-422d-8e04-8610a470635e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f437c4b-e499-4117-815a-b19092bb73ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a48d450-9d77-46c5-b531-17e943c8e18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90fa13c-d301-492f-9cca-9ab69b297272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89e62578-4e45-4259-825e-d7a2f5e084c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e548f26-6ecc-4f3d-b3fa-afa67a1298f1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0313eeac-2838-49aa-8bed-f4a0c37fd11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36096a2a-dbf0-4d2e-a5ac-d902d475bd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7ac97a-985c-4b7e-b667-44fd121943e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d61af9f-dc40-421f-9e93-56d07b88621e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669d8f80-7c83-4226-8c05-8072539aed2a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0db601-bc1f-4cba-b14c-64e8085b7451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add972a8-ca65-4ebd-97c1-d9ea67df54f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bfd7c5-5d68-4e97-a736-fbb624404736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e38d157-f2b7-4ba6-bb95-a4beb20d432a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a1f062-1622-49e5-b05c-e88a732a91b8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c5d1bb-9feb-4328-aaa9-3b34d52d5314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66162fb-f0cd-4e32-b0f8-0ea809f4854e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7680b38f-988e-4535-898e-f1555df0b55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5940f067-6eff-4d12-a190-e7b299f10ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b5cf20-37a8-492a-971c-0ae6de1eb671",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64515f17-973f-4bbb-9c53-b5b99ea34698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2787c158-f86a-4b3c-9541-f9e5e1591b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15441aa6-1e29-48ca-9549-5486dc4f2c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eea9d02b-5072-4626-b10a-b7a6afc02f13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "84917c7b-31f3-4004-a3c1-857e5e4272a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c08d438-7cfc-465a-97c3-3900773296fc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065a82cb-104b-4853-a41e-d1490522118d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "daa2c2b1-1b1a-4dbe-bcb5-c77737435d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6c326b-442b-4068-9e2e-7a12a011564a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cd3e6ba-f4b4-4a84-b175-4584333db686"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b71ea53-da77-4392-9dcd-08d5e553cfbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b70de46e-a9b9-4f2b-90cb-1702193d6408"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bd66838-4b5f-4abb-97e2-0c3f123f6367",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e69c38c-3c0e-4dbb-878c-2f16f93f1d39"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1de4c9f4-cda7-4285-ab62-b349af953180",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7854202d-7f4b-4d33-a7e4-c0373e1b16e1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6ed4f8ae-6cd1-4219-9ff2-e1a28a905763",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76808b53-c78e-42ec-97a9-fd480f0cade8"
                }
              }
            ]
          },
          {
            "id": "dd6d3548-8cf5-48d4-81ab-992369c7a894",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c261d2c-d4de-4e15-a3f8-b966562a740c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "853af2ad-f29f-4186-a363-04d91714e3fe",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b92017a-49e5-43d0-b1bc-d08596a838fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "12eda5aa-e3c3-46b0-ab7e-a8717a8475a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66970bc-6421-45f4-bc43-aeffef061149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583291da-6aec-4eaa-8e62-a7fe221e1861"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0fc28858-791a-4966-82a0-6a53bed9dc0f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e39ea2c-37f3-440d-993e-6cbea9137c54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0624e6ab-34cf-406b-a91c-25ecbff532ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9470d939-8780-49a1-81f6-0a6c8eb08713",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ba76386-48f0-4246-9561-05a0c48bdc1a"
                    }
                  }
                ]
              },
              {
                "id": "853b7eb0-cd00-45bd-be83-f08321175db7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "405de36c-3e44-42ac-ba5d-10344e16f61a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef550a6b-0f36-4d0f-a7ec-fa49275d808a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89dc7c1a-6c92-4a0d-b9c7-2a8e2bfaf26c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23d221aa-3501-473a-ab88-be2983a4d6d9"
                    }
                  }
                ]
              },
              {
                "id": "95ba5ec2-413f-42af-b452-886ad5268aa3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57d872d1-6805-4fe0-b872-cb7bbeb10d2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cad060d-82df-4991-849a-22261f72b964"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea720cfe-1c3e-44a1-8e4d-93bf6977f686",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "58602278-c09b-41aa-9164-dd08b4a346d1"
                    }
                  }
                ]
              },
              {
                "id": "14d7f6c1-1339-4953-9090-fecd65cc5e53",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73df570c-5205-4d3b-973a-16f010fa0d30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99650901-7bb0-4b49-b361-12923bffac22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "045ddf6d-8ad9-4530-a92b-1dde2bca20b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3398ff98-c1ec-4601-a65a-eb1e4383bae5"
                    }
                  }
                ]
              },
              {
                "id": "e498e410-f358-4e2c-a923-d631c40eb0c3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1fdea55-b47a-4c11-ba6c-ec282fdea5bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6152c29-eb9a-4f81-bd3f-f44ec5db529d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af3d3e31-33dc-49a8-afb5-f2d29561876a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9d95cac4-3dc7-4ee9-855d-6705c87f2b4f"
                    }
                  }
                ]
              },
              {
                "id": "967e0996-deba-4f34-8701-ac5950be0674",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ddf18e1-d2bc-4514-9b57-1d1a65f66fc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "629b1010-9b90-408e-90e8-eb68f0cd48c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82c7fe6b-3474-4986-beb9-be08054ab983",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "48c37705-d8cf-470e-bf87-4f10a9a8a954"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f42af29-e82f-4663-b86a-40e9a9edb68c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f06cb99-b643-4f8e-864e-10dc57d4849a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f99f65fc-8633-41c0-9d69-592e2b8ba1bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86ca8bd8-13a8-4286-9052-1fe5d5206110"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1991fbd3-d957-408a-8246-e333d4697b6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e4ad5e08-7682-453a-9f99-cf0ea8dcd276"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fa3b354-45a5-4f4c-b7b9-2db208be7117",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96fa1954-00e1-4698-a41a-41de50d9510e"
            }
          }
        ]
      },
      {
        "id": "78efa286-25d0-44ed-a643-e29d009d3100",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3d967c6a-74f8-4da5-94e5-b96f0098987f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2bee389a-7c7e-4b2f-97ea-814263d6f569",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8cc2828a-10c5-48d5-a53f-f8d5bbb7e890",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e7d709-8119-4b30-9a21-c2c1ae215f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d501c6a3-23ca-4484-a159-e3d35ed0ac05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f681e364-2b21-4f04-ac41-20286baa7bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "99d34755-de05-446f-94db-6d4a98780898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6410087d-01c2-4836-bc57-4974f3551a9d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde5ee79-a563-422f-82f9-a37a4118f515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097054de-c256-474d-8382-33c478c7e9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d765c6-1c9b-4854-8405-63cd26c2b287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b05ef67-3202-4f1b-8c15-8fb8363a178d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93de0036-6bbf-40a3-8f68-c5f5e7c53ecc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fc0187-a1ab-4d9f-8d2b-5d09b75df0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19db9f1-eef4-4314-a2c5-51d2b311cde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d770902-0966-496d-91bb-a6e23a5b881d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9bfffd-12d5-4e55-a7f1-bde7e3e9be6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02604fe9-dc50-4f93-9b14-73af3d0905a1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8087be-aa66-4c49-9726-577c4a5ad04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031e2993-0e95-4a64-bf4f-01cdb955b991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e1cfd7-9e07-4d87-9f57-d3b500bcf96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0f0b80-bc34-481e-a8ab-4557487e7dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730ebe15-4e80-4663-ab2d-f1b58624b231",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901db742-15d0-4726-bccf-924326f6742a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b527d15a-5e8c-429c-9564-393d7d6c1695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038dbe0c-6958-4548-ac62-c300e29aa543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "891c5a15-9385-4a44-841a-9bdb74db7f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e2677b-a720-40e3-b6e2-217d74a9c7a9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17feefa9-8c3d-457f-bb87-c7a71843d999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ec8130-e7e6-4433-aff3-7f05d94c00a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e2ab4c-330a-4ec6-9d11-c53c63089c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5aacfa29-f54b-465b-ab86-45def61dbdbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5fba35-fb54-4ffd-8921-f1f80503a45b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41155f8-e71e-4ae0-aad8-a2250c7c4715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0327d8fb-90f0-4d45-b07a-f68d61ecb27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2067efee-7e11-4847-8996-3f74ed1178f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "aff5e0c7-691b-46c1-acd0-de03263bb1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c63d75-93b6-4f7b-82d3-c3e6fe99ad2a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35482873-01ae-4d94-a571-d11386544e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff48c28f-5bc3-4658-93bb-a0ebfab5a79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6498a77-4a55-4def-86be-1ac4ec1a6d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bccab342-1c12-4452-ba8c-52ccf92194fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5056c9a-9e3f-472f-8956-8804d2637c29",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0ff9ab-9151-4ac5-8821-d4e637f3fb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9233a2ed-e5ef-49a7-abf6-44255c2b4dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdffcd44-0332-4ea0-b011-6d7f4b0184cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0b4844-dce4-4f60-ae71-2cb510cd296c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631b3072-758d-426c-a55f-e407bff57936",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a37f22-2942-4a8e-b8fa-7eba49eecc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a295d769-af87-48c7-80a9-d6f8cafef2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4957c930-462a-4ac0-80ad-d853f2445170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b974c7f0-2bda-4df5-aae1-2fad4d80abc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66c2233-f334-4a4c-a2fd-8285996d631b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefc9006-5f94-4644-9a36-90a10285acae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b81f92-be55-4f58-9aa7-cc2fb9df4740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed85b4e-0c53-462a-9425-34638927dca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "23fc2f05-cb90-47f5-93fe-4e007cd53de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66841cec-ff06-4fbb-aff6-c199a2ebb9b2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f307aa-6b80-4842-a903-872fa20906b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd9bb5f-43fb-4617-983e-1ec8556fca34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4779c723-1d20-4fb3-a393-0028f6609295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41a451fa-1c1c-4c96-8868-5ff1cdb4585f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5418b3b9-70bd-40e6-bdc1-c1cb74cb3611",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1500211-93b3-443a-908b-5a8667a794d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ae2755-c959-4888-94ce-6a28cc55972d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7230ff61-1f37-4684-a9cd-66518b64ac1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "548a617e-f6be-4c3e-aced-3a7392117a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962a86ff-568f-472f-9daf-e3c562d7c441",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb183ca-dacc-4bb6-9333-8b3f6d662f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc87e02-1aef-4b92-86c7-a5cb93db6ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927b2f5b-2557-4874-91fc-d7154974baa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a0f2ea-6c37-4d64-9680-004bd34754fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd30f42-64e8-43bd-bbf9-b2cb2d84b42e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5d4e7f-9ba7-455d-bd20-e9c79dfbef06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3dda597-7c03-49fe-b961-6fbe545d15b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393134b5-65c2-454c-b0e2-22ee6366c7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "39846865-f75a-4da4-bd20-1ba2686313cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e974b42-8da0-4bd4-8907-6c0de9afd874",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4389fcd4-ecd3-4a7a-8596-8c57cf2fa15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0698c494-2bf5-48c5-98c1-08be0a7097c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd49976-ce85-491f-acb6-83b5a4ffeb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ba0d51-ca7a-4037-9668-873d0392589c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179a1d2d-ac07-496d-856b-1a0421830cda",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e327eb48-c69e-4741-8802-dd04c9530607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4e1a6c-91a0-4823-b0ac-fb1f93c9c7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc30f3e4-b7c7-4935-918b-9833248de078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cedd2ce4-7528-4efc-ae09-17e8fb60caf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad2ab8e-08da-4d4c-8f67-69a3c93dd2cb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1e0c1f-6682-4455-84dd-e9c601300581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de148af-2995-420c-b22d-8ae6d8661d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ea5365-dca4-4695-b515-26688b651006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "209d03c7-07ff-4fbe-90ea-13d309b3c96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04297cae-2132-4900-951c-84f6073a42d6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e8b514-a10a-42e0-8c6c-ce15c40a6412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c374b2-f781-47e6-bca9-c2cdd3501010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf8cfe6-b353-4c80-92a7-bbcf4ad914b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "184cdd35-2052-4875-bc90-6c837ec801d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd246a5a-7a76-4495-af3c-050947390554",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51652498-4518-45da-8555-94cbe722e499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf133b5c-95ea-4481-bc34-e3b5951f6e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e62294-39c5-4b18-9ea2-4773cae00b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "225d9f0d-5c62-44d4-8a8d-5cf1a80b85ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c46509-c77b-4ebd-8a41-ed0f4ca14524",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2304b285-7074-4eaa-ac71-426a92fc0dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc137950-7d99-4b0d-955f-6b51d1ea5a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5ef8aa-1407-49dc-adc4-6e1729f51fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7a0758-c374-4396-bb35-d7a51a6106c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a02e4a-be43-4671-8800-389a5181c72c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a3f90e-7d4b-4d41-9bdf-bd165cb203bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebb85fa-2bdd-4cee-9eeb-47a8fb50c9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b7fa73-4712-45e2-aafd-07eba432511a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1be80d-ca6b-40b7-a18d-cd017630dcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b5f397-74a2-4eb1-a559-efc56c727dbe",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ee66a3-6501-40d6-bb8d-86eb3fd2153c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fb7fe7-a8fd-413c-a335-7722317069ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5d6bb6-897c-4c4a-9133-b0aecbd4c6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20f8e4ca-a4f8-4e29-8bfa-d6602f79bcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f21e2b-4879-4db7-9bb1-411193b3e6cd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9d9311-4803-4d4d-ac47-979ee2b5df51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd83dd1a-3931-4583-a540-a89dc1ea7080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9db8e89-a338-444a-8504-363e272d9bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1c631d-2aeb-4ba7-bd82-bfb88010a25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a3ab2d-faba-4bf3-adee-4fd1c7a26699",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed71fe02-1010-418c-a0ca-6c552fe74f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7e4324-237c-40b4-ae49-9295afcb57e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8025583a-dccf-46cc-9a0f-4093bcbdaa2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6923433-a72a-42e2-9026-0dca911c7378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0296fb18-d0ad-4089-b73e-98e4c278303b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434c748d-9187-4379-a8bc-c79739e824a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d01df8-2cc9-4bc1-a914-bbf2a3339e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42f43f4-3c46-4dea-bbb1-fa51eacdca24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a13e05b0-99ba-4f62-a9a5-a5814d0d18d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a990f94a-56df-45eb-8f29-d38356f9a762",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193f42fa-14ef-4157-81fe-c1c9c8c7dce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a3eb1b-7a6d-4c15-8eb9-7743c6cc919e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7fc18c-c344-4d14-bbfe-aaec872fd752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3afd4353-d7ef-4ef6-9b98-76f8d5316d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a86e0b-9e62-4551-a9ee-81f67e1918a1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28b3da7-2ea9-43e3-a619-b3cf18350acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddcc62b7-d3d2-450f-bdb7-2a1ec0956e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd621e7a-1d54-4b47-a1c3-f7fdd0ec644a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9707b9f0-0f0c-47ac-ba38-a55ee9315d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86366ba2-bdfa-46ca-94d1-2c1239245a70",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e23d1b-f25a-47c6-a515-6d41be142ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697a7414-03f1-48f5-8457-5279baeb9790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a341347-88f7-4fc0-a873-e39fcf9f9c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43d14735-530b-4029-9183-e8b8a544f408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cea20c-66f8-423b-bf1c-b4edb2522e62",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce63e0bf-a8d8-43ac-b61b-b709ec715eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c25dcd3-d499-4623-a1f6-5e348b4f30a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d213dd8d-cb04-4070-952a-8a3ce974cf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c912c80c-14ee-4f1f-b0f7-79433734e558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f045744a-33c1-480c-a5aa-ed4590cb2665",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81be63d5-f71f-4e64-9c37-4a1cc3bf91af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc945b2-153b-4e71-86ed-34f1ea84df0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454a41c1-3eae-4ef1-9d90-2a399f665bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "343b52ab-bc6e-440d-bfc9-040909b9042d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295533c6-e087-476f-9ed2-648da61d4381",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5277e787-b780-4d2a-9281-07f1ef401230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce76e264-667b-4cc2-bebe-982ea978999b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2c5cb2-3044-4ba3-b0fe-0b9cdcf1ee77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42bee6d6-f460-4711-b3f4-7e804e60e63d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bbb7a00d-4cb7-4283-a9e6-3b75eaeb725f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8fb366e-89cf-44cb-a3f2-97660e6ad68c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a401ec-c147-4adb-8ad5-1b521ffbecb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1465d0fa-d6ba-41d7-90bb-d5f1e927cfd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200d2839-4d0e-4962-90cb-b225cf9369a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49fe796a-a138-4c64-8479-aca479e08fd1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "525d884d-12b0-475f-b277-9c52d7e3ceaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d4e94bc-abd8-4a84-9794-cbb44a1a4cf6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c279180-85b2-46ad-a915-94eb71f55b14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d4806ae-3aa5-4183-a957-009bd41009c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84282746-e2b1-4125-9678-234bb1aec9ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "888365d2-0b05-459d-bf27-e03fa45431e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1622f0ab-90e9-4816-9435-26dae7ea8709",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6d39fd3-f6e6-4931-87ee-d30e44f3904d"
            }
          }
        ]
      },
      {
        "id": "78f46bf3-bd94-444b-a8e7-f292c5435da4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b7965c59-ff5b-4351-b608-211f9ac53f8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e074be71-49b7-436b-830a-db2477e18664",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bfa94a6b-d0d8-4a73-864f-26f2241df571",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f7f908-41da-424c-ab5d-99dc6e6f04de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb5f7eb-22b1-4be9-9d6d-88cf20d3c131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ce009c-0af8-424e-8a65-c5eabed9fa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bacaf9f3-2029-48ac-b7f9-9192e22fdb55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45df69b-0b00-48fd-b0e4-067bab5e84d9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d4054d-9965-4d10-8343-e4a7a797e6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744e09f8-0872-40c1-b3ce-bc0939f04afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0f27e9-7b00-4e80-899d-13893e33c7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ce3a8d-0a60-40fc-888c-1d1810db9862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eed0195-f5e6-486e-9dd9-28a4b06d109b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8270f4-5767-47c8-94f6-e9ab878ef59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1c5104-47c4-48c8-a5bd-2f5adcab4100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab22f9a-ed7e-4b82-80da-e206a7a0a7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c012d974-ad1b-4c76-8397-f65a6630705e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa28833-ed0b-445b-b58b-9b6146a4c4c8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d022f3b0-fbad-451c-b80b-15b3c4af9da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3329684-dab8-489d-8924-ce57338f971e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca225ac8-c634-4a7d-b430-d7f11ea676ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8dab97-62f5-40f3-9ef5-4b3aaaae6330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d6356d-46e3-483c-8ef6-0307258980bb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d445a86-d927-44ad-b8ae-aa3cb17ef043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bfd8f2-d5b1-4fe0-a206-9776e4340b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92880fb4-48c5-4cea-9939-7d02e1a98479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6f4673-f491-4ee1-9f18-ad7aaf0a6be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846ac7cf-3ed6-4313-959f-ea13aa9c14fb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c7341e-6a43-4bed-ac3d-f076555c0f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94c2707-4bba-4850-be6d-d2dc53d6f26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60835d5-9e09-457e-b652-d055293ab58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c51dab4-fac0-4be3-a85d-124bee9e1c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc4f153-7932-461f-ab81-026700d43a0f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c666d81-f4f4-4619-9865-e79d4a9aa6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f9f266-ec49-4d92-8f03-24e83ed203d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d65a02-813f-4b7f-ab7a-f6b88f2ffa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d62d1d-26e7-40da-bb2d-d726b50a1547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7e4c1c-f7b1-4263-a069-4f6ed972f463",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cfbf94-244a-49bf-a85f-a8a9110272fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c957a1b-c38e-44cc-845b-2d7289895aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c46338-7fab-442c-8929-e96d8513701a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5eabb8b-ebe7-4f30-8f76-8f4eaa7855ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027581ab-8866-4d33-a25d-abbcbd16ce3a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e588b39e-bbaf-45a2-83dc-d78878c33c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba26620-6085-4f28-809f-a867af030128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d415a56f-381f-4119-89e1-379e9e0d193c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c73829d-0fe1-4e07-9979-e243fe5cb7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0279ac44-1526-42a4-a593-ad7b85f8123e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a627e7-99ac-4c47-8b35-88a27a079706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bb3acb-091a-4bee-b960-bc27ba23d358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c6e2c4-c922-42f2-acc6-93bdf74497f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2457355-cc39-41fd-aabb-43e2ea49721a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59ba28e-ce2c-4e1b-b320-dabfd35c12ef",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1759c896-71e2-4512-a4c7-37193d7bebf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f89b9b0-b78b-4946-8467-9d86d16b0398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db751a6-2479-48c9-8196-108ed518289e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ce030f3e-bd86-47f4-8c2c-a183a3732b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f322d3f-9e81-49d7-814f-9ea935edd568",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632f1825-170c-4812-80ad-10931f955b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bdce7ba-077f-482d-aeda-8d47c8191509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5fb3d2-eb06-4c91-be0d-da6ab2442121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd5103f-a4da-4c27-92d6-0eba2c56c751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5025af89-341f-4d8f-94c5-c81320d51195",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd086ae0-ea92-4163-94b3-62b0b01cbbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288bcd19-1624-4ed4-915a-cff03cca9b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa02bf3-b05e-440c-a5ed-a266d2192305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc774f2-8fc5-4a1e-8a4e-d1b7eee16ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbc3a87-cbac-4413-903a-5d68a9252c35",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c66cde-3dae-4f76-b05d-868f76353588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9366044-fc78-40da-b251-094c14ca049c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7733d16-84d1-42cf-a705-157caccd6f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe668798-2cfe-41d7-b068-543861073e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4347371a-ee87-4146-88fc-fc6d83953990",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea95285-4d95-4e91-9641-2bd3ca30ff39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e6d3cd-7be1-4916-9ac6-95a3f64560c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18034813-6c0a-4584-815f-c0c09755537e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "eae0002a-3b08-4ec7-a6d9-87087e4f8f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a440901-f23c-4d81-9da5-e00f7fe6bdf6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1879e218-eb44-4323-ac0e-bcf3b07358c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb4e962-01e1-499e-8c5d-957c007dfefc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38d9869-9285-4133-8887-7b52bc007fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a85337a6-6f5e-43e6-84c1-9482115bde86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac38b4e-55d8-4973-ae93-98417b19858c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0797ea-6bde-491e-82b3-62da0a73a13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce0214a-2b98-4e95-babf-17c96e6082b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971bb874-ee07-412b-a2fb-fdbd28adaae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d06853-0a2c-4d7c-9f46-80792abebe21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf2fa8f-8805-4480-95c7-df6fcb3722a4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0143168-fb9d-476b-bd57-5262c04d9ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38efc73b-605e-42bc-9d1c-78ade71312eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec14144f-7d55-46eb-83ce-f8b7641cfe45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "75846b2b-815c-428d-a1e4-af245da64f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e715e4-d625-4449-a110-9ae32b0398dc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25003a5f-9591-42a9-9439-85190cef50d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdde70b-d38c-4f99-bbae-eed406202283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc769bc8-caa0-4bed-ad53-2c939ee9f9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05b58d7b-c593-4b36-a7ba-d219beab57ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a35eb40-5397-455d-83ee-ef489a115894",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c4042b-9089-4968-903f-062d2372d038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1230cd01-9c96-4e4a-b941-0376c0edde05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f0fb4b-29e3-4f02-b60e-cd37553cb83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78181683-2220-42be-8db1-789f6b7b65e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97384a98-b2d5-44e9-94b2-96c99fbfaa72",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb5e9c0-ab54-4f41-ac16-3e0fa891d731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29ea21d-6b98-4bc4-83a3-85d7a3477de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e70d4e4-e17c-4019-bcbd-de4a5f1ac11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5471057-502e-4bc9-9a5d-e59093e84a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67246562-ae0a-46e3-8a86-4f77fef161ef",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab9a096-444b-43e1-b1c1-7525d2e204a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887b76db-3c4c-463e-ba22-75dc9815e16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5c48f7-83f6-4e7d-8073-e396653e3bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b129d586-2705-49be-8192-8852d3130bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a31d044-81e5-4591-b2b0-3cc770bc4782",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edf2727-03d9-4699-b466-829e1e8036be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96959806-a112-4a1a-bd84-f2985cdba974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420baee8-ab6d-4e1d-aed0-edb7c55dedf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5083d17b-85cc-468e-9867-642714f42c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3942d2d3-a6d3-4034-aa45-8a0c1dcd19d2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a15a367-c67a-4cab-9049-8de320fc0d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78432628-bb10-44c1-9797-de29377f8b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e211b3a-393e-403f-9258-7567b631103c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "baf55660-c5cb-42d8-8603-5bf435ab58c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd3f518-b6ec-465c-92ac-2e744a46a70e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55dc958-aa9c-4355-b43a-f1fb7d457cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32301ed-52f8-4558-adc3-99c09439a927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0458b5-9fbf-406b-8ad3-497460b9c01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf505fd-bc60-4f55-a30f-6746a5407e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef08653-d0c8-44b9-8c65-3113751c6930",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eac6e5a-d6f2-42a2-b51c-04041baf9f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367c4dfe-1f2a-450a-85c1-d5ff7598c6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5756d031-1b51-4a09-b661-84d74905f212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38579829-5908-46d0-9ddd-2491138d6872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855724e9-5811-4fa8-b021-e0e1a721d510",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87421cb-6122-4291-9112-897b6c12fb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdae7b5-5a82-42bb-87dc-aebc3440083f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0be3766-6a89-4cbc-a721-644f4fbcff05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aea24b26-5c1d-4a71-809e-1fd37e162204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a34d59-1150-4e30-ace4-faabebae700a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c9710a-0eb4-4633-99ba-93224dee92c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70f0400-b289-4339-b47a-3c4ecece0e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7078501-2459-488c-9fd3-2f4b2f4e71c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35f18068-59b1-4c30-bb2d-b83717d2249a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef457cd-df33-40e3-9102-62d95a648511",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b31db15-8094-4f97-b1f5-efaaea81cb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce735086-7ca2-44ed-ad4a-90a13649c40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a651d47-48e1-47c8-b68e-f65bf426e98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52462d56-9432-4e36-9e87-2b754b21afbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f5e24c-1461-4fe1-87b6-752303cde863",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f17b4c-9f6a-4c90-a20e-9b6f51fcde1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d15373f-a8c1-4d28-9a58-baca102131b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c8e365-bd0e-4791-99a3-3146d7002e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7c44d9-4a0c-4732-ba91-01399330e5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9563604e-687d-4793-9523-87d51dc68d7b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb12ed9-64f7-400b-97c6-abe0d9ccfb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd05d2c2-06e4-4004-978a-9064096b8dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15150ec2-da54-4330-8968-13be2bce9d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb06666c-ad77-4a32-8ebc-b8a1d8a0c35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3dfa6f-a67b-4830-94ef-c64b285007f3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423f9c19-cc37-4a10-9e01-aafe01be6a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb11f1f-d792-463e-9276-8cfc3b2e311f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ad55e8-da69-4ade-931a-24ac7c5cffaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc78241-e4db-44b7-8939-c220fcb3c75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3ba8a2-bf76-4eed-91ac-0d6bb4e21929",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37c1ec4-1f78-4714-a738-6d1f880b9111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df65b4bf-9bab-4b62-8d7b-8beebb124848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab65c5f1-0998-4a34-8871-b7e818199e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1944de-c387-4770-8ba0-6c4d01610e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfeb36fa-874c-4ff4-a90f-bec453837316",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc7d734-3642-402a-a632-67aedb0ffbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df544a6-2f26-410b-9984-deab354586f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd420ad8-e635-496b-89dd-49d4342313c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63acc565-3a4f-4a73-8060-d0a01669bc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5e523a-d849-4261-9909-c01dd6aba43f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92caf9cc-5d7a-43e6-910a-b74b603c6885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a2c4e0-a84f-4779-ae35-fa55f6d6e330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd93160-0720-4630-a00f-012e21043e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbf4c9e-f827-4022-9b68-fde2600ec50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7234f9b-75da-4f4f-8872-72782793e033",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42070b86-d589-45ca-a9c1-7fc737569c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80192da0-6701-45f1-985e-d929a69da261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6688b2a3-f763-4ca7-85e0-6e4fe935c4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9808c2-111b-467a-a1a0-2ca0945625a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95db8c52-8d52-439f-862e-0af2ede6a23e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7701dac-226e-496a-9574-5486d0cac09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd12141-2109-4f7e-8b0a-f42808f4b4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b97cbd-51c6-407d-926c-c28e7e001860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "962f89bc-2fc4-41f1-aa7d-3ba084a6e655"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e7762fe-23fa-4490-93c4-87f32dabe100",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "814b293b-067c-4621-aa37-53863c7bbac2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75687c63-47d1-4f26-9a1c-c4026b88cc83",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "46f2ad82-9866-428e-960e-f8797ce1e084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba3b601-933e-4618-ac9e-85425df16241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1549786-004f-439d-8c9e-74d5afe788df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f39eb45c-3c6b-4142-b3aa-2a36dcb604fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57808ca1-4a5c-4ab1-8b93-ea773b88eb89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1843173-823c-4180-8b9c-37843c4b3649",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13e23422-59f9-4d80-84a8-c65ac186707a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21e53a9e-0caf-4771-8c1e-3442fe19d466",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e4d406e0-2635-4f0e-8174-b557c1258ed0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fc7865f-be46-4fec-8ab0-f57c21daf652",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b64f2980-9654-407f-8882-037611169f39"
            }
          }
        ]
      },
      {
        "id": "7e290f35-682c-4eed-bc2f-b78f3d7c2949",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cd8d3b92-7360-4a5b-b386-6171bdc85bbe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c580ba5-31d6-4108-8dee-a0cc9c93629a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3e1107d1-cbf0-4427-8b97-817acfde3113",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3df59ad-47c9-42f1-a442-9015b34f3187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585fc971-6db1-4d2e-b44c-c6b74fed263c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf7111e-65ad-4694-869d-4fd51353f236",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f65891e-5064-4555-8bf2-e8099560dd78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6b5f58-b6b0-4c47-9780-67742f4945da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02edbbdc-0403-4427-bde0-cc73de879106",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fac4f4a-bd5a-4266-8113-b98f496776a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ba38aa-1d95-4b60-9491-2f4c95101409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb9695f-5b08-40f5-bd18-328e0f31381c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0913c5d6-7ebb-4100-ba89-f7816d198ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd80ca7-feda-4e82-8cb2-72ed59ca94b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3081060-6bc0-4302-b501-f1cfb25a1280",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d825aba9-d2f3-4ef2-a907-f7ec5b0eed44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3bc094-c19c-44ab-86e8-78f1ae9d59f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bb2637-a52f-4c78-8d89-8d08b029e6aa",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52536087-12b8-4894-b74c-53b92b761477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abedec63-ec20-41c8-80b2-c948efd7eb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8937a60-3c1a-4605-a34c-24850e4a3da7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458f6ff9-5244-4946-bc36-19e9074ab59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2644f69-1994-4f63-afd8-5d9c161fc966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0051b46-f83e-4918-a1e3-333d15d249d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eab9e92-5053-4c0f-988c-9a786e35b2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db4040c-2a4f-4c81-8fdd-cf625d20cb83",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7199de48-9296-4486-b087-5ca189a57d46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cdb1330-dd3f-43d4-a911-6e7726d849f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4528db38-1e69-4060-abec-e154f08f97ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b08362-d6ff-4e95-b1ec-8b0e793ca54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a13ddda-f08d-4f6b-a040-a831c5128a08",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933feef7-c345-413e-93a4-6f8242969e92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7392b080-85e0-42e9-b3fd-f5e74a2aedeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d568b305-1f35-46e4-8135-eaa06c865dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e081e5ce-a925-4cdb-93a4-7e32c9e1891e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55616eba-b559-44aa-b2ce-e46115702156",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557161cc-5e35-4b41-9a1b-ee1ed723d5ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a02ee756-1047-426c-bc92-1fff4337e74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72b00e9-3ed5-4ff5-a020-09b70a17293e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c43c52c-9643-4fda-ba34-64b7a444af59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45919857-098f-46bd-910c-6746ec23ee76",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30d8620-48f7-4130-94a5-c5e33012c079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a722493a-cfeb-4fcb-b762-791205fd83d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508d6130-cf7a-4918-8341-0d808ef340c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1133949-01e3-4bd5-9afb-996ea1e6f93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239d5dd2-90dd-4902-b03a-0c381f86a758",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9643dc9-9467-4169-9cf0-1bb5e28d30ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec821f9-c33a-4ca8-bacc-01febdbf4d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d6e598-1595-459a-bdf7-ff3178877186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0694955b-3c09-47ef-a4b9-1bbd54e6d179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f256f0f8-30e6-468d-b5d1-589a1e933d94",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9563f8c0-16cb-4bea-9157-8021cfd53ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "660ac2c2-6319-4754-bcf4-fc79a015f33b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1908373-f965-4be0-80a0-337ce441c26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8272e1b5-45f8-4ad0-a8fc-27bb5270ce64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b24744-b346-4d74-8b13-e44d58d9be2b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482f1fdb-342e-4de6-8414-a1f09cc53e2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a0e93ff-5bff-4f19-b915-b5cfaaeaf141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d512a5-ab5d-4fee-9b60-0e8e4dec6e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6381db-d283-487b-bd68-8b71d80e7bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562b33e5-3f82-425a-9798-2b5a40b5376c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfd7e02-8703-45ac-9924-e8bfba04015c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dd75369-c22b-4908-8ad2-21e906c9cc9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e981cf4d-d94c-4e1e-8bac-e18936f4143b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf8c014-4364-460d-a00b-2918b89bbf67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0908220b-d5f1-4a73-8ca8-5221993cc77d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9951644c-2f76-4972-923a-a99471cdef9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4924678-d656-48ee-8238-81f612abdf80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c5e312-2fd1-4187-b984-522ee5c6a396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36c692e-0793-4e28-a167-43bf828a7223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a2559b-d6d8-414f-b597-2e5ccadb0915",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b407ea0a-6ebb-4fa4-8255-b808e64203c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01674cf1-aa84-4b74-8e3f-71d247a849ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc09f0c5-8b08-419f-b056-ee900930d713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54a7b6a-885d-4cf7-b8fd-58ea107c7193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb3db43-9819-4a57-aa71-cda7c08122a5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a65678d-5745-4b69-90ce-c7d625452e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b752879-4a77-4c76-9e40-27d03e88c730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f1464d-8df6-45ce-a408-f3ddf56130de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d5100d-ae5c-4d47-b738-1ad2e6609c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b07b28-e185-418a-8651-de2d2c8ac33e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2813c814-1e04-4cf0-adfd-7c36ff8abb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66189e18-46d8-4a4b-9c51-30d3c7b58e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6034fdf-3b13-44b7-9b8f-54f35e69ccf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f39d9df-65ad-4f09-abb7-53d5619d1212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42fc83c-c975-4e59-b189-a257634caa05",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea183a65-63a9-4b99-949f-21cd21ab62de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757822f1-2550-40b4-a7f6-59223fadb4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d23d11e-0dad-4bfa-845d-1f4c3ea0e608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5270076b-4c73-48aa-a965-8b9b12f5e0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8187d71a-c763-49be-b7ae-8475cf08d1d2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4002643-3899-43f0-bf78-af8cdfaa6aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1af5d4-a63e-4d60-8c90-3a097ec879bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ec9940-2d55-4293-8722-333fb164a61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8856e30f-a795-4519-b67b-fe97a915bfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a801cf-8516-4198-8b9e-addf3c24ab4d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c584678-676a-405b-89a2-e6a1e7658ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1589d6e8-f49d-4ad4-9c22-4b7d22033202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf498e91-4d08-4831-8efb-068a0f9fe3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfdf6c4b-393c-4c61-ac66-dbfea577068e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d5147d-4d1f-4474-88f0-903635a32483",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ed8c38-e777-46ff-88fb-932aab500353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813f9e1e-0fb6-46e5-ac11-22ef0c3ea979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850db361-d0da-414b-a6ec-423c380f1f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8071b85e-940d-4a42-ba9d-9d6212c30a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ee6235-7c24-4897-a3c7-567fd0bfc17d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbdd259-f6c6-44a3-8fc9-ef4e4ca0e186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23ad36de-3a4e-4eeb-8a8c-b4960ceb384b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4350e881-8c50-45c4-b9a8-ee15d44100d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2424c6-e68b-4fd9-b9e8-84ba0f7c72ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65a5444-9a82-447c-a6c4-905dd5f785d3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af841db4-9584-4163-9e1b-2bb48307acd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cf04ee1-9c16-448d-877c-38a9e0059815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03fac10-0293-4139-a005-482acb539c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2748aa93-1f02-4f6a-89f8-6093a71c18b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1efddcd-15a7-4f6f-ba41-d05e8319d662",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61588f71-7838-4449-9883-630aeb836c1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d21def9-719b-43f2-b830-a71dce7f750c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916512af-06c5-48b3-8f74-ea7619454329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa1e128-537f-4d95-88cd-97b1b33f3714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9a3aad-6e45-4037-8d2d-5244168e6b9b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeada199-ccc8-4d76-b20f-e8e1e3683376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73013b47-49c6-4cf9-9e13-f18b7862d836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2528709-4027-470e-8488-beef8b90a503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e59d9d5-a1f2-4623-8e81-f6aeee1eeedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1864e40-443b-4f87-82bd-fa7a9a29cee6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57601675-db27-467b-b0c3-f1bde6e8c5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4838b8-0303-41ab-a80a-08b77c23f0f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50717dc5-2332-4cdd-bf8f-ec703675384f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88786bd-8b7c-4c3a-83d2-52c7aad3d2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8b32a9-9885-47a4-80f2-7f2af40a5f55",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6398429d-2595-4de8-b557-ced04022e879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff7700a5-abbf-4a7c-b54b-719e5ab40d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5962fe-76bf-41cd-bb1f-f4c52e35d4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1b2bbe-b5cb-4cb5-9372-1d7facbd160c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c86778b-8e8c-4cf5-a285-e9e15a0281e8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5dd788-8ebd-4239-a926-fef248e87ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac127767-89c0-4803-9f94-c8381a2324b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecc302c-da88-48d6-af0f-122439ca0a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecf6a77-aced-4adf-9d0d-7adddbb5c61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6159cffd-964d-4688-a54c-40053c7da513",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6ea745-549b-4dfa-bae3-977e95ba2fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1198355-b3eb-430e-aacc-2b4215a5a0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2339ed-bb4d-4411-93b5-1467f32327a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b23875-5654-42b8-af27-91207031ea56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d27081b-1e96-4896-a7bd-2de7f2b03497",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c3e0ad-5683-448e-a900-03a66d6312bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41480874-159d-4fa2-ba79-b8f4f55ed874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de800f4-2a9a-4c57-b638-738bccd0919c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374d661a-e497-4c44-9123-d9e8f3e3da57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c0dd15-3eca-4efb-8290-c46abd661e65",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26d21f5-fa19-468c-8a14-b055e28d423b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d26e9c09-6e13-420f-b3d6-a4d821345db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866903c8-4a2b-4438-afab-7ceac702b131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6a59e3-8ac8-4ee4-9758-7653dea9d89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dd2101-9988-4cf8-8d40-8df2f98cf1fc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7486e23-2dc3-42b5-9afd-5ca1f3056295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ad5a951-d9b3-443e-b27f-e7a2ebfba91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5194dcf4-e7a0-4c66-8af3-077983866688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23aaeb2-2d1b-4ece-8366-30db0c0edbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f02c36-4001-4dd5-ac0d-b68f24e860ca",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0850bfb9-226f-461e-9132-f81afd048d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01260ce-4bde-446e-95ec-50ef91722aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7922ab-6662-4d71-b0df-781ed5aa8da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454b06b7-a16d-4ae2-8b3c-86ecba3f9853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee958739-5142-4f35-8739-eb4c9ddc8a26",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde3679d-4aab-485e-8259-fed13b08c42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78501ff5-e955-4fd2-901f-f560d786c56e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16df8a30-bfa7-4764-a9cf-23ce76c4ed9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ddacb5c-a675-4f70-b9a9-3cf7e97f83b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567e02c4-6607-45b4-a010-8e92125a30e6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a36774e-a8d1-4271-b867-8f79d6756b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfb24ae-d7bc-4cbb-b977-aabbd65bf871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb1a2a6-e380-4257-b0b6-13e805c5fd23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5655dd63-df6d-43f6-af9d-299d59de0696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71234ea4-e0eb-4ff7-8501-73ba6172a9d3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687a85c7-67a6-4eb1-8587-bb5e791de39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e862f19-40ca-43db-95d6-e5d662ef164f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2ac335-4da9-403e-a33d-6301507a530d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a8c3d4-90df-4159-a8fc-5d8908ee71dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b26d192-413b-4c2f-9ddd-26f62c4306ef",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5f5dc0-0b63-40ee-83ad-4d8a1c2cc1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f62bd51-df0c-4291-9998-7567d5b55d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626568ce-dd7b-48ce-b21d-6115a086c7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bcf4ff-bd09-4676-9c58-ddd7bd19e15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311f163d-d76b-485e-9bb2-3eca7fbbd78c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef90ccc-0ab6-44fd-b7ad-006943b49038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcadf63-23a0-4f8f-8abb-71ee2e4a8de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17282f8-ac37-4264-af8c-f0d8b64a26f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b027e2-c95f-4d3d-8cbb-59f8a271eb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d46dce-9e85-4a29-bb97-dfc3f9811137",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bcd6b3-dc2a-4a72-9970-6f6eee633369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221ee52f-f9d3-4948-b822-0205d2c92009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cf4e21-1187-4fbb-87f5-ca76accbf9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1c3b97-b484-4ddd-964e-c052e8905e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5b0956-224e-49b6-a0df-6a489d043918",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ec219f-d43e-47a0-853d-71c47a542e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c33594c-34be-4b36-a080-ae9f73d6f89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0dc2b7-cf05-4b11-be35-fba38ef50dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9b5fa5-64fa-403d-9f49-dba868e66b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02075d70-aa47-44cb-80dc-a0b44da18edc",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ce16a1-71b8-443d-b573-7ffe67117d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f1bab0-5fed-4444-834e-a70e8ef9f291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "680c6956-acd1-4e38-b2b0-24a34e484550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544fb766-74b9-46b1-9da8-221438883f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d246fb2-da7a-46b5-9f21-3306b11e40b7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1561e4fb-3536-4c60-981d-d9e104bd2dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0bda94-8227-4f5e-a7a1-36bfda663678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a209101-5170-4234-8280-8fac2a635fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff84c83-1410-408b-a16d-485bdfc0d482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c8b45e-4c31-4f3b-a9fd-5047e1d383cb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a154d454-c4c2-4bb6-bc7a-18ab07c9971f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b03bd5-f641-4444-86d7-31591d9257f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c8ddc7-4277-4488-a8e6-c9bab08595ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273afe72-eb3b-45e9-a639-9470bfbc1ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4d8ffc-8530-4b4a-b437-20638ef8e46d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f08531-538f-4b75-a552-4fba54ccdb33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641b6db0-c0f3-45fb-998e-d4c82c3a6bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ddab87-6110-4b80-8067-0f92b96ebedd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4664a66c-d325-4d0b-bb15-268b1fd658d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704eea6e-cc15-457f-acac-1283f2a4fbca",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77117cd-66f0-4572-9ec9-c2ace1dc5a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c13b482-1f78-482f-863b-c04a0045b244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76754cef-f4d2-4bc8-b9c0-433cca100364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16155a0a-ca71-407a-b2d5-57e043cfd82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81528920-1aea-42b9-8add-af2de9bebfa7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91eb9ce-8907-42c1-b19a-f22b60130926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a61ffc-62b7-490c-aae9-40654d15bae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2021706e-1dad-4ba7-af53-16cd80218991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e906f3-e8f9-480c-a42a-f34e9ddf3466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e0458e-e2bb-4931-afc3-7f262b0c6a93",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ab4d90-5c1d-4ade-943f-9c3babd73b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990e7d33-8fe8-4554-a79f-516322dcb980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cabca1-1a06-4331-bef8-dd2ffcdbfdf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81726047-b455-4f42-9b34-c9c9c18c435b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb08185-f6ec-486c-b133-10705863e8b9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e17dcc-6d25-4c3d-8f8e-f555fc08ce6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5639c899-6004-4bf5-99e2-1aad526e1f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d3effc-db06-4cff-861c-e4b50b3932cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06c1e86-cf6f-4feb-b050-faee5ae090ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769e5f40-bada-49fd-9f0a-cf574efc4058",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfa8a8a-7134-4cc2-9b75-3bbf3ceee172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f5c7a0-fe8b-4485-9413-7e83651d034e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b7f73f-82f8-4b45-9d95-2b99c499c84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c268793a-20df-4cc4-900b-379f606dd903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3013b59e-7157-4dce-83af-936599ec20ac",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90f8992-1ec8-41bc-9296-7e2e8ddd0f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdb5618-4531-4d77-8a82-7d2878160fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be52c6c-a489-4bf3-bb78-7afe5de8af3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c032ed23-6854-4ecf-892c-34645479a84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cb97fa-b53b-4c2e-aa10-e19aacbd8bfd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05458540-78a2-4658-85bf-f5060f9461bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5f3521-6364-4f2b-adc7-053523fe93e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0530ac30-3c2d-4836-8a1f-c60b6e5e6d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa45184-fc43-4a2e-8c0c-f9bded620296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c350c261-13cd-4d2e-a537-2b17b22a6041",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56d9e95-b859-47f3-b7c3-f46287dbac54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f44e52-5f63-40a5-9088-b66cae8cbd96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183d1fbb-eb85-4bf3-adb9-d8da1f2b9b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfaf4c2-683f-4cb1-a65e-5b5a6b7dfa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f877924c-5dbb-4447-8762-1f64b2925412",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51393565-8072-4916-8491-7fdb5ea66d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912c9602-0956-4a47-b4ad-4d38d83efa06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf22678-7d37-4732-b670-9a042f7b767b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9fce38-0171-4b4c-b64f-599dfefd64e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312ad105-7f1a-4610-b6f3-fb2568233ed0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44786508-a818-4732-8327-1abe67de6e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b60bc45-80b7-4254-b6d3-e9b5c3d9d89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412dd571-c4c8-4a38-9d45-af83b3db7a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60b18e2-d86c-47f0-8246-4221999d3e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a87a688-da33-4e07-8221-71fe7488f8ad",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735f0b50-f6bb-4a4d-9d2e-5c390b79bf91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774ab344-9c68-44e6-9f01-8ce269fe693c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a85f648-9f16-4547-b7fb-93bce60aba7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893cff1a-3c82-46cc-9545-13d4ed3df98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd8b936-906d-4f95-bb70-4494c924a2ec",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a479aaa-3934-4d9a-abed-a85a8aa0a557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f45bff8-5b83-4b03-9885-cc9b571a1a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d96d99-f436-4db7-ba94-989cd81d693b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0ac606-d039-475c-934b-049bd7ed4252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66954c11-aa0a-42ed-9fa7-6ba52d6ecc8b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939e8820-4c71-4247-b4bd-3b77b1e345a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28045585-7eaf-4b33-a5b5-36ec1591a619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d474de3e-574f-4a8b-8042-4fe7a7cbd056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d0611f-1169-4e33-a546-9d1734b21abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a5d6c8-da6d-409c-9862-a98ef933059c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bda40cc-76e4-4059-8127-1d8d887e2245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62951950-d620-4b9a-ad88-786efe3f0f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f15dc51-9e8e-4e00-a55d-ec5d3c2e1e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd03df16-fa5e-4c15-9bce-2a08e11ad31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6f8193-cf58-49e7-bce8-fcb19be4adea",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed78ba32-676b-4936-bf71-a2a5964f384e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a49d69a-7bb3-4312-bd90-4ae6f5abdedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575d15af-1832-4b9e-98d3-1b17ea9ba960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626629d4-7ca1-41c3-8c7a-a28ad01c1078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc73f22-0592-497d-a84a-cb0b646feb09",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fe5857-2ce0-4064-a85a-45aaf7ee9789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07682abb-7738-46ff-be0e-d5f8b494b093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f270c875-447c-4c8f-a60b-1e68755684fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43ecf07-61c0-4167-8bbe-4d1932d10267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f190f315-2a59-47ce-b0ca-59268206867b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe1550a-dc5a-45fc-8232-b6dcc49d7150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67faca77-c26d-4a3a-aa3b-123f922d981c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fd1bfc-b5b0-4905-b6af-c2904ae48b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e94956-49ba-4512-9571-c65faa5cb8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc20921-f752-44ed-a64a-1cd15958f069",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b30dc53-faed-4ee4-a7a6-c2082e82becc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c196c30-1031-4ab0-bb4d-001e5e7e5c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49987740-d117-4e2d-8aa2-ebe279327a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401a32a9-8b76-486c-9bfc-9b25c7d7d2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd2106c-b933-484f-8758-f3234d793af6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e27328-0121-4bc5-80f0-20aa38ee5b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c908c7f8-322b-452c-b4d7-e0e6caff2188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b219b2b-a0a6-4305-8e73-d40d2508543c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68516c3e-9eb1-4f18-b596-f4c8f7f5debb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9952bae8-240d-4130-bd59-29d812f7e60d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188f7e59-94bc-47c0-bea5-a8b6ee71e065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d40d171-5c37-4012-a3a7-0350893861f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3139fc75-6491-4f42-be78-f875f31515bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f3d64f-4420-4c34-afaf-50ccf5a13b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc06d8d-24e8-4033-a4ba-efa8716a988c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c145e3-4d4e-40b4-8d92-e075343d60bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21bbb2f0-a1b9-496f-82fe-0947247361fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533858f4-81cf-4f34-bfb2-94df5c19b840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e1bca5-2080-43fe-b794-8f2848a64d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10e6f3c-6909-4e1a-84ff-b506318508aa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b70dee-b7f2-45d3-887f-87414d7d9f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ec91500-f0e2-42bf-a041-8724b6f637fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b96639-aef9-4ce3-a16e-5d01b87160aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce88d99-4634-4fbb-bf1c-eb0a9d6bb1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5b3e36-0e27-45cb-92f6-e678709808f0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95a559b-2cc3-4d53-a737-5e506491a20c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ca76cb-aae5-4ce9-9508-466be7888118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cd5e61-3b16-49c6-ba79-f1073cf02e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76bb3142-d84f-48c6-8392-25bebf40263a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e371f0-6595-4591-8228-fa359e2def71",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7378049f-6154-4ca0-85f0-7d1e8c5b960a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3baaca82-d7fa-4b3b-b91a-98bf14fef585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ee9eea-df9e-42da-bf21-19123881b020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fc9a97-d5c0-42e2-b704-c6855ab15c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2b9b3f-1623-45be-890e-14d27f2015b1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad076da6-62c8-4b9a-ae03-7de93e4ffba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c91a840b-78ac-478c-afac-0f00013500ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3645606-5f50-45e0-8c4a-a7e2c83a924d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b85e9b-2182-414a-afbf-48134aa8dee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d599abd-d36c-4dca-aa64-9a98b7b7c72b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30e193f-5130-4679-851a-d18916d6a6b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e88b0734-652c-47f1-84db-e4ce5fc8ed5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e25054-8ab8-4d3b-a3c2-452bb2eae80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1d2202-0d49-4469-b8b5-3b5a5ffd487c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45947f87-6295-44ac-8281-1dbb2244a635",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3913dec1-e7fd-419c-928b-9556688c5f68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13fbf4e3-5dc5-4829-9242-bd3626256f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5d5791-a95d-49e2-b09d-d30ab51e0623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c399aa8-a83c-4358-a59f-f74664cd8c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713db25b-d55a-4f76-bdc9-491f0ffa002e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202eafcc-2d21-4fc3-8651-c94e65854277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ed8930b-1b31-4a06-8b83-c223a41a79fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e58621-855c-4b76-9dd6-b87818029707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c48cee2-b1a3-43dd-adc7-8ba570c3e03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560883d3-4bbe-4052-add5-b62f1bd6713f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76ed4e9-c04a-41e2-9e12-2a2268206721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "078278a5-c682-417c-a00f-27c33f802479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb530b6-945b-45fb-b6fc-aaab786a8549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8efb993-a1fe-49b9-b8b4-7c86010184de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3234dfc8-e639-447c-a3b7-fb083ec80848",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e875a47-17eb-4498-9589-2ee698360dad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca09c21-5237-4ace-9e0a-ecdbde177732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6a277d-60a3-4189-a1dd-7bb54c4b7f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076c44f6-8a64-4a23-9998-22d3608374ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddb6530-4c35-427b-a4f7-613714e78054",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefe06b1-e62f-4b28-a923-3409c5ab8a13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82bee34d-b2a8-4274-81de-ba5c9ac67d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4b2852-5a55-4e5b-af0c-c9c107185d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3208f9-2a2d-451b-9121-a90639cfd5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9824329c-0079-465a-8e97-91bdb212f8c7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d41940c-63c5-4faa-bd23-75edaefc7104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7fc11c3-3474-48f6-9e7e-3649752ba720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b24a0dc-a7f3-4837-9b14-d1731f2332f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b3e613-a05e-4560-8dff-cebadfe3d16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dfb9a7-6d84-4db4-98d0-738e326d2dd2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce3cf1e-2eea-4027-a276-6fed057fecef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "226278f9-9925-451a-b15a-54653ef16007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeec2a01-30bd-42b0-aacd-c902fddd5696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06557e31-8d58-454b-8608-042a58d9a2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10947f45-228f-44bc-bf36-51a882e4e68d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29505050-82b8-4126-968b-ebe7023d92a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8abf5191-3f5e-49e9-8c0f-f67b8baa6e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46779e8-72e7-4d0e-9683-71b1d3436749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60be7a24-1f72-4d84-9baf-d7f376867a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9332f13-ee4b-4b92-a720-fea08276f9e8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0f71fc-42e1-4d51-a535-d60e3a9eb2b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13abc2e5-dce9-4472-b686-182820df3756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5753adf8-0c60-4b4b-9724-b1c89360c20b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6adbd9c1-e7b3-486a-9b74-4e8de42e0955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfac1eb7-82b8-473c-93e0-3005e0a06062",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18feb5cc-e1c0-4f89-9e68-1deed097d2d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d5307e3-e6f1-46cd-a1e4-c2461bb466ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e91ae6-c3f2-484a-818f-afc63e2ff316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91729db0-01ee-4f93-aa56-70ce8d0d66b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d1643b-017f-44df-bb9c-59ff172392ad",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22d4ce3-f7a8-493e-bd12-6cb33de46f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df0ecbbd-f975-4026-b35f-9ffce81b263a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b444f613-0cf5-49d1-9aee-1177144cc927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c518983-54cb-44bd-ae9e-2e6cb739e8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637817cc-6b4d-44a6-84ef-41598527ab4b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a36635a-6307-4252-a934-42f93202922f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a5706c4-be19-45ac-b5d8-c5b563824303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afecfb8-fde7-446b-840f-99b0f3c6d25d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d961be-51c4-47eb-a968-4b3d5e01bae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c3c7ac-e697-4aab-84a2-05dbeca0afc6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed1e682-fe85-4cc1-9b52-6a8dd371f676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55afcc9d-273e-4b66-b17a-86a439941c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf742489-2367-4b3e-8a86-33a42f4ee658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6afce9-70a8-4472-8eca-c6345d734e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e7590b-35a0-4d0d-be18-b4a1538d6b67",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd3ee97-707c-4a18-b5bd-c60d9e7ad938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03708760-2af4-47a7-9547-1bf4eb76cbf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d93d8fb-d760-4f68-82e8-797e6f447dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ba745a-0ea3-4147-a07c-707eb6dc4339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d3359c-3d34-4be2-b2b7-4f4b88707b11",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805cc018-7e7b-4130-98b9-100acb018c18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bab14075-133f-429b-b071-2d9e52b811de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbc579a-b5f5-4e94-a5f4-72c671927107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d68c7c-ea20-4c85-aff5-947c615b637b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b443c9-8e41-4ac7-bf33-30a592f62dbd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564e0f18-53d2-47d4-9229-cdcd2f37db49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "455a0ffc-0e65-4bbb-ae00-298d11746377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3902b3b2-8810-4f91-8d4a-5676c7c57e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4936060-d220-40b6-bbf3-11cd37c363d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df50e484-38e0-422b-a613-3a6ddd6fadec",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cc2325-5fca-4759-a970-e534042ed10b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6f887c3-da2b-4a74-8b54-e1e6f134beb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb37cf8-9e21-457f-9f59-d38bff2239e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b25470-df7f-4475-802e-79d235c76c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f61c902-3654-4a20-804d-cef5a7ad7dde",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c26d1fe-6927-415d-85df-7f651661939b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a01b5b73-b0f6-4fe7-bb3a-41a4e419caa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4957ba-0b3c-44f7-b4db-6a23da69ba9a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa56e0c-2475-4c1b-b04a-18137567ac3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27956858-b607-4d86-b27e-446b4e898dbc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed907f7-3686-4195-be14-cf3875737c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cba4165-d58d-49b3-b99d-4be21e00e7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721dbf49-d764-4b22-8e82-9c3ae411eaa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ed7c29-9d3a-4844-8589-e020e9add507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc27fbe-6d0d-4581-94d3-f3fa9b9ef494",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a9c942-ae20-4100-935d-86d36cf474b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e8ab0e0-f6fd-419b-9e3a-ea9ae01f5abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ab5e86-581b-4b0f-8ff3-49f165bee32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c41085-bef2-4049-86fc-2189cd7e51b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b9f495-8337-4691-b620-786b220f26b8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5291b0c6-4658-4a9c-9bc3-c271f23d0a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c727bf5-b795-45bb-9184-d04291ac25fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864fde69-ca0a-400f-9840-d2f456825641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b427d25-69b4-4ae1-ad2a-7f1974585cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d885118d-8e51-4426-a54c-c5ef58e94012",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4433b06-1728-4548-b277-bfbe5afa977f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94654ccf-85a0-4a43-8409-13d43b48084f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb771454-b0e9-4be4-a347-ea502d5b2f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48665c74-8d31-4a96-81a6-67e2decb7f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94416fda-262b-4bd1-9412-499775c6006a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca254d9-1110-4191-a246-8b2a4f458f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9472731-7f67-4844-86c1-b4b43045a323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec5794f-3f4a-4b29-983f-e82966541349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b89338-c938-4644-a5f9-d4337586e29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b310b31-f916-4c18-9ae2-f164b7542bfe",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca414e1-898b-4558-921b-793e0c852c97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9dc10e-0f65-413b-bb0e-2dcb9e15e590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0184a4e0-4f79-4193-b569-df2328f090f9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfed8f3-1c85-4ffe-8921-9f516764febe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b35b67-7edf-44c1-9623-00c0320a3288",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82566052-58ee-47ca-b52e-c72ae9bbac69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e1595a-cb5d-4f15-831f-c8c58bd94bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebeb584f-ddcc-4bc2-84d5-e9c9a8a2c7ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b07edad-3e8c-40d4-a47d-7f6f456b4b43"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "897b8812-c662-4062-82aa-f19fc7bdce3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45e3b015-f33b-4671-8e69-a1a2abeaa66c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6345e06e-e889-4eae-8454-de179e131811",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "632d038f-a93d-4f24-8d7d-347904a6b6a3"
                    }
                  }
                ]
              },
              {
                "id": "9feeb3fd-2afb-4bc5-95ec-5189e84353f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ddbedb0d-207e-4a41-8255-89c63ec4a8c6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6ce435-8419-489f-8364-db3acb9b5a05",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bb7d815f-9f9a-4940-924e-49077561ae7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c80a856-4988-4067-8510-e5bd2c1bd4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8e62fb7-8eb7-4e4c-9d25-ef56d7daf6c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51a1a72a-a038-4d96-be4d-53cee752b582",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a416a2bb-25a2-4eb5-889d-17acf0b231a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e64e58f-0449-45e0-8af2-f4342509c013",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54ef2276-4c2a-41b6-ad37-2b1485274c0e"
                    }
                  }
                ]
              },
              {
                "id": "5970d1db-b206-41ea-b2de-b44edd7dd7db",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0e2bad97-7f4f-4855-be63-43fa6c4ba322",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c73cf0-5e19-40dc-8832-f26f087f4d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "48ea7eb3-a63e-444d-bc57-3fb831c48ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4319be71-541e-4c65-984d-62fbe485e7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f297e750-b106-49df-88bb-8b06a8f7ae81"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c9fd04a0-dffd-4a15-a341-2e38740d861e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "322261ab-d9ae-4779-b07f-7a1baeafc4ff",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "219659fd-fd17-4275-9669-fb3c87a6c7c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a2dd26c5-6870-4d74-a338-ec117ed50c99"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2fff82a-e5a6-4aa6-ae8a-2f10909f6927",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38915a28-a7e1-4441-97e0-c66d1c2f12f9"
                    }
                  }
                ]
              },
              {
                "id": "695b61ba-a91b-4d8a-9cb2-cb98db16da49",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d30501bf-32b7-4c5e-a5ff-1105c405ea57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1eee4fde-72d9-4913-b85f-0c383018710f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "175214c2-71ef-41a1-8569-5c061f26185a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b701cf4c-fbd6-4d76-b3bb-37d8b0f9d4a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ec70510-25c3-40fc-b4b5-a2da5b0eb549",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d854ddb1-6366-4d04-bae8-450737b5ce20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80e7dfca-532b-447d-a907-21a701cbca3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a5766b4-1952-4a34-b228-0d06492a5861"
            }
          }
        ]
      },
      {
        "id": "0e1cf864-65ec-40f7-b297-d2d5f8f35632",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7e0ec745-85a9-4b40-924c-95bf8b5eeed2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a93423da-195d-470d-9765-0aa79fe0e917",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "091aa005-5e08-4406-87b3-809de649436f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec4bbfa-08eb-4441-93c8-0ba14c2412b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fb33cb60-7b6e-4d05-9442-44290ad95dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "743eabcb-7a96-4365-8ae1-e7c1be398419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e8bd8a5-fd7c-4d97-8750-57916acdd55c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5134fb97-ae59-479b-a10e-424c5cfa76fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c4ca2c7-fc97-4437-9f7c-5c6022bb543f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0a2bbb5-de63-4545-a908-6c3470b124ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fdf8017-f21b-46db-bf4e-d49c0db21090"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aca69660-4e6c-4282-9966-b0d840cddb2d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4cf6c883-c64a-4fba-9036-0448f57a43b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14e4cf77-add1-4f7e-8a66-84f42d9b598e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04cfbfa4-ec34-44e3-8467-192c093d5a37"
            }
          }
        ]
      },
      {
        "id": "fc09b59a-4def-43ac-a2ab-8cf080bf531d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8af3b660-b1fa-4290-80e3-b2ad589a0b7e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9487892c-7328-4b52-8155-913e98fe8478",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "541999a8-7e8e-4992-9333-0f0ba05d1de2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d620ab0e-9189-420c-8097-31b437452950",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e74121c6-717b-454c-b819-5d38df11ecb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed99cce-3670-4cc2-ac74-bc8d3f848b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3511b2ba-8f1b-4d8e-879b-691868a06e2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c534f5c-8bb0-445f-8c6d-468dc5543422",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c0b32c4-a00d-4e93-9070-34f3bc9e5dc7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4aa8850f-83bc-42d6-bc31-b5f9c7230fa8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ceedd3e-c46e-4dbd-a653-71c2cb316e2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b8938e9-cc4b-4729-bc50-35ff64748b8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b62cdb6a-a702-43c7-b39d-6fad0d02051a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4458e526-a1d0-4c16-a7aa-7d05bc1cd8f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de2754dd-5a07-4bdb-a897-c99ce02029cd"
            }
          }
        ]
      },
      {
        "id": "02fdf0b9-41da-4139-9746-5550f5df40cf",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "364b0014-e478-4b21-aa16-bab27b54910d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dace5ddd-fce3-4f9e-a080-bafa76a210f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f02326bc-a089-46b9-86f0-ae43b96343a4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afada9dd-aa3a-424a-b8f8-3ef3f7cdddc4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2be429a-d246-4bda-9c59-868af20a7011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0188afae-1b32-47d1-ae7a-9699967b0c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09d3800d-30da-485c-8fff-e9139abe7277"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39f538b6-652c-4b81-9272-58b6feea7051",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09b58785-a88a-49c4-b7bc-e67245570fbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6090054-ba8c-423d-b36c-b4a10c6f1c13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8985aec-958b-4800-8016-b5f919b4ede5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3518d306-934f-4829-a2cd-fa88aee03f6d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "528ec1f3-608b-4ae0-999e-bbbaa62b465e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffcdb59c-40ca-4a6c-bb2d-a385edfcc546",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9bdf2e9-57f6-4134-9898-e0aec31231ba"
            }
          }
        ]
      },
      {
        "id": "b279f718-a82f-486d-82be-90fb8d40747b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43a69b71-77ad-4a9b-bd5b-a897b07c52c3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6a765f9-6620-4e8c-81a0-8e51e03b6f7b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a4636707-3862-4af6-87e7-dc4a38d435bb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "235cc055-865f-4792-aae5-d04fc965580c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d684acc-098b-455b-ae24-bfb2fb9d668e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 222.838596491228,
      "responseMin": 19,
      "responseMax": 29799,
      "responseSd": 1806.84401852574,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700008513549,
      "completed": 1700008586571
    },
    "executions": [
      {
        "id": "0f4c304f-a4ff-4f27-a54e-48c09dc7ee5b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3e71950e-0f59-49ae-813e-6a4f81c88310",
          "httpRequestId": "9347ad04-3ba0-4190-92b1-36e509b0bcec"
        },
        "item": {
          "id": "0f4c304f-a4ff-4f27-a54e-48c09dc7ee5b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5910ba92-7a5a-41fa-a674-847a4c1d9af8",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 0
        }
      },
      {
        "id": "31f2aa23-2978-4c59-b985-7d8dc7db64c1",
        "cursor": {
          "ref": "143d14d4-e405-4f2f-bd6b-a13cdb2f1966",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ce8b7a2e-197b-4150-8275-b9b0bde37934"
        },
        "item": {
          "id": "31f2aa23-2978-4c59-b985-7d8dc7db64c1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "62de8831-fcfc-48ff-b651-27a0b1e6f8af",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "29887ed7-6fb6-4de9-8c78-a30c0231eac2",
        "cursor": {
          "ref": "70389756-d514-41ba-b7e9-0f21a68c0544",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5c7dbb76-61df-4267-9312-658def7bcc57"
        },
        "item": {
          "id": "29887ed7-6fb6-4de9-8c78-a30c0231eac2",
          "name": "did_json"
        },
        "response": {
          "id": "e98c49be-9d51-46fa-9e47-80c77ad1ed6d",
          "status": "OK",
          "code": 200,
          "responseTime": 598,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e89143a-5a6c-41a1-b86d-8b1f5fae5752",
        "cursor": {
          "ref": "2de2e0c4-b8d6-48fd-871e-32d9ae1b14ba",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0ee090a6-fc2e-4054-9130-e9f98f5d54d8"
        },
        "item": {
          "id": "6e89143a-5a6c-41a1-b86d-8b1f5fae5752",
          "name": "did:invalid"
        },
        "response": {
          "id": "c3dcd679-b29f-498d-8778-2eac2c7b8692",
          "status": "Not Found",
          "code": 404,
          "responseTime": 972,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e89143a-5a6c-41a1-b86d-8b1f5fae5752",
        "cursor": {
          "ref": "2de2e0c4-b8d6-48fd-871e-32d9ae1b14ba",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0ee090a6-fc2e-4054-9130-e9f98f5d54d8"
        },
        "item": {
          "id": "6e89143a-5a6c-41a1-b86d-8b1f5fae5752",
          "name": "did:invalid"
        },
        "response": {
          "id": "c3dcd679-b29f-498d-8778-2eac2c7b8692",
          "status": "Not Found",
          "code": 404,
          "responseTime": 972,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e96f7bc-8e84-480f-a9f2-4401819e4313",
        "cursor": {
          "ref": "e5a5bbd0-b730-451e-8969-46a1928122d1",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f9d4cd62-5bdc-4d3f-a237-1fe3b0413419"
        },
        "item": {
          "id": "8e96f7bc-8e84-480f-a9f2-4401819e4313",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3663de99-8cbf-495d-8d44-dee4baa20314",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc367bf1-e48f-427d-82e9-2e96490d9bfd",
        "cursor": {
          "ref": "2e91b735-814c-45dc-b76d-6bee027a00aa",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5529b8df-f24b-4f23-9cdf-15c5ee7ad149"
        },
        "item": {
          "id": "cc367bf1-e48f-427d-82e9-2e96490d9bfd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7ecd706c-4485-4612-9bd6-15d7bde55591",
          "status": "Not Found",
          "code": 404,
          "responseTime": 90,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7983f43-7e3a-4a94-81c8-63da0f008142",
        "cursor": {
          "ref": "6d93fa0d-b6bb-418f-94b3-c160f7216452",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fd67ea62-5471-4600-902c-0285ab849d24"
        },
        "item": {
          "id": "a7983f43-7e3a-4a94-81c8-63da0f008142",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "230087dd-4202-4958-8c49-c648db7fdd3e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 158,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1abc23-4488-4642-b51e-6bcceab2e7d9",
        "cursor": {
          "ref": "cbdfa7bd-77be-42f8-a031-f3cb252368af",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1fdb425d-4d4a-4d07-b26a-9ca9d5867ffc"
        },
        "item": {
          "id": "ee1abc23-4488-4642-b51e-6bcceab2e7d9",
          "name": "identifiers"
        },
        "response": {
          "id": "f4626689-ecee-4a58-b9c8-3feae68be367",
          "status": "OK",
          "code": 200,
          "responseTime": 122,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338892ec-6a44-4722-bf10-b30b348a5986",
        "cursor": {
          "ref": "12aafe60-4af0-4d95-b566-54f73a31f9d5",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1156ac3d-8641-4678-85e7-1a5ae943b7c9"
        },
        "item": {
          "id": "338892ec-6a44-4722-bf10-b30b348a5986",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "74c1fdd9-06b8-4c1f-a102-ef4051cb69dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c57f0ab-a897-4ac0-a57f-30955ed82db8",
        "cursor": {
          "ref": "0515f1ad-62b6-4929-80fe-7529c70686b7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9113b472-1fe2-4328-b594-4129b3fed0a6"
        },
        "item": {
          "id": "9c57f0ab-a897-4ac0-a57f-30955ed82db8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3d5bf006-39c6-440a-aad6-034fa4f3166e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f476b6-9714-4f8f-97e2-cf3436303753",
        "cursor": {
          "ref": "56c26832-45c7-4ae5-bbe1-4f33d50277bf",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c49a3b61-9767-485f-a61f-7b0e6e63ab3d"
        },
        "item": {
          "id": "b0f476b6-9714-4f8f-97e2-cf3436303753",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2842beb6-0f7e-4e66-acc5-fa7801561840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a55145-b23e-4505-91be-fa688631d8f2",
        "cursor": {
          "ref": "fcd2e7d8-3a39-41da-9205-2bdae59860b9",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d943cd84-3f0c-413a-8420-6b890b69be2d"
        },
        "item": {
          "id": "00a55145-b23e-4505-91be-fa688631d8f2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e3a864b5-b5fb-4ace-8680-0a77d5ce55c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e6bb83-4b50-4c41-882c-e16c606ed08f",
        "cursor": {
          "ref": "02912e83-1d35-4fba-9fdd-7d192788a4f2",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "04b15204-363e-41eb-80e8-0ad295db506b"
        },
        "item": {
          "id": "c8e6bb83-4b50-4c41-882c-e16c606ed08f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4405ea98-2192-42ec-9054-c9ccf62fd5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78795cac-8507-4064-9c4c-5b886f4953c7",
        "cursor": {
          "ref": "7317d79e-26a5-4971-b570-5c967704cf29",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bfe9b557-1095-4354-b345-2ff439111deb"
        },
        "item": {
          "id": "78795cac-8507-4064-9c4c-5b886f4953c7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7c17f80e-772c-480d-b4e7-65dd321ecc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdf05f3-5fad-423a-8938-c720db5a47ee",
        "cursor": {
          "ref": "b2c386b8-a050-4803-8f0c-7c69ebf9bc1b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9da89229-cea2-4084-a27c-232b7a961e41"
        },
        "item": {
          "id": "7fdf05f3-5fad-423a-8938-c720db5a47ee",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e45481ad-c983-4942-a8cb-32634b74a366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce8ab6e-a4af-4779-b11c-884ccf2934ee",
        "cursor": {
          "ref": "b0579c25-4e23-4ce4-ab65-cde789c6ca17",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1932743a-484b-4237-be27-cc4e662e00ce"
        },
        "item": {
          "id": "0ce8ab6e-a4af-4779-b11c-884ccf2934ee",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b126d89a-6d51-4e67-b02d-a21d80aa7a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b625c86f-409f-4262-95a1-312d1aa48e27",
        "cursor": {
          "ref": "66af8486-250b-4f20-a824-05d9f504d62c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ab905af5-67ff-4c31-a7be-157e0b0a5cc2"
        },
        "item": {
          "id": "b625c86f-409f-4262-95a1-312d1aa48e27",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "79530efe-b6d1-40e9-a7a9-c79e57ebc97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c587f7-d69f-4860-8310-d1d32e8c45cf",
        "cursor": {
          "ref": "9284454f-0009-4d4d-9f46-740e61822666",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "981481ca-7bcf-4dd8-aa9e-f926334f304d"
        },
        "item": {
          "id": "c3c587f7-d69f-4860-8310-d1d32e8c45cf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3b010591-4628-4517-9814-29fbb7621d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa8c12a-0ca4-40f2-bdd7-4da3604762a9",
        "cursor": {
          "ref": "ac2a56dd-204f-429b-8dfb-cac199f1c960",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8e183fbe-14a6-4409-a833-8297feab704f"
        },
        "item": {
          "id": "5aa8c12a-0ca4-40f2-bdd7-4da3604762a9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4cfc3977-dde3-4f47-94de-c483e66164ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344c216c-fdb9-41ce-b7a7-41ba9aa6a1ac",
        "cursor": {
          "ref": "98d4246e-37d6-417d-8c06-76ba081a3b53",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "825b4a3f-36fd-41d3-90f4-656a2691889b"
        },
        "item": {
          "id": "344c216c-fdb9-41ce-b7a7-41ba9aa6a1ac",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e8d6c0fa-61a2-4ca2-bfc6-76a7028ed0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a905750b-b5be-4e1d-aba9-17108e37a854",
        "cursor": {
          "ref": "8216f907-61aa-4a57-8271-ddc8f292f654",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "695576d7-f748-4f76-a49d-2ffc8c37d46f"
        },
        "item": {
          "id": "a905750b-b5be-4e1d-aba9-17108e37a854",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4343fd41-1bac-4e52-8808-f7ae4880e00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83f2ace-8e20-4a48-8c58-ebd7fcedc695",
        "cursor": {
          "ref": "0fe2a98a-4729-4fff-bd5b-bdd323097df6",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4387382b-ccec-4151-9a94-38d63a26e100"
        },
        "item": {
          "id": "b83f2ace-8e20-4a48-8c58-ebd7fcedc695",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c3b3864b-0ca8-4e20-8e9f-095700aabf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c790a368-61e6-4dfb-ba24-bfab74625ffc",
        "cursor": {
          "ref": "b445cf09-06dc-4c10-930c-23fece54a782",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fb64b910-5102-4b9c-bee1-26001b9aa0f1"
        },
        "item": {
          "id": "c790a368-61e6-4dfb-ba24-bfab74625ffc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1db9f473-7bd9-4adf-9756-7e2dea0b4b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d407045a-c38f-4acd-b73b-a222802f7220",
        "cursor": {
          "ref": "4f942784-08df-47d0-91bd-5be97215bfee",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bcd8ee4f-9897-45ce-bc78-82079f8265c8"
        },
        "item": {
          "id": "d407045a-c38f-4acd-b73b-a222802f7220",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "604baba2-68ae-4f35-8fcb-6ef6bf71d384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870db1cf-8d2d-4cf4-aa7c-de99a0180d15",
        "cursor": {
          "ref": "5b0b6609-f6b0-4d9b-9dac-6bb4e582611c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "136964e5-6e50-4c53-9653-114ea6c72923"
        },
        "item": {
          "id": "870db1cf-8d2d-4cf4-aa7c-de99a0180d15",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "070db1d9-22d2-45a0-bd74-3118540b4fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0889ddae-db7d-4a91-a6fd-fca196db8e07",
        "cursor": {
          "ref": "e30f60c4-4a83-4d8e-8258-e91439e74e2a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c8439f5d-6489-4335-bc48-0bd55f744f1a"
        },
        "item": {
          "id": "0889ddae-db7d-4a91-a6fd-fca196db8e07",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e54daf35-84f3-493e-b252-67df56554471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78287c92-1901-4fe6-a054-87136bec8fd6",
        "cursor": {
          "ref": "d370c116-d92b-4fac-bcff-1da13647dc08",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3d6fbfe8-da2a-4494-84cc-2ec47691c5f1"
        },
        "item": {
          "id": "78287c92-1901-4fe6-a054-87136bec8fd6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "539656c4-f47b-4d44-b357-1fd5a682012f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8deb487-7100-4d7c-84fd-1b11951aef75",
        "cursor": {
          "ref": "40cc9726-83c3-4e32-8196-dc376902dcd0",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "369749f9-a38d-401a-a46d-b63ef36efce9"
        },
        "item": {
          "id": "b8deb487-7100-4d7c-84fd-1b11951aef75",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2ef4c12a-3ace-455a-893c-e9efae4e14a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f290747e-675c-4a93-ad49-d885ecf75438",
        "cursor": {
          "ref": "41fefbc8-1033-47a8-9f2d-2a516df16da7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4e4798ff-796c-4611-82bc-cfba4473767d"
        },
        "item": {
          "id": "f290747e-675c-4a93-ad49-d885ecf75438",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "efd76b54-ea34-4edb-918d-42612897f7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc7847b-b3dd-471a-8111-4db5f8285833",
        "cursor": {
          "ref": "d60aa95c-ce63-48e3-ab2f-be63803e1f21",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "36e5b4ee-7602-4a18-8eb0-d3c6c41ba774"
        },
        "item": {
          "id": "2fc7847b-b3dd-471a-8111-4db5f8285833",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0d90515c-eb0c-4cd3-9ace-df90b0fddc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19ac0f0-4d9e-4cb4-b217-e7afcd18ae97",
        "cursor": {
          "ref": "b45719bc-21b8-4f43-8df4-cea7425b2d09",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "978b3a55-efe2-41e3-a6ae-1c5c3b02ad57"
        },
        "item": {
          "id": "a19ac0f0-4d9e-4cb4-b217-e7afcd18ae97",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "672513e4-389f-4017-84f0-d362f9fdd306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef67921-970b-4b1a-ac2c-4c3beeeb1399",
        "cursor": {
          "ref": "87a308cd-1ed6-4a82-9e20-56c4065e23d2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f9dde6c3-a445-4977-a80c-a776f075ebe9"
        },
        "item": {
          "id": "1ef67921-970b-4b1a-ac2c-4c3beeeb1399",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5251d400-81e7-4ec9-ab35-23902ad9547e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8b2e4e-7f4e-4149-836f-56d284b16812",
        "cursor": {
          "ref": "4dc20a2b-2037-4451-a2a0-a6808cf65252",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "43ab91a5-ca15-436c-ae6e-b30e51087f4b"
        },
        "item": {
          "id": "8e8b2e4e-7f4e-4149-836f-56d284b16812",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0121ede7-b5eb-4d9c-9c6b-f138b62dab7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c827831-8727-4b5e-bfc4-ae2382033558",
        "cursor": {
          "ref": "e278f729-8960-4490-9ef7-44fbc1d31725",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c387cbbd-b49b-491c-9809-9eba2e820e63"
        },
        "item": {
          "id": "5c827831-8727-4b5e-bfc4-ae2382033558",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c93c3590-ea44-44f4-9f91-cff9fa7f61d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed78915a-9511-433a-8bcb-25cf653d027b",
        "cursor": {
          "ref": "caf7b7e2-b951-489a-ac59-beb9dfc3af7a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6559bcad-d14c-4e89-814b-ed0624e6a8e7"
        },
        "item": {
          "id": "ed78915a-9511-433a-8bcb-25cf653d027b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b44babb7-9a5c-46a2-91de-8c526a1117a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c913dd-e112-462f-bf7d-05be5f2c573c",
        "cursor": {
          "ref": "16c81005-7b8b-4d8b-ab88-afee8332e88f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ec113847-07d4-40d1-862b-916e4b7eb97b"
        },
        "item": {
          "id": "34c913dd-e112-462f-bf7d-05be5f2c573c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e163797a-84b2-402e-a2e0-50106ea71988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b767f279-54b4-4b18-8bc3-751ee5fddbca",
        "cursor": {
          "ref": "83eb9bf2-7a49-4280-9960-10ed32bed93b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "49bffb5a-169b-4e5f-a5c8-b0fcde9f468f"
        },
        "item": {
          "id": "b767f279-54b4-4b18-8bc3-751ee5fddbca",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f323073d-8d82-46ef-896d-b60137112e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9216d4-0aad-4e27-a026-c0eccc8725bc",
        "cursor": {
          "ref": "c2d9d3b6-1814-4d31-8b05-663afd086d2e",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "56448057-53b8-42b1-a9d5-826f90f5f6af"
        },
        "item": {
          "id": "8d9216d4-0aad-4e27-a026-c0eccc8725bc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0236610c-e99c-480c-8a96-fe44729ab2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5a6a9e-33c4-4ea3-b23e-4515ecd1dae8",
        "cursor": {
          "ref": "46795246-3adb-46bb-8644-06bc5e0adc7e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "eb894e57-d8ff-40ab-a514-94ba155a28dd"
        },
        "item": {
          "id": "3c5a6a9e-33c4-4ea3-b23e-4515ecd1dae8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f90f6a00-6f33-49fb-a3a1-83dbe5dfef7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8665dd74-87e0-4645-b2f9-a07e987add32",
        "cursor": {
          "ref": "89cdfac6-d63c-4301-907e-c06b2b585ba1",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f19758ec-aa85-4ecd-b54e-025f5028ec4a"
        },
        "item": {
          "id": "8665dd74-87e0-4645-b2f9-a07e987add32",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c94f664f-ed7f-4413-9dd6-67a7385488ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646b67bb-4bc9-48f8-960f-5c7678e4ecce",
        "cursor": {
          "ref": "c507a862-c4ab-4964-bb3f-89fc70c0a858",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4243f199-dfe4-4555-88f7-0d2356fcea01"
        },
        "item": {
          "id": "646b67bb-4bc9-48f8-960f-5c7678e4ecce",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4ee91ee7-9ace-4afd-910e-8b0ded837d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7db41b-8356-4738-8f97-ab9685243d02",
        "cursor": {
          "ref": "2f7bb9f3-1de4-475f-97e8-fec402b12082",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ce415c24-9b4c-4311-96e8-228a0f20e2fe"
        },
        "item": {
          "id": "fc7db41b-8356-4738-8f97-ab9685243d02",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b4b19780-77cb-4617-8797-71ccd59bfb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353dd686-4c68-4d42-8771-3c89172bb0e8",
        "cursor": {
          "ref": "2751e563-3a3e-496c-a3e3-7e05396c145d",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "17080ea6-1371-4f8a-902b-34bb98443ed2"
        },
        "item": {
          "id": "353dd686-4c68-4d42-8771-3c89172bb0e8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "96b607d9-8d0e-4ac8-b97a-2b77b8513ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c282ab-7190-4b67-aa42-834cdc1982f0",
        "cursor": {
          "ref": "1449168a-84f2-43ef-86e3-a73a06794668",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0eed2fec-b08e-4a8e-8c21-0916c73ea9c8"
        },
        "item": {
          "id": "a2c282ab-7190-4b67-aa42-834cdc1982f0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "96aaba12-6a01-4a00-93f4-cb6b8f48c463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b27cfa-ad2c-4fea-a7df-c3e26422495d",
        "cursor": {
          "ref": "fbff69a9-deb5-4d4e-b094-f873c2f3c848",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "123b8251-3ffd-4a08-97a8-162ae29b4d9e"
        },
        "item": {
          "id": "32b27cfa-ad2c-4fea-a7df-c3e26422495d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "df68caeb-63a1-4dc4-8509-2fb559b92c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9cff10-17f9-4fa5-bba3-417fba803857",
        "cursor": {
          "ref": "88397d00-78e8-4b59-8227-9200fc5aafbd",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "982328cc-32f7-4009-b249-bb440a904e1c"
        },
        "item": {
          "id": "df9cff10-17f9-4fa5-bba3-417fba803857",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7c860987-bd40-404d-8964-c3368806b8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35db2c31-1b4e-4462-9b0c-079cef80dc72",
        "cursor": {
          "ref": "ed0c9e15-fe21-4f8f-a67b-e67456dfb879",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0d561880-46f1-4716-9d64-0e0e0e7dd04c"
        },
        "item": {
          "id": "35db2c31-1b4e-4462-9b0c-079cef80dc72",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fd10fc94-c6b9-45ff-93eb-3fc40194096d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6664a1db-9a83-4f5b-92b8-063cc1763f1c",
        "cursor": {
          "ref": "31355cdf-2934-48e2-8ac3-c8c1d757a9a4",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ec3c45e4-54be-4769-804f-fc9bf1c09490"
        },
        "item": {
          "id": "6664a1db-9a83-4f5b-92b8-063cc1763f1c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c3e52a38-be01-459d-8b42-e4041f619fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b8bf46-3f8a-4cee-b30f-b130fca3836c",
        "cursor": {
          "ref": "88357646-56c8-4d67-b8e0-d525bb29a109",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "495529b6-5bef-4fcb-9b34-3006e4c08e51"
        },
        "item": {
          "id": "11b8bf46-3f8a-4cee-b30f-b130fca3836c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "95aa171a-1073-4106-ade5-d68c2b840975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68d0dc8-2263-4b37-a736-d2b57ac84b6c",
        "cursor": {
          "ref": "3436d66b-31fe-4458-a4be-11233fbf9a7f",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e9c5c7cb-fa3a-4259-ab94-ec177e76c9a2"
        },
        "item": {
          "id": "c68d0dc8-2263-4b37-a736-d2b57ac84b6c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d81ca4b8-1c79-49fb-8512-f1477e9f50ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95cdd07-269f-4d58-9e1f-81a4b263a27f",
        "cursor": {
          "ref": "29631743-0bb5-491e-9fd7-0eaa12ff71e1",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "243130ea-0766-4091-aa5c-d979be170c7e"
        },
        "item": {
          "id": "e95cdd07-269f-4d58-9e1f-81a4b263a27f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d1e3ec96-e52c-4718-9685-c3aa61d04b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcd716b-8b62-474b-960c-b11b9530a6a9",
        "cursor": {
          "ref": "95f1e148-256d-4ce0-85a7-df4cce10bbef",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cc976eeb-443d-4ddc-a666-52362df54659"
        },
        "item": {
          "id": "8bcd716b-8b62-474b-960c-b11b9530a6a9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "49a5f3c4-03ef-456d-9324-36e9fb194634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963449fe-f17d-4f3c-aceb-79b4037e61ca",
        "cursor": {
          "ref": "ce8031b0-32f4-4315-b7a1-55b389511ce0",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8442a5a6-8e52-4a4a-b934-88b093b51c3d"
        },
        "item": {
          "id": "963449fe-f17d-4f3c-aceb-79b4037e61ca",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1f360d0e-0ec0-4589-847d-99cb29b57dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b10e9b-168a-4931-8e86-cbd4a24b1c1d",
        "cursor": {
          "ref": "1077d3f9-2060-4f5b-bfea-1b4a13d9fbc7",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2c4415f8-a188-4864-8d40-91a74315452a"
        },
        "item": {
          "id": "74b10e9b-168a-4931-8e86-cbd4a24b1c1d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6a444471-4254-4d2c-8982-9d9363e5de58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a61e611-2b5f-4bab-b758-8aa91fcc985a",
        "cursor": {
          "ref": "2b16da88-4f1b-4c3c-8657-81405e9fec20",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c2feb8ea-57b4-4605-a9c6-98cfe56ecdcb"
        },
        "item": {
          "id": "2a61e611-2b5f-4bab-b758-8aa91fcc985a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4fccddbd-7a1e-484c-bbeb-b4f5d93da14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcda134-71fa-4034-9f13-aca0a51e5f0c",
        "cursor": {
          "ref": "ca9bc85c-7a0f-4395-b286-3da2f16b2a7f",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "112b1168-17bf-4874-aaa7-8fbfacaa1b5e"
        },
        "item": {
          "id": "bdcda134-71fa-4034-9f13-aca0a51e5f0c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4fa26e39-9798-4493-a04f-f96e6fdf6b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b8cd4a-db4f-44dd-89a7-35a07bebc380",
        "cursor": {
          "ref": "772f6924-0f60-415e-b321-becd10c584bd",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6a9d786b-8deb-48e6-8520-2dcb81348416"
        },
        "item": {
          "id": "e3b8cd4a-db4f-44dd-89a7-35a07bebc380",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1b682e57-7adb-468b-beee-ef86858a482b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a76a34-e7fc-49d1-9cd5-2eeb9791d84c",
        "cursor": {
          "ref": "98dbcbe7-29ce-41d0-8f20-cbf3b560aabd",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "91b40c60-e13e-452f-a535-71032c9630d2"
        },
        "item": {
          "id": "d9a76a34-e7fc-49d1-9cd5-2eeb9791d84c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "69dc9177-bf8b-4f01-a8b2-a38c1dc48e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc49d3ad-2101-4d76-81d2-4445591f3d2c",
        "cursor": {
          "ref": "6acd17fc-101d-4499-851f-0239308789bd",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1c4d8969-e96f-471c-9095-928a1cb14c9a"
        },
        "item": {
          "id": "dc49d3ad-2101-4d76-81d2-4445591f3d2c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fadd91fd-57de-4d3e-a88d-32f90bb0009d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2570513d-9438-4a27-b3c2-182aafad5cd6",
        "cursor": {
          "ref": "6ed16a5a-9182-427b-9ccd-5008d36f6285",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3fc33c09-0311-4203-a06c-a953f8e7dc33"
        },
        "item": {
          "id": "2570513d-9438-4a27-b3c2-182aafad5cd6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5598b880-7ad2-4c32-87cd-5fd5a8f55cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c8edd1-cbd9-4b64-be3b-329619b50a44",
        "cursor": {
          "ref": "76feb7c1-2eaf-4c9a-ae23-e9e5454d521f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ea83767b-4071-42f7-abef-c63f20c0da11"
        },
        "item": {
          "id": "74c8edd1-cbd9-4b64-be3b-329619b50a44",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1f075ef2-f9df-4a5f-9c9c-420bcce7508b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7846e943-a3d0-40d7-8098-71d13a5728a9",
        "cursor": {
          "ref": "3ee3d6a1-dc68-4930-a46a-0377500f19f3",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b3879093-ea5a-4311-a639-54beb0f4e81a"
        },
        "item": {
          "id": "7846e943-a3d0-40d7-8098-71d13a5728a9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "84569842-37b9-4882-85a6-760348a3a66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07cf258-c1fd-4c39-9144-2a5d8560e7e0",
        "cursor": {
          "ref": "7c67b117-f198-47ae-8d4f-5e5c17fc9bfc",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a2538701-7c5e-4d74-887b-9a2994840e85"
        },
        "item": {
          "id": "d07cf258-c1fd-4c39-9144-2a5d8560e7e0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b3108a8d-9476-45a1-aede-6d1b500e5c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831737f7-0bc5-40a2-b27b-00e2bfa89539",
        "cursor": {
          "ref": "2e5af859-5c6e-4acb-af59-08f2c667010d",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d0cfe119-1937-4df6-b54a-6bd62a5b205a"
        },
        "item": {
          "id": "831737f7-0bc5-40a2-b27b-00e2bfa89539",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3ff0c3ff-081f-4e00-8772-71b5bd0a235c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cd221f-e2de-4006-8eed-6807b9dc4ba2",
        "cursor": {
          "ref": "3d098a86-3364-4b77-a07e-851b668edc56",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "210835b0-3a8d-4444-82e2-b25fd676de58"
        },
        "item": {
          "id": "46cd221f-e2de-4006-8eed-6807b9dc4ba2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e9a0fd65-7a87-47b6-ab80-dc1a26ca0465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bea5a1a-1995-4d57-b603-e54d00b90ad0",
        "cursor": {
          "ref": "ca605771-b8e0-456d-b8b3-a559ba3f4737",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "eb616f55-0a88-4fd0-b491-f823229036cb"
        },
        "item": {
          "id": "9bea5a1a-1995-4d57-b603-e54d00b90ad0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4efdccdc-0e8f-4008-9a96-e56ae35a5a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8011805-fc31-40e7-b391-f2f0e865b1dc",
        "cursor": {
          "ref": "91566e07-abdd-4379-9f73-0fcc92bbe4e8",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "86441203-2776-4f1c-8e7e-4973eba5e62f"
        },
        "item": {
          "id": "a8011805-fc31-40e7-b391-f2f0e865b1dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "db397cf6-776e-491f-b072-4c085d7b7d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269c103d-ad02-4db0-881e-84f1b327a199",
        "cursor": {
          "ref": "7cfa8b41-c550-46d2-b2e2-8c6edb0bb457",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "25c31781-891a-49c0-8111-3f63defdad64"
        },
        "item": {
          "id": "269c103d-ad02-4db0-881e-84f1b327a199",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d2553722-ac64-4ee2-85eb-b8a58b9e1b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b642d7cc-bfc0-445d-8d16-67cccbedaf66",
        "cursor": {
          "ref": "837f4252-4f8e-424d-ac31-cfcb1e7a0451",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b6b3a986-da7e-4243-93a3-a887b8371995"
        },
        "item": {
          "id": "b642d7cc-bfc0-445d-8d16-67cccbedaf66",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c6c074ef-f18b-4f79-96f2-5ea34e10a077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bc0fd5-f5a2-4b90-89f9-a4c4f091ede4",
        "cursor": {
          "ref": "913f4048-7831-4928-90dc-5c36463099b6",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1bf64273-bd2a-4072-b2ff-504c88e3290f"
        },
        "item": {
          "id": "c9bc0fd5-f5a2-4b90-89f9-a4c4f091ede4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "65a4a44f-90e4-45f8-96e1-056fdc9d7aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a033f18e-d29b-4bc7-887a-cb633dd2804c",
        "cursor": {
          "ref": "5a18a56b-1378-433b-a51a-16690d9d8fe1",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "32c68489-73aa-4f13-8ae6-bbf4314ad29c"
        },
        "item": {
          "id": "a033f18e-d29b-4bc7-887a-cb633dd2804c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a66071bd-7919-4191-8eac-8f0bd7952f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07debb27-b40f-4023-b2c1-a48041050085",
        "cursor": {
          "ref": "47034545-010c-43bf-9071-74b75d56bbf5",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bf7db7c2-f318-45ed-ab83-18db25b104ed"
        },
        "item": {
          "id": "07debb27-b40f-4023-b2c1-a48041050085",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7cac416c-e3d4-4a8e-9684-c9ee16224e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5924ce7-24ec-495b-80c7-1114002ebea2",
        "cursor": {
          "ref": "68ac124c-6f37-409a-a5d7-7c38eda45ce5",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0dde69b4-1a0b-48f6-8879-ed4899ae4d60"
        },
        "item": {
          "id": "f5924ce7-24ec-495b-80c7-1114002ebea2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5944017f-ca4d-4f2b-9ea5-41bc8bf3a1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5731f4-0477-4b60-879d-7c72768cb256",
        "cursor": {
          "ref": "9607ce54-cf75-4900-a6fa-eeebf3a74cfd",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6d6bb9a0-f141-4261-896f-a26bb335b989"
        },
        "item": {
          "id": "fc5731f4-0477-4b60-879d-7c72768cb256",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ce9a0bce-60bd-4039-810a-ec0df628a62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469be8df-5116-4ec6-9d1d-0953d002318d",
        "cursor": {
          "ref": "663bddea-002e-435b-ae2f-3ed08c1baa05",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3c37c5ff-7b69-430c-bda4-372da5a9c111"
        },
        "item": {
          "id": "469be8df-5116-4ec6-9d1d-0953d002318d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f25d8f43-2963-4880-bae2-3ecb2f592fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfdbe98-9d33-45c2-ad79-98d333403b8c",
        "cursor": {
          "ref": "dec702d8-938d-4fa4-82f9-8c2668dbd62e",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "85e78abc-ea35-4196-8504-e1892fcb686d"
        },
        "item": {
          "id": "bbfdbe98-9d33-45c2-ad79-98d333403b8c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "11fac668-f4b5-47c1-bf1f-ee37e3de82f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd45eb6e-7ccc-4796-a071-d6bfe70c1ec3",
        "cursor": {
          "ref": "ddf1129e-09d9-4add-832d-406bdb5c4847",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "41565dc1-909d-49d1-9e0b-162925bc19f6"
        },
        "item": {
          "id": "bd45eb6e-7ccc-4796-a071-d6bfe70c1ec3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "73df93e2-bf78-4a87-a7bc-75a5798233b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0ca526-cb8e-4e09-b602-0ee85c72bdbc",
        "cursor": {
          "ref": "dcfab644-dd63-493f-84a2-656791291972",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4f769030-6a73-4d3a-9f45-b7c87382bfab"
        },
        "item": {
          "id": "ef0ca526-cb8e-4e09-b602-0ee85c72bdbc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "30fa15e7-f86a-4ebe-adf9-d3f9188573e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a4facb-e8b6-415b-bb1d-1e8d53132526",
        "cursor": {
          "ref": "895e0e4c-a9fb-45a5-a27c-ebc4160190bb",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cf28064b-27b2-4350-94d3-433bec0ac7e8"
        },
        "item": {
          "id": "74a4facb-e8b6-415b-bb1d-1e8d53132526",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cb247b12-7598-4639-933f-d08591e5d41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8b9519-a83e-450b-ba08-d0f23d5d8827",
        "cursor": {
          "ref": "6d1e91d5-4e30-4341-8cda-559c7554a126",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "72fb52fc-eae7-4012-9ba5-00596b29f132"
        },
        "item": {
          "id": "0d8b9519-a83e-450b-ba08-d0f23d5d8827",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a2e2ebaa-3e9a-4a0e-ab43-e0fc954b7dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198edf10-cca0-4846-8b9d-39f7d9813de9",
        "cursor": {
          "ref": "f6a090f0-fb6e-42f0-a0a9-1b851a5bc19b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f3997eb1-e98b-4dd0-8eb4-ec9ae9c4201b"
        },
        "item": {
          "id": "198edf10-cca0-4846-8b9d-39f7d9813de9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d82cdd2c-451c-437d-9657-3a07720c17f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec00f99-ef19-471a-8aba-f4d023d520ac",
        "cursor": {
          "ref": "2538f4aa-226a-4a93-b1a2-e01466855c1c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "da02699e-8602-49d0-bbc5-9ce35afb8938"
        },
        "item": {
          "id": "2ec00f99-ef19-471a-8aba-f4d023d520ac",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9cf9e28e-ab6c-4db8-a173-746a28065b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5ab367-29cc-4af5-b729-90bd67133bb1",
        "cursor": {
          "ref": "ce3c72d5-3410-4867-885b-78cf71f1e902",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b747c259-bb0a-4e54-aabf-81717ef32d8c"
        },
        "item": {
          "id": "7c5ab367-29cc-4af5-b729-90bd67133bb1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f6ac41af-7ae0-4cb3-b915-885e5555b472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a3820d-2c59-43c1-8277-b0c519881763",
        "cursor": {
          "ref": "8bb5f64d-fa9d-44b5-b3f2-c946e6603956",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0345f8e0-0461-4714-99f5-78af58088c31"
        },
        "item": {
          "id": "d6a3820d-2c59-43c1-8277-b0c519881763",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dc566bfa-bad4-475f-a512-f14bca2a3d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d67362d-dcc3-48a8-a676-848c3bf90eb3",
        "cursor": {
          "ref": "3f20ab68-1d1c-4d86-bdfe-d2c1875ab6dd",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b5a67da5-d1e7-4769-be79-6c5836db143e"
        },
        "item": {
          "id": "0d67362d-dcc3-48a8-a676-848c3bf90eb3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f21fc4e5-deb6-4de7-b2d9-c89a10d9dc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dca442-864a-460e-a7aa-677e222b4d7d",
        "cursor": {
          "ref": "bab9a57d-36d7-43d3-b79f-59e0d79dbacc",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a9ec6e48-1f93-4c65-93f2-0ee0678ec92f"
        },
        "item": {
          "id": "f9dca442-864a-460e-a7aa-677e222b4d7d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "37ab1660-c23c-42ef-969f-cd990eddc7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137df7e2-78f7-4ebb-9d22-7a685da5f774",
        "cursor": {
          "ref": "d1ec7600-e5ba-4544-b32a-2b8a249a2cc7",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0cfa413d-dc61-416d-a92b-b90ecd8aa289"
        },
        "item": {
          "id": "137df7e2-78f7-4ebb-9d22-7a685da5f774",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "55c658fe-d5de-4e59-ba5d-d32a023ad51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de817354-8a22-418b-b04a-12a92449a2ba",
        "cursor": {
          "ref": "ab2bde93-4800-4db8-b0d7-80e4e944128e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e51e294b-9063-4c41-a2d1-14b4584e83b5"
        },
        "item": {
          "id": "de817354-8a22-418b-b04a-12a92449a2ba",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f27354d2-31be-48d2-ba8b-60bea642f3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6241fdad-3658-49ee-b703-0c07de64b631",
        "cursor": {
          "ref": "ddce1b93-53a8-48e7-b63f-521b107aef6b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f654a423-a65d-4638-b15d-30cc0d57adb0"
        },
        "item": {
          "id": "6241fdad-3658-49ee-b703-0c07de64b631",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3cdf4bfb-36d9-46db-8089-d7ca5516a282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cb1699-4b92-4900-86bc-e53eeef762f2",
        "cursor": {
          "ref": "b0c71b81-ba9f-4a0f-953c-2b439f978fdf",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "28a78c44-f810-4d3b-bb4f-a83a1aafcc2c"
        },
        "item": {
          "id": "23cb1699-4b92-4900-86bc-e53eeef762f2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a1ba6983-675b-4a05-a653-146f29e52c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c223b4ee-544e-467c-8d79-62e1835d8978",
        "cursor": {
          "ref": "2093132e-bffb-4df4-bf11-a0bf8f2fa381",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f79fa4c2-ca86-4c47-9161-8d66a69a0d28"
        },
        "item": {
          "id": "c223b4ee-544e-467c-8d79-62e1835d8978",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e3defa19-9d03-493a-823f-03c79eed9f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436aad7a-d286-42e4-80c0-2684f50529ff",
        "cursor": {
          "ref": "464a14f6-d5e5-4f8b-8fd1-5f87339bfe8d",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e75c4370-cb58-4238-b737-047971c03106"
        },
        "item": {
          "id": "436aad7a-d286-42e4-80c0-2684f50529ff",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1b62b7cb-59b3-4698-9ba6-707993e353fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c2ed74-48cc-4d74-9b76-8b6377ff1789",
        "cursor": {
          "ref": "c3dd68a9-132e-4d78-b909-46347bbf103e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "055ed9bf-6965-4840-8304-61138a9dfc3e"
        },
        "item": {
          "id": "17c2ed74-48cc-4d74-9b76-8b6377ff1789",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c97bd245-9135-4b33-867e-0723a1e13c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9512fd6c-8ec3-481c-ba34-7d1b158d7b03",
        "cursor": {
          "ref": "760d177b-887d-45db-8e4a-83ce5874fe0f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8e4ebd56-6beb-45f1-954c-e829a8279e49"
        },
        "item": {
          "id": "9512fd6c-8ec3-481c-ba34-7d1b158d7b03",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "226bd33b-f303-4cc9-9242-78a05375f967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361f7e85-9423-4471-9651-65969359169b",
        "cursor": {
          "ref": "5a8e3bcb-65a8-4e4b-b1a2-42ff756e8186",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "212f1f7a-ed27-43d1-b5ad-c2ef130e0f57"
        },
        "item": {
          "id": "361f7e85-9423-4471-9651-65969359169b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d13f0daa-15fe-4f45-9a29-9f1450f23266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0658aa98-509e-422d-8e04-8610a470635e",
        "cursor": {
          "ref": "63f03268-1325-4977-906b-51cbe4be5375",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fa22a5af-6d50-4bc9-9d67-6354182203df"
        },
        "item": {
          "id": "0658aa98-509e-422d-8e04-8610a470635e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cbaa9d18-3b7a-4212-a75d-f159ca1333e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e548f26-6ecc-4f3d-b3fa-afa67a1298f1",
        "cursor": {
          "ref": "5315c02a-bdd4-469d-8dd3-09736743847f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e084475f-9345-427e-a0af-0f77872bcc98"
        },
        "item": {
          "id": "5e548f26-6ecc-4f3d-b3fa-afa67a1298f1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6016679d-ce7d-4fc9-8ccd-4c8ce372dfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669d8f80-7c83-4226-8c05-8072539aed2a",
        "cursor": {
          "ref": "f91182f4-d2e0-479c-ad05-b707dd244a34",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ff31cdd0-377f-4b73-a620-cd29da2d3e18"
        },
        "item": {
          "id": "669d8f80-7c83-4226-8c05-8072539aed2a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "71e4ef0e-f725-4593-9112-336d48474b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a1f062-1622-49e5-b05c-e88a732a91b8",
        "cursor": {
          "ref": "7968fdb8-e0bc-4c4f-b016-02312428d849",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "29c86254-907f-46b3-aa6f-1d2a1a0691b4"
        },
        "item": {
          "id": "a4a1f062-1622-49e5-b05c-e88a732a91b8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "50c4dc39-e0ba-4bad-8953-c8086106485e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b5cf20-37a8-492a-971c-0ae6de1eb671",
        "cursor": {
          "ref": "b9326430-3b74-4825-8659-19371132a74b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4f81cc2e-f383-49a3-a5dc-cdc9947d131f"
        },
        "item": {
          "id": "f4b5cf20-37a8-492a-971c-0ae6de1eb671",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bec0cd47-8023-4a05-a355-38fc1e764f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c08d438-7cfc-465a-97c3-3900773296fc",
        "cursor": {
          "ref": "edabdc20-030d-46a0-b186-4827769f5e73",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0248fca8-3313-4790-b78b-d7ad93881c39"
        },
        "item": {
          "id": "3c08d438-7cfc-465a-97c3-3900773296fc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3c34f164-2f44-4a5a-98de-e5204a0339aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853af2ad-f29f-4186-a363-04d91714e3fe",
        "cursor": {
          "ref": "04df9ce3-a210-4e09-ae53-6aee2ad00156",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bf721967-df54-4036-9218-4c1b4c35d771"
        },
        "item": {
          "id": "853af2ad-f29f-4186-a363-04d91714e3fe",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d380ff39-5bd8-47eb-8d8b-4a8440e1da25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0fc28858-791a-4966-82a0-6a53bed9dc0f",
        "cursor": {
          "ref": "859d260d-a67e-406b-963b-4f4f70190dfa",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "32d812ff-9d56-43b8-aab7-9ce64e14f21b"
        },
        "item": {
          "id": "0fc28858-791a-4966-82a0-6a53bed9dc0f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1e068fa1-6c0a-422e-aff5-b4cf60e07488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "853b7eb0-cd00-45bd-be83-f08321175db7",
        "cursor": {
          "ref": "fb8a8f0d-caa2-4e30-be4f-2037fecd6ab4",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4227412a-7751-4464-9266-40cc5fb0229b"
        },
        "item": {
          "id": "853b7eb0-cd00-45bd-be83-f08321175db7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5369e9d8-5c40-4c2e-9c52-aaddb9c8dac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "95ba5ec2-413f-42af-b452-886ad5268aa3",
        "cursor": {
          "ref": "572e88eb-add3-4681-b6bf-a23a50b58856",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "790059b1-833f-44de-b568-605074e85158"
        },
        "item": {
          "id": "95ba5ec2-413f-42af-b452-886ad5268aa3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e1d0b039-3616-4465-b362-4685a27382b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "14d7f6c1-1339-4953-9090-fecd65cc5e53",
        "cursor": {
          "ref": "7a9c4818-6764-4637-a048-934686febf12",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a981b72d-e928-4673-ba82-146f00265029"
        },
        "item": {
          "id": "14d7f6c1-1339-4953-9090-fecd65cc5e53",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b45a8637-afba-43c3-bac7-46c9897586e2",
          "status": "Created",
          "code": 201,
          "responseTime": 29799,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e498e410-f358-4e2c-a923-d631c40eb0c3",
        "cursor": {
          "ref": "66e122bd-3508-4e3f-9df9-584489874375",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "46e42c20-edeb-484d-90f9-be5c4900fe49"
        },
        "item": {
          "id": "e498e410-f358-4e2c-a923-d631c40eb0c3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "49bca1fa-96b9-4940-8a84-f2ace1a60d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "967e0996-deba-4f34-8701-ac5950be0674",
        "cursor": {
          "ref": "65128854-69ea-465b-8855-db953277177d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "771fc7d9-b57d-49b1-8cc8-70842f169d63"
        },
        "item": {
          "id": "967e0996-deba-4f34-8701-ac5950be0674",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "08d79e4f-01f8-48eb-8e4b-e838a2c9ca45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8cc2828a-10c5-48d5-a53f-f8d5bbb7e890",
        "cursor": {
          "ref": "3481efc9-6d2f-4107-a7b8-cc98ad353440",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "83c0f004-51bd-4dd1-a93e-7dbf3ab20fdb"
        },
        "item": {
          "id": "8cc2828a-10c5-48d5-a53f-f8d5bbb7e890",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0e63d7dd-7a24-4cac-b669-43181a93ea09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6410087d-01c2-4836-bc57-4974f3551a9d",
        "cursor": {
          "ref": "de43bff2-2a7d-447c-9712-e4555998c853",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "98616e5f-19a6-4f6b-9b71-0dde7266c195"
        },
        "item": {
          "id": "6410087d-01c2-4836-bc57-4974f3551a9d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "da1c9ea2-20b5-4bca-94f5-6c7d2a83f08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93de0036-6bbf-40a3-8f68-c5f5e7c53ecc",
        "cursor": {
          "ref": "148b8c00-ba9c-403d-9c43-7f5869935ee4",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "12d4ff06-0e1a-4080-9c07-bc2c02928b70"
        },
        "item": {
          "id": "93de0036-6bbf-40a3-8f68-c5f5e7c53ecc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e96d408e-ace1-4408-8ba5-3c929bbdd20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02604fe9-dc50-4f93-9b14-73af3d0905a1",
        "cursor": {
          "ref": "00e930b2-40a0-4939-9dab-fe5184d9e4f0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "61f8e68f-c405-4016-9a1b-42097cb05824"
        },
        "item": {
          "id": "02604fe9-dc50-4f93-9b14-73af3d0905a1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "416cd893-af0e-44f8-9cb3-6e662e0c1963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730ebe15-4e80-4663-ab2d-f1b58624b231",
        "cursor": {
          "ref": "306c5d09-435b-4dbc-9d85-94f6d0950006",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "acf684c4-e7c1-43e2-8a81-f755426758c0"
        },
        "item": {
          "id": "730ebe15-4e80-4663-ab2d-f1b58624b231",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ea13447b-8a76-48b5-8f1d-7c85fe9e9af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e2677b-a720-40e3-b6e2-217d74a9c7a9",
        "cursor": {
          "ref": "18e5171b-1182-4776-92db-a39bb9ce8494",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "78689bd1-f620-42ab-be64-aadaf3dbf2d7"
        },
        "item": {
          "id": "05e2677b-a720-40e3-b6e2-217d74a9c7a9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "53318587-f559-4049-80d0-85caace7d701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5fba35-fb54-4ffd-8921-f1f80503a45b",
        "cursor": {
          "ref": "df8d4e23-c739-41ae-a5f7-4f6cd5be66c5",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e627fbf5-196f-43b8-adca-48e024232ec5"
        },
        "item": {
          "id": "dc5fba35-fb54-4ffd-8921-f1f80503a45b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a9298739-43fd-47a4-84e0-7ef45077bff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c63d75-93b6-4f7b-82d3-c3e6fe99ad2a",
        "cursor": {
          "ref": "d73454de-734c-4134-b159-f35ba680948e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9bf13f83-02d0-497a-b4b6-b4b95965ac22"
        },
        "item": {
          "id": "57c63d75-93b6-4f7b-82d3-c3e6fe99ad2a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "76f6887f-1393-4b47-ae31-fe02955e6b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5056c9a-9e3f-472f-8956-8804d2637c29",
        "cursor": {
          "ref": "df2de473-3a46-4a0a-83b9-1db65a2e1cc7",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "49071168-f6f5-4593-b5c3-8e1ef925e399"
        },
        "item": {
          "id": "b5056c9a-9e3f-472f-8956-8804d2637c29",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f82fd738-1b7d-4466-ba2d-21e93b6576d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631b3072-758d-426c-a55f-e407bff57936",
        "cursor": {
          "ref": "e847fd0f-941f-4d22-b380-a9d3ce666a31",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "edaa7c54-5c1a-4e7c-8a01-a79cf16134b8"
        },
        "item": {
          "id": "631b3072-758d-426c-a55f-e407bff57936",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6a5e96e9-bc71-487c-b81a-99b110d44bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66c2233-f334-4a4c-a2fd-8285996d631b",
        "cursor": {
          "ref": "61b093bb-9799-47a8-a9f2-9d9b79f269e5",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "18f160db-a247-48bd-97bb-1e7d1db412fd"
        },
        "item": {
          "id": "e66c2233-f334-4a4c-a2fd-8285996d631b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "282749e9-ba1d-4ea4-bba5-d5406909e97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66841cec-ff06-4fbb-aff6-c199a2ebb9b2",
        "cursor": {
          "ref": "6bd27994-b904-4b12-94a8-e75f91ce0d7a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cd453603-8101-461a-8756-b1b07e9fa755"
        },
        "item": {
          "id": "66841cec-ff06-4fbb-aff6-c199a2ebb9b2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "97f7e845-fffe-4ca5-a7fd-de760d6b2cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5418b3b9-70bd-40e6-bdc1-c1cb74cb3611",
        "cursor": {
          "ref": "4ea73d30-bf1d-4bd2-a711-614fb88f78f6",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "411b9456-9459-47b6-a922-177a77b09741"
        },
        "item": {
          "id": "5418b3b9-70bd-40e6-bdc1-c1cb74cb3611",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7a20b514-1f5b-4b5b-8125-035b2c0a6c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962a86ff-568f-472f-9daf-e3c562d7c441",
        "cursor": {
          "ref": "fd8da12b-2f6c-4240-ac8c-58fad6749bc6",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2010bfcd-4492-4ac9-969a-a8be2451df46"
        },
        "item": {
          "id": "962a86ff-568f-472f-9daf-e3c562d7c441",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "35e4e23e-433d-4dbf-a024-607b211155fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd30f42-64e8-43bd-bbf9-b2cb2d84b42e",
        "cursor": {
          "ref": "89c90ffc-9e21-447b-97b8-e8a893baff7c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b52a9409-cd9f-4eae-a938-e2efc0a901e2"
        },
        "item": {
          "id": "9cd30f42-64e8-43bd-bbf9-b2cb2d84b42e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b4cf08cf-b745-4252-b35b-a3147a91ce69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e974b42-8da0-4bd4-8907-6c0de9afd874",
        "cursor": {
          "ref": "f02ac6aa-5991-4d4e-a68a-9f9b815ebb40",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "60cc595b-7703-4396-888a-cdaf0d4a2f69"
        },
        "item": {
          "id": "0e974b42-8da0-4bd4-8907-6c0de9afd874",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "baa0584b-1a61-4933-9b5c-27d5a9682f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179a1d2d-ac07-496d-856b-1a0421830cda",
        "cursor": {
          "ref": "46396758-df51-430f-9cac-88b86ab0925a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4c13659e-901c-4d69-85be-4b82656ff0b0"
        },
        "item": {
          "id": "179a1d2d-ac07-496d-856b-1a0421830cda",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9818732c-81e2-4c80-979d-7053aeda22a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad2ab8e-08da-4d4c-8f67-69a3c93dd2cb",
        "cursor": {
          "ref": "6fab20c5-33b7-4498-9116-3248d09aa600",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4dfcf5a3-909e-45bf-a771-18602c480f77"
        },
        "item": {
          "id": "bad2ab8e-08da-4d4c-8f67-69a3c93dd2cb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "01ae9212-7827-47d0-a4d9-97e0e3f41101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04297cae-2132-4900-951c-84f6073a42d6",
        "cursor": {
          "ref": "1eaafe00-52f2-4d19-bbc7-2385be429816",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1e90aa4b-d6b0-4440-bfe4-cfa3309f1c26"
        },
        "item": {
          "id": "04297cae-2132-4900-951c-84f6073a42d6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2a57d235-4455-4b6b-a18f-2579b6bd9d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd246a5a-7a76-4495-af3c-050947390554",
        "cursor": {
          "ref": "43cc24f5-ad3c-45aa-a2a7-b6fae96c045e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ce71e3f9-76de-4f57-b8fc-f318d4f88f3f"
        },
        "item": {
          "id": "cd246a5a-7a76-4495-af3c-050947390554",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2e447737-cfa3-491c-871f-c185da9181d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c46509-c77b-4ebd-8a41-ed0f4ca14524",
        "cursor": {
          "ref": "942f06da-3cb2-4907-b65c-88b7df63d9bb",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dbe54370-306e-4fb7-b9a3-682260dfd2a6"
        },
        "item": {
          "id": "b1c46509-c77b-4ebd-8a41-ed0f4ca14524",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4b3d6a81-b093-44f4-af75-30971f57332f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a02e4a-be43-4671-8800-389a5181c72c",
        "cursor": {
          "ref": "70c3d3e3-e25c-4765-a4d2-b065b2a26b9c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "914fffa1-4fca-45f4-97b3-db3af6f50ec7"
        },
        "item": {
          "id": "20a02e4a-be43-4671-8800-389a5181c72c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "04500eff-3353-4cc7-adb8-e73d04f4c57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b5f397-74a2-4eb1-a559-efc56c727dbe",
        "cursor": {
          "ref": "8f9e00c4-543f-4d93-bdce-90b6b52036ba",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "41558939-1373-42cb-8667-cb93c8285d32"
        },
        "item": {
          "id": "e1b5f397-74a2-4eb1-a559-efc56c727dbe",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fbf70e4d-b95c-42ff-963d-21504c157874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f21e2b-4879-4db7-9bb1-411193b3e6cd",
        "cursor": {
          "ref": "e24db6d9-04cd-40c5-920f-27ae0acd9777",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "804df24d-8b95-4882-8061-d3a82625a05d"
        },
        "item": {
          "id": "66f21e2b-4879-4db7-9bb1-411193b3e6cd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "11308c5e-273d-45c9-af0b-c6ac9116c25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a3ab2d-faba-4bf3-adee-4fd1c7a26699",
        "cursor": {
          "ref": "04f8b079-d798-49fc-af14-7991b8ea8f1e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3addd0a4-3521-46cb-be20-3fc7feb53c7c"
        },
        "item": {
          "id": "a8a3ab2d-faba-4bf3-adee-4fd1c7a26699",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b0568a98-4bf3-472a-8b74-cd05b6d512b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0296fb18-d0ad-4089-b73e-98e4c278303b",
        "cursor": {
          "ref": "cf37d416-bed2-4081-97c4-9efb35d78d08",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ca54d4b7-669d-4098-8354-8e6b4e6a3ad6"
        },
        "item": {
          "id": "0296fb18-d0ad-4089-b73e-98e4c278303b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e0367955-96b8-4573-8c01-343834ed5989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a990f94a-56df-45eb-8f29-d38356f9a762",
        "cursor": {
          "ref": "54c97726-5417-452a-a0c1-670bb2d75917",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "569724ac-7e0b-4b12-a6bb-cd45a0cadaf1"
        },
        "item": {
          "id": "a990f94a-56df-45eb-8f29-d38356f9a762",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9de5831f-25dd-4de9-afb6-fce1a134c463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a86e0b-9e62-4551-a9ee-81f67e1918a1",
        "cursor": {
          "ref": "99324cb9-0159-4d78-8274-be948d8cad26",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5de394fe-5a38-43ae-8846-039ff0933c25"
        },
        "item": {
          "id": "e9a86e0b-9e62-4551-a9ee-81f67e1918a1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "29d6ebc1-2b83-4041-8785-1b88bd0582a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86366ba2-bdfa-46ca-94d1-2c1239245a70",
        "cursor": {
          "ref": "a7464c45-1e37-4e7a-9f63-52f18a46b206",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "59784cdf-6cb4-4ea9-aa0c-4b0743888a05"
        },
        "item": {
          "id": "86366ba2-bdfa-46ca-94d1-2c1239245a70",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4a4f4762-959b-4950-9a5a-39f5d8559c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cea20c-66f8-423b-bf1c-b4edb2522e62",
        "cursor": {
          "ref": "868c82b4-6552-445c-b4b6-b68734d1d5bf",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4febc5f1-39b5-4a93-9deb-d1646c2ecc8f"
        },
        "item": {
          "id": "d8cea20c-66f8-423b-bf1c-b4edb2522e62",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1b0003aa-523a-422b-8916-0ed4851de09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f045744a-33c1-480c-a5aa-ed4590cb2665",
        "cursor": {
          "ref": "f6ec9b15-fafe-4aa6-a780-da1dc347c82c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e5b308b8-9746-4571-8a64-aa97d1ed112d"
        },
        "item": {
          "id": "f045744a-33c1-480c-a5aa-ed4590cb2665",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "11ef538a-cda4-4876-9d28-2eaa337ce4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295533c6-e087-476f-9ed2-648da61d4381",
        "cursor": {
          "ref": "04387208-1bb3-4090-a46b-669a3dcf9e67",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "db1befcc-f344-45ab-8e43-87ad641c9616"
        },
        "item": {
          "id": "295533c6-e087-476f-9ed2-648da61d4381",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1b24aaf1-5c73-4998-9265-7f2bf3dbdf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fb366e-89cf-44cb-a3f2-97660e6ad68c",
        "cursor": {
          "ref": "3995db34-8f2a-4083-8dd8-0278961b73fd",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b87dfdf6-e333-42ad-86c6-c7bedca6f413"
        },
        "item": {
          "id": "f8fb366e-89cf-44cb-a3f2-97660e6ad68c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b35d77ab-8ff9-45a7-a5e2-7ede2744caa8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa94a6b-d0d8-4a73-864f-26f2241df571",
        "cursor": {
          "ref": "12efb7af-4e64-4854-8d92-fd4a5e5e887d",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d8b1cee2-20ba-4fe8-852b-9480874e9332"
        },
        "item": {
          "id": "bfa94a6b-d0d8-4a73-864f-26f2241df571",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4b6bd5ca-ba2e-4cc6-b664-24ce984ebc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45df69b-0b00-48fd-b0e4-067bab5e84d9",
        "cursor": {
          "ref": "dfd99d36-974c-4e5a-8a8f-914a28180cea",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f15eb087-0be7-4597-a3b8-02d6240adfc6"
        },
        "item": {
          "id": "b45df69b-0b00-48fd-b0e4-067bab5e84d9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fdbb2fc2-f012-48a8-b16a-e7a22328a735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eed0195-f5e6-486e-9dd9-28a4b06d109b",
        "cursor": {
          "ref": "873dc930-ec6a-4865-8e29-63c61b63136a",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6759b270-8c49-4aec-ac2c-5a05f0c377b2"
        },
        "item": {
          "id": "7eed0195-f5e6-486e-9dd9-28a4b06d109b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "34327764-4c9e-4855-beaf-99eaccbb0962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa28833-ed0b-445b-b58b-9b6146a4c4c8",
        "cursor": {
          "ref": "79012136-d222-4dda-8605-3a95258c5e39",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "42648f82-8203-4c5c-9dac-e7674ca868e2"
        },
        "item": {
          "id": "9aa28833-ed0b-445b-b58b-9b6146a4c4c8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7a76b8d6-b657-41db-9713-d328f2c755b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d6356d-46e3-483c-8ef6-0307258980bb",
        "cursor": {
          "ref": "d3438eb6-cdf9-460e-baa3-d6a5adb55476",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ec942d67-acfb-4243-a371-1d2bbdf62210"
        },
        "item": {
          "id": "29d6356d-46e3-483c-8ef6-0307258980bb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d6a18a74-070d-44d7-84ef-9295ed3e2da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846ac7cf-3ed6-4313-959f-ea13aa9c14fb",
        "cursor": {
          "ref": "46201cb7-dfdc-46f6-a017-bcbd2617b020",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "986e6ba1-4f40-41ff-b1c5-650f7d08d528"
        },
        "item": {
          "id": "846ac7cf-3ed6-4313-959f-ea13aa9c14fb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "393df303-1815-47c0-a359-5e50ade18d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc4f153-7932-461f-ab81-026700d43a0f",
        "cursor": {
          "ref": "255e44d2-1676-4229-8cf8-7af5948654f9",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f6487bf9-2378-4c60-ad9e-addbd9036d77"
        },
        "item": {
          "id": "ddc4f153-7932-461f-ab81-026700d43a0f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d45a5add-1b87-4154-8f13-62747919a41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7e4c1c-f7b1-4263-a069-4f6ed972f463",
        "cursor": {
          "ref": "6a2ecf82-e870-466e-b2b1-bc6c4531431f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7284630c-aec2-4f2e-b17a-b0f47b9ee553"
        },
        "item": {
          "id": "0f7e4c1c-f7b1-4263-a069-4f6ed972f463",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f4708256-1e5c-4cab-b43c-7acfd8845643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027581ab-8866-4d33-a25d-abbcbd16ce3a",
        "cursor": {
          "ref": "6360c012-188c-4eab-8bbd-3c662e773a0c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e1ef2976-b81f-48d7-ac46-2b4553814a72"
        },
        "item": {
          "id": "027581ab-8866-4d33-a25d-abbcbd16ce3a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a7004885-b3a5-41e3-a508-54580c92950d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0279ac44-1526-42a4-a593-ad7b85f8123e",
        "cursor": {
          "ref": "13067cab-39d2-4b04-9d77-e58ffc90cb55",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "affab88a-36af-4d16-91c4-877beafb8e57"
        },
        "item": {
          "id": "0279ac44-1526-42a4-a593-ad7b85f8123e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cfda8488-6bee-4afb-986c-bf552fb202a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59ba28e-ce2c-4e1b-b320-dabfd35c12ef",
        "cursor": {
          "ref": "0970ef72-b62a-41b3-8c90-a0b6e91bba74",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "38fb667c-fd8b-4d7d-a455-ab9b81a6a1c8"
        },
        "item": {
          "id": "f59ba28e-ce2c-4e1b-b320-dabfd35c12ef",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "afbd233e-fcf1-4cc5-99ea-0c2f9c643cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f322d3f-9e81-49d7-814f-9ea935edd568",
        "cursor": {
          "ref": "836ba7cc-dd21-4ff9-b547-029f313ef147",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0129f4fe-744f-4a8b-8c1e-90272c537a7a"
        },
        "item": {
          "id": "2f322d3f-9e81-49d7-814f-9ea935edd568",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "568fc43d-d07c-43e2-8f2f-dcf382c8b864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5025af89-341f-4d8f-94c5-c81320d51195",
        "cursor": {
          "ref": "69b66643-8207-429a-b2b9-dd30a1137a44",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ec7a4a60-62f3-4b43-95bc-f6bd85ca2124"
        },
        "item": {
          "id": "5025af89-341f-4d8f-94c5-c81320d51195",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a2fb86dc-efb3-4abc-b291-0a99a35f0c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbc3a87-cbac-4413-903a-5d68a9252c35",
        "cursor": {
          "ref": "ee34b9a6-b226-463c-8990-baa966cf6580",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3987fb41-8131-4c29-bdb4-874138c182d9"
        },
        "item": {
          "id": "2dbc3a87-cbac-4413-903a-5d68a9252c35",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ad314646-0947-4d86-8a4a-1b09caf8732c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4347371a-ee87-4146-88fc-fc6d83953990",
        "cursor": {
          "ref": "88b611e5-43e7-441c-a97b-3bc0113164df",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e2793062-3c74-4cb3-b769-2329cb36835d"
        },
        "item": {
          "id": "4347371a-ee87-4146-88fc-fc6d83953990",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2c9705bf-8c5f-4d03-86af-9d254413ae63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a440901-f23c-4d81-9da5-e00f7fe6bdf6",
        "cursor": {
          "ref": "e9cc1003-2d32-4cc2-9c74-f53d29741392",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f8b178f9-0004-4474-b162-a21fc7f71fae"
        },
        "item": {
          "id": "8a440901-f23c-4d81-9da5-e00f7fe6bdf6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "52b5015a-d623-4c37-89a8-67965eaeaa8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac38b4e-55d8-4973-ae93-98417b19858c",
        "cursor": {
          "ref": "8ad79bf1-8dff-464a-81a9-3593d0a20e8c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6179af33-840c-4dfb-959b-f974c6c3ead6"
        },
        "item": {
          "id": "6ac38b4e-55d8-4973-ae93-98417b19858c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ea547d7a-f02e-4518-8fef-71fd2dbf16d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf2fa8f-8805-4480-95c7-df6fcb3722a4",
        "cursor": {
          "ref": "03006d0c-223e-469a-838e-b2672523d34d",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5f57d78b-56ad-4b8c-b9eb-d8b432135600"
        },
        "item": {
          "id": "ddf2fa8f-8805-4480-95c7-df6fcb3722a4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b33d8f75-0ecf-437d-b58f-4b81dc03fcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e715e4-d625-4449-a110-9ae32b0398dc",
        "cursor": {
          "ref": "4b153fa9-2e9d-4df1-bd72-a15a659979b1",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5471e535-5e5b-4b24-b703-5d87522dfd4c"
        },
        "item": {
          "id": "f8e715e4-d625-4449-a110-9ae32b0398dc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "85ff5449-4a8d-4e36-9dd8-e730a10f20e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a35eb40-5397-455d-83ee-ef489a115894",
        "cursor": {
          "ref": "3749e176-94c5-4588-a537-00f0c95618a0",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0d953900-ff52-4cf3-8a9e-88c257b9daae"
        },
        "item": {
          "id": "9a35eb40-5397-455d-83ee-ef489a115894",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e0c5ae07-ff58-4a2a-a304-a08d3f569241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97384a98-b2d5-44e9-94b2-96c99fbfaa72",
        "cursor": {
          "ref": "0893f030-c6e6-4e09-83b3-ec7dbcb2243c",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "99604dd4-b8ea-48fc-a7d6-fc242faa4b5d"
        },
        "item": {
          "id": "97384a98-b2d5-44e9-94b2-96c99fbfaa72",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "120a5a18-1680-404e-b9d4-4be6f752208a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67246562-ae0a-46e3-8a86-4f77fef161ef",
        "cursor": {
          "ref": "8e46c26d-c6ca-4df4-baf4-13ab931a869a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0f8ce764-94f9-47cc-ae8c-2c6aa46c27d4"
        },
        "item": {
          "id": "67246562-ae0a-46e3-8a86-4f77fef161ef",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1e0c473e-57ad-4bef-9763-54bbd3141755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a31d044-81e5-4591-b2b0-3cc770bc4782",
        "cursor": {
          "ref": "b7479888-7e54-49a6-a0d2-4192bf024ad1",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d06b92cf-ef99-43ce-8808-f8ca47fc2d77"
        },
        "item": {
          "id": "3a31d044-81e5-4591-b2b0-3cc770bc4782",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b7e16b13-973f-4a85-aeea-f3bf19d8eb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3942d2d3-a6d3-4034-aa45-8a0c1dcd19d2",
        "cursor": {
          "ref": "b92bc595-ec61-495e-87d1-975e556e9af4",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3dc3fe2d-400c-4a5a-b42b-3265c1621fa6"
        },
        "item": {
          "id": "3942d2d3-a6d3-4034-aa45-8a0c1dcd19d2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "20b5665f-5007-4c06-b773-ec2a20d0a43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd3f518-b6ec-465c-92ac-2e744a46a70e",
        "cursor": {
          "ref": "6c099102-8732-4ba8-b7a8-49802984edd5",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0d77185c-6eb9-4d10-9e80-ec30ff5eca06"
        },
        "item": {
          "id": "7bd3f518-b6ec-465c-92ac-2e744a46a70e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d5b08b9c-d55e-451e-9075-8c05b314027a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef08653-d0c8-44b9-8c65-3113751c6930",
        "cursor": {
          "ref": "6fbc1efc-404e-463e-abca-92d2d9f6b8fd",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "104adaf3-d128-40d4-aa18-c6d7223fdf6b"
        },
        "item": {
          "id": "eef08653-d0c8-44b9-8c65-3113751c6930",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "52ac6a76-da9a-4769-844e-f22766f1f2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855724e9-5811-4fa8-b021-e0e1a721d510",
        "cursor": {
          "ref": "dafade73-ae93-4f78-81da-f144280cfe29",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e0163ca4-e581-48f6-a390-f99906681a22"
        },
        "item": {
          "id": "855724e9-5811-4fa8-b021-e0e1a721d510",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "09be5856-6052-4eb9-adca-979a5ac608e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a34d59-1150-4e30-ace4-faabebae700a",
        "cursor": {
          "ref": "787e64fb-386c-4a99-90e6-3f431bdd67d0",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6a933a75-348d-4036-8b78-15b1775e8698"
        },
        "item": {
          "id": "f7a34d59-1150-4e30-ace4-faabebae700a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d3d2d027-8f4b-4181-9506-c43ab58f620a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef457cd-df33-40e3-9102-62d95a648511",
        "cursor": {
          "ref": "b0966494-0f7f-40dc-93a8-b098f4909dc3",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2c767c00-3d89-480c-9711-04a3a5c43409"
        },
        "item": {
          "id": "0ef457cd-df33-40e3-9102-62d95a648511",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "897686c0-ef2d-40bd-93c5-5e0487997bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f5e24c-1461-4fe1-87b6-752303cde863",
        "cursor": {
          "ref": "81327fe0-3170-4670-942d-e3352f416361",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "acd28681-3544-4c3b-a421-573ba6b8dfaa"
        },
        "item": {
          "id": "69f5e24c-1461-4fe1-87b6-752303cde863",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b7ec28bd-3cc0-47be-a804-0c1ad588e8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9563604e-687d-4793-9523-87d51dc68d7b",
        "cursor": {
          "ref": "23d4ad63-47df-4c03-91c9-851a9ef2154d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1cbfc761-204a-46db-b635-30ce23f110eb"
        },
        "item": {
          "id": "9563604e-687d-4793-9523-87d51dc68d7b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ff66debf-4aeb-408f-9e2f-e464665f5d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3dfa6f-a67b-4830-94ef-c64b285007f3",
        "cursor": {
          "ref": "8a68b98c-b839-49bc-a881-861e84fae278",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "992f8d2e-b177-495b-85a3-6dd1c70e809d"
        },
        "item": {
          "id": "bd3dfa6f-a67b-4830-94ef-c64b285007f3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "21378a39-3a28-4367-9002-7da17b75bec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3ba8a2-bf76-4eed-91ac-0d6bb4e21929",
        "cursor": {
          "ref": "55283c9f-0245-4537-a8a7-832198295d40",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ddbdbdb5-389c-4889-9099-ecab57e17604"
        },
        "item": {
          "id": "6a3ba8a2-bf76-4eed-91ac-0d6bb4e21929",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6b3c8c4c-ac38-4b2d-b21b-15abc794a329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfeb36fa-874c-4ff4-a90f-bec453837316",
        "cursor": {
          "ref": "70e3ede1-b910-4616-9ef2-76d1b8d0156e",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "96212b0f-73b9-4ccb-9642-b518d2fa215e"
        },
        "item": {
          "id": "bfeb36fa-874c-4ff4-a90f-bec453837316",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "77ab7d41-db93-48c6-9dab-b6c4ae87b630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5e523a-d849-4261-9909-c01dd6aba43f",
        "cursor": {
          "ref": "a890de5c-bcc2-4227-8dbc-87e27f347c45",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4ca63879-a780-41c0-809f-463c7b9c0982"
        },
        "item": {
          "id": "4b5e523a-d849-4261-9909-c01dd6aba43f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cebcfaf9-dfab-45cd-a96e-eebe866284a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7234f9b-75da-4f4f-8872-72782793e033",
        "cursor": {
          "ref": "6dcfec84-3c57-439b-843d-b0b50067bb27",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "655ec609-a5f6-4419-ac03-fa8cc1391ad7"
        },
        "item": {
          "id": "f7234f9b-75da-4f4f-8872-72782793e033",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "253a4a8f-5887-4d91-84b8-e962adbae5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95db8c52-8d52-439f-862e-0af2ede6a23e",
        "cursor": {
          "ref": "6144d458-35b7-4ccc-a923-ae431c693062",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ef8ecb5a-206e-400c-860b-23c436645aee"
        },
        "item": {
          "id": "95db8c52-8d52-439f-862e-0af2ede6a23e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "eb4b80ee-e041-4108-bdd2-93b5f07fa31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814b293b-067c-4621-aa37-53863c7bbac2",
        "cursor": {
          "ref": "2f422270-053a-40b4-a92f-e5d599286f1d",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ea67517d-6c06-461f-8e40-d4954fd77946"
        },
        "item": {
          "id": "814b293b-067c-4621-aa37-53863c7bbac2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3c82f2c7-7073-48b4-8167-4e7b39ea269e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1107d1-cbf0-4427-8b97-817acfde3113",
        "cursor": {
          "ref": "11de15b4-e779-43db-a72b-d979b7cdce5e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2a67053c-6d76-4ac0-a601-31553f0fb05b"
        },
        "item": {
          "id": "3e1107d1-cbf0-4427-8b97-817acfde3113",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "277df97d-6220-4c06-b426-cc673e4b56d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf7111e-65ad-4694-869d-4fd51353f236",
        "cursor": {
          "ref": "729cda4b-79d1-4800-a93e-1976d14e7ebc",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c8d64bb9-8239-42fd-927d-cbf66bb7b709"
        },
        "item": {
          "id": "baf7111e-65ad-4694-869d-4fd51353f236",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "41fc6f4c-fdae-4847-9ee1-762897684b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02edbbdc-0403-4427-bde0-cc73de879106",
        "cursor": {
          "ref": "f321962d-1a48-415e-895a-859e18d5bda7",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "258cfeef-3e0b-40fc-99ff-1ba287d774d5"
        },
        "item": {
          "id": "02edbbdc-0403-4427-bde0-cc73de879106",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f9890282-c7e4-4a6e-bca5-96b31591c820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb9695f-5b08-40f5-bd18-328e0f31381c",
        "cursor": {
          "ref": "a24907d0-3962-41c2-bd55-52ae1e7f0125",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7ce7663e-8f92-476e-93e1-9a6bd8fa1c44"
        },
        "item": {
          "id": "5eb9695f-5b08-40f5-bd18-328e0f31381c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7c8b17b1-f1b2-4f81-b136-78fd4bea161d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3081060-6bc0-4302-b501-f1cfb25a1280",
        "cursor": {
          "ref": "7ef15a8c-2c5c-42cc-be1d-078a076d83d5",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "30340f2f-75ba-4016-8b4b-f3b141760b53"
        },
        "item": {
          "id": "c3081060-6bc0-4302-b501-f1cfb25a1280",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fc3e9783-bae0-40c8-84d4-645add05f89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bb2637-a52f-4c78-8d89-8d08b029e6aa",
        "cursor": {
          "ref": "cf7842c9-d77b-4c39-9802-81ab675c2929",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4bb0b2cc-9fa4-4584-8055-a89f6ef27053"
        },
        "item": {
          "id": "d8bb2637-a52f-4c78-8d89-8d08b029e6aa",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f50a626d-6cf0-4e4d-83ff-474db5ebfda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8937a60-3c1a-4605-a34c-24850e4a3da7",
        "cursor": {
          "ref": "33f48ffe-acb2-4240-8904-3122ba58dfed",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4e5c31bb-2ee8-4d74-9686-742f310df82a"
        },
        "item": {
          "id": "f8937a60-3c1a-4605-a34c-24850e4a3da7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "98f98a8f-2527-4e0f-9054-55fa68bbf590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db4040c-2a4f-4c81-8fdd-cf625d20cb83",
        "cursor": {
          "ref": "d03e518f-fd81-459e-a08b-be7b48997052",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "34b5972e-492c-4b75-b6c1-8b4b54807d6d"
        },
        "item": {
          "id": "5db4040c-2a4f-4c81-8fdd-cf625d20cb83",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1a5d1fe4-0f90-4939-b897-ec6a37989f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a13ddda-f08d-4f6b-a040-a831c5128a08",
        "cursor": {
          "ref": "7146727f-9886-4b97-b881-1fd05e561304",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c7760086-c2d8-4855-a3d4-97302f5ff0f3"
        },
        "item": {
          "id": "5a13ddda-f08d-4f6b-a040-a831c5128a08",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0e7ff31d-6802-4dc0-922b-70e0bad351de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55616eba-b559-44aa-b2ce-e46115702156",
        "cursor": {
          "ref": "823d9f08-cedb-4fdc-92ed-1d862c34d829",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6187fcf6-3c6d-4a52-86e9-f139ff13e12e"
        },
        "item": {
          "id": "55616eba-b559-44aa-b2ce-e46115702156",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8e7e841f-5dbd-43f0-aeba-87b3a359df9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45919857-098f-46bd-910c-6746ec23ee76",
        "cursor": {
          "ref": "ab933161-2b2c-4853-a72f-b65cc212f363",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bb22651f-21a8-46c2-8665-30c5c75da305"
        },
        "item": {
          "id": "45919857-098f-46bd-910c-6746ec23ee76",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1b8784ae-806a-41dc-9157-6928c0183ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239d5dd2-90dd-4902-b03a-0c381f86a758",
        "cursor": {
          "ref": "0a842aa4-becf-4d09-8f65-44be73a6ed49",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "37145976-bfaa-48b9-8a05-2b7f2e1bdd87"
        },
        "item": {
          "id": "239d5dd2-90dd-4902-b03a-0c381f86a758",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "02c16334-a1a1-4ea2-b953-62f30abafa7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f256f0f8-30e6-468d-b5d1-589a1e933d94",
        "cursor": {
          "ref": "a775b678-9afc-4976-afda-7029b3218cea",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a9f25a88-cc30-41dd-a8e8-b9c65f731076"
        },
        "item": {
          "id": "f256f0f8-30e6-468d-b5d1-589a1e933d94",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "72427ec9-8e5a-447b-a3f2-42ec23606b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b24744-b346-4d74-8b13-e44d58d9be2b",
        "cursor": {
          "ref": "cbc21c5c-4e02-4a7c-80ef-bfc389213aa2",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ce1607af-adbe-4f94-98c2-7e44ec199983"
        },
        "item": {
          "id": "97b24744-b346-4d74-8b13-e44d58d9be2b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2f06f9ce-6cc8-4cf2-b797-9e9cf2dee8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562b33e5-3f82-425a-9798-2b5a40b5376c",
        "cursor": {
          "ref": "0219f06a-e72f-48c4-9a1a-133fa59d7014",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f7eeb804-5a7d-4149-a2ee-41bf3de100ac"
        },
        "item": {
          "id": "562b33e5-3f82-425a-9798-2b5a40b5376c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3bfb7bc7-a339-49b2-b193-20d281b514a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0908220b-d5f1-4a73-8ca8-5221993cc77d",
        "cursor": {
          "ref": "1230fe6e-926a-4e4d-aef5-f5e26545ea95",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c466bbfc-f240-4193-b650-7fb8dc244022"
        },
        "item": {
          "id": "0908220b-d5f1-4a73-8ca8-5221993cc77d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1e89f490-e054-4cc9-b6f7-54a85235fbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a2559b-d6d8-414f-b597-2e5ccadb0915",
        "cursor": {
          "ref": "161427bb-0e22-42fd-8898-1e4ed6e62a11",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a762e4cf-3ed7-47ed-bf55-242b57fd9c39"
        },
        "item": {
          "id": "e0a2559b-d6d8-414f-b597-2e5ccadb0915",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "dd7c2498-5475-4549-9a26-5135a3c9b6c3",
          "status": "OK",
          "code": 200,
          "responseTime": 237,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "8cb3db43-9819-4a57-aa71-cda7c08122a5",
        "cursor": {
          "ref": "560273b9-42b6-4833-8f90-c25c4c6b51f3",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9f01fcbb-3ea1-49b2-963c-4bc804de8b48"
        },
        "item": {
          "id": "8cb3db43-9819-4a57-aa71-cda7c08122a5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b8dde761-b4e4-4a32-8112-85bfe931a2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b07b28-e185-418a-8651-de2d2c8ac33e",
        "cursor": {
          "ref": "74d23406-be3c-42d1-9428-692fa40ef88a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "84a85e27-68bf-4a90-875f-7aeaefed3e45"
        },
        "item": {
          "id": "43b07b28-e185-418a-8651-de2d2c8ac33e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "08274146-cd93-430c-81a5-3075edc8c31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42fc83c-c975-4e59-b189-a257634caa05",
        "cursor": {
          "ref": "fbc42cf5-a5a9-48aa-8fcc-9d03e4493c34",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "674aae92-0261-41f5-b9a3-48a5f078f0fd"
        },
        "item": {
          "id": "b42fc83c-c975-4e59-b189-a257634caa05",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0282cf37-3e1d-443e-85c8-8651e3a821cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8187d71a-c763-49be-b7ae-8475cf08d1d2",
        "cursor": {
          "ref": "a7eac584-070c-416f-bd34-43d967db8e57",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f723b2ff-8e75-4e2c-86f4-5527f4c1e28c"
        },
        "item": {
          "id": "8187d71a-c763-49be-b7ae-8475cf08d1d2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e2e36eb5-b43d-4fac-9a73-de86a4c6b0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a801cf-8516-4198-8b9e-addf3c24ab4d",
        "cursor": {
          "ref": "a2b04f6c-6e01-4e27-a2a0-e0cfdf28cf3e",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3713eb3d-eb78-4047-ba3f-d6ac6532dee3"
        },
        "item": {
          "id": "69a801cf-8516-4198-8b9e-addf3c24ab4d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7081d48c-b5f2-41b1-9fa0-00c4c128f14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d5147d-4d1f-4474-88f0-903635a32483",
        "cursor": {
          "ref": "87712f94-f014-42cf-8ee7-0f8a45014c30",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8c9b5872-91e9-49b2-aa93-a3b83f5ba308"
        },
        "item": {
          "id": "93d5147d-4d1f-4474-88f0-903635a32483",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "68a2d677-8684-4cff-a57d-dfaa373ba3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ee6235-7c24-4897-a3c7-567fd0bfc17d",
        "cursor": {
          "ref": "425a1316-1a14-40c3-aac5-8dd7e1d9f862",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9575d2a1-999f-4254-8311-da84a0b29bef"
        },
        "item": {
          "id": "91ee6235-7c24-4897-a3c7-567fd0bfc17d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "22624d02-993f-41e7-be9f-32c840a43887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65a5444-9a82-447c-a6c4-905dd5f785d3",
        "cursor": {
          "ref": "5879c203-78dd-4b44-8fff-c89556a66095",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7d42febe-03be-40b5-bcdc-7497bccd3783"
        },
        "item": {
          "id": "d65a5444-9a82-447c-a6c4-905dd5f785d3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6b2b40bb-ba09-45b9-8c0f-da7d557b68f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1efddcd-15a7-4f6f-ba41-d05e8319d662",
        "cursor": {
          "ref": "f7712a16-f984-4650-9610-226a41181e9f",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a6bfaab4-738b-4f6b-83f5-ec0ae538125b"
        },
        "item": {
          "id": "f1efddcd-15a7-4f6f-ba41-d05e8319d662",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "29cf85c6-e4cb-4e35-a52f-330b964cfdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9a3aad-6e45-4037-8d2d-5244168e6b9b",
        "cursor": {
          "ref": "f33c3b60-ee5a-489f-b501-bbd598e4e408",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3d1f6a8b-ffc6-42e1-b274-91b408f815aa"
        },
        "item": {
          "id": "4a9a3aad-6e45-4037-8d2d-5244168e6b9b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "65933e5a-266b-4d0c-af22-715e7eb95df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1864e40-443b-4f87-82bd-fa7a9a29cee6",
        "cursor": {
          "ref": "07866787-30d6-4bdd-8154-a9f4e276886f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7bbb354b-a6af-45f8-bb65-1ff239ca70df"
        },
        "item": {
          "id": "a1864e40-443b-4f87-82bd-fa7a9a29cee6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1aaabf63-c903-401d-b024-e74bee49d600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8b32a9-9885-47a4-80f2-7f2af40a5f55",
        "cursor": {
          "ref": "2efd4ab1-4478-41b5-b640-774819cb1205",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b2f410d4-2f21-4eb6-83b5-3c8808e137d6"
        },
        "item": {
          "id": "0f8b32a9-9885-47a4-80f2-7f2af40a5f55",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9772aa9b-a06d-4d80-a469-91d563d428b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c86778b-8e8c-4cf5-a285-e9e15a0281e8",
        "cursor": {
          "ref": "8bd0ee6f-97aa-436a-b49d-f3c6ea11800c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6a310595-f718-41b1-90ab-fcda882895a8"
        },
        "item": {
          "id": "1c86778b-8e8c-4cf5-a285-e9e15a0281e8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f5c16adc-cd93-46e0-84ca-bb522c807835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6159cffd-964d-4688-a54c-40053c7da513",
        "cursor": {
          "ref": "cb0c6d63-eb60-48d8-98f4-c195ad1cf747",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6afa01e8-054f-4283-bb6e-2a25b93135d2"
        },
        "item": {
          "id": "6159cffd-964d-4688-a54c-40053c7da513",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "00a2170f-0e8c-434c-ba2e-da43b1ecfe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d27081b-1e96-4896-a7bd-2de7f2b03497",
        "cursor": {
          "ref": "470dcc7d-f6d9-485d-9771-4ad3ef224925",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d7ad1083-1fda-4053-82d7-fef2f301a783"
        },
        "item": {
          "id": "1d27081b-1e96-4896-a7bd-2de7f2b03497",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "30aa4d7f-af3c-4ebb-88ce-d6bf4e723e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c0dd15-3eca-4efb-8290-c46abd661e65",
        "cursor": {
          "ref": "e9a8669d-1979-4072-97fc-2a369307b53b",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b26ab183-a88b-4800-8cb8-86f32e6d0a7e"
        },
        "item": {
          "id": "20c0dd15-3eca-4efb-8290-c46abd661e65",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dc7c87d3-a61c-41eb-bcb1-6aa0d5cd53ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dd2101-9988-4cf8-8d40-8df2f98cf1fc",
        "cursor": {
          "ref": "274474f7-141c-455e-a083-d5801c296145",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "52d8e3be-4595-466f-baae-fa1a85eafd02"
        },
        "item": {
          "id": "b6dd2101-9988-4cf8-8d40-8df2f98cf1fc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "41688afe-9b0b-4c48-a5fd-3f1180aea8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f02c36-4001-4dd5-ac0d-b68f24e860ca",
        "cursor": {
          "ref": "85004f0f-8a32-4b7e-9794-1a5b438607c1",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "056970f8-e740-4077-b2b1-810215137374"
        },
        "item": {
          "id": "e6f02c36-4001-4dd5-ac0d-b68f24e860ca",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2f5e6ce4-c6cb-4af3-aa3e-67030fbc2aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee958739-5142-4f35-8739-eb4c9ddc8a26",
        "cursor": {
          "ref": "7278d093-ee27-42c3-b6f6-78eef671bb03",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c1fb8c9b-e129-404f-97df-083468c868de"
        },
        "item": {
          "id": "ee958739-5142-4f35-8739-eb4c9ddc8a26",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7157b96d-192a-4615-beee-324a9d92408e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567e02c4-6607-45b4-a010-8e92125a30e6",
        "cursor": {
          "ref": "38b8eef6-55d0-4861-9f74-facaba0323b6",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a385c8ce-2ae2-4522-92a7-695d60b39248"
        },
        "item": {
          "id": "567e02c4-6607-45b4-a010-8e92125a30e6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b9ae773a-7f4d-4627-acb9-2421fdf8b8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71234ea4-e0eb-4ff7-8501-73ba6172a9d3",
        "cursor": {
          "ref": "96e15d42-c14e-4ba0-8419-d2d1e38e1a37",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "677dcc7d-6b5f-4d27-9b27-72a72ef3cd49"
        },
        "item": {
          "id": "71234ea4-e0eb-4ff7-8501-73ba6172a9d3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e6598d2d-832d-4545-bdea-92a0f25b23f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b26d192-413b-4c2f-9ddd-26f62c4306ef",
        "cursor": {
          "ref": "1c1cf115-7997-4943-9915-39fbbbf320bc",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ae61cc47-c76e-4cc9-bf26-e2d5c86826b2"
        },
        "item": {
          "id": "6b26d192-413b-4c2f-9ddd-26f62c4306ef",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "db30e3e9-daa5-4caf-9d60-8f6ebabdb690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311f163d-d76b-485e-9bb2-3eca7fbbd78c",
        "cursor": {
          "ref": "78f69beb-b8ca-4424-8d6d-f1563d0d1eef",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2f905cda-86d3-4b0a-9c1d-cbcbf04f9849"
        },
        "item": {
          "id": "311f163d-d76b-485e-9bb2-3eca7fbbd78c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "96fdacc7-7f10-446b-8b53-8d6ee311027c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d46dce-9e85-4a29-bb97-dfc3f9811137",
        "cursor": {
          "ref": "da03e672-5c1b-49ee-ad9d-d99d906a40d5",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "62c14716-1c58-4118-a1f4-15a0dafdfd36"
        },
        "item": {
          "id": "35d46dce-9e85-4a29-bb97-dfc3f9811137",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ddca6c6d-20c5-4591-b526-4e198c7061b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5b0956-224e-49b6-a0df-6a489d043918",
        "cursor": {
          "ref": "9db2c5c7-2210-4dfc-84a0-0004afe6427d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ae1c91ef-ff47-4264-a4b8-a8962d96f594"
        },
        "item": {
          "id": "db5b0956-224e-49b6-a0df-6a489d043918",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5f598394-aa5a-4065-93fd-6bd1facea456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02075d70-aa47-44cb-80dc-a0b44da18edc",
        "cursor": {
          "ref": "c281addc-350f-48e6-ba82-b082b6f4cdb9",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e0840c4a-2bc4-4322-a84a-f3b7300237df"
        },
        "item": {
          "id": "02075d70-aa47-44cb-80dc-a0b44da18edc",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5fa8b443-891d-43f9-b30d-ace6ef5aca05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d246fb2-da7a-46b5-9f21-3306b11e40b7",
        "cursor": {
          "ref": "4c31050e-741a-49bf-8a9d-b6fab09e69d7",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9afd9777-48f8-4a3f-996d-4dfbab49bfa5"
        },
        "item": {
          "id": "2d246fb2-da7a-46b5-9f21-3306b11e40b7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "923bef2d-a62f-4b4f-8fa4-8d95fc69b25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c8b45e-4c31-4f3b-a9fd-5047e1d383cb",
        "cursor": {
          "ref": "0dc87246-fb3d-43ef-a733-cff28793d00c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "75e2762a-b9e1-47be-ab0a-2d7ac7ba79d4"
        },
        "item": {
          "id": "c7c8b45e-4c31-4f3b-a9fd-5047e1d383cb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d1dca9d5-56c6-4809-9727-6cfc8d2227e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4d8ffc-8530-4b4a-b437-20638ef8e46d",
        "cursor": {
          "ref": "1bdc7d97-f922-4848-b928-3c8333f3a99e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "08220c3e-76de-415e-a126-faf6afd66cbd"
        },
        "item": {
          "id": "ac4d8ffc-8530-4b4a-b437-20638ef8e46d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e27ac45e-f7af-40d6-a2cd-2c27e438fcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704eea6e-cc15-457f-acac-1283f2a4fbca",
        "cursor": {
          "ref": "e37a0493-c667-4705-9fc8-80b44a315a6e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "76003d82-6695-401f-8f61-52111ffc6fad"
        },
        "item": {
          "id": "704eea6e-cc15-457f-acac-1283f2a4fbca",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a320b3f7-d327-4ec0-a595-5de0b42df408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81528920-1aea-42b9-8add-af2de9bebfa7",
        "cursor": {
          "ref": "89b46987-164e-4abf-9e24-877506a5b850",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0039a946-18ce-4da5-8241-5c3878219aa7"
        },
        "item": {
          "id": "81528920-1aea-42b9-8add-af2de9bebfa7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a2ee0669-19b7-473f-bab4-d5a18543445d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e0458e-e2bb-4931-afc3-7f262b0c6a93",
        "cursor": {
          "ref": "2fe05e48-83a8-4e0a-9450-2f96a1705242",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "015763b8-0cff-4ad9-871e-61509278258a"
        },
        "item": {
          "id": "07e0458e-e2bb-4931-afc3-7f262b0c6a93",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "47432c6d-efd6-4c88-ac7d-bd3e667f428a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb08185-f6ec-486c-b133-10705863e8b9",
        "cursor": {
          "ref": "979a6bcb-5721-45b0-85de-bc634d6317a8",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1960f8cc-41eb-41f0-bbd7-28cb11ab4114"
        },
        "item": {
          "id": "7fb08185-f6ec-486c-b133-10705863e8b9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "85810008-9db3-4000-9d36-0fc2d1e6e09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769e5f40-bada-49fd-9f0a-cf574efc4058",
        "cursor": {
          "ref": "64e625ea-e039-49a2-b642-d71ff0499cc3",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5622a1a6-81cf-485d-8064-c8a5ac355aae"
        },
        "item": {
          "id": "769e5f40-bada-49fd-9f0a-cf574efc4058",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f67e0ba5-d42a-4dab-87d1-9cef443db8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3013b59e-7157-4dce-83af-936599ec20ac",
        "cursor": {
          "ref": "8e9cdb7c-c17b-4d25-8fb8-20ca241ab062",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "38df03a0-4f06-4375-8195-a6cc410c4207"
        },
        "item": {
          "id": "3013b59e-7157-4dce-83af-936599ec20ac",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9c1427d0-d7c7-40aa-aee2-b248e14d7763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cb97fa-b53b-4c2e-aa10-e19aacbd8bfd",
        "cursor": {
          "ref": "54df2eec-6368-414d-b9a6-7d35271f7373",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "344e3df5-cb67-43f7-8e2c-a9efe328df92"
        },
        "item": {
          "id": "37cb97fa-b53b-4c2e-aa10-e19aacbd8bfd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5368fc71-ebf4-449c-adb0-eeadd0f5a640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c350c261-13cd-4d2e-a537-2b17b22a6041",
        "cursor": {
          "ref": "76fbaa04-db96-40b2-9ab5-9de2d80820f2",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0361b176-b0d6-4479-803b-bf47c3a35be8"
        },
        "item": {
          "id": "c350c261-13cd-4d2e-a537-2b17b22a6041",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7385d82d-6eaa-4c18-882a-a38bbd25b54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f877924c-5dbb-4447-8762-1f64b2925412",
        "cursor": {
          "ref": "a74f1f2b-7676-43f6-8e4b-c627712369b5",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4935da54-a39d-460f-b63d-947d03440672"
        },
        "item": {
          "id": "f877924c-5dbb-4447-8762-1f64b2925412",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c942110a-0320-487c-a9ae-b89fcd590793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312ad105-7f1a-4610-b6f3-fb2568233ed0",
        "cursor": {
          "ref": "f6ebdd37-bbd6-419c-b0f2-d9bdebc5eadb",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e6c3c7a5-79e1-4dbb-8d28-ff7fbd6572bc"
        },
        "item": {
          "id": "312ad105-7f1a-4610-b6f3-fb2568233ed0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "05f56082-11fe-48a2-a1c5-eb6d5a9f8312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a87a688-da33-4e07-8221-71fe7488f8ad",
        "cursor": {
          "ref": "7db48c3c-7017-45a4-8841-6f143c4d5cc5",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "50573007-dca2-4765-b324-51bf752eafb5"
        },
        "item": {
          "id": "2a87a688-da33-4e07-8221-71fe7488f8ad",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ddae37f8-e7e5-4106-a547-b46df4b5877d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd8b936-906d-4f95-bb70-4494c924a2ec",
        "cursor": {
          "ref": "2f0ce5e0-b31c-43a0-8c03-93621c2ed26d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bc5d0007-b41a-4ce6-9b92-c3084cafe1a8"
        },
        "item": {
          "id": "0cd8b936-906d-4f95-bb70-4494c924a2ec",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fa9e2883-eabf-4ff7-b3e9-37c69241dc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66954c11-aa0a-42ed-9fa7-6ba52d6ecc8b",
        "cursor": {
          "ref": "6adcee7a-e5a1-419d-9086-344ebe65daf3",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b30eefc7-1c20-44c5-99f3-15ecad03c316"
        },
        "item": {
          "id": "66954c11-aa0a-42ed-9fa7-6ba52d6ecc8b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c6369049-1460-4a3c-a001-f8c0eaa3b696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a5d6c8-da6d-409c-9862-a98ef933059c",
        "cursor": {
          "ref": "be87a4d1-0dac-4c8b-a2d5-6ab44502a732",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "edf20a71-7183-4ac7-bb40-9e4b58eb5be2"
        },
        "item": {
          "id": "a8a5d6c8-da6d-409c-9862-a98ef933059c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b3670c96-760e-4801-896b-2709a03db94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6f8193-cf58-49e7-bce8-fcb19be4adea",
        "cursor": {
          "ref": "7ef81a04-daf5-4150-8869-6d4b074a4461",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f211ed65-2b26-4f8a-bcbe-f41390f6451d"
        },
        "item": {
          "id": "9b6f8193-cf58-49e7-bce8-fcb19be4adea",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "233c5311-436b-4e63-804f-c74a23d5fe6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc73f22-0592-497d-a84a-cb0b646feb09",
        "cursor": {
          "ref": "d4d0239c-fc69-49fe-a2ae-73efcf2799f2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f3f269e2-cbff-453f-a105-206b50d39337"
        },
        "item": {
          "id": "ffc73f22-0592-497d-a84a-cb0b646feb09",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b55c0a30-1be3-4a55-aaef-f364749ccfec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f190f315-2a59-47ce-b0ca-59268206867b",
        "cursor": {
          "ref": "58f918e8-f028-479f-adf0-8639b5eb1bd6",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "dc04fc7d-5697-4dd0-8df7-fc6b58b5be06"
        },
        "item": {
          "id": "f190f315-2a59-47ce-b0ca-59268206867b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e013123e-29da-46dc-ae66-11537e2278fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc20921-f752-44ed-a64a-1cd15958f069",
        "cursor": {
          "ref": "895c0266-f21d-4642-a774-7ba05a121863",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ed7892c5-1551-4704-8ad2-03c0c7db03fa"
        },
        "item": {
          "id": "9fc20921-f752-44ed-a64a-1cd15958f069",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "61ad756c-7ab7-4df6-9b82-2c1fc399ec9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd2106c-b933-484f-8758-f3234d793af6",
        "cursor": {
          "ref": "7260e977-172c-4b35-a65b-2d6ddf82602c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "dd72aa3c-fadb-4f41-92bd-5ea1594f4b1e"
        },
        "item": {
          "id": "8cd2106c-b933-484f-8758-f3234d793af6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7ffaf076-3135-413e-a021-b31d70c6ef8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9952bae8-240d-4130-bd59-29d812f7e60d",
        "cursor": {
          "ref": "cd6d5e09-4f76-45d6-adc5-107591c2d0fa",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "65354ed5-226b-4364-81e3-9a577f1b44b8"
        },
        "item": {
          "id": "9952bae8-240d-4130-bd59-29d812f7e60d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "675ff108-91bb-4653-9523-be6119553447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc06d8d-24e8-4033-a4ba-efa8716a988c",
        "cursor": {
          "ref": "bafb7999-39d0-4662-a25d-c09fd59a4dca",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9f07d418-6c6d-492f-a544-c2e9ca4b34e6"
        },
        "item": {
          "id": "7fc06d8d-24e8-4033-a4ba-efa8716a988c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "13d266af-918d-44a7-b82a-199c3ad61cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10e6f3c-6909-4e1a-84ff-b506318508aa",
        "cursor": {
          "ref": "01b8c0c4-9ad2-4695-b9b4-d1de8682fc25",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "879ec60c-4c92-423e-a5bf-30a4d9df7c00"
        },
        "item": {
          "id": "e10e6f3c-6909-4e1a-84ff-b506318508aa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "71c124bf-2436-48e7-8a74-3f4206afe1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5b3e36-0e27-45cb-92f6-e678709808f0",
        "cursor": {
          "ref": "af136f30-b5e7-4f69-805c-c69848e37284",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8187a004-2110-471f-940f-56ad887d20c8"
        },
        "item": {
          "id": "8b5b3e36-0e27-45cb-92f6-e678709808f0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1dd1af58-1a6f-475e-8e3a-02eb56637dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e371f0-6595-4591-8228-fa359e2def71",
        "cursor": {
          "ref": "0bfe4645-d33c-4de9-9533-d4295dfd1ca8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "86b84451-e0b6-4538-bbb6-bdb14231fff6"
        },
        "item": {
          "id": "94e371f0-6595-4591-8228-fa359e2def71",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "31c4c477-099d-495f-abda-47f7555ad631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2b9b3f-1623-45be-890e-14d27f2015b1",
        "cursor": {
          "ref": "945ae5e0-83df-44b7-ad8d-c4449048d065",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9a455301-9d9b-41c4-9679-a9fad2c44423"
        },
        "item": {
          "id": "fa2b9b3f-1623-45be-890e-14d27f2015b1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c5e8cf43-f7cf-46a0-8dc9-9a3fc2874cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d599abd-d36c-4dca-aa64-9a98b7b7c72b",
        "cursor": {
          "ref": "b695f33e-985f-4bd6-a29a-e67707acbafb",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c9cbc548-f40c-4393-9348-e39c37b5ff9a"
        },
        "item": {
          "id": "3d599abd-d36c-4dca-aa64-9a98b7b7c72b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "46b59622-5cea-44ea-9879-c2610a41a2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45947f87-6295-44ac-8281-1dbb2244a635",
        "cursor": {
          "ref": "4b0fa507-2769-4f47-92c0-4454e92ab0d9",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "28efd13f-4346-4753-9440-7b4247aa4c51"
        },
        "item": {
          "id": "45947f87-6295-44ac-8281-1dbb2244a635",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "31a87fa1-94bc-49a3-8d2c-aa689b87be8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713db25b-d55a-4f76-bdc9-491f0ffa002e",
        "cursor": {
          "ref": "5c021548-51ae-4489-a29d-d036146eb99e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "852a73e7-8680-4b0c-98f1-6037efdc99aa"
        },
        "item": {
          "id": "713db25b-d55a-4f76-bdc9-491f0ffa002e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f59d9266-5d3a-40f9-9b0e-2942585ef056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560883d3-4bbe-4052-add5-b62f1bd6713f",
        "cursor": {
          "ref": "abc5b1c9-4e2c-4ae9-a4fe-e4e62c3d07d1",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "dbc2cba3-a652-49f6-80b8-658dc2bb81c1"
        },
        "item": {
          "id": "560883d3-4bbe-4052-add5-b62f1bd6713f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1e4b0639-c0bc-4ad5-be3c-2a891931c003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3234dfc8-e639-447c-a3b7-fb083ec80848",
        "cursor": {
          "ref": "95ebcd99-4022-42c1-8f14-957c3714daca",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1a87cd4c-db75-48aa-9f97-c2df93f2ab88"
        },
        "item": {
          "id": "3234dfc8-e639-447c-a3b7-fb083ec80848",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0f84d68a-0aa1-453f-bc65-0f20945e396d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddb6530-4c35-427b-a4f7-613714e78054",
        "cursor": {
          "ref": "6eddfc19-e07e-48ce-b594-4d2e8d2d185f",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ed8ff8ca-209c-4e66-96a4-999237eeeb09"
        },
        "item": {
          "id": "0ddb6530-4c35-427b-a4f7-613714e78054",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5560ec07-bb6b-4d8b-bd48-ab3449922013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9824329c-0079-465a-8e97-91bdb212f8c7",
        "cursor": {
          "ref": "4fb353dc-6a70-4c8f-a65e-b4c98878431b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7b94c128-e008-49e4-878d-dddd0ed94801"
        },
        "item": {
          "id": "9824329c-0079-465a-8e97-91bdb212f8c7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "05589282-99a0-44aa-bb69-c7c297779362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dfb9a7-6d84-4db4-98d0-738e326d2dd2",
        "cursor": {
          "ref": "f86ece89-5330-4370-b4e5-4b33fd078302",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1d016a23-3b01-4a3c-9206-65ddf1c2b4f7"
        },
        "item": {
          "id": "b8dfb9a7-6d84-4db4-98d0-738e326d2dd2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "43e7e83e-fc67-4e9f-b653-809c502ccb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10947f45-228f-44bc-bf36-51a882e4e68d",
        "cursor": {
          "ref": "a04a0e06-880c-41dc-b8e7-f2c284215d90",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5051f3ec-a5e4-482b-8191-4826bba17e50"
        },
        "item": {
          "id": "10947f45-228f-44bc-bf36-51a882e4e68d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e745b31d-f5ba-445c-837c-aff0f343cc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9332f13-ee4b-4b92-a720-fea08276f9e8",
        "cursor": {
          "ref": "79225f99-3de4-4aed-a898-c980493b5465",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d0d4d254-b39a-44b6-bf17-009cbcc98a6c"
        },
        "item": {
          "id": "a9332f13-ee4b-4b92-a720-fea08276f9e8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5ca1f453-485d-4845-84e8-2d7a33befed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfac1eb7-82b8-473c-93e0-3005e0a06062",
        "cursor": {
          "ref": "76d2b4df-4ec8-4296-979f-502cf424d010",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ddc29738-48b4-4db6-9259-86f377622967"
        },
        "item": {
          "id": "dfac1eb7-82b8-473c-93e0-3005e0a06062",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8dfc5377-d5b6-470e-9cd8-9533c46fb231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d1643b-017f-44df-bb9c-59ff172392ad",
        "cursor": {
          "ref": "0fbb1b8f-7607-4fa5-ac00-fc0f3a22827e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "eddaf4cf-65c1-49ed-aaf7-6d9510262374"
        },
        "item": {
          "id": "96d1643b-017f-44df-bb9c-59ff172392ad",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "32647bdc-a4f4-4da4-a2fe-570048daf30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637817cc-6b4d-44a6-84ef-41598527ab4b",
        "cursor": {
          "ref": "a3b2d268-c62a-47a6-8ba3-0b7bfed74915",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "efc7e7db-b570-4629-b458-3e916bd458f7"
        },
        "item": {
          "id": "637817cc-6b4d-44a6-84ef-41598527ab4b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e4520b5d-ce36-4dd2-9925-5ccc387e922e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c3c7ac-e697-4aab-84a2-05dbeca0afc6",
        "cursor": {
          "ref": "48262e51-98ca-46bd-8e26-ef3c1458704a",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8e5dd36d-bd02-42f3-ba5f-4566dccf7e79"
        },
        "item": {
          "id": "46c3c7ac-e697-4aab-84a2-05dbeca0afc6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4ef026cc-b91f-4bfa-bab5-35a61984bfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e7590b-35a0-4d0d-be18-b4a1538d6b67",
        "cursor": {
          "ref": "75dd0e05-35d7-43a1-86c7-cf6854ba7631",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ce777620-836a-47ca-9a0a-327a8e2482eb"
        },
        "item": {
          "id": "08e7590b-35a0-4d0d-be18-b4a1538d6b67",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d9c876f0-f438-40b6-9f53-838e7170bfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d3359c-3d34-4be2-b2b7-4f4b88707b11",
        "cursor": {
          "ref": "403b7579-652f-468a-a04b-6b1457dde584",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0d01cd2c-a3e1-4b5b-8112-d50b56c4ed32"
        },
        "item": {
          "id": "c6d3359c-3d34-4be2-b2b7-4f4b88707b11",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "85e35a2f-89e7-4b10-8e30-473cfe9c7b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b443c9-8e41-4ac7-bf33-30a592f62dbd",
        "cursor": {
          "ref": "4cc746ef-e987-4f07-afe4-678cef548014",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "51751b05-c0d4-4329-98dc-ce17e1fdb528"
        },
        "item": {
          "id": "f7b443c9-8e41-4ac7-bf33-30a592f62dbd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b84060aa-4b1f-452d-a569-175ffda8a7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df50e484-38e0-422b-a613-3a6ddd6fadec",
        "cursor": {
          "ref": "b961716a-a638-4244-8e59-f24cc9938ad6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b7c70b5c-af2b-4ea3-bc1b-6db407caf4d3"
        },
        "item": {
          "id": "df50e484-38e0-422b-a613-3a6ddd6fadec",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cbcd55cc-9d4f-4a02-9c6b-b6e679654281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f61c902-3654-4a20-804d-cef5a7ad7dde",
        "cursor": {
          "ref": "24df21b5-942e-4ff0-ac3b-ed3cad0c7cba",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "dbc2aefc-8e70-4107-b563-c5d9937577bd"
        },
        "item": {
          "id": "4f61c902-3654-4a20-804d-cef5a7ad7dde",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3bc508aa-7e54-4db0-a585-95727f2b3bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27956858-b607-4d86-b27e-446b4e898dbc",
        "cursor": {
          "ref": "d10ba881-4b13-40eb-bc58-d2e953476562",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8fa0f650-2840-4431-8427-422bd0bb34cb"
        },
        "item": {
          "id": "27956858-b607-4d86-b27e-446b4e898dbc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f7da2488-fcb8-44e7-a514-c3d481627a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc27fbe-6d0d-4581-94d3-f3fa9b9ef494",
        "cursor": {
          "ref": "e06ae59d-ccca-404d-bc44-aef9e488b7ce",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d44adee1-6c8a-491b-8efa-64cddb1c991b"
        },
        "item": {
          "id": "5bc27fbe-6d0d-4581-94d3-f3fa9b9ef494",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "96d777a4-8bc1-40c2-b89c-51a7bc5c346c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b9f495-8337-4691-b620-786b220f26b8",
        "cursor": {
          "ref": "db034e13-01b0-4b99-a52c-3f37ec18b884",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c8ef1eea-221d-4c8d-bcc2-b78af2273bed"
        },
        "item": {
          "id": "11b9f495-8337-4691-b620-786b220f26b8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "42e3cf5f-5671-49e1-a6e8-a2d5b4699d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d885118d-8e51-4426-a54c-c5ef58e94012",
        "cursor": {
          "ref": "58cf7ed8-3cfd-4f10-90b9-dfb31339af83",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5b310c43-e021-4dd8-aa92-69d5778756a4"
        },
        "item": {
          "id": "d885118d-8e51-4426-a54c-c5ef58e94012",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c63b0293-7dbd-4792-b531-aa7f184de677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94416fda-262b-4bd1-9412-499775c6006a",
        "cursor": {
          "ref": "5e9396a5-6305-4ac6-81fe-a4fb71316a55",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9f52a983-bb89-4d8d-a151-a9f472025bdb"
        },
        "item": {
          "id": "94416fda-262b-4bd1-9412-499775c6006a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "97b45437-fae7-4507-a92d-c92e135cd028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b310b31-f916-4c18-9ae2-f164b7542bfe",
        "cursor": {
          "ref": "5d87c1ce-467c-46e2-8224-d11987327525",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "11ac77de-114b-43d0-bf2b-307c8f35bc1d"
        },
        "item": {
          "id": "2b310b31-f916-4c18-9ae2-f164b7542bfe",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "90d1987a-c1ef-47b7-97f8-a8aead28f649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b35b67-7edf-44c1-9623-00c0320a3288",
        "cursor": {
          "ref": "c51731d5-54ce-4630-bcd4-b4c62cc0843e",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8b918a70-cfff-4647-8ce3-03e0142457c2"
        },
        "item": {
          "id": "20b35b67-7edf-44c1-9623-00c0320a3288",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9e0cc57f-9a82-4dcd-9308-5b073e775391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbedb0d-207e-4a41-8255-89c63ec4a8c6",
        "cursor": {
          "ref": "a6e2dc29-ae92-4897-a81c-9b84f3e82204",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "007790ac-8c01-4146-8443-a35c9a70bbe0"
        },
        "item": {
          "id": "ddbedb0d-207e-4a41-8255-89c63ec4a8c6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bc7bf5c4-33f4-44e1-a3f3-6793832401f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2bad97-7f4f-4855-be63-43fa6c4ba322",
        "cursor": {
          "ref": "0a3f5a58-6a79-4f0c-b7f6-441573d2a5e0",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5a9a0aaa-edaa-4dc9-a929-f2b5e15c5c3a"
        },
        "item": {
          "id": "0e2bad97-7f4f-4855-be63-43fa6c4ba322",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "30b13e3c-1ee4-4bc7-8a2d-1fe32688cb13",
          "status": "OK",
          "code": 200,
          "responseTime": 245,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "322261ab-d9ae-4779-b07f-7a1baeafc4ff",
        "cursor": {
          "ref": "6d5a8552-5639-4a2e-9e83-2a096518170c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ea443871-3a21-4caa-9821-a9ed443dcdab"
        },
        "item": {
          "id": "322261ab-d9ae-4779-b07f-7a1baeafc4ff",
          "name": "credentials_verify"
        },
        "response": {
          "id": "46d92c4a-b99a-4038-94b0-8f34b2ef4d03",
          "status": "OK",
          "code": 200,
          "responseTime": 5314,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "695b61ba-a91b-4d8a-9cb2-cb98db16da49",
        "cursor": {
          "ref": "cbfc5bd9-9ae2-41b5-ab4c-b89f3138a58e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b573f613-491c-4269-a40f-4c7e05cc0a90"
        },
        "item": {
          "id": "695b61ba-a91b-4d8a-9cb2-cb98db16da49",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "899dc6a9-f301-4918-858f-687c325bb3ae",
          "status": "OK",
          "code": 200,
          "responseTime": 2217,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "091aa005-5e08-4406-87b3-809de649436f",
        "cursor": {
          "ref": "f5464d61-999a-4656-a1cd-08c3cf5cc7bd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9c6995e5-1fde-4ea3-8a8e-0eb44acde1d1"
        },
        "item": {
          "id": "091aa005-5e08-4406-87b3-809de649436f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bfb7b8f2-8926-45ae-b1dc-ed619d0cabeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091aa005-5e08-4406-87b3-809de649436f",
        "cursor": {
          "ref": "f5464d61-999a-4656-a1cd-08c3cf5cc7bd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9c6995e5-1fde-4ea3-8a8e-0eb44acde1d1"
        },
        "item": {
          "id": "091aa005-5e08-4406-87b3-809de649436f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bfb7b8f2-8926-45ae-b1dc-ed619d0cabeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541999a8-7e8e-4992-9333-0f0ba05d1de2",
        "cursor": {
          "ref": "fdbbc18a-ba82-4fdc-a299-9b9e306c1d3a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f46e3061-b106-4c90-8798-5c353c8c0d7c"
        },
        "item": {
          "id": "541999a8-7e8e-4992-9333-0f0ba05d1de2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "95849461-d38a-4b34-b0f1-a9c191c869d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02326bc-a089-46b9-86f0-ae43b96343a4",
        "cursor": {
          "ref": "b78d449a-3ff0-4642-a449-96ec941f3175",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ec376ed8-50cf-4361-a446-c3a90cd7e9dd"
        },
        "item": {
          "id": "f02326bc-a089-46b9-86f0-ae43b96343a4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "47b2d725-80d6-432a-a053-56377ab65886",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}