{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "381b4f29-0e2e-4732-8b84-feb2cd5af859",
        "name": "Clear Cache",
        "item": [
          {
            "id": "173849e5-b7a1-4d7a-ad83-40118f2b592d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5bc3a1a0-72fa-4221-a731-6756697bfb07",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9da83e69-6820-496a-9cd4-c25cb994436b"
                }
              }
            ]
          },
          {
            "id": "088e0d5b-98e5-4f8b-b320-6aff4fb94e0e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "400355e7-81cf-41bc-82d7-d79901dc2030",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a194b2b0-ca23-4922-ad6e-22d3e9f85baf"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b6c9dcf1-59cf-4e49-808d-099fdd901530",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "10637a03-d773-4bd6-aad9-6874cd0cd510",
            "name": "Positive Testing",
            "item": [
              {
                "id": "79011590-ea43-4904-bed0-36eef6674cf6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24100538-b3cd-4f12-9d80-3e5a23905242",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa197862-7c2a-4d7c-8766-53cc8e454350"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e25be4f-2ad4-4e3b-abb1-c97ca5e98743",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0cf5e754-24c6-4795-adf0-df73f5e74ab8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6f8a1f10-9abd-4365-9eac-7c5b28754c94",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79fe0e97-75e7-46c2-96bf-fe30205e6a3c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "425cb0e2-3d6e-4ce9-ac16-9e08937e0db2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "49e3a37a-6e8a-44b7-af99-1905578c1aa6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6505abfd-d25f-49be-8ad9-cd0601314ba8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3c4eb0d-313f-41b1-bc19-19802c66c21b"
            }
          }
        ]
      },
      {
        "id": "2464bfb0-a816-4271-8e7e-bb1db22aaf1c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7dda3817-9c06-4f7e-8a87-495d31d7b82b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2ec71c8-ba00-431c-ac99-18ec57a9a229",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f31f9bbb-b83f-42d6-bc8d-467c0c7b43f7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e077254f-c9c5-4577-8451-8ed7f83ff98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a560a293-8c4e-41d7-a363-e1479020445d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38f349e-fcd9-427f-9427-3abd87f9f82a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a6d546-fbed-48c2-ad18-3818d2844666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6b9d3bd-4b46-4cd1-aa60-d262fe43c915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d9f869-9c10-4ee0-8272-5f218a852ae9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac49bd39-a69c-443c-82b3-19198b0a4390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fc3a8bb-195e-4ae5-a0cc-43cda27dd612"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "16f6a49a-951c-4e28-8ca7-eb6a4172d4fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d42a320c-2429-4592-9d61-9a162dd97fcd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ff375d-0286-4644-a3ee-662b3ff310ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9c5a92a-d50e-4c69-9acd-e2e0331a9e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66ec584-aa52-4956-a612-500e8434a7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f784df-50aa-42d3-b927-0adba9c8a089"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "487ee7f4-94c7-4a1f-8c4c-5dd7a5fe17b6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d47e9fc9-67ff-49a1-9dc4-512245676f9c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d34fdabd-5f6c-4816-8c17-5260ee6bfc6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "42dff4b8-aa76-47d7-840e-faee8bc7bb56"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cad3c40-1ae2-442c-b185-889f4cfda4cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b4efd908-c585-45a0-b9f4-3e9c86806a9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d867f41e-c207-401c-b3d3-4b875916332d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f17dd157-9798-4e1b-b34a-08279768d776"
            }
          }
        ]
      },
      {
        "id": "866496e2-0738-42cf-9c49-ca517824ef51",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e0abe15a-dda1-432d-b9f3-5f5f62160fa1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "713b1420-0ee1-4024-9d77-95e91b694a2e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "76668718-d0a0-4de9-98e0-7197f3d53370",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a2a401-2a95-44dc-9601-562fef08140b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1132dc-b461-420a-a2c4-08081da5547c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c60aa1-1882-44b5-950c-1db4fdc31937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a019921-018d-4610-b410-de942b394c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7371fc-f603-435d-919c-1d4101d77690",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795f526f-7638-4ce2-8308-aa80684ad5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9486c3ad-c4e7-4015-9ac7-aca294d4d99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf63678f-b081-4c18-b030-6137e9863bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1424f549-52a2-459c-aea1-eb6a0c038ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7675c0b-c130-4a9e-bc62-ee8013bfe606",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86090031-9e20-4751-bfd0-11d804ed0cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be97821-a9ad-47d5-8534-a953bb1f3381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bc756b-e1d3-4388-b083-e3f36c2c180e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50654c4b-1a8a-44dd-8300-b363574bcbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77e8b13-9b91-45e6-8c33-e23d837e7b94",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cee520-4c3d-42cf-8b06-41b2e93b74e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c88b98-244d-4a74-af5f-2e5cc24b511c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16352932-46c5-4721-a0c1-0d2134361b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0182c18-a2bf-4475-a92d-720629a339a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54713d51-ce83-4940-87cd-4c8f7742af57",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cfabfb-3175-4148-b9fd-5ec531c936cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef7f30e-3543-4d07-bdf0-f0a6892fa814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879a6735-0964-4c25-a062-53cea1a4f655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ff0adeb-3a89-402c-a512-d9c39b75cab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47291849-59bb-4ae6-b9c0-8745c5142563",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c9fee6-2a4d-459a-97e7-15f1923fd83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5d52f3-bae6-4349-a88d-09cf3fd008fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04d499c-22ab-4bde-93e6-ac701bfa856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df57c8aa-f7a3-483d-b5de-5ef27fa1aa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b48263-b0f3-4424-9bc8-f5d751b5a4a4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957e5511-1d9c-4c52-955c-b818a1b0a1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca983ee5-a4df-4a64-a2ec-1cad13f4c031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4771c62c-de00-4cfc-bff5-5d4a5a57bb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa0765d5-f244-4de2-aaeb-99b908b8f68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda4fa69-f293-4247-aaca-1215d164efbf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5078d2e2-02e5-41f8-87ab-be19d72ca316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14445368-8d95-4a56-8405-4809e9dc171c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af83c3f7-2048-4649-967d-95cc9a367c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f035bfbc-7e53-4e4a-8bff-3550dbcb0f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e945dff-4e4b-4c1f-8d5e-f8840b0a13dc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15e2c88-712b-46e4-a4e2-aa242c6e2ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e11547-4be2-4e3a-822a-abc7dea49570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e60e0f-f7fd-4652-a0ad-0441c41931a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b9e4f82-8893-4715-9a5b-7e084fe7cc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ecccb7-8d59-4fdd-8e0e-3a1b70eefa87",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfc0cd1-3358-41e1-a91c-4fe346313929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775d4f42-8876-4c2d-b050-bfe9afdaac7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea27d5fa-e322-4e94-bc2e-f9be833882ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8fa6fd4-bbbf-4aeb-b6f4-3502f4b34ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7af2e07-dbb9-437d-a92e-1df6ccdfb651",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fd31d9-ae95-4a51-9889-7e3684b83ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f579a8-6a4c-401c-b352-2582b0249236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9847ea3f-7d7a-45ca-9623-b5bcc40df3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "797e5cdf-cd8b-4be8-b1ac-50912fa54f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d0e44b-0c36-42b4-acc0-474338432cb7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b9466a-a260-4dac-9ee9-76dd23c7c6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e424e0a-a827-4b79-abfb-733f48751837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fbddc7-52db-42f4-b8a3-4ddfac6b6120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4d6bbf4-bc4d-4c3b-8604-051ef580a07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bae24dc-5485-4efd-85ae-9099039ee39f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a71716-3806-4243-bb1d-2ce735f74eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c68e19-dec6-4dae-9eca-963d42c06d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5573741-d138-47d4-856c-a45ca816dc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72ebb6f3-f1dd-40fb-b67b-617ab53876b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bfc796-9666-4e6d-855d-c695cc1ec078",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5faa96-cdfd-4c5b-92f3-f1becb086bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221d9c76-c599-4be7-97e6-098f9b9d4935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6354e39-7113-497e-bba9-b32ed8b5a35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "372e8321-d0be-4fa6-a8d4-c574088a2d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbf57f9-4a95-4acf-8cfb-ed3781ff2ceb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba2760f-d049-4eb3-9a68-8441639f1708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83289dc-1242-4b4f-b065-28f4861444cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257de8b8-9cb5-42a9-bb62-73a24804aa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77ecdde2-4d69-4699-814e-8611b230d8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6507a7-7ce8-4ec8-9fef-88796744f856",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b2aace-6bab-4b5a-9b09-6c85b3c2ebe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b955447c-9407-4977-bb92-070e5369e762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfa4ff5-39be-4def-916f-3ea2fe045589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4222de7-b5f4-4b3d-9414-821164ea3fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4eb411-bcc4-45be-9ce6-8fe521aaa311",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37d519c-a73d-4692-8cdd-0940346f1258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3d6607-d7fb-4a89-8a8c-fb99a187161c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070014ff-e3b8-49d3-9ae1-7cd43f35b22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9222b3f3-19fa-412c-816d-8c5c9fa35792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1010eb98-4a07-461c-ac37-9341fdd52bc2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571d021b-d3ba-4d01-8afc-ede0126c78d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b82f6a1-47df-4e30-a4ae-d5ee6c4c8b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2503502-8569-4a16-a0cf-f66b39128963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1787c4cb-7060-4089-a4a6-f488f9448586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0de4440-4700-4b3f-9e24-d48b87880216",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635d8020-9d5b-49aa-8db6-c58a23a535e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d7c822-4541-44d8-9608-9b65ad480963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1cee1b-8907-4497-bb23-8248a7805c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec939972-b3c1-40b9-a5d0-18ebf3c45caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8a25a3-bc69-4b3e-b65f-248233f62324",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d65ce21-0479-40d0-99ef-a932af0073af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677fddad-09b5-44d3-bb0c-2d4bfa3df540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bf52a4-edff-4797-a586-3260cd60cde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "244b69d5-a195-457b-9581-5a43073ccb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2510660a-3dab-4b1d-bd60-a16f61c30833",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f69850-5256-48ec-8814-d8b7a4cd0e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d229317-2b08-49c9-802b-0ef9007a0274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ad1f78-2c98-4896-b750-51146ce16561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b145f8e0-939b-4b70-a864-0fd5929a69fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6452852-a36a-4254-894d-d90f47dfdd0b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef123ba-b05f-4b77-b849-2563043d7323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad8b93b-9a27-48a7-8034-9de22791e927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16530393-d13b-41ea-9445-0f2332df57f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a052e61a-0fbc-4452-b088-91768857559f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed2979d-2992-40ef-8bb6-800bd4b6ebe6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff57f421-bcef-42a1-b46b-d93c482c9be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92113b71-020e-4bb7-9030-a4ac6a96d2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb849bfb-ae12-47f7-ad12-8254b8058848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c305d3-6e63-485d-92a3-2a25d2ff847a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abb42b7-6613-4cb9-a02c-30d0732a4317",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e94e55-a665-4f39-8a17-9cf867ca6325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5abd344f-5e8c-4b3e-a57d-194761ff8baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041e24b1-c660-424b-8d9d-a42e17130106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed81382-eb7b-4a72-a09b-deff8998b0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea136a85-0e23-485f-b7f2-e0e3e713abf2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ed435d-b2d4-4e6b-8e07-da6f2e4dd56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e8c361-aff0-463e-b937-203f4996e8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7396b91a-3931-4c88-98bd-5f5a69ea3069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f767babc-b833-48c2-87e8-9323edce6356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a797de-3ece-416b-9354-6fcf7cf1c11f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be3aa7f-282a-473d-a004-b3049cd706c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037a248a-02e8-466d-a1bc-018ed4aad16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0622adfc-05dd-47f8-8352-c7447bea502d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e75bbfe-af98-4518-ac7d-c88a68b269fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eefbb8a-64d3-42ee-bb55-3ac901d9b012",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3a7dd1-3fe6-4ab5-9c7c-4efbe90f4043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c31628-81e1-4c35-8a0a-76578c99a5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952cb53e-dbd5-4254-802e-d00f0af6fb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0354c1-7a43-4ca2-a767-8945943d5838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac328137-82d2-49c2-8afe-4a612cdcef29",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a318b08-7199-453a-80c4-307daae8058e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8782b9f-05f3-4814-b40d-e09b8d453c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939a82fd-8868-4073-a6d9-bfb32abf1a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2959bd9-a7da-4430-b630-ed1bb6c5b7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62aab487-ec3c-4952-8eed-4c48783dd159",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0850b240-12bd-4bf8-b8f2-7b1a51aff060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7d35df-eed3-4ef4-88dd-0dcad47e37ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779b35d5-aca7-4966-872a-db013dc182e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc36b9d7-d5bd-4859-993d-4d03da51269f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce57fd5a-fc72-4122-8347-c97da8e59f8b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18036b24-3be0-46a8-b94f-c2df260439ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e5b598-8468-4dac-922a-3dde91c07200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fde7ef2-b3a7-4983-bf2f-717c06607eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "54f5ed45-8bf3-4b72-a93a-37c967067c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b849ed4-6351-4b8b-8c68-151c0b601090",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a2a831-301e-46d0-8598-4903092a1bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c07eda-7ab7-4554-bd8c-64b40e2b5e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615f220e-8ecc-48e3-9757-027f5965d048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b223f0-958b-435b-8c4c-0f543e35e321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161a316e-3306-4ae1-a428-b9d506a5db1c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027bcb60-4a00-4356-b303-f3900b895bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70656e03-e3bb-4eb6-a790-b716dc6998b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62bb5ec-9d27-43ef-8af1-4fe4ef5b89a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7426e02-ef87-4a55-bf9d-4f62d8f13514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d0bf06-1de2-4f72-814a-04674b56ad6a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3038bb71-cc55-4d23-a152-04972a7ce1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8438d7d-c8b6-4193-b35a-069c11525bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9b84af-93e0-4a91-a275-36f045de84d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d20609c1-11b9-4bb1-9344-f6e8fb0e6303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d9ee07-9ff1-4f32-b445-eb4cf575a83a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9543ac4b-3997-44f8-818d-9691378d458c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6908c880-85aa-47c1-8012-f71768db3f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d78eee-ebfc-4b43-a56d-ed21491ef222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e78fe949-cb76-4f97-9ba3-ee0739f72fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73487120-8e17-4f3f-9a88-0386a5f43837",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41a692c-bcf7-4313-8a41-11966de49d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63de4739-639f-4452-89bd-ffe8896c8acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2baa427-2c98-4c63-b459-be73da8f8af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bb232cc3-0ed1-4da7-ad16-a0f0458b682e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664ef5f4-9b30-4aa5-880b-d000ebc827e0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc22932-6440-4e9f-9469-741e90658150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d627da3d-1376-426e-a175-ea7a1bd40975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042d72e7-1f1e-4a09-9fc8-39d3353f086a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9bbbe968-9c23-431c-bf32-b49dfd17356c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bde8d7-bc60-483c-82ef-4a9e8b87fab8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1f62d9-0da0-4726-a870-4c0c43310d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb70aa29-769a-4aa1-a6bd-d61c19499edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70733b29-cd5f-46bc-944e-6418def44b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f483937e-e061-4349-a38e-d79965bb19ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac688bf-97c5-4514-af1a-f8a222d38089",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7495b83a-c4b3-4be8-9703-ac755f46c4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d618d302-7c56-4218-b771-9411d01e4ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f6b842-9bc4-4b73-b941-7e9cb1713784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "127d56a0-f8c8-4466-a83d-868c3aea232c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c31cb22-5fba-4aa1-88cc-b49dfc18b10f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f611dca2-acf4-49f1-970a-33355a3a7369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d12bde2-b782-473a-9661-f880cfa3a91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910eb152-3642-40bf-a5f5-8dd468ed1d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "07f8b27a-37bd-4f91-bf98-1a07e0a8e2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbce216b-9d70-4596-b46d-957459d0d4d9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b592207e-bd49-4db6-bbea-acf38e12a51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f1702e-eaa6-482f-a56b-9f3c61dafa57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b9337a-68e9-4c68-9a93-9ec1d3608997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee946ff7-fcb4-4341-9765-df7fa6aa53e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65251521-e7c0-4f4c-85ab-324bf8390156",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc27d7f9-ea6a-4190-a228-59e1e15259e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61dc544c-a9a4-42b1-ad33-fad82b330555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86afda55-3108-417a-9950-dc90ae5966e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5e3a6c-4407-4182-8303-7c055357a3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8f177a-d83c-493a-b78a-ba1b16ccd83d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baae48aa-e287-4018-9a04-5757a6553927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e96e07a-6213-4810-8b43-4e0948775feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ced7fa-8d9c-4abc-bbb8-fe1c24f0a3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d51161-f060-447a-9df3-ec5933069d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360fc9ad-b554-444c-a711-b464d849e755",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a068fef-caa1-4da2-bc87-23789f6f1900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7da35f6-db63-44a8-ac8e-b4adade6fd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5ffd82-d93e-4b34-a30f-16d330730144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "64d1a9f5-e678-4d75-8f68-4f9ae2370901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc015d4-4bcc-47d4-9a4f-c9c3d497308d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f640e7b6-af77-413e-b28a-79c7079c2dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23df7be-5dc1-47a4-95cc-6bf6a557da5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc64be9-0ff0-444f-bd69-7bb8c71d0962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b35a80-8a93-4acc-b856-d2679be04ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b39728-5baf-4972-a501-2414682c00f7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a459dfc-7623-4f4a-845d-aaca2982fbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43eec1e1-cebb-467f-9ec9-f33a6ddc5908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8263bf9b-d748-407d-9073-8cd17acfe00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b92e826b-ce1a-47f5-926b-3fd51a2fcc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d053ad1f-1ec2-4433-9ed7-50ff6bbda46d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1e1d97-6938-4fcf-8466-afaf4aab698f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37bf2600-c9dc-4b61-aa37-148871d90f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb4e5ec-41b3-4bbd-87b5-b6fbebcad28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d9baa4-686b-498b-88ee-e048de624e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f77c01-5ff1-4b49-948f-64117cc31219",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b786ace-e1a9-4bc1-897b-7213f943dfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07dd11ef-be16-4706-a219-f4c4214768ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d0c26c-60f7-426b-a288-551b049d708f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0415e26b-0b40-4a07-8859-008613fd4d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cadc1b-17aa-4b26-ab5b-9deea5d0c8e7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e4693d-a508-4cce-9e61-38b6a134b44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f77a105-9b94-4459-b696-fd96052a2d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1705ba-0847-4084-a856-24f058bb74a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29ebec9b-c759-4380-b8bd-3a4431f354dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cb81d2-e2cc-4f88-83e2-c6518a179da0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7a7606-3b48-4825-872a-b47dbced2608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e0b18d-7aef-4dcd-a6c7-32b711293374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb4b1bf-b1a2-4e9f-bc7f-4a86585acb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c214e8f-bfda-4801-9ec5-ecbd705dafee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebd3e26-a63c-4dc0-9ab7-bb62077500ca",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d0833c-e4fb-4410-9056-e8a12c3b97b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9a8902-1f20-4543-9349-5736cd3ff902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34120709-8442-41be-ac6f-4c1507a07f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f95a80e2-3d0f-4156-a45e-09be8f4d8759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8229a7dd-ec89-4e24-a6fc-c96ec4e87914",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c996cb35-dd64-4d8e-90b4-65df04e181d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13e31d3-0980-49fc-9567-1510aff42e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b528b8d2-2640-4bc0-8c84-349b55c905ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5731708-9bca-40e3-a3ad-37065d24123e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0db49d0-6922-425a-928e-0fc787dfed5b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb257289-7b94-48b6-a375-32cffa02712b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7d84b1-da6b-41e0-bad2-d8b0002814ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e82676-93ff-43e1-b7cb-3964ba71c169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa0e938-4d2d-4cce-abb8-1fb26c45e157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9858ce72-e8ad-4678-a9af-f692ffcf7080",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcd33f8-0ed7-4f70-95d8-160558129fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae86d6c-f53e-49c5-8ee8-f181874f77f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e4c707-2ce2-4c29-a5ef-c5dc0bc7d09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "349c3229-a780-4013-a414-5e08e82b470f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a673b50-e5d9-4635-9ecf-84ea65ae4c3f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb0a60b-edc2-4d6f-8bb1-adc00a4f43fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a280e8-1162-460b-89e0-9065a8615dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dd9e1a-0e49-4314-bb15-2b2dc400eab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7391353e-e6eb-4422-b37a-2f8d6f764559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f588b52-1724-4ff1-b138-e35b8e33d674",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c49b5c-a581-4111-8421-6c044e6ba631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9feee5f-182f-4dc3-b0f9-3723dcecb036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a2c7ca-ba31-4b35-a5be-ecda61ec6eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c32958af-625a-4876-a180-1e16e02c0214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eafb62-1e20-4eb8-92ed-0b58c54706cc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f946ce38-e848-46c4-903e-3e0013bd2631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189a3cc5-afc1-4e6e-9df8-4ccc49647949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bc1b46-dbd6-4f01-8ad0-d23391468585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bd3de0-2a18-42d7-8885-56be5ff753b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfe6f6a-ac5d-4ab5-a66b-a7abb1fc8f03",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d0b7ba-a32d-484f-9162-b234c793a522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdffda95-98aa-4b8f-9afb-0db2568a3f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316b082b-0fdd-4920-9ad9-b6cade0bbc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0b5c55-b5d4-40e4-b87b-1fc13d7033cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c93b02-3b25-49c9-be1e-efb0947368c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96654e76-d8d2-4141-8e43-bf7e3a27fcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a535c2d2-fb60-4571-a158-bec28a4d13af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e76ab80-7928-4a06-9794-e277849b25a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1f3ff3-7a05-4172-abb7-5ce4c7058f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a20d7d-770b-44ec-abca-da86624c045d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048757b8-9a4b-4e5c-8cad-6b3b1c155e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5fc680-1de3-48eb-91b5-51b8fbcd74ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60395139-761d-4dae-b44c-95dfdd921dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a595725b-d61e-42a2-bfc7-fff0a34180b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d5eb8f-9a87-4803-8316-1803afab53e4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46900cda-06ba-488e-ac93-583a26c8bbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be638d7-41a8-4a84-bf26-c27380c6f6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a2788d-b3f7-4332-982f-8a63e0bc150c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ccf830-058c-4071-8467-b73e98d3670f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067c29a0-98fc-45d7-8867-c879f691f0be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64345c5c-168d-4ffb-947c-c66343f4ec0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5307eace-241a-4667-a111-fda0aa1b32ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a886f43a-e43a-4971-b80c-95cc5278cfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2432675b-415d-4f52-8995-41eb49fa3abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163cf11c-65c5-439a-8326-ec7072604773",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d834b557-1f2f-4224-b9cb-4e4d1e69fcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985a741f-f2d4-4358-813c-05cc4ba356c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c53d367-5bf8-43b9-b3c7-e0b91b9c08ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a685415e-32a2-4e5a-bbdc-e1e7339a8cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dc2861-0cbc-4f0a-b1a7-2b65b08aa620",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96db74f-4f38-4727-a47a-3e9db8034a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8cab52-528a-4a8e-8d9f-68bef36a80f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cfb713-76e2-4f1a-956e-4d3089dffa2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e758f7b-0553-4612-a401-167f080ce40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9930f9c-b1cb-4701-8e94-c9c4af4b91da",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990ed9a1-c55c-4435-95a9-728a6c19cfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9047758c-0520-44ac-a86a-1d5a242cc84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59acb0ad-f0f2-4b0f-9af8-8ba0d5b16fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0d2c13-98a8-45fc-bd0d-5c385c1d9780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26707db-b2f3-40c7-9205-a2c0db2eb641",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1549a30e-ba30-4a20-99e6-9dcea601fc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c32a62-d010-48a6-8422-8879160a0cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4590f995-c063-47e3-8173-2848326727a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a56e39-6636-46ae-8df5-db51438d8da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7853661e-847c-45ee-b50c-80e8e412bf41",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c180d95-ffb9-4686-9d48-a72e9e5caeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b37532-287c-4219-9ad5-2cdb58c9237a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf334dc2-195e-4c5d-9804-d819fe3e74b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e355784-015c-4d11-8fd9-4f066e9b9296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e55d5ea-e1a7-4159-b1fc-ab56633b0911",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf3d580-cf63-4071-96d6-d469a1c64fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17c554b-b9ae-4286-b440-75a7dce14c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e026f0b6-6633-4748-9b57-b5008ed45265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "797b1367-1f47-4659-a593-ca8cb12ef650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8681a890-4abc-436d-9e44-478f7cbae3b8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d54484-d8a4-466e-bf7e-57a487e6686f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b283c4-bb42-4108-a45e-bab6069e86a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3349f2-c4ee-4c17-a51f-6a733f6b8ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3f9fe7-3690-49c3-9b82-b77105b5b34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a68eb1-7dc6-456a-bc98-68de730a7f16",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b567698e-7f0a-49a4-8d7e-782499c226ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a752284e-f99d-48b3-8037-9e1564620050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddce183-fb49-453e-b6e0-7907c0a3f34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0c4dbc-0cfb-4916-9aa6-b246e4b2bd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1d3391-370f-4279-9184-0248e60844a8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82522f66-f5c9-4761-a691-16223205c2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef962bb-a660-47ce-8705-e47e53e2c519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e025821-ae4f-4b23-a81c-1ed2d6017dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b65f4b99-d027-4d33-91b1-233cccd9b2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec04cc0b-03ea-4722-93b5-7d171e518811",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f779ade2-a0e2-4c11-863c-54ae62ab02fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8716c2-8df8-49e0-9eae-02e55e932980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2fff29-39eb-4da4-b50e-1845bb7c4a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33a01d09-d4ae-4679-a928-2ae1361b9ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415110bf-7cb4-4d90-8b03-698e712d1f80",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6c7426-014b-4174-8af1-bc8d0a6fa927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8318c435-867d-4aa4-a23b-053a81f89b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36b7a83-4ddc-4ad1-83c9-5e14901b960e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec15d56f-380e-4e72-a498-5fdd122607ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02860883-188e-48cf-96a0-e78f76288e88",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f079fa56-8657-44f5-bda5-5262e38e1293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed12363-f86c-40ed-8caa-9416d5986409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeee9067-53d9-40e4-8391-70afca4bb478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eae4677a-e037-482b-9658-95223dc1a4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e397c2ff-3fb9-49ec-96a4-0cdb22e3d9c2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8d45d4-f036-472f-916e-f30392b1590e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3182910-9af0-4aae-b054-1c81914739dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f426c26-7bf3-4509-8374-19a482c5bde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb350a2-51b8-4da8-8cf9-cdb396fe095a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e07251f-17c8-4c19-b50b-cf9aa8e780ee",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaa0140-081b-4ac5-b120-05ba1ba718d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7784682b-7a77-4c79-9437-5c3d2b4a5fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d4e60d-84bb-4785-b6a4-332968d665b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d96ad67b-b978-4a6d-9d06-7c3464930535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fd5463-3c30-431f-8613-a0dca355e16c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f0cf0a-e45e-41d8-b84c-3d9ec974ddb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150eb257-50c0-41c2-99be-a6e24df12bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335ed096-44ad-4a03-8bf2-57052110da46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f072ec3c-c01f-46d1-928e-49a331cc68d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6c0934-2fa6-4e03-98e1-4de185689d23",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38036a0-79e7-4675-9c54-a3873c7eb312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c55168-9102-40a8-9cc1-63b7c82cb068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbe5120-91f1-4a72-991e-cac94e993569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0b0fd4-0105-40a7-a2c5-11ef4680672b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c83c67d-5c76-4317-a49b-3bfae53d503b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b780f25c-01d8-41d5-851f-23bb2a4b49f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f306e54-0ef1-4cad-9acd-ab92cad080e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a111a03-d499-4e88-9de6-c148cf86c474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11e33735-05f8-4c43-a6cf-a0a72455c43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fb5722-9b9e-464b-82cb-4e295abca159",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f91c355-1511-4659-8646-a692313f27d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a898ad-cc1b-484b-bb5e-56aebebe3d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917e999b-ba54-467e-a30a-c0dc58b3e6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c435be9d-aa37-4ea9-bac7-72904e24cbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2ed3f0-ecfd-488f-a130-0a9b149e2600",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a82725-8754-46a7-bec5-fc9c7cdaed79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce9425c-8e22-4e99-9cae-3a1ad1ee62b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb1919d-f451-4eae-9ec2-ee906ee4bfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0e3d2b-8403-4673-b9c7-efb4f9282d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b95332-a12a-45f1-9901-4a79d6b8d325",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e498bf14-52ce-40e1-99d0-d5720c2ae591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f283aa03-950e-4f4b-81cf-eb539426d75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c58b4a6-5933-4477-9043-28e86188acc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f659d11f-d2a2-4733-be26-45bd02762ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc27a25-c79c-4a36-b33c-29633e6b23b2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406d0c6b-1be9-43de-a910-b7acd8212f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33def825-0bd9-4ec3-ba5d-f56f18a38f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb25405c-27ce-43ce-bcd0-678c08219951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6851a3b1-71ab-43d1-9e67-479f702cde26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6843ecd0-59b9-48ad-9087-5a87ec0f23e5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa42aea-e635-48d3-9a2a-501230825ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6087b8-13b7-48ef-ac39-0ab3285c2a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5cacea-757b-4cbf-a5af-a68e7af6144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f568fb92-ee6f-4029-8062-04e38338e075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0471f9-072f-478e-9417-329537ec687f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ae5bf7-2393-4c0c-8ab9-d50c87d5593d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555d1343-e63a-4267-8c85-58fe22500a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738326a5-60cf-476a-a77c-510b43721735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22009da3-31cd-4c0b-91fa-27813c8ad1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca52b802-9a20-4cde-ae85-e2390270d675",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482e7b3c-38e7-428c-a9eb-b05b3237b5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "462b52db-a8bc-418d-a71e-7ed4fef77724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff7e839-4545-402f-af36-cedad1b6eb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "429144e1-68a7-4a06-a0bb-2c4e79f5a55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21feccdd-1b8e-4478-b816-05feff7db601",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbaa910-5662-49e4-84cd-97fdb6474659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df639bcd-4f6a-4fc6-b9d0-b68a939549ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2e84af-24fe-498d-bce6-6f6e518d18a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c233cfe8-e2e7-49c8-9e9e-38b35b1d9350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ea8b13-4ef6-4dfc-a965-9e907dfb9600",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc24520-8812-4285-ad82-6436601e70fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590c55f5-e636-468c-87a7-9ab9f4f433d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35508ba9-dbec-4302-89fe-b7cf112f4efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "000b6548-7fb4-4621-a436-c2ef1ba104ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d711d0-6dfc-4616-a0eb-adeefe462a1c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae7ff81-48bb-4c38-af88-a5b2f6b905c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5d3129-a801-4c81-b541-a5525328f4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ff72e9-ac72-48d3-bbf4-d507c30dc03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd23748f-3d51-4951-95ad-5f50b58215fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dfaa9a-f708-4349-b6ed-425706aca53e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851ab8cd-1556-40ae-a5bb-790357f21056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca59ed5-9285-48d1-9b5f-df50028a871b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ea8e53-36f1-40fe-bfe8-598a7427c91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8fa05d-666a-46cd-8356-7b5ace158ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dac2e1-3ab8-478c-8479-b8f843dc927e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2d7687-c451-4106-8e1f-0e7b0dd62afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b3b832-dff5-4de4-8718-d563dffd049d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25175ea3-e692-478d-8003-8081167d2222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d71450a4-8b6f-4df4-a018-67aa251b1ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a9ed21-1e81-42f5-bb68-bf3b67260300",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651409b8-061b-4baa-b0d9-ccc8af1b5e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe2c1b0-acd6-4901-b7a9-8a0801585f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2ed968-803b-4c38-a2dc-d687accb5e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c45283-e1fe-4fce-80be-08c3c8c3f9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c54769-3150-4a2a-98d4-6690a9dd9ddf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d46782-6526-4e42-95ca-42cd6caba868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ab9d6c17-74ce-464d-be11-9974596db455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e228b81-5e63-4623-b63e-864a1a35e859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8a244f-d278-4816-8df1-8b5258e93fde"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "28fadea1-6d8e-4f54-a0da-a5efe22fb823",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a0564fa-ec77-4642-82f5-3e94b2562686",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8304f7-0040-4996-b6df-5915a5486f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ff91280-ba69-431b-94ea-a9d73edf4280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed788a98-5565-4f40-9f7f-3108e5c5e07b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "944482d4-6d82-48cd-a649-d6129dfb9a45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae8ff8f7-c3e3-4d32-b441-a9292edaa951",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b69245d-b7d2-4bae-9e22-41c94982f057"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd203fa3-c29b-4150-8b8d-d48265fdc182",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "958672d9-f214-481f-ae67-3ed6301265c7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bc60281f-db5d-444d-809b-45de7ad443f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9aa1878a-524b-459e-aa08-18173bc53ede"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "073de5e5-9d1f-4da8-94ca-904b8eb33fef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c957af5a-1805-4c2b-bd76-e66f6d457790"
                }
              }
            ]
          },
          {
            "id": "6f9bd48b-f56f-4ee6-91c3-9130b8ad2fc2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2c5ce011-82de-4d17-bb91-9ff77ac78a4b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "58234493-a719-4469-a36e-cd76d6071706",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949d89ae-9965-4302-abb3-0b70f4a91620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "16e1a838-bf3f-484f-9bb8-ce6b0b656ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cded64d1-e470-440a-9277-a2f16ec5ded6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290734ef-5845-4f19-8128-09326d949529"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "189013d1-1886-4315-be72-40dc4b48d4be",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e429719a-c44f-458a-b7f5-67c5a9b49de4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c4f7843-e469-42d1-9c0a-a5837ece5bf4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be7b507c-dfd2-47fb-a9b0-f804c7a59232",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5017dac5-c08a-4156-9b65-a21be1841f1c"
                    }
                  }
                ]
              },
              {
                "id": "5d2a1c62-606f-4138-9cc7-1643e10dda87",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "677a2d42-edbd-4fcc-a084-9ad62df5bf26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce03b779-46f2-4c39-9557-6b0cb2b89bdb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "290e8904-9cc1-4933-b9a8-3c2eb0cd0d63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18e3a846-8120-4041-b4cf-07b51fe7c0e8"
                    }
                  }
                ]
              },
              {
                "id": "7661144a-d364-4e83-a099-07699298aad6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88ff236f-f153-4190-84f8-2c50720d6469",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e6f3896-0055-43c1-85fc-aa3eda5af981"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17419a55-e369-42fa-b928-00d174d5f46a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "21750770-e60c-4127-a18c-291ebff6be7e"
                    }
                  }
                ]
              },
              {
                "id": "412eb643-c89b-448c-99b9-9d834c19eaa5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa54e33d-d1f5-4346-b2d7-f692bd6fa3c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a75fa38-f50a-4fae-a9a4-fa5166abc290"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d40a5e8-f88a-4b48-bfd5-0279c229e289",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f711b111-cb16-4111-b616-dee46342676a"
                    }
                  }
                ]
              },
              {
                "id": "de0b8505-226d-46a6-b65e-26a98a4b9a2d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d61d2be6-4b3b-452b-afa2-e04f0e730eba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43946dcb-f7d1-40a3-b89f-6645006f9e0c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e0cb813-3ea3-4883-b01c-e4a1deeeb1cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "73bc48d0-9197-46d4-9ed1-47733f190160"
                    }
                  }
                ]
              },
              {
                "id": "043f6067-d1b0-403f-aa8d-f04375867b5a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3257ff8-a048-4358-a1ee-6a6843bf5967",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b56a035d-37ba-4c83-be53-e474f3de92c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d998f67-3aea-4d45-91c3-85c71d1f0bfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "09ddc43a-8bb4-4fa1-b3c5-6744d737c68a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f6927aa1-fdb3-40c4-8a41-fee192f217d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "787c0289-43b8-4f9d-8973-cb2ef7e0feed"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6def28e0-f1e2-487c-9a9d-2fea7dddf429",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "874990f7-6f1d-4e63-8139-a53cacbc66cc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba61ae10-734b-490a-9884-57bca11a9db5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "52ef4fe2-b974-4388-99b1-9461ddef3bb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "092ce316-eaed-4b86-ada5-0fd56bae5b19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfa95942-a73f-443e-8755-f723a015beb2"
            }
          }
        ]
      },
      {
        "id": "6490e0c2-9260-4d77-bf25-d54bfca6e557",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d4e9b122-1177-4a1c-91fe-53f0380f5d92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f49d7ad0-1545-464c-9599-97c1784322d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7135f882-cdb0-4f9a-87e8-ee97615f9c39",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de84cfc-8ac0-4b4b-a1de-1c6d9302c9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a64588f-7a53-4fce-b49f-763bb428db30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3505726-4d54-44b5-8bef-34c1eb5f38da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "52bfc20b-bfea-4419-96c2-64dcdf1f5c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d7806d-89e5-4ce9-b841-0733b5c78413",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a2716c-2226-490c-b2b4-a8032a56cdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3259eccb-b033-4b71-bb4f-622527fbe1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ae420d-faab-4760-b013-f59d32d51d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd2f944-db55-494e-8a29-59712f8ae0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a07612e-7029-4936-b7f7-c34d2bb4026e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df653f5d-afce-4117-8fb9-359bcbf80962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1e5a5c-edb3-454f-932f-d9d0d241c84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76da631c-97ce-46e3-b976-8da87521fb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1b3f14-18e4-4f00-abbe-b81a090e7383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aea3e75-189c-4cae-9119-39c94747f776",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653bfb7b-a6a6-475b-9e64-1ce5cb91d82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a29ac63-2ab9-4e95-89d1-e5969a82cc28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18de8146-ea83-4865-bd21-69036da678a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74fc7f52-520a-4f19-a151-5994946cd0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76c156c-c617-427e-adfb-a0394997e7b1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01050932-8dea-4bba-915f-973fe7dbbdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfc4990-2f14-46a9-8bf2-0a2b6ab4fcf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35032031-9b0f-4250-a7ba-1f67e4045580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "738ddae8-196f-43ae-8153-992324f79b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e19bb6-2b8d-4592-9184-dbbb3aebcf77",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b51645-5761-4a2c-8dac-79af551eb488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2feef519-2306-42b6-ab9d-5e457a04f9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9352e2c6-2975-4281-b08a-0317113a67e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "937bdefd-0283-4fe5-9a4d-8526d2793d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f9984a-2636-4625-9726-f2726377fe78",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012217da-feb3-4f9b-b0da-a83c2d2e37f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72bab57-3963-4b7c-ae51-639a36baeb7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07813a45-245b-4b36-9998-a998c1a6ffa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "aec613f7-566c-44e9-bcdb-574a5096359b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef4af23-f1e0-4c12-a082-05764890038a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f755436c-efaf-476f-9d54-14609e81156b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a81047-f707-4f71-9391-38a448a93405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab492b8-4688-4b84-a51e-21ee4e3809f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5de130a8-253a-4144-8949-19898bdc05f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0867fc-3fcf-4039-8362-14328299a13f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca45958c-7202-4fc2-9a5d-c94a25c49e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e073392-a2b6-41fe-9119-5dcf8dbf8175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f035b8d-e231-4cb2-9bb2-8605bc121cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52527001-d088-4b51-a390-1de1138b2c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21aa82c-615d-4388-b790-89cd04a81bc8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f0f870-a2df-47ab-aabd-2488680cad6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75de9a06-1ba4-4a72-87ae-5cf1973f2b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c2acbc-7e46-4822-a3ea-a7c95343f7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4cf77b2-c0aa-4a4f-a823-04fde4f87a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dce98c-166d-4711-931c-4fb35bd66435",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d1556b-4df4-41b3-888e-4408efec419a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e51c6ed-8246-4e4d-a949-4a90241df763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067ee65f-5f83-406f-b92e-009a1e8f4cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5da80d-e62f-4932-9241-f88cd101935b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90926c7f-5082-4c4d-88f4-1f1220f8bd43",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76163e8-c39e-4ff6-8a0e-36c71b0a1358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7464ed24-5110-4595-9662-51c59bedc625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb99651-bf64-4b8c-a002-41180003008d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb394c9-bf4f-4834-ba26-518fc32b8b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4f4c25-ca4d-41c5-9ac8-4a0f321dbb36",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b57d7e-4f3b-43a1-a35e-2c63b23c42ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d47a77-8657-4c74-b925-95b800ea98f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d6ab68-caed-4fa0-b148-302275869601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97bdcb9c-5813-4b92-b613-a5d30e261058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f333bf7c-01bc-481f-8b15-7591fafb4dd3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb135eb-203d-4637-b1fc-3428cfc1e619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a374ed36-40f6-409d-bb64-6067628fba95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b008c825-1963-47cd-85e6-003771291e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2997fa83-6494-42ea-ade8-0ab7123fe1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d5f14f-bc7d-472b-89c2-36229560c207",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d12e8fe-146f-49a9-9aa9-72e445fc92ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa9c1d4-57b3-4649-a8b3-858c09105572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a917866-8dbe-4f04-a8d8-bb346ff06ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1978ca4-f234-4a39-b5ac-e147a4e99bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48674d5-0146-4f57-8bf8-dfb9a019f8a7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e7ad5f-7593-437c-9753-3ba962bc2c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb7bfea-a1be-4207-b1d3-c1180dded149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c766d8-09a2-4777-8f44-f381763a3bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e82ce4-ad19-441f-8b71-98fbf65b23c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d272934-1939-4452-86aa-7ef95d7e7bcb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8742a19-1100-49fa-81aa-6585085df55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f28246-aafd-4f9e-a5fe-62f0d35bec49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad9c0d9-b06c-4355-84fe-e26804c68844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "77f9e613-e2ad-46a9-b90a-9ceeaa5e4d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6525d046-ed19-4861-b28c-12845796eb96",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289e49b6-ca0e-425b-9675-cd63f3c999d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e4286a-6ada-449b-a02e-dd48b2d16b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dad4032-53b8-4f9f-8b58-ddefffb65947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf698f69-7b05-408d-bb83-f07be1ebcc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e3e3f9-feef-47fa-9e8f-e6662148a20a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48082cbe-fc5e-48f2-a236-38006e31aebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502b5c6f-1857-423e-b343-2defe26b24b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa7f038-47cc-4859-b50b-30f99185cdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b39d56a-69e5-4b22-96bb-00ef3b6c9199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf9ab84-3beb-4583-8f07-992f42dddcd4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0de1b3d-98da-4a56-9448-b5f5abb2efc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85feddfc-2458-40ea-b8c2-77b4edd623db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6ba10c-0db6-4dfa-997f-dbcd6564b6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58ca8f2e-46ec-4876-bd53-158f4695c44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1fc8bd-901b-4923-8284-8a504fa78f42",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4aefc39-530d-40a4-809d-08ffd370f0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cecf5a5-f2c0-4675-95d9-5346f51529a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79a64db-d490-4408-a031-d3c03cbc7b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30c6b8b3-0230-40f0-a641-ff5f82077a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ac8f04-d38e-4bb5-9829-524824bb85a7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38cb2e5-4fc7-489e-bec9-37989d153d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fea2f2-2bb2-4630-93ae-05dbfdbc4302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812073ab-6ea1-4b68-bb91-fe81f4131f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c98549c-554d-4b18-a917-b76f98b0fe47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5743665-eded-4564-a249-489cb04d4701",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884d4cb9-b975-417c-8864-41cdbbc00671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75d4bd2-38f2-4c1a-bbaf-dde2e801c2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ffa3a1-975f-4b6f-ab1c-25a036d4bcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8233406-99c2-42c9-b3cd-b30b753dd31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7049df79-6be6-47f6-b348-0c9e5d1d4167",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009f5c35-7cbf-46ba-9556-25802bed9593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212eac37-1f30-4ef2-84b1-03562ece28d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b224cae0-0604-4fbd-8952-18e961d5920a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "882ffa8e-35e7-4624-ad44-849a0dd76728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67be3db6-c632-4423-bd74-174234645820",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c37731-b8b0-48b3-8219-5e1b6fde38e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c54021-caf8-4c08-affd-f42e817b4d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c357bc9-dc37-47a2-a893-f66f26407fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8c2d1d-7e6b-4eae-8ade-02d4ebd68041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e07042-a421-4b66-9db4-805291ebe085",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369f6a7b-1bc8-48b3-a775-f8b9ae8546d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9a0326-b86a-4964-976d-e4dd4d427460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8711e59-715e-4b7d-91b2-634e15ed0d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a03669ae-ac35-4dfe-ac79-730fb55b7b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcb7de6-c20a-4c08-8fdd-8e1e3bf68205",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df880560-25cc-4f46-88a9-8dd455d1938c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4ac078-d39f-4143-beb4-c133289ed231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cfee14-6cd7-4c29-9d0a-94edf32cbf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb97fef-bf53-4644-835f-b287399abb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57cfb19-62d0-4919-a575-4e245e95a877",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a33a7a1-bc60-4293-abd5-500ca625048d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e15020c-c96d-43ac-a5e1-ccea19b53b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add78f70-531d-42a2-879e-03b18f8c4262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c9f23b-c667-42d9-93e8-cc56683e51c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f381126d-274a-487a-ba26-c19dd9662a1b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a017398f-ea42-4cb8-b61d-cb10747fd86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cceb047e-1699-4c63-9a7d-3bb18327743d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8816d5cf-3b65-42e3-a63c-123f0bb32de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38406d1c-9384-4ef4-b3c4-54cc02b95621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7303c91-2b74-42fd-bb93-50424b6eb5cd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46e06d0-69f0-4de0-b441-e6a88b4fd52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc5173b-7305-4f82-a132-9b75cb8a1d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ec33dc-d737-4a18-bc7e-019297edadbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1af1e2e6-e4fb-404a-a055-8b8b000d4c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6bd26b-f7b9-4524-80d9-35d1d1208663",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9fee96-e370-4384-b0cb-3511445fecc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bca85af-000e-45ed-91b7-82618d63b0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f359743f-d4a8-4fb8-b93d-d97b7aaa5730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fd230f-a9d2-4fed-9760-4dfaee12ac45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c13d33-e68e-49ed-aac8-a8b80007d09c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78e8238-25c9-4c1c-bd70-7ad5a2a534bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b02fd49-972a-4ee4-8c64-6b410fd56fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f21532-1ff4-43b8-baf3-66c82af3880f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ed6326-d2de-4d97-bffe-41db896bac2e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "499dcf99-0704-4709-b339-f238c536eb26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae335786-4b45-43a6-8322-afb2ec531fa3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3b2b18-c7a6-4a63-91e9-48e13c2f9f92",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b554b512-b5ad-4bfa-8c4d-62c713ad0c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a43a4be-0581-4965-ab37-86cf0a078693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0fbd7c3-6635-47fb-969d-762d78df1fb6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "855b4d4a-28aa-4367-8a7b-bfcec09ef785",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27da62d5-cb90-4839-83b6-38fcce74249f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1c84b3e-5a36-412a-b9a9-db9a308486fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f44e631-1f6a-46b1-ab41-43ab79321129"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06d89a75-0a41-4de1-ba3a-8a5a2a40f5c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "272b4966-fde8-40dc-8639-9f67877f1b1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31fa91e3-0721-4c2f-b7f4-d024c2de4571",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9af3df8-6812-4da0-8a53-bcf1542ab0f7"
            }
          }
        ]
      },
      {
        "id": "a416c2a4-1880-4f41-9dff-2a54e348048d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6f37081e-be4f-48c3-a28b-624929eab501",
            "name": "Negative Testing",
            "item": [
              {
                "id": "276e23b5-3296-4f86-bf88-1a54c91c03d3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e025ff0a-3742-4871-8c9b-c73a25e60ba5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514f047e-b4e4-4025-b7bf-1a94785e2124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f80ada7-3460-4bc7-a0c6-b444bc0b00fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe684c8-0132-481a-9c39-eac99af5f405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f51c47c4-1d81-4590-92a1-c65c5fc88360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdfdace-8c84-4069-b714-926957e1c6ef",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c743e8-33dd-4fa7-9dba-9050f2528c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197230ff-5dee-4638-afc9-a4657c1ee214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a01c57-7537-4203-8a17-7162698bf662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a27ced-729d-4f8e-9425-90d1643ea453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb4c685-3554-4365-a344-26226342f268",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543b915f-88d9-4e18-945c-eb534b797cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cd5e0c-d241-4b00-abaf-f7db4577b5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124f7245-5c7d-45d1-92f7-266d23bcac1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6fe688-71b5-44e1-ad1b-40e15830ac6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced78cbb-65ce-4823-8b7e-f8d0d4a549c3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfe126e-fc44-4f70-b909-c933320cf423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1768a828-2a06-4756-801e-9e00296611e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61e6988-dbf8-414d-8649-ce8562bff910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0afcb9-c1d1-4980-9b97-b43eb77895e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e72371-a34b-40e1-adcf-bf39d62d31c6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879339d9-c69b-4a2a-9d5b-5a26f62f31ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e9f7c1-c91b-4a78-90ec-7223a4dfa3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c8ea30-11cd-4a98-b8df-2f3ee5e28d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0271d730-8b28-4d3e-91df-d9069e21e99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de22e309-8a70-4228-bb3a-ee617f825312",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a17575-34d7-43eb-a104-d6139e260db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99718b26-4822-42cd-83fe-fb9b4ec807e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa34924e-0026-4daa-a1a8-9761c8c21582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ed43a1-30e9-465c-a031-a525b01ed89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaefecff-dfad-4ca4-aaa9-17554c869082",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91fbdc5-2f2e-4ac6-92a4-2e813102282e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d7654b-51e5-471e-97a6-b23a777d5bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f240997-8ca4-447c-9e00-85eb7f3bf2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "55e1b0da-4aac-46af-b274-ee725ce319a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db45937-b5e5-46d7-abd4-77b5f1079d21",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5baa413c-4c88-497e-9ef8-8bfdc9b0779b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76b2950-2a4f-49a4-bfd3-5261dc4b00d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0a67a7-5676-4fba-a958-4267572e0d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3af0dd57-934a-4483-a36b-5f68aa9ab726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8cbce5-29e0-4fa6-81a5-ab30b00f28ff",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1baca0-15b2-4982-bcaf-2f6efae62358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1154f95f-9eec-4780-a4f0-5251462ee01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bb09f3-e514-40fb-bc54-139db80cf58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53c37c39-1012-4ec3-9676-8cce37eb714f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450d082d-d98f-4fd2-9be3-2fade55a54f9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54066e4-26d3-4d06-8ef8-9b5c3326ce87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2af5ad-5bfc-4caa-ad3b-34a8b0a719b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9791a78-ca57-4247-adac-d0f2104453c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "448d9e03-64fa-4a9c-976f-9cb35a2cf9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ed63d5-6d6e-483a-8166-f7dbc110cfa6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bff32a1-9d57-47db-9a03-1cf142be180d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bad44cf-4a0c-4f8d-a97d-6f1784098f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32678a9-412c-4ce7-9861-74853cb9df3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "721718be-a58f-4d70-a564-dbc17f79cb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b875536-2fb7-4061-b2f1-24a2ca585b92",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99c9a10-2057-46ab-92ed-540925b40b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ffa3e0-6e52-4e78-a5bf-10f0d9b2283b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e159c0bd-b39f-4f55-949e-5007a144bd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "421e739c-ffab-4350-967a-147650c81928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7ab48f-ee93-4a2b-8482-8cd29bc52ac5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5d85a1-c9b7-4c3e-8be3-3891c0cdbebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bd21ce-6077-433d-afea-953c25455691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410ba5f1-fe27-47f7-a42f-73cf8eb621fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c7ce2f-f4d3-4412-8f79-ed5a9ab131fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a635b15-9409-43dc-b004-dea29f1b27ea",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2f76bf-b66f-4e02-94d4-f1af7ebe7738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3584fe-1b49-46f6-8edf-9df0d82a4d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49edb039-b349-429a-afae-951f0e506948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "26dca8c4-a758-4844-adcc-2f236190679d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7040c5-ebec-4f3b-a7b3-0c9f8d232764",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bfc84c-cd3c-4ea9-b227-c280ae0ca986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33271a4-39b1-42d0-9606-cbf86c24ab36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bd381f-70e1-42de-a7b8-2451acf51285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "77f780cf-5d6c-4313-bb86-61c3e1e8ea04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da550661-7efd-4ea8-86c7-f8da5bbaae54",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db329fc5-1b3d-428e-bb2e-9ce9d6ee49f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bec9139-29bf-4769-9d6b-5e8bccae8313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a290ece7-3b6b-4db5-ae72-1819b8c44a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6ece9c-4429-4dc0-94b9-0b53a061793b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0123c9f4-6c4b-4813-a381-0190281fb7e1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0322f2cd-b205-420b-8f28-a43e4d09333b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10858a3e-bd03-4979-a568-4c3c7f8e2030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bf1f65-5b0e-4d7a-86a2-d4b7a19bc4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d48d7a28-642b-4f3c-adf5-a5f41b088c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cb4a22-e18e-4c5b-9c2b-24cca7566ee0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7f8cf3-43de-4810-9801-768d32fd32f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8312e5fb-8939-4b55-b777-1b49722876e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64e5d2e-5eb7-4e91-a598-d0aad246b732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a19456cc-727e-400d-8051-895292df3191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43a2777-cb04-45f8-b08a-1417db3ef487",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5362ab60-b5f7-483a-a8bc-27779066a483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fa7f84-d98d-4a53-a446-55d2f0a1b6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0048378c-c0aa-4c9f-9663-9d3f202678db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e24e5cb-76c9-4516-b5f3-5079a6ade6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3ffd83-32ab-419c-94fe-5fe98e2d2aaa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb689d79-0920-41af-8b56-f6389cf6b5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e262ca9-9a24-4f73-9d98-81cd21a84008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcd0266-6b30-4a01-bda3-1cce20c05c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30bc3132-dcc9-4143-aea7-29ee871c31df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da20f3ef-687d-4050-bf08-722c30601d44",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da292039-8b04-415f-bc94-e8bc004fbedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e567507-cc35-4e76-a64e-f10603c1fb8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ed2971-99c5-4eaa-b6b2-0155383d5a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c552c31b-b272-45fb-ba5e-824a9c76092f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a54395-03bd-431c-a57e-4b87b0857872",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ad967b-3c03-4ff5-a8e3-97b4e88aca05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4628d1e-9e46-4a32-a324-54199fa9b012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03d6366-182a-488c-a2c9-65f2c551cf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6904b65-23fa-4b73-a4cd-257e993c57b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035c05ab-4c5d-4c75-9772-fdd6417c479c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975d71d6-3451-44ae-a1ed-6bc3fad6f7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ac24ef-a263-4a6d-9449-42a76403d333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb1fb58-80b9-44a9-bf56-7c8058b46e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "846b047a-9ca5-4f83-9dec-6be7ec58fc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0a562a-6f1a-43ca-8e23-35096882f23f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7044dc-a349-46a1-8119-a36333333a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121e1a04-7c56-4c96-b8c6-fd305aef79e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34323e00-18e1-4518-93de-384ad7c513e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8622a6d9-6ce5-442f-bc60-c47c7de22ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859729bf-ebba-4391-a141-188bc2bdbbbe",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c75663-4e77-413e-98d3-c14f1d7c5ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a37813-f31c-42df-a4b0-cb87edf26486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a68c35-cc0c-4e79-9fdf-c8d255562857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3582cf-752d-4575-ae11-65d5624a44aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586248ea-281b-4e6e-ab89-46d46216c291",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b8c112-b13e-49a7-b4d9-45d33229802d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7b8c09-3272-4f72-baea-7dd923c5589b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e8b3ce-876e-451b-bd74-c077e1146771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e38b30f4-8312-45ae-85db-2584343a4333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf10fad-1de3-4fd1-bb47-2b204f5b9e81",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3120c5-cdaa-464a-976f-a41ecba737c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eda0e88-dd3f-41fd-8613-ef3ac1b8f7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360fc9c6-d54b-433a-8407-d28f18846831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6338aad0-6dea-41e0-a949-cc0c2d3bcb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a82e39-f5cb-423c-9739-911d9401def9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6b37bb-5df4-4ded-9e8a-ce4cebed07ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71e5818-7907-46a8-a614-04ba641bb2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffff1d68-d4a0-4c42-8b5d-fd524042f73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9eb616-ea17-4a01-9363-7522edd8228a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda3fc70-d201-423e-bf88-b66903e8b3d7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db85ec6-1e9e-4615-bc8e-d652897b4a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9b45fe-ea7c-44df-81b6-333f351249a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806033cd-bd78-48f1-9168-3c00986485f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d89f150-8c5e-44a7-a189-13fcba8d880c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d4074c-68f7-4e47-82a9-e49f066059ae",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d735fe-1b07-4af4-b554-8897235fa5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77a18ad-89e1-4e2f-ac9e-55315d207a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62a054a-31db-47ae-90b6-2971bb0bcede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a49f72-ad76-4702-aded-fb2e3e649c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4edfcc8-777d-4b0c-ae7a-b13472032191",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d201483-fe91-49ed-89ec-6d7c231be3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64ac202-30c6-4334-8060-87204a94a658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51faf420-ef3b-4475-80b7-9ea3b0db12f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "918306f2-78aa-4001-94b4-da167fa7bb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a043f5f-c53b-4ec2-99ed-678a4099f9c0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5baf81e-8f3f-4b38-ab39-17a311373f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e255149c-7dc0-451f-b37f-357a198856f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0af0afa-787a-40b9-b7aa-15dfb390d689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3890c3-6d52-43ac-95a8-62ab3b1f48e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5689d94b-767c-4972-8edb-a4b386f11e10",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66afe21-9d4a-4a68-9bf5-0ee5a7088b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1e0a9a-0e21-48f4-84af-bd34a5c15bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad4343d-df08-4a1c-ab65-77bce564e737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11b196de-cecb-41ae-ad30-272b85f9096d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445a8d00-83a0-48cb-ae57-aa49cc7538da",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639c32e5-25d3-4ed0-b861-904bba31c708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf17ca0-14ed-4fd0-afbd-5895a4058714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4e235e-2049-4131-80ba-4fdf83ac7b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d75b61-04fb-4726-8316-f0c02627b6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4088956c-979f-4bdb-93e3-9c3cab7e1bb1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870ec006-bf1a-49b4-9087-40b69af4bdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b120b427-0c16-4b75-bab6-6f1332e4f054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81997803-781b-41d7-911e-6ca083bc7b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f07976-892d-4460-b555-914987aeaba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c027eeda-0cd3-4f36-ac3b-00d7c1a9455a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb40e4ef-cd31-4b06-bb1a-dd5740db02bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb571ee-fea2-4407-911e-6bc9f9aec838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552075dd-3ea6-465e-830b-c07dc94a527d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de2eb608-09a1-4b7a-a8a3-e3a83815196d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb708cd-7b76-4d89-bf72-71674d9efdc0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ea0716-5a68-4032-95e4-e247e462388c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcfe3f4-2774-47b5-bf71-b1ebd979bed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a5d481-debd-4f8e-afc9-4fdfd6bfe431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbebd461-9705-4f71-a3fe-5963973d4bbb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5960720c-7998-48cd-9bc1-8a5841a54a90",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68176e9d-45c3-424d-b812-08843e64df4a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7fbe37-93b1-4b2d-a184-67a94019b967",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d4dc6c58-5151-49ec-a558-451b0460d4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23719f4c-927c-4ba6-8fe0-025c27226aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d30aefd0-f7d2-46d9-84c1-0cb06a022cfb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fb04e0f-0b51-49dd-9cf1-cde793c69140",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6d85dff-d9c0-4042-9c4d-c22681898cdb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdccacee-76a5-4f36-b7c2-2eb368471fe0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d337f20-52c8-4d59-b61e-46c790937dd6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b68fac5d-dc2b-4f37-91ce-17dc91ed4971",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8a5775cd-4e30-4bf4-b2f5-f70f072701ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "992a522d-39cc-4d3f-9039-bd98dbbe7507",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f884124-6008-45aa-aae5-2d8551f3588b"
            }
          }
        ]
      },
      {
        "id": "b91673d6-d80d-4035-bf55-f8976d3671f0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8df99161-9ac6-4150-8103-611acbe2ce3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f0e3b94-7077-4749-9ce7-0888a815922b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c7319714-279d-45ad-81a4-09eb153e0e5c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7f12a0-54fa-42d4-8f6d-ad3d80659d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1792ca5-63a8-4a0a-a415-09897c06d636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51624464-b11f-4a62-9d8f-543e1ae3f4ea",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bc3efd-cca0-4419-830b-b3721e386fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef9f00e-fa5f-423a-856c-1523a803f3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02ea519-517a-4a64-b10a-9438e0392310",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa5c14d-bbb0-4463-9721-454022f3c042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fd7612-0f11-4820-8de1-8b3028fec954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39837649-18a0-435a-9dee-ab02247ce77a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969a06b3-ca32-4313-8f5f-ae8bd1618d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6fa3cd-1911-4ba5-8248-a3206d7710a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a73bcd-a604-4280-9b82-ecc48c385ed1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271ad19e-3d9e-47d6-b8cb-61f621543781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3297515-cf7b-47e9-9d55-f4671cac22b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a7cb5a-8d5f-45b3-86b2-3ad3ce535964",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52bba67-57e2-4898-95f0-fa6e8606ca35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9133a65-5866-413f-9197-b828bffdf3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dffc70-98c1-44a2-ac2f-2b9184740ee4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7dc51a-8a45-4ad6-947b-0f3ceb639680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474ed40c-7f49-405a-9895-dd49c9c8a87e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b336401b-c1c5-426e-80f0-e53af6ad0ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa9e766-d123-4a60-bb7d-ac1f47ea414f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0ad1e5-0adb-4409-b34f-8e7b079929f5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe9ed57-137d-43a6-8ae6-f6dae7a1c31c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b6b0d08-7037-4a17-aa94-291253876612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755c0cd4-ba96-4c08-a0b1-85cf64616889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3af8c3-cb87-4c72-a860-3f25ec5bc25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9ed155-fcc8-410a-a2a6-3c9898bdfc59",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50a4189-ae55-4f74-9142-2000510096f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83018cb4-fac5-4b9b-bda0-0ec75f823762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4045b646-45e6-4296-8f07-41fb76089f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6619e74c-025d-4769-8ad8-e8b194e97938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f95f3e-af38-44c0-9590-22547ca8822a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bf3bd7-4817-4f64-aa28-4c0c81ea77e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3c7a69f-d584-481c-b938-137f343c226d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0706fa0-aa41-48aa-8ece-2542f67b59f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88df37e5-ab6f-4353-bdff-680855170161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429a912b-ec39-4b1e-85f4-591593adccb5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb10aa67-d975-4aee-9661-4dae9531b01e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a395e828-fb00-476d-a4bc-df38f58a9c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff228d2-7159-43bb-af61-4964d9b90c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5b3a7c-bdaf-44d0-bf82-4c0300893692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719a1240-7401-491d-99c1-18864a37f71c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf527c41-bc4d-44f6-bfca-944bb3fd326f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384d1bec-42af-4fb5-9394-dfa778223577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56223d8b-08d5-4ef0-b9bb-b72e272b69e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cb25d2-63e6-4926-95c3-c7ae6c3dc1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a0727d-1f8c-4c99-a1f4-1cb530f4ca46",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6195995-3b6d-40d9-944c-f00622f7d98c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7c547e0-de20-4348-8092-feeeb32e1551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acd6950-5ab9-40e4-9387-8425ca50ae3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d41b66-701b-4e82-8d91-16095e34707b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ec9518-bc80-4b12-8f2d-7e8744e7a030",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3875537a-9b88-45f8-a6ff-304112b72cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "291e633e-70ca-4ba6-bb7c-fea02aecdffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41e5ef0-35c2-4678-ac0c-54e73b491837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dcfbe0-359b-4604-b98c-04f484e0e608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1074b7-ac3f-4bbd-afcf-a90144ad98aa",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2346c2fd-d242-4ec3-a0e9-b741d2c98364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d015c7-73b7-4607-9597-a60478c52052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8140e76f-1cd5-44f9-9fbf-384f4cba4575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb4433f-533e-4283-a36d-edc734705444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbb339c-6dec-453e-aff2-572163a39eed",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03390813-b3c9-4846-bf7e-5f32ec08384f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95db9e9b-a4d0-469a-a84d-eaff35fa3c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79896727-168b-44f0-ab5a-947cd832d1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8135e4a-2be4-4d2c-98ae-3c6515ad39a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81132332-82d7-4852-8472-40b4047cd6a1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367280f3-cfac-4216-98e1-500fe4af5e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3aea4e3-9863-4082-a42c-13087a66ee33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d14ba72-07dd-4223-a8ba-12a3c4bad9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d20030-9868-47fa-91e2-8ed6791242cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cbc763-2458-4dd8-8373-bbfcd7e5dcb9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190ba1df-7c31-4513-b4f6-d5852bde26c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66fb979-9962-468e-8be6-604cb54751ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb05002f-b20c-4df4-8086-16fcc0d06358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a828404c-fc85-4356-ad0d-254a4c145793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdb02ff-ecd5-4a45-9a9a-53f4aa57138c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4782d7-e1ae-4747-a819-361e6b4170ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b176a2-2dc7-4467-b15f-e14a28fcca5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "640db8e9-e9e4-4885-ba5f-964224905460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87253a96-d5f3-4f97-a75c-9ad2090ceb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6112d785-aa09-415e-b68e-431d202ebe2a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b78dfe1-b341-4bd2-b6cb-90ea882eb09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0764e3-cba6-4b32-987f-14b1d6c58bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6cecfc-7f72-4e03-9dbd-c8290b2f8ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babfbd59-3bad-4b05-b1bb-79bfff996e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1a142f-1e75-4973-8d7b-3a774bf00136",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9912e561-1890-46c7-b9f3-ec4fc4baeea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ad8686-1caf-4bbd-819e-35483b7ed176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a0a5f8-bcc3-4819-b3e5-108063a25a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82774e5-a6dd-4816-a6f2-d67c3d91cd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5246d66d-0348-4caa-acce-3738f5068173",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fc5faa-ba63-4d74-9fb0-aced9aa2bdbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c64d7d1-6c81-4a7b-b4e2-1ddacdd9a8b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d889ff0b-9cfa-4b48-aaf8-a558857f6ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b6b47f-add4-4d46-b7a5-97956941aa21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9dd7b1-95d5-4051-bad2-4d24e62df2a2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce2e467-7b8f-4324-9cc1-d47cc14f191c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5fc00f-34d4-492d-b4db-2e4582bd1958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adb2674-bdb7-4ef6-b534-f2063f55ce7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e9d8388-f5ae-44df-b2de-b0d579e3f076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea59d788-67f5-4c92-9217-322b92b47390",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c217d9c4-1165-4bc4-83af-f5f99c88d5ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6204a60b-9a25-46e4-a5f3-966d2b6239af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87da1c2c-9194-434c-870e-ee6e64876cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f1709f-2839-4be4-9c77-282d5c0a90ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e271cd-f909-4eeb-b66a-c3bd8d75b961",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46fa804-83bf-4be4-b38c-300cade5ab49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "482d937e-c9b5-4913-9427-1ddb609e1910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8976db3-f611-4ab5-9467-2e081b9a71a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d43bccf-e930-451c-9e6b-57f870ea2aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac0bdb0-5661-425c-8e1f-98a0c3e42c50",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f575ed-2d6c-44fa-a19a-97397407a546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48f01cb7-7a35-4f3a-83c0-22c8abac1b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "247426e7-94cd-4e62-8615-2c132962c524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfafc25-0870-45cd-a53a-e6764e5b073d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffad2714-59cd-47b1-bafb-a7cd1e545b20",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f901c1fa-7403-44a2-b6d8-4f360b58da06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c51fa589-3f68-4217-92e2-c3b4a55c5a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e060f6-3842-4512-a86b-51cdf615bd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf0ee61-c13e-42b1-a0c9-7cac6d56d453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c66dc31-4e2e-436a-ae94-fe40b455cfb9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec9ec06-b4e0-45fb-aed8-442b78c478c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78540a1-ef16-4a6e-a319-d4f84fd7295c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d2de09-8122-4cac-bfb1-b8613e528ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35198ab-3149-4794-a1c2-2fa85aa556e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1052569-7e81-4772-819d-ce9a6db351f0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b5e64d-e8b7-405c-afbe-46e1d65aebf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dbe43ac-2da6-4a3e-bdb7-7cd86e3e61e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5ea5c5-8996-40dc-aa61-b72e6f724568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39f8b25-7eee-454e-a6e2-68dd97e6101b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371a280e-29fd-4390-9f22-f5831a796fb0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc40343-0d3b-45b1-8ee3-c11c273b76c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55a1c7cc-082e-4a60-a17c-ae65cd455fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de7d130-c502-4301-98a9-2cca1dd4f899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a14bf3-b1e3-42c4-8b0d-4b28e3dc80e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb03e13-a1f7-4f3a-940c-d0c1032aa6ea",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd98502-2096-4b5f-a090-f64e48e770d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "353b9dc6-c624-4228-b4e1-9def7c1add24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9813bc26-fc3b-48f2-8ae3-a789143eeece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db8a572-5d22-490f-976b-3e4a045929e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9821d4-d731-45b7-bf86-ffea7da4d71e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535e1abc-04d0-4366-9e2f-8a815a683724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f0034b1-f66d-48ac-92ba-99ab9349b566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f67c0c-995c-4940-8152-8b0127c586a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab15bad4-70e7-43d2-9ceb-4007ce11dda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97502ed3-7488-48b8-a905-1fe1515e31d0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4020cc08-a9fd-495b-a989-04d5d91b5a09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f99511d5-a3e1-432c-8013-457e20df9a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d3d1ca-afa4-48c1-a2e5-853a75e86558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ded7e6-af23-47b4-a9bb-5be9c88bed36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac0295c-7931-4b88-9492-cf7fad794705",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969c0d04-3b81-4266-b909-8cf211f9092c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c5ed52f-033e-49ab-9cbd-1312687ae66a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6273b2e9-29ce-45dd-a8af-7f8349f0ee79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51cf7667-af1a-4972-9340-afe668175571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b409b20-1bbc-4d63-a4ee-033cff6c5157",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718c9cde-0e8a-43f0-9521-15d2a1181eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6cecc8-9d31-435b-b6ab-ca127fa16ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bf71ed-a9db-4b75-9516-700bd8462b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1fa93b-9b64-4f20-a368-f14b69de4f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c63bb54-73ac-495b-9cd1-77ed109607e8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb22f4f-0b8e-44bb-9c40-d0b5053f4189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c5a0af-067c-4624-bbaa-9b23bf2ad12d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bfff5e-47a9-4448-af6c-c5052c71d7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0371c220-eba1-47bb-8604-1297043c53df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e883b1-adda-45f9-9a78-d54a199cd8e7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0d5202-5f39-41f4-bf6e-5d8ba006c9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3aedd7-3c26-41e2-8cb9-63833160cdf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69b58f8-0f85-4628-ae7f-785dfd07a7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8312613e-cc55-4e43-84bf-9d28c69ca1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31076f5b-46b6-4716-b2c5-a20d1e178c3e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d561c52a-666d-493c-81a4-2c55ed486db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252277e7-2bea-4702-a805-97c82f00cfc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2836e22-c36e-4c25-a9ea-22b842bc1155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f707794e-f2fc-4d27-bb77-4d2becf96789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e49d7d7-ff35-44fb-b576-993c9d92f46d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf281e0-139d-4e74-8b7c-dba6e1118c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea127fa4-b526-464e-ac12-2586ec23df8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a786a28-be3a-4c61-94f3-6869dd156c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71c8774-32cf-4904-9844-f0080fecb9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6602d7c6-45b6-42a9-9311-ee53347a08b7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af97f2b5-f8b8-49c2-86b6-38ab942faf63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b180d54e-425f-4fb6-97e5-ae9f4b118ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6acbee-4df4-4dbb-8967-0b31bbe6553b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6adb88-2f6c-46e0-8485-f647a045c8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37df7592-94e2-41f6-abd2-df073951553a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005ebbed-d03f-43b3-b7df-16e3c81797b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d450748d-df41-4ace-993b-7d3d3215f5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084bba60-673d-4844-be75-f2526dc37610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9876216-ed8a-4738-b121-35d91a548d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8b32e7-f83d-497f-834c-36e0e19cf3d5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d60206c-20c3-495f-b19d-4654424485fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a0a91d-0d27-4ec3-a17b-90c7de85c882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f567dc-b216-4ef6-92eb-7860519dff1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0457e8e3-572d-47f7-9a90-e071f01545a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51a3376-a75c-4bb4-a6d4-0589aea3bae6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e14f90-310d-4834-83c3-eadecfad15aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24da68a0-1376-4465-b09c-a85f115f4fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835510f0-28b2-475e-ab2f-e276eecb2cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a636dc06-e58b-4f53-8f68-51ba1013268e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6524ea4-d2c2-42e0-985a-f3b590f841b1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f5db4b-a835-4ec7-a3cf-40673a99a148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1892bb-3e4c-492c-a584-3d73f95b69d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1d9f35-4d9b-441d-b968-4b0250b71fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5040468e-6a6d-4883-a217-aca7845f1a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2b7ecf-5ad7-4971-81c9-d6bd7b2a8b86",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9892acb-860e-41f1-a4f8-2c9bf13b9036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e24e9c6-1970-42c9-83a3-3ba699318834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedd9eaf-c1e6-4530-ac43-18314c6ab992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a37ff45-7d14-4d48-87c5-4eb4e1864a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff446ad-bc4d-4e9b-a554-09b1e42082e1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1af560d-fb0d-4f67-8588-cbf5e2f21229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b621d798-945d-4b1e-832c-217bda29fc62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8dbfb7-3317-4c92-a64b-25492cb5330d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddc05f9-8333-4c00-bea4-7c375999a69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3698757a-36bf-4e23-8a39-9909e91e1e3c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13c2542-373e-4091-a898-1faadf7f8716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729d3f97-9373-4bee-ad5c-d128e038a29a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d43b1de-a3cc-4774-b4cb-d7458dd88e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3bed50b-f3ac-4519-be59-18ca0e21479e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c015a1f4-c481-412f-96d4-6d3ae593f49d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8afdfa-ca7f-4fb2-a6c1-a0ed320287f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e6ef51-8443-4e9f-bf73-b523a5e7feee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac38756-847c-4c0c-9ac3-77986a626a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147acf1e-ce16-46ee-9547-93aad640c960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bafd4b-2953-4ff6-ab1a-9966fe8a2742",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6cb69f-2418-4ba5-a2bf-9c343bea55a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af73e0f7-ea97-4944-b61f-4ee52978daf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf6920f-03e9-4bcb-aa7d-b63aa093b05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43128c10-effb-41bb-9683-f49e6f11b92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492b6ea7-5029-4cac-a43f-4731c6fe3da9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f244e460-ae22-484c-9787-14b87174429b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5c2af4f-c3b4-43bd-bbb9-786aa8a91540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c167ce-7b21-4d38-8c41-068ecdaf1917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc1f509-026e-42e6-a6d8-697150d431b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938bd5b3-5da7-4658-9360-1b284d462b42",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f8c656-4cee-4164-9231-e63cf22151a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb34ace-3732-484c-ad3d-959e1c5bfd4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62ed88f-824b-47a8-a481-08c63de20c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831d21e7-ecfb-4fa0-bf9c-3d7a45bf1a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265b16cb-f361-44af-8e24-63effe6ba4e8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c5ba39-3d8e-4417-84ec-7e109ea5c31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4a57d0-4584-4d65-a326-bb650d843382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87350711-1974-4a15-8b32-971cb7056bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e7d14c-2539-4dec-8598-3bb5c8c13f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55e8faf-19dd-4e77-913a-5ab50a443f5e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29056b72-e1f3-4940-9dfa-c7aad160d49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9d3556-2ea5-4ed4-b8a9-d6f216847205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eca1ff0-5f2a-4f2e-9eca-be2c17ef266e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41386e08-41ee-4b7b-94cd-70c20c197de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87378a09-33c5-42ec-b5db-0c0c041f5d8c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1d3188-70e2-4a11-9264-b842f5e37b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8456b5b-a853-4e26-9358-df0a99c51624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f81a5d8-ab2d-4633-8657-35df2557f59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d24047-49c7-4d83-a9ca-ed859a2f67f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c555fed4-ad37-42ae-9186-9d9e05aaf44c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f24aa8-346b-45ff-ba72-afa766428d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d37aa17-ad85-4949-bda1-b23f06ec9716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6f9be6-0d6c-4f4d-837a-6ba15bf4a554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe816759-f5db-4ef2-bba3-98c513187aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e6cef1-9edd-4256-9508-3e48bc167c67",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a375be25-c2d6-416b-97b1-2f7383b30dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b58d1f-8101-48e5-a1d1-7aea816fb437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc4f135-0d6a-4990-987d-87b2102f1045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d008aa0e-cb98-49a9-88bb-a859d8af94be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd3e530-2400-43d6-ba69-6b4b83f0d674",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238ebafa-9f94-420d-b610-19b7f1089a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f7f130-1f09-40d2-90e4-e8e252be46fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d0cc7e-368f-4311-878f-66003be350bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce0c323-b66b-4aff-9ce7-7a8103eaeec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8517a5-0b19-48e9-af6d-d8519d05d432",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd2627e-4c16-42c8-95d5-dd2007607443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41212b5d-aeef-4a20-980a-1378cb927c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4b29c9-00f3-47d8-a1e0-81722f18c01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a22454-6080-445c-b9b1-b029b4d0c566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a95738f-76e8-40bf-b315-76c6592e3038",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43583faa-e386-4b00-b6c4-f2f43eb930be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de42c6b-efdf-417c-a988-033201faa639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b97056-783e-479a-8147-5cade53a0d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ba38b5-efb5-41b8-8b94-0c598a0eb442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57abfb19-a8b3-470a-8e2f-2d6a9e868b81",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74747e8c-7000-4ee0-ae35-a4d814d82b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fdaa95-5a37-43c8-8c7b-50e0ae96a9ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c92dec2-6a8a-479c-a248-d617d958411f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061206aa-ed0e-437d-8870-d50560dd7c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2987dc-6e9b-4d56-bfcc-44c790a4a0f4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc10613f-ef07-46d4-ac07-48d252ccb1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0002f9bd-09f3-429c-b0e8-24018ee6c401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "712644aa-e316-4d3e-a0ac-5de74e974c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766494bc-a979-46e5-9961-59da6a5eb386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d137cce-181e-4fe1-b452-1237436b2840",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e06b1b-9ad3-4ded-8a5c-848b107bf5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8baf433-569d-49f0-918b-69207c2e76f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aba43a6-0924-47a9-9ca8-b51a0a1b70df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb4e222-5d0e-4e2f-90cd-f8d371eb9bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb39b1a-9d42-489b-ae01-5adbf4265fb2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef4a012-e330-41b0-94c2-98afa664fc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83eeb3b3-170e-45ec-a1f3-273ad11b7b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3347ebe5-17f7-4033-80f7-c7647f0ec108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811981cf-2c00-48da-b87b-ea581d813a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906c9baa-8075-46da-9802-ac302213519e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188421c5-7ba8-4206-b860-9af17e01f0f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ca29c2-8dce-46f9-81fd-9bb2b552d924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baed87ad-e2e0-407d-b4ca-8ff58f0e34ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1182b51-455d-4b4c-98e2-b1b07e5003bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be57b3fc-c12e-4142-8054-98b693c33976",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef59246f-3731-44a5-8014-67d7fcfeea27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef7312a7-92b8-4561-87cf-2666f8b45459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cbb1b4-8fbd-4013-b6ac-c2cef6c83589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55311d67-0800-4459-8405-001a66a9a1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cf2873-bb91-4c57-8255-9b4b45fc47bd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a21ebd-cfb8-460e-b527-6411d6266e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e33b0f3-e349-4e97-8949-049cd104a2cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b511eb-24eb-4312-b208-cc9d4ddb1da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681b4dd9-5c8d-4586-941e-93990c215fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30307240-f186-40b4-b178-f27e911a264f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12291d9-16e2-4857-9fd5-c2006bfb8e6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "734af2ca-f54a-463d-83df-752a61d0cfe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ac9ae2-1e85-4afe-86d0-d3a870b352ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b67c44-e9ea-4e72-8431-3be8e3ae6b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5279dfc1-4d97-46f7-8e28-95f1b377bf78",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffe88d6-7f1b-48e2-a530-c23a5d5f9427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0f4f81-8d05-459d-945b-6dcea8e25b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10250dba-668b-4f94-8967-ec913aa913fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6caad0-6173-4136-b502-0e49a3e2c31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa3c023-735a-4319-b9fb-5c9221778c71",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e77ee04-476e-46f7-a3d5-501b26583818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f481e1bb-2121-44ac-8a38-6f78bb196cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0641741-77a2-4ddd-b219-9765783af71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786765b1-87b6-4820-ae08-fe1fb19e6d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c85bd4-8507-4283-a09d-4e0b548f035c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a60c551-0d62-4a30-a01d-812ba05bad2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c080166-f008-4392-a33b-98e8f46c9ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a329aa6f-965b-4c28-911a-0fc5cf9ebd9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e53f04-ca48-49f7-8d4f-f8666d7b1239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9705ab0-2796-43b7-9e0d-5afead6a51d1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6fc8cb-b417-47c8-9b51-12605a9abfc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f635d0ed-4405-4924-a1c8-1d4741bc6705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0e6bd2-4eb9-44f6-b545-12408a8bd930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4228e7f2-8762-4295-b56f-426a43438b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfe08f1-b7c5-4c10-ba6d-5f5d7a6cbee9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2a1473-019c-48c5-8a8d-12ae1167320a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4eae77-8e8b-4ae2-a414-26c4307546f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d5a9c6-1089-4c58-8f81-89d934b8793e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f3d585-a07d-48aa-854d-4f557f1a3756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a167fc-e286-4840-adf1-d37ccd32ecf7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6c6462-1544-4ad0-9908-f8c26cc6bf29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b773e88a-8e3d-42d0-8f70-f47804706ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaddeaea-6f81-4790-a69b-94638540e394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f5bd74-2ef1-4e4f-8a23-67114138c7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c073f5a-9f05-49dc-a240-9f35415388d0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98437b93-d2e1-41ce-a4da-dcc8b8afa923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00af7467-6632-4917-b1cc-5182a5daf4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04fbccb-f9a1-4856-b2bf-fd4240096799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60023d13-5e59-42b4-b737-f76b0e838ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f967e10-260d-4fff-9036-04c19be828fc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2ee1a6-5580-4598-8b0c-ade20ef8f7cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "321a39d5-c968-49b9-9f6d-e62b7c72625e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97421581-bfdf-4cc1-a489-3adfcb1e751c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d641a78-c1da-4403-ba5d-0bedb21bda30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4c093b-2e1e-45c4-a3a2-f642a491b9a6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d45f41d-6f11-4ff3-97eb-68a2ea09d0d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9192b92d-b52e-4fc9-a203-d6ddbd16d821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58028c8-9954-469b-bbf6-f9ca938341f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b664f0a-d2c7-4685-abd6-ab63d2a1435b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b68510-50d7-4d82-b70f-a1c9e385c71d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcf1ea8-47f1-47e0-9609-20372a745980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b7c6cb9-3391-4b05-96e8-9f385cb67306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0a5bd6-1eb0-474a-a5e7-251fcf85a5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703aed4d-3ceb-4ae6-a61b-9327161b2952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28b052b-03e1-417b-8d45-3585e3be4a9d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1db04ca-ec8f-48cc-aeae-ddd672bed450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07a5b068-9f90-4f88-bf16-9d222545d497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49e7260-fb26-40c8-91be-26edbf8b614c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193f941f-a2a1-432a-af07-1b9ef679a187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ceb24ac-abcd-4784-88fb-ab2ccb49a5e3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d462369a-d0b5-4bda-bce1-1b17da37e39a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee624fa6-7620-46e0-af0f-3e12a0e778e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e54c5e-044c-4c1a-8d15-f9faf24d2cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3a0d20-cfb0-4052-a6db-85b340d8401a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56044c02-b4b1-4187-ba16-cd8ed0d5b105",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd8fe74-3db9-402a-be9a-d4459e412406",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0540727a-40ab-4fc8-a82a-ef63bd49d218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894ede7c-9bfe-4d5f-860c-199d02ed63d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc0f923c-e58a-459c-9193-581f41cbd8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c05a31-139a-4c9c-bd90-befbd078a7f8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc7b221-d0eb-4f5a-a663-80236f3525af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f650497b-1f0e-4a71-af6f-bcc719e061bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba837355-c4c9-409d-9699-d80b2205f589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cab5ba0-444e-4d53-86bd-6fa32d27fad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2034d7a-6510-43be-a27b-44bcbbd42899",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081586d5-1954-42fb-8455-5479d09fb303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "983d19fa-6726-4081-a0b7-333086f72039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e386665-3ec4-425b-9eeb-ad69f6debdd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747d7031-9cd3-4c17-9f8a-2cd6c29d057e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c12d40-8531-4213-b090-f84730afccda",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7297f194-1090-4c76-afc1-e2a9c53ac0e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ddb726-a6a5-41c6-adb1-cedf806b1e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35901c7-7527-4131-be94-6fa1600c0f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d810c2-ec27-4d7c-9e4e-f4199a7f2332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a534e89a-18f5-4775-b2c4-5ed4d867a735",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1088d467-4e39-49f9-9283-a40b66970562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f36022e7-6ebd-4e1c-82e9-5c0979cda4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcb08ad-51ae-4466-87e9-63268cbe9b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541e467b-3977-433e-ae53-649beb2f982d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd8c91f-3cce-4a82-9518-366cbfe803ff",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f93580e-0ea5-4a94-8aa9-a200fdf17481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac50b3fe-6f3d-461d-ba49-955e29720042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3974785-d9b2-4cc1-bfa4-da8c94e6cd23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eac8d07-5725-4b9d-baa4-6d3e1fd8f453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3445f3-b8b9-4911-8291-d875add36468",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f063483b-43ec-4842-aa54-72d38859e522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67880a71-b735-4576-b59a-66434d86f875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717ded94-ebd0-49b3-8c71-b2cf2a6420dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4053c04f-68ad-47a3-8f9d-3334b53c26c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e16d8d8-0d7b-4168-916a-df4bed71b352",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62f779e-b01b-4926-a1da-d697cd3bc89b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "669e443d-7e33-4f23-8afb-076a9226185e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a12025-ae78-41e9-8f9b-8c0a8e794264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf216d0-d5bb-4ebf-ad1b-c491fd8ce36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a3042c-bc04-4a7a-b6cc-4bd981c5366c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8894c8f6-ee32-4cc1-b824-e1e8511db26e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d98d5461-fbef-4661-bd9a-542f83f6b851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8521c9fe-ad4b-4343-8c07-0dfe0ee764da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bcfd6a-5f55-4c57-81a2-677c4df0b687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c60a3dc-6f8b-4629-b5ee-80fdc3be7757",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f42d84-57b6-4444-8e3f-60f005ae5975",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b77fcca5-d4c2-45d5-a303-d20550b4e1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0516ed-11cb-4447-9fd6-24837b74c8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cfaf3e2-3e9b-45b5-a110-50efb84d1fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9560d14-bd78-4c32-a1b0-55df12a9e647",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a1da68-1119-47e7-8d1d-a1af4745c236",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "460c443d-4045-41aa-9238-6618c7e7d9f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a51fa40-d1e9-4f85-8a7e-1d2138518418",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503e65e3-8b50-4064-a3f5-b231be17212e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a0b89d-1729-4887-8861-4800eea0cc57",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1301b4d-9eb4-471e-a1e2-97a9728d5d57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba809cc2-87f2-4ace-b67c-60d2f986bb61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadf5ea7-814e-4d71-8ce2-db023fc15354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2537e03-0a36-4e11-be5b-148260fa9f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623ade2b-99f8-48a6-8e09-396ba851ac9e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ec71ad-6333-475c-9139-a09028feecea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "700d079b-d199-4ebe-b1cd-83bac43ae02d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e55188-af9f-4490-9f7a-6210a447d8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d66d83-d396-4350-bbab-0a677b50b865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b99c49-0ce6-4ffc-9f9e-f2da5016c8ca",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2f6bcf-19e0-48cc-9564-5e2fa9095b6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5553b8a8-cd15-41ba-acaf-8f68c9cfd2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25696ff3-f807-4051-8a2a-f92dde9086b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad806bbc-7536-4b18-bde4-9a71f29fcac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db4e998-7d27-454a-b1db-1b532d23700a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bbdc08-b36e-4a0e-9450-dbb2799243dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7790154-74e4-4f1c-b9fb-f648f76e7d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee7fe94-4d90-4625-ab66-e798adaceaef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4b7e5c-6765-4939-a668-9c0778b8434a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79219e4f-b8fb-413a-bd9f-a996abea347c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7c1f72-6d62-45e2-9fd7-c81d0f9d0f24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8dd3dd4-930f-40ae-b8a0-e0e8beb1b899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09c8254-665a-406c-85ab-71bc43043307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94cdae6-d9fa-455b-90cc-f2b390498fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447e9523-4494-4d14-961a-4684a83ee1b5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885db148-68c6-4b9b-b704-e7b87665a2e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1771259-7389-4eca-99ba-fc2b01e9c1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c508592-bde4-40ef-8ef3-ef380a82175d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176576c2-2c92-409f-884e-8a1dff9e7706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00121568-669e-439e-aa13-f77879cd36fe",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24418998-2972-48c8-baf9-ce9b03985566",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "198273b9-4380-484c-860d-182c457267b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f4281e-c480-4b2c-842e-d47c8fc3b1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b7d330-5d5d-4759-bbe4-a126b7a1e1ee"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fedea025-5c13-41c6-81da-b5af547335b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd0b163f-4787-4c82-a80e-2eb84097cec4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0dd810a-09f8-4e0b-930f-4bd82a5d1971",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6627220-f477-4422-a669-a43d1aeb2cc6"
                    }
                  }
                ]
              },
              {
                "id": "90297f45-df40-46c9-b420-0cc8f8d485bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "323670ef-14c5-4968-816c-88808f84396b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0492fd8-9741-44ff-8043-8dbf343612a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bf59c480-1b06-4aea-8108-a0b61a47cb18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d1cd35-7b61-4c75-a199-801e48a03ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38dee5fb-f4d0-424c-b015-917ea2a2c369"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc5ecc70-0848-434a-ad39-d6202e135175",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b54b5c7c-69e2-4706-a947-6399f7c3c7e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09a7b978-b49b-412a-ac29-6ebbd995683a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e353aad-3014-4726-bdae-88de344f70ca"
                    }
                  }
                ]
              },
              {
                "id": "91200306-855f-4fd0-bcee-2aba4cabfe8e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7c5a80ab-1e1e-416c-9440-8fe8b2eba157",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1a7510-a424-4ec0-9b01-0558819a555d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3f8390c6-f775-4a38-a879-ed1e2db75d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6225ff9b-ced5-4f21-989b-17134dfdd28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d117d65-87ad-4606-b4b1-b372d162b888"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fd997405-9c4b-4d9c-99b1-2e5d349de213",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18fed554-16bf-49d7-953a-fd46478eaf68",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78e70a07-a51d-4075-b124-e786a2682175",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "441f4eba-0108-423a-8492-0bc9f0825063"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac9301a1-e2f9-4bf8-bbdf-d62d7546df51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53e8e4ff-bf1f-4cfc-82ce-4e073cf9b5e7"
                    }
                  }
                ]
              },
              {
                "id": "801c1e0b-96db-4ac1-b90d-905f71c56327",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e653c157-d9e5-4e9b-86e5-8c1dd7084385",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d0a3ac9b-8df9-449f-8a9f-3af37d59c1c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe8d51c3-9e0f-400c-8c5b-c91dfa459f1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df976431-18b2-4977-b590-104746b628e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ae4eb72-7f23-481e-aa01-02f6e3e6a077",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b1804191-d479-4019-9e05-fc181ebbf386"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18f465a2-8f02-4f32-a6ea-ba2eefabfe36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1de3086e-0731-410d-96d9-eb6acd1a45c7"
            }
          }
        ]
      },
      {
        "id": "da6f1cb1-1728-4065-8288-ba76e14f4e30",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0599adcd-30ca-44d8-8cf8-674f490e4385",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4593a1d0-4741-4d35-8b3f-2721cc2b2bde",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62d240d0-b6ca-4db8-b4a6-f7439afe2ac6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a9e46f-ef14-48a7-ad68-66bf0689c084",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bca5459e-61d8-4df7-a1ab-ca187ff561b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d885889b-3fd7-45e0-aa96-9555956408bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5035dcff-8b64-448a-b620-c610549b6afa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "250ebe7a-d50d-42d5-a3db-abd4cf8ce33b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1b0fca5-8947-4602-bf31-c8ff5deacb23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5dc9936-67ae-4442-8f75-129287312dd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "787abe70-35e2-4abf-a4b5-a42330f85f53"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a92a5fd-69e3-4167-8dc7-8f1f054e3e14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "30bf068f-fc3a-4ede-9b46-5562b37997b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59caf2bb-76d6-432a-a4e8-531a221d5e90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fcbfb2e-dd36-46f0-a28c-f7811f30a95a"
            }
          }
        ]
      },
      {
        "id": "b23f6e2e-0e86-440d-be35-0354e6338675",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d400181c-b459-4d12-bc0f-b7d1360b4de2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e43d0f88-8364-4c4e-88ed-02637296421d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91c7f79c-e2ef-4e91-a33a-5d6b8fc189cc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce5af30-5856-4f3e-9cf7-42faae5bddee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ff3d2bb-56c7-4e2c-bdf6-9f98b8d4a975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fb6ae4-a552-4b0e-a4b6-199518112ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e64c8fb3-6849-449f-ad0d-053b3a96b61e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d748475b-9aa8-4f89-8cfd-0d50d4efa93c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a4b6d88-2ab4-4c48-895b-c8432365cf03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84d3ff55-4b3e-4c9f-8eb3-e8bbc1ad84af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "154a3aff-b3b6-441f-8689-3ec73e649271"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "458464ce-bfb8-49b4-ba0e-30489ec487ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93bb5ba6-6acc-4333-a637-f1d5121e9f92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0139c9d3-c20b-4062-a750-419f89d1954b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d226576-c537-4d6a-878d-2cd3572a429e"
            }
          }
        ]
      },
      {
        "id": "24486516-30a3-4a7d-8e02-2c3f50d3f15a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "067db23e-91ee-43f1-a5a5-ca642fb589ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5817f488-dfe5-4a60-bcd8-a40b4ddf14a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75dba2e4-a9c5-475f-8002-0d67e2f7ac90",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8e0058-c158-463f-b38d-b42b1f327422",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b286b44f-3532-47c9-88d8-11e85687995b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad46678-7376-4ad5-8734-c36332fe831d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9495da91-211b-4a45-ad99-5f0ba7af43cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81e37836-99ac-46b8-b956-5cb91d884f0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4be4286b-2534-4353-baf1-4042f8ac3f5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3ec9ff3-274d-476d-b9ee-c62d72386ff9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "636b02d7-c111-4849-bcd7-2e529f6784b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d6f41fc-5306-425a-a492-9323ac94dbe2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3cdc2db4-6b2f-42f9-a14b-926c624d925d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c04f885b-1e10-4255-96de-d5eaaed45dd6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "051b7fab-7463-43fd-b5fa-dd0f101a6bdd"
            }
          }
        ]
      },
      {
        "id": "a803fc40-5603-42c5-b322-ee80478c3a0a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5b03ba4-6300-4697-9c59-f70526be228c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "621f737d-8c7c-4b24-b32d-1e55356ca4c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "de9f6545-5916-4faa-b02e-1f5f9c980dc8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a70ae66-0e41-4537-bd6f-9097ced3e13e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "172430d1-92d0-48b1-a597-114fb8da3fec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 66.23508771929826,
      "responseMin": 5,
      "responseMax": 355,
      "responseSd": 27.43612992009453,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704155705471,
      "completed": 1704155733467
    },
    "executions": [
      {
        "id": "173849e5-b7a1-4d7a-ad83-40118f2b592d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d9a0ea46-4fd0-492a-8a5a-70b438bcb4d3",
          "httpRequestId": "149fde56-3e28-42ba-b8ae-cd3e56ae7184"
        },
        "item": {
          "id": "173849e5-b7a1-4d7a-ad83-40118f2b592d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f0448a92-4757-4a52-abb0-7b301ee52847",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "088e0d5b-98e5-4f8b-b320-6aff4fb94e0e",
        "cursor": {
          "ref": "b46a975c-3146-4209-8356-ff0ccc35ec58",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "57922a11-6be2-4ca8-9c16-3e50015065ff"
        },
        "item": {
          "id": "088e0d5b-98e5-4f8b-b320-6aff4fb94e0e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5bc8c212-d863-4fcc-8035-c16d93ac6ad8",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "79011590-ea43-4904-bed0-36eef6674cf6",
        "cursor": {
          "ref": "d2985601-69fc-4aa5-b4d6-9b2185ce7204",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fdfb2874-4fbc-4a86-a6db-fb5ca60099ad"
        },
        "item": {
          "id": "79011590-ea43-4904-bed0-36eef6674cf6",
          "name": "did_json"
        },
        "response": {
          "id": "a5d09d16-a617-4bb4-a3df-8b1feb971c66",
          "status": "OK",
          "code": 200,
          "responseTime": 309,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31f9bbb-b83f-42d6-bc8d-467c0c7b43f7",
        "cursor": {
          "ref": "7cbdf5d1-0752-40be-967e-81cc717b9250",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cc562501-a086-4f8a-9d05-dcf68eb1a44f"
        },
        "item": {
          "id": "f31f9bbb-b83f-42d6-bc8d-467c0c7b43f7",
          "name": "did:invalid"
        },
        "response": {
          "id": "a254695d-56b6-4306-b666-221b418bc0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31f9bbb-b83f-42d6-bc8d-467c0c7b43f7",
        "cursor": {
          "ref": "7cbdf5d1-0752-40be-967e-81cc717b9250",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cc562501-a086-4f8a-9d05-dcf68eb1a44f"
        },
        "item": {
          "id": "f31f9bbb-b83f-42d6-bc8d-467c0c7b43f7",
          "name": "did:invalid"
        },
        "response": {
          "id": "a254695d-56b6-4306-b666-221b418bc0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38f349e-fcd9-427f-9427-3abd87f9f82a",
        "cursor": {
          "ref": "0203dfc5-1862-4a58-8edf-e1df8d3cd39b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f1c06835-837b-4646-8358-54eb8bf141c3"
        },
        "item": {
          "id": "f38f349e-fcd9-427f-9427-3abd87f9f82a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a25b272f-594f-4c05-8bf9-ca1df0d75061",
          "status": "Not Found",
          "code": 404,
          "responseTime": 102,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d9f869-9c10-4ee0-8272-5f218a852ae9",
        "cursor": {
          "ref": "79374acd-3243-443c-aa44-ff7558386a6f",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b42b0ab3-0038-48b2-8da1-672f337ef93f"
        },
        "item": {
          "id": "45d9f869-9c10-4ee0-8272-5f218a852ae9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "41bab9bc-0e36-4dcb-b7a1-1bf44bf17f88",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42a320c-2429-4592-9d61-9a162dd97fcd",
        "cursor": {
          "ref": "9552a38b-d646-40af-aa66-4ee62882da6c",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "26d351e9-a2a8-4e69-a314-6d27f9fa74be"
        },
        "item": {
          "id": "d42a320c-2429-4592-9d61-9a162dd97fcd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8796ce1a-2478-485a-99b1-1bf3d2ac5799",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47e9fc9-67ff-49a1-9dc4-512245676f9c",
        "cursor": {
          "ref": "41eded0a-fadd-4712-9108-96f3f20405bd",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a3c8bbdc-a710-44b6-be45-bfd143ee57bd"
        },
        "item": {
          "id": "d47e9fc9-67ff-49a1-9dc4-512245676f9c",
          "name": "identifiers"
        },
        "response": {
          "id": "1397ffb9-e7f7-4dca-8cba-0f6f3fa321bf",
          "status": "OK",
          "code": 200,
          "responseTime": 210,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76668718-d0a0-4de9-98e0-7197f3d53370",
        "cursor": {
          "ref": "f4519973-a88d-4392-8ac7-a20fe2cbc30b",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "61e13d58-6c34-4671-a481-62f218ff0cb8"
        },
        "item": {
          "id": "76668718-d0a0-4de9-98e0-7197f3d53370",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f849322c-77d5-4089-aa63-12b9aef9d4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7371fc-f603-435d-919c-1d4101d77690",
        "cursor": {
          "ref": "8ce06c29-a1c0-4966-9b90-d106489be7b9",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0c81a723-5fa4-431a-96c1-f6625642d5dc"
        },
        "item": {
          "id": "0f7371fc-f603-435d-919c-1d4101d77690",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1580c140-07fd-42e3-a270-f29cd35d84c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7675c0b-c130-4a9e-bc62-ee8013bfe606",
        "cursor": {
          "ref": "bda95c04-cf07-4119-bd33-9ca7612272e6",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c91f3ea2-c4ba-4067-83b8-7c9e93d9c813"
        },
        "item": {
          "id": "d7675c0b-c130-4a9e-bc62-ee8013bfe606",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bfc761d1-c25e-4bd2-ad2e-b66e6e4261c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77e8b13-9b91-45e6-8c33-e23d837e7b94",
        "cursor": {
          "ref": "5b2119b6-2444-44c2-afdf-8a854860a661",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5aa543fd-955e-4fc7-b886-0bbb37ff0722"
        },
        "item": {
          "id": "e77e8b13-9b91-45e6-8c33-e23d837e7b94",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9b5e2080-01fa-4f70-8a24-7ac5a574d5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54713d51-ce83-4940-87cd-4c8f7742af57",
        "cursor": {
          "ref": "b60bae91-873e-4ebe-ae01-ce20c05ba038",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f156672c-bb97-44ae-8e17-5e51ccb0d7d7"
        },
        "item": {
          "id": "54713d51-ce83-4940-87cd-4c8f7742af57",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "030ff2e9-b076-45ba-9fd4-e77ed48e2941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47291849-59bb-4ae6-b9c0-8745c5142563",
        "cursor": {
          "ref": "02d7b4c2-0e61-4376-8f65-c0f9fd89e1f7",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e6e75d8f-78f0-4595-b482-39ef48c2f265"
        },
        "item": {
          "id": "47291849-59bb-4ae6-b9c0-8745c5142563",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f025395a-a0c3-49d7-a59c-664f3370268e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b48263-b0f3-4424-9bc8-f5d751b5a4a4",
        "cursor": {
          "ref": "f8b981ed-ab03-45dd-b229-90a36e0dc88b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "95f176b2-af6d-4a4b-8672-074adb71b308"
        },
        "item": {
          "id": "a6b48263-b0f3-4424-9bc8-f5d751b5a4a4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0e61d6eb-5e8a-45df-be67-9140449c6d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda4fa69-f293-4247-aaca-1215d164efbf",
        "cursor": {
          "ref": "08303dde-d076-4496-b21c-33af08748176",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "13cfe9f4-6959-4ef8-8e9d-c92b225c386e"
        },
        "item": {
          "id": "dda4fa69-f293-4247-aaca-1215d164efbf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2a4215a1-6f2e-4d21-8a47-0bdb34739565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e945dff-4e4b-4c1f-8d5e-f8840b0a13dc",
        "cursor": {
          "ref": "e78d3061-c24a-43fb-8f67-3686807dea55",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5ca28013-0d55-436f-a2a1-6781b1d618b0"
        },
        "item": {
          "id": "8e945dff-4e4b-4c1f-8d5e-f8840b0a13dc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "27af0803-1cc7-43cd-a71b-334b8b2b78d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ecccb7-8d59-4fdd-8e0e-3a1b70eefa87",
        "cursor": {
          "ref": "de10d715-6c37-487f-908e-0c3481efdb25",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "eb853d6a-ceb1-4d6f-8801-5582f32ddb8d"
        },
        "item": {
          "id": "b6ecccb7-8d59-4fdd-8e0e-3a1b70eefa87",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b3b5e498-2f3f-4bb8-ac42-a8ed86cb2d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7af2e07-dbb9-437d-a92e-1df6ccdfb651",
        "cursor": {
          "ref": "14f5e16f-9e4a-4108-b23a-001e6f623bb7",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c86e0713-e4ef-4a6a-b2e7-5158110ab699"
        },
        "item": {
          "id": "d7af2e07-dbb9-437d-a92e-1df6ccdfb651",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d56e818f-91fd-4ff7-9a52-1600905926cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d0e44b-0c36-42b4-acc0-474338432cb7",
        "cursor": {
          "ref": "e74bf198-ad6e-4551-8235-b05811f3a92d",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "eb55d39f-5e17-409d-aaa6-7658810ca532"
        },
        "item": {
          "id": "70d0e44b-0c36-42b4-acc0-474338432cb7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "730aadff-5926-44a7-8280-539f825062ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bae24dc-5485-4efd-85ae-9099039ee39f",
        "cursor": {
          "ref": "e0665a53-6eea-4ea1-add7-cfd5c9e6b2fe",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "889c5286-2768-4916-b9ac-d48fe9188aaa"
        },
        "item": {
          "id": "9bae24dc-5485-4efd-85ae-9099039ee39f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5cecb1fb-a831-4dc9-925f-f6c060f7e93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bfc796-9666-4e6d-855d-c695cc1ec078",
        "cursor": {
          "ref": "028784d7-a76d-4630-9ab6-157dd1e303d9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "091379ee-f433-48af-bb8b-e6e42fce4fee"
        },
        "item": {
          "id": "e1bfc796-9666-4e6d-855d-c695cc1ec078",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a7fec55c-9946-4718-95e1-978386ccd8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbf57f9-4a95-4acf-8cfb-ed3781ff2ceb",
        "cursor": {
          "ref": "d5520566-ef71-4900-96e9-84c705174b4b",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2dcee708-05b0-4693-8b74-4c5596a22238"
        },
        "item": {
          "id": "fdbf57f9-4a95-4acf-8cfb-ed3781ff2ceb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4b518564-8797-4902-b500-d06e55c029f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6507a7-7ce8-4ec8-9fef-88796744f856",
        "cursor": {
          "ref": "f017dc17-ca1b-49df-956c-3c8977afd57e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4d6e6702-8f78-4a3a-8e6c-3963c1538585"
        },
        "item": {
          "id": "9e6507a7-7ce8-4ec8-9fef-88796744f856",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7b880767-f886-4648-8e48-7ee6cf6f205a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4eb411-bcc4-45be-9ce6-8fe521aaa311",
        "cursor": {
          "ref": "d6e02253-023b-40bd-80b4-28fb5d090fd6",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d01466af-4d80-409e-9ba6-83b55e1208aa"
        },
        "item": {
          "id": "5d4eb411-bcc4-45be-9ce6-8fe521aaa311",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9f3d4c62-381f-43db-85d5-244549dec465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1010eb98-4a07-461c-ac37-9341fdd52bc2",
        "cursor": {
          "ref": "e776da38-5919-46e8-852a-9152fe4fed5c",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "41003833-e17a-422c-b4f7-2613c48f0280"
        },
        "item": {
          "id": "1010eb98-4a07-461c-ac37-9341fdd52bc2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0dd49231-c39b-4df7-9a21-d59fc17508c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0de4440-4700-4b3f-9e24-d48b87880216",
        "cursor": {
          "ref": "1527078f-3772-45a9-bf01-aa10bc56d6b8",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e71c1456-e275-40f9-81d7-ee22f70c6d8e"
        },
        "item": {
          "id": "d0de4440-4700-4b3f-9e24-d48b87880216",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0953b3c2-96a0-4551-b7f8-6f484c89015f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8a25a3-bc69-4b3e-b65f-248233f62324",
        "cursor": {
          "ref": "b46fa706-f695-4e86-bc30-03dfb7debec1",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c7208ce0-b471-4975-aa03-b64193f47d93"
        },
        "item": {
          "id": "7c8a25a3-bc69-4b3e-b65f-248233f62324",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "06824d82-07cb-4933-b5bb-04181bd9ad2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2510660a-3dab-4b1d-bd60-a16f61c30833",
        "cursor": {
          "ref": "02fd3b26-50a0-4304-967c-e78554691c51",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3a4bb093-8e9d-42c5-8239-8ae5073adefb"
        },
        "item": {
          "id": "2510660a-3dab-4b1d-bd60-a16f61c30833",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e12749c4-9356-40ea-a68b-63a8e3be378c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6452852-a36a-4254-894d-d90f47dfdd0b",
        "cursor": {
          "ref": "e0264146-5545-4c54-ae2b-564b3c18e984",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "98191e71-3056-4ed6-b52b-d446f9f587c6"
        },
        "item": {
          "id": "e6452852-a36a-4254-894d-d90f47dfdd0b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6afd3470-6dc4-4fc0-8557-33b900d79cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed2979d-2992-40ef-8bb6-800bd4b6ebe6",
        "cursor": {
          "ref": "3fbfe052-c9b1-4df4-a5bf-0d19ecafcac7",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c3bcb16b-969d-47f3-9105-205b397914d1"
        },
        "item": {
          "id": "aed2979d-2992-40ef-8bb6-800bd4b6ebe6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9c720d16-7d97-4f68-bd52-753c5f1cb8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abb42b7-6613-4cb9-a02c-30d0732a4317",
        "cursor": {
          "ref": "a0a3fd71-982a-483b-b44d-f6d2c137c5f5",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "036a7a6e-3e99-4fa0-8171-9a6cb18e7096"
        },
        "item": {
          "id": "1abb42b7-6613-4cb9-a02c-30d0732a4317",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5255c80a-82c6-40d8-bb04-edee7937dbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea136a85-0e23-485f-b7f2-e0e3e713abf2",
        "cursor": {
          "ref": "f542399a-b51c-42d2-bedf-20fac575aa15",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a13ef571-5183-4820-b384-4c58203a4d65"
        },
        "item": {
          "id": "ea136a85-0e23-485f-b7f2-e0e3e713abf2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "11815cca-e158-4248-a5f8-93e2e584aa31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a797de-3ece-416b-9354-6fcf7cf1c11f",
        "cursor": {
          "ref": "ed5f703c-4b7e-47ea-87b7-56e7f21aee0c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bbaff27d-268b-4d0e-b5e0-b38b7d42f8b9"
        },
        "item": {
          "id": "91a797de-3ece-416b-9354-6fcf7cf1c11f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c880a34f-b601-4294-b442-c0e37f8b5550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eefbb8a-64d3-42ee-bb55-3ac901d9b012",
        "cursor": {
          "ref": "a56dd5f1-bf5d-4dfa-803d-17ef3a4f357e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d63a4e79-e595-4775-a3e4-785b960668fc"
        },
        "item": {
          "id": "3eefbb8a-64d3-42ee-bb55-3ac901d9b012",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ea6a8470-6dee-40aa-a3ab-3a56c0efabbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac328137-82d2-49c2-8afe-4a612cdcef29",
        "cursor": {
          "ref": "d9d7a9fa-9bc5-4280-a576-03decbde2c1f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cea36b6b-3adc-4ac7-a041-4517a03a5391"
        },
        "item": {
          "id": "ac328137-82d2-49c2-8afe-4a612cdcef29",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2fc04bfe-7051-404a-90c0-4f1554416989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62aab487-ec3c-4952-8eed-4c48783dd159",
        "cursor": {
          "ref": "07795076-6c5b-4fc2-a951-06816df00ca0",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d67addb7-3a37-4285-a675-46c9110f658f"
        },
        "item": {
          "id": "62aab487-ec3c-4952-8eed-4c48783dd159",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "baa176f4-f129-4d1a-b9a1-39ffb08292b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce57fd5a-fc72-4122-8347-c97da8e59f8b",
        "cursor": {
          "ref": "1ba2162e-e1fc-4fef-9c33-071ef298edb5",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "94d4dba1-63d1-4031-ac3a-524cc71eb709"
        },
        "item": {
          "id": "ce57fd5a-fc72-4122-8347-c97da8e59f8b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5b2fdfd0-420d-455d-84ef-ddc1ec664355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b849ed4-6351-4b8b-8c68-151c0b601090",
        "cursor": {
          "ref": "dbc4942f-5aae-4577-9f55-6f6a1db83470",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "10958dce-25a4-48c8-b924-23b4f2f4b2ed"
        },
        "item": {
          "id": "3b849ed4-6351-4b8b-8c68-151c0b601090",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "54079e31-cf41-443a-bfcf-fd5574789f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161a316e-3306-4ae1-a428-b9d506a5db1c",
        "cursor": {
          "ref": "c3def956-f994-4df6-ae76-39193548e728",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "50b8e55a-8f7b-4d11-924b-00e10b7c4db1"
        },
        "item": {
          "id": "161a316e-3306-4ae1-a428-b9d506a5db1c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3fce7659-0ec9-42e1-8f7d-a1a0bf91e361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d0bf06-1de2-4f72-814a-04674b56ad6a",
        "cursor": {
          "ref": "e3373583-7e32-4a0f-b306-c1b0058cf0b4",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0cba3fa9-3891-41c1-9546-e137d876781c"
        },
        "item": {
          "id": "88d0bf06-1de2-4f72-814a-04674b56ad6a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4ac772d1-bdb2-46d5-8978-eeba8313e151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d9ee07-9ff1-4f32-b445-eb4cf575a83a",
        "cursor": {
          "ref": "62e22990-8680-4777-8262-66e24bbebbf6",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "89b6406b-bf65-4900-86d4-7f657d3d7ef2"
        },
        "item": {
          "id": "62d9ee07-9ff1-4f32-b445-eb4cf575a83a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3c1390a7-f99e-429b-97f8-9d58b67e1f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73487120-8e17-4f3f-9a88-0386a5f43837",
        "cursor": {
          "ref": "9aa45266-f754-4f1d-ad9d-62127b38d6dd",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ad9a4f05-617e-48bb-88cd-ae6da6b92428"
        },
        "item": {
          "id": "73487120-8e17-4f3f-9a88-0386a5f43837",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "99bca773-75a3-4957-b722-aefc4169a20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664ef5f4-9b30-4aa5-880b-d000ebc827e0",
        "cursor": {
          "ref": "f06a5833-ede8-4a47-aad9-83e45913b0d3",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7c270f62-0299-4391-b675-ce7dd476a1cc"
        },
        "item": {
          "id": "664ef5f4-9b30-4aa5-880b-d000ebc827e0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ac3a669f-ab93-492d-baf8-4eba03a8ddc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bde8d7-bc60-483c-82ef-4a9e8b87fab8",
        "cursor": {
          "ref": "2bcdc5cd-0134-49a0-9729-ce7cc2d8cd15",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "876471ca-a644-4586-a243-3afe9be555f1"
        },
        "item": {
          "id": "34bde8d7-bc60-483c-82ef-4a9e8b87fab8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d64c11d1-3411-4f56-8c54-5aa580781456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac688bf-97c5-4514-af1a-f8a222d38089",
        "cursor": {
          "ref": "ea85c407-d5b9-4940-9ef3-3bfbb8fc5241",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b94404ca-a34b-4146-8dce-cb81587b127c"
        },
        "item": {
          "id": "8ac688bf-97c5-4514-af1a-f8a222d38089",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "51db686e-3e90-4999-b3ae-5d4c97331302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c31cb22-5fba-4aa1-88cc-b49dfc18b10f",
        "cursor": {
          "ref": "5acb415e-8bc0-40d8-8d2a-facf84b5477d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2caf4a26-c61a-4064-9a4f-6b739e86f960"
        },
        "item": {
          "id": "1c31cb22-5fba-4aa1-88cc-b49dfc18b10f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "86e79b4b-d94e-402c-824e-68a936c901a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbce216b-9d70-4596-b46d-957459d0d4d9",
        "cursor": {
          "ref": "9252a8c7-9209-4e5d-b2b6-06e2af728312",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5289885f-24b7-43f7-a45d-5c681c1edca7"
        },
        "item": {
          "id": "bbce216b-9d70-4596-b46d-957459d0d4d9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "680e1ac2-d7f1-46f6-956c-3a448b42f1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65251521-e7c0-4f4c-85ab-324bf8390156",
        "cursor": {
          "ref": "df530013-ef71-4808-b1ba-d33ebdfa8aa5",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "15796b0a-8a29-43fc-9073-e78e81af8769"
        },
        "item": {
          "id": "65251521-e7c0-4f4c-85ab-324bf8390156",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "74a644b0-72cf-450f-8ed7-9c25df17aa44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8f177a-d83c-493a-b78a-ba1b16ccd83d",
        "cursor": {
          "ref": "af7bb602-ee26-4877-b4e2-35ab372de017",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f6a679fa-c692-4a58-a9d7-bc94d6491766"
        },
        "item": {
          "id": "8e8f177a-d83c-493a-b78a-ba1b16ccd83d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b8978238-06e3-4ab9-9b7b-3beee80ac61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360fc9ad-b554-444c-a711-b464d849e755",
        "cursor": {
          "ref": "5c13163d-847d-46a3-8111-bed8dd685351",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3fcbf068-ab80-4a80-aa1a-c76305735814"
        },
        "item": {
          "id": "360fc9ad-b554-444c-a711-b464d849e755",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d3c98313-f5db-4dac-a0ab-c08d9b1795d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc015d4-4bcc-47d4-9a4f-c9c3d497308d",
        "cursor": {
          "ref": "93573ddb-bbd9-4a99-a4d9-4d56d0fb4ac5",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "dfa688f0-dba5-42a4-9a1b-349852c63d03"
        },
        "item": {
          "id": "ccc015d4-4bcc-47d4-9a4f-c9c3d497308d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3d04a4fa-2b52-4e95-8014-c524630a8020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b39728-5baf-4972-a501-2414682c00f7",
        "cursor": {
          "ref": "c4d88e1c-d821-4e98-8a78-fb423007377b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3f5855d7-f470-4fd7-a76b-6997073ddfa0"
        },
        "item": {
          "id": "37b39728-5baf-4972-a501-2414682c00f7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3ca888b3-10b1-4818-b4ca-4c1d73b00c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d053ad1f-1ec2-4433-9ed7-50ff6bbda46d",
        "cursor": {
          "ref": "2a39273e-af16-4b48-a53c-14471d7a81d3",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b26bcb3d-eeb9-4c10-897c-a0fbca817f8d"
        },
        "item": {
          "id": "d053ad1f-1ec2-4433-9ed7-50ff6bbda46d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a7ed7cfd-8a2b-431c-bb73-af38978461c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f77c01-5ff1-4b49-948f-64117cc31219",
        "cursor": {
          "ref": "5bd9e9d6-4e60-41cb-a057-b71a9e21faf7",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4c5cbf85-2f9c-40db-9524-7716b55350eb"
        },
        "item": {
          "id": "57f77c01-5ff1-4b49-948f-64117cc31219",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b9550e3e-b434-4e74-9bff-246291626c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cadc1b-17aa-4b26-ab5b-9deea5d0c8e7",
        "cursor": {
          "ref": "4d7bb178-a2a2-4133-a66f-1a60536b4279",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "670a4ba7-358b-4597-989e-0885eb2cfe2d"
        },
        "item": {
          "id": "e3cadc1b-17aa-4b26-ab5b-9deea5d0c8e7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6bf81c09-4565-4870-af68-e44b93a47118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cb81d2-e2cc-4f88-83e2-c6518a179da0",
        "cursor": {
          "ref": "be00e175-aca7-4c32-afad-2e048e5ca832",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b192ee3f-7550-431b-ad72-2a33b898942b"
        },
        "item": {
          "id": "b5cb81d2-e2cc-4f88-83e2-c6518a179da0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0a4ec919-de98-4888-9a4a-89e04732d7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebd3e26-a63c-4dc0-9ab7-bb62077500ca",
        "cursor": {
          "ref": "011a1418-8c85-4677-9c3e-26d48abb1e31",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "985a0fd0-15de-49c5-babe-679cc3ca0449"
        },
        "item": {
          "id": "aebd3e26-a63c-4dc0-9ab7-bb62077500ca",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "11f6e8de-ab80-4203-9866-c26eb7a5cf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8229a7dd-ec89-4e24-a6fc-c96ec4e87914",
        "cursor": {
          "ref": "97e67186-6226-452a-ab5c-0f1a8f67fc91",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6e04ca5f-6f23-492e-8b9c-1a327c21b2d3"
        },
        "item": {
          "id": "8229a7dd-ec89-4e24-a6fc-c96ec4e87914",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "43e7e3f5-cd4d-457f-bbe0-9ee48dd59320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0db49d0-6922-425a-928e-0fc787dfed5b",
        "cursor": {
          "ref": "2dec03c6-7dcd-43b2-aaab-87e8a1261a9d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "94d9d4aa-bc48-4c50-aba8-1cb746242f72"
        },
        "item": {
          "id": "d0db49d0-6922-425a-928e-0fc787dfed5b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fca855f0-73df-485b-8cbd-7d512215e029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9858ce72-e8ad-4678-a9af-f692ffcf7080",
        "cursor": {
          "ref": "073bdb2e-b298-4f0c-9b01-a1cd9acf0148",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "20441aa8-f220-4b27-ad2a-87486b5b4c6f"
        },
        "item": {
          "id": "9858ce72-e8ad-4678-a9af-f692ffcf7080",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f258f771-a062-4d07-801a-5faf7ee54a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a673b50-e5d9-4635-9ecf-84ea65ae4c3f",
        "cursor": {
          "ref": "06bd5d18-7333-43b2-86d5-eef3e9dc1228",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "16204d3b-c3a7-4746-bf98-5f91b25f0a17"
        },
        "item": {
          "id": "9a673b50-e5d9-4635-9ecf-84ea65ae4c3f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8a6c2c80-b9da-40b8-abac-b3e8e0a9e55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f588b52-1724-4ff1-b138-e35b8e33d674",
        "cursor": {
          "ref": "18fc8443-12c2-454b-9f4c-7bb91385bce3",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f472e0bf-0607-454d-85af-58995344687f"
        },
        "item": {
          "id": "1f588b52-1724-4ff1-b138-e35b8e33d674",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9f430d3e-86ed-4166-b373-907535302bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eafb62-1e20-4eb8-92ed-0b58c54706cc",
        "cursor": {
          "ref": "f1a6150c-774a-4981-979c-03e678d541fe",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6d0b018f-e264-471d-a367-1dd7d7814ca4"
        },
        "item": {
          "id": "69eafb62-1e20-4eb8-92ed-0b58c54706cc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2ca6b6ee-fb94-4a9c-8972-6eb6f576dd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfe6f6a-ac5d-4ab5-a66b-a7abb1fc8f03",
        "cursor": {
          "ref": "fad72c43-f36e-4e63-bb37-b4df88c740b5",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "485c187a-5917-4b13-b2d7-3d081473c51f"
        },
        "item": {
          "id": "3cfe6f6a-ac5d-4ab5-a66b-a7abb1fc8f03",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5eeb2a63-2db1-435e-90f8-56f084b8d45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c93b02-3b25-49c9-be1e-efb0947368c6",
        "cursor": {
          "ref": "2224afb6-5a6b-4ca0-add9-eb59417f132e",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "42465045-8820-46e9-a48b-96d9dbcf1df7"
        },
        "item": {
          "id": "e9c93b02-3b25-49c9-be1e-efb0947368c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "45622ff7-04dd-4976-bc54-0b25f281aefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a20d7d-770b-44ec-abca-da86624c045d",
        "cursor": {
          "ref": "22f65a06-722c-4a28-a47c-dc6c9e9ed45c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9189e529-1720-451b-9934-10be3dda6e9c"
        },
        "item": {
          "id": "26a20d7d-770b-44ec-abca-da86624c045d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1451b116-fa57-4574-8ceb-4a646cfd8340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d5eb8f-9a87-4803-8316-1803afab53e4",
        "cursor": {
          "ref": "34d04617-143a-49cc-a8bd-a765ec623b79",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "58ab9afc-e44c-4d72-9670-a7ff04b792b1"
        },
        "item": {
          "id": "02d5eb8f-9a87-4803-8316-1803afab53e4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e716a7b1-8462-4af7-9825-5517adf84431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067c29a0-98fc-45d7-8867-c879f691f0be",
        "cursor": {
          "ref": "91918329-c07f-4e27-ada7-7bf2e306395e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "27a576be-8f01-4c69-b6fd-a99933905780"
        },
        "item": {
          "id": "067c29a0-98fc-45d7-8867-c879f691f0be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e331bbe8-5314-4132-a5e0-cfa714a98ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163cf11c-65c5-439a-8326-ec7072604773",
        "cursor": {
          "ref": "7b721af6-b6b0-4772-bbd7-7b1967c6a307",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6176c008-4f03-4f11-82fe-8e415cc9d59b"
        },
        "item": {
          "id": "163cf11c-65c5-439a-8326-ec7072604773",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bb0b4dfb-84f5-4f7a-b243-1c48bbd25252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dc2861-0cbc-4f0a-b1a7-2b65b08aa620",
        "cursor": {
          "ref": "5cdd4b14-e5b6-4a45-a4af-580384f44436",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "aabc35e5-1611-424f-994c-1c2b9ff95350"
        },
        "item": {
          "id": "16dc2861-0cbc-4f0a-b1a7-2b65b08aa620",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fa11a421-c034-478b-9b07-dc6c3ce6eb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9930f9c-b1cb-4701-8e94-c9c4af4b91da",
        "cursor": {
          "ref": "ee529ddd-01fd-42f2-8300-8f8ec73f09e2",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "64e0a45a-4f79-45d2-afd1-06f9000c0a70"
        },
        "item": {
          "id": "f9930f9c-b1cb-4701-8e94-c9c4af4b91da",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "41e20272-580a-415a-8776-e1045ad911ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26707db-b2f3-40c7-9205-a2c0db2eb641",
        "cursor": {
          "ref": "c1855188-0f6c-4730-a37d-eea4aae12b1b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0df94a38-b5ec-4a52-b505-4d359efe7b4c"
        },
        "item": {
          "id": "b26707db-b2f3-40c7-9205-a2c0db2eb641",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ed264229-d1b7-4e76-ade7-0ec88c553cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7853661e-847c-45ee-b50c-80e8e412bf41",
        "cursor": {
          "ref": "a49e4dd1-a874-493b-a464-4fcd5196fe49",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0b3e4501-0f64-410e-aa9a-71e5ef386144"
        },
        "item": {
          "id": "7853661e-847c-45ee-b50c-80e8e412bf41",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8802a259-a935-4484-bb73-e31bcd413fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e55d5ea-e1a7-4159-b1fc-ab56633b0911",
        "cursor": {
          "ref": "9eb237f6-1b44-4392-9db3-9a93d97d8c8b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f4d27ec7-81d0-404d-aa09-d0ab5e4c54fe"
        },
        "item": {
          "id": "1e55d5ea-e1a7-4159-b1fc-ab56633b0911",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3db59a93-160e-4d62-93cf-bbfe265e1e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8681a890-4abc-436d-9e44-478f7cbae3b8",
        "cursor": {
          "ref": "aac57d6a-575d-4299-b971-27799fba8935",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3e6335c5-8985-441f-97f5-38fd8d247080"
        },
        "item": {
          "id": "8681a890-4abc-436d-9e44-478f7cbae3b8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "29a375b0-2d27-4386-aff9-9aa06de5ebd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a68eb1-7dc6-456a-bc98-68de730a7f16",
        "cursor": {
          "ref": "427ab11c-4410-4b06-b334-35ba38653c8d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7c6ac9cb-6287-4820-a32c-c84cef146b51"
        },
        "item": {
          "id": "97a68eb1-7dc6-456a-bc98-68de730a7f16",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d98178d9-1631-4e85-b5b1-c12d62143c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1d3391-370f-4279-9184-0248e60844a8",
        "cursor": {
          "ref": "962f090c-152f-4dbf-b2b2-1b1ae9409a7b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8d611ac4-29a3-4b96-b2de-e6c23620dac7"
        },
        "item": {
          "id": "ed1d3391-370f-4279-9184-0248e60844a8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b0d1ae8c-cfc7-40c5-b852-9eaf4d68b121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec04cc0b-03ea-4722-93b5-7d171e518811",
        "cursor": {
          "ref": "830f925c-efe7-4550-be0c-0929d0173c98",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fb86fd6c-f732-45e4-80fc-b2c65f1aca2f"
        },
        "item": {
          "id": "ec04cc0b-03ea-4722-93b5-7d171e518811",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bb3d7c1c-bdca-4896-82e5-e850148956a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415110bf-7cb4-4d90-8b03-698e712d1f80",
        "cursor": {
          "ref": "d0b358fc-9a37-402d-bbfc-075f4e82599b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fd694982-ffe3-4acf-ace3-f23bf614ad20"
        },
        "item": {
          "id": "415110bf-7cb4-4d90-8b03-698e712d1f80",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9ac26e08-7ac0-489b-8913-3c19f3a66d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02860883-188e-48cf-96a0-e78f76288e88",
        "cursor": {
          "ref": "33f71765-6d16-4a00-82d3-c5d3c7124482",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6e80d7aa-7c67-4ee2-acff-e08af14e305a"
        },
        "item": {
          "id": "02860883-188e-48cf-96a0-e78f76288e88",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "53cd2c53-afe0-400f-977d-1bfc70a63e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e397c2ff-3fb9-49ec-96a4-0cdb22e3d9c2",
        "cursor": {
          "ref": "3b16204b-5869-4186-8604-4d75f93bc23a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a63966e2-0194-4a92-ba9c-44cedff2bcbd"
        },
        "item": {
          "id": "e397c2ff-3fb9-49ec-96a4-0cdb22e3d9c2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f493a5c3-aec7-41e4-8ca0-660aff4bf2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e07251f-17c8-4c19-b50b-cf9aa8e780ee",
        "cursor": {
          "ref": "cdf5284e-a4c9-4852-937b-e121bc78474c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3a9a73e5-f7b8-4412-b022-0b168af6c5ca"
        },
        "item": {
          "id": "4e07251f-17c8-4c19-b50b-cf9aa8e780ee",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6a145d31-3706-4825-a9c4-76cfa61cf320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fd5463-3c30-431f-8613-a0dca355e16c",
        "cursor": {
          "ref": "c7efd00e-c54a-4831-a65c-70ac21709456",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ff82367e-4b20-4b2b-b490-ffb25fb5d1bc"
        },
        "item": {
          "id": "d7fd5463-3c30-431f-8613-a0dca355e16c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5eca7844-8a6b-459e-ad06-b5f3cc605f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6c0934-2fa6-4e03-98e1-4de185689d23",
        "cursor": {
          "ref": "24556fa9-e2fe-4295-80f6-c075250ddcaa",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9fb15cfe-45bf-42ff-b57b-bbd49bdbab09"
        },
        "item": {
          "id": "ae6c0934-2fa6-4e03-98e1-4de185689d23",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1e696235-76ef-4a08-82ff-bd8867ca52b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c83c67d-5c76-4317-a49b-3bfae53d503b",
        "cursor": {
          "ref": "4a1ef61e-fe33-4c9b-b3b6-40bd20c6cf9b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1f44c78f-0267-4b1c-84ab-473848e747bc"
        },
        "item": {
          "id": "3c83c67d-5c76-4317-a49b-3bfae53d503b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a6e8d8f7-795a-4ec5-8db1-163fd5a68800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fb5722-9b9e-464b-82cb-4e295abca159",
        "cursor": {
          "ref": "5250c131-9f59-4a8e-ab7e-7cf6864e454c",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "be7ecfee-d259-499a-bae5-43afa629773a"
        },
        "item": {
          "id": "b9fb5722-9b9e-464b-82cb-4e295abca159",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "080fa376-a1a6-4b9c-962d-3ed0a4663406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2ed3f0-ecfd-488f-a130-0a9b149e2600",
        "cursor": {
          "ref": "17113741-153b-4e3c-adfa-3c4834655ded",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a49a47a9-6e15-4c98-b9fd-830da70e79d0"
        },
        "item": {
          "id": "6d2ed3f0-ecfd-488f-a130-0a9b149e2600",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "21acb2f4-849f-4196-8119-6bf4c965cff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b95332-a12a-45f1-9901-4a79d6b8d325",
        "cursor": {
          "ref": "202c772b-6789-4d9b-a250-84a01bd965a4",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a8be457b-451a-4132-819b-b58549460f2d"
        },
        "item": {
          "id": "e7b95332-a12a-45f1-9901-4a79d6b8d325",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e80523d2-8a1d-4163-bcca-d7c7b7007ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc27a25-c79c-4a36-b33c-29633e6b23b2",
        "cursor": {
          "ref": "123d70bd-f3e0-4e0b-9dec-4b0a6774c080",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a7896a79-c7ef-41ad-839e-0f658c0a1ca0"
        },
        "item": {
          "id": "8bc27a25-c79c-4a36-b33c-29633e6b23b2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4fd05fd1-6f25-4c38-b75c-2f146dfb40e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6843ecd0-59b9-48ad-9087-5a87ec0f23e5",
        "cursor": {
          "ref": "5edbe3bc-4b01-4326-8664-d24017ea3a55",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5d5e6a65-0763-487f-9110-e9be4b7ec811"
        },
        "item": {
          "id": "6843ecd0-59b9-48ad-9087-5a87ec0f23e5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2143679b-0f4b-4adb-ad3b-3659b1d8a264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0471f9-072f-478e-9417-329537ec687f",
        "cursor": {
          "ref": "f8b60a6e-220f-4611-9161-476b4ae75ce9",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e89ceec7-07ff-4001-8282-e2e29eea1966"
        },
        "item": {
          "id": "4b0471f9-072f-478e-9417-329537ec687f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d5e6b25e-1e5e-45ad-b91f-8205a442195e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca52b802-9a20-4cde-ae85-e2390270d675",
        "cursor": {
          "ref": "f3ec5e03-5d3c-4ae5-9156-fa4f397c4519",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ac48895f-debc-4f06-ae2b-a0c7d05b61b1"
        },
        "item": {
          "id": "ca52b802-9a20-4cde-ae85-e2390270d675",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2e29a932-5f38-4be6-912c-14feab1e17aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21feccdd-1b8e-4478-b816-05feff7db601",
        "cursor": {
          "ref": "befd7dfc-fb68-4910-b12e-010e1291eb16",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "183e3450-a4cf-4cd7-b9d4-5e09b5667115"
        },
        "item": {
          "id": "21feccdd-1b8e-4478-b816-05feff7db601",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a42da05d-12ea-4e42-a165-f706d584b5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ea8b13-4ef6-4dfc-a965-9e907dfb9600",
        "cursor": {
          "ref": "676155da-6fae-484e-80e9-5a5c95cf615e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bf2ecf75-22bc-4c70-9c3b-b630c66d2d32"
        },
        "item": {
          "id": "95ea8b13-4ef6-4dfc-a965-9e907dfb9600",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fa2ba104-beb0-43f0-8a88-a886f06ca4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d711d0-6dfc-4616-a0eb-adeefe462a1c",
        "cursor": {
          "ref": "fe7acee0-8a2b-4c70-a5b4-814a6486942f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "25cea962-687a-47f8-a8a0-06a4228ad95c"
        },
        "item": {
          "id": "f0d711d0-6dfc-4616-a0eb-adeefe462a1c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "531fcf83-260e-47e8-966e-dbee76eb1600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dfaa9a-f708-4349-b6ed-425706aca53e",
        "cursor": {
          "ref": "44a45aaf-95db-4b54-ab95-bfb1526cc436",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "eabfa0b6-3f19-47d8-a7b8-54f74dfe6740"
        },
        "item": {
          "id": "d3dfaa9a-f708-4349-b6ed-425706aca53e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ef412563-0947-4f93-8bbb-39395108bd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dac2e1-3ab8-478c-8479-b8f843dc927e",
        "cursor": {
          "ref": "86ae63b0-6ef6-4cae-a170-69bd94d4bc84",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f2c75ec4-9c21-4b7f-b45d-57e195d2c53d"
        },
        "item": {
          "id": "b4dac2e1-3ab8-478c-8479-b8f843dc927e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4505e2d0-88f5-411b-a8c3-749223adf00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a9ed21-1e81-42f5-bb68-bf3b67260300",
        "cursor": {
          "ref": "36be2222-9a48-4bee-ab1c-00296617455c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dfe04f1d-2ee8-4800-8a6b-42e02e857943"
        },
        "item": {
          "id": "68a9ed21-1e81-42f5-bb68-bf3b67260300",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0dcc2bd1-d039-446a-80b1-fb6e0781e9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c54769-3150-4a2a-98d4-6690a9dd9ddf",
        "cursor": {
          "ref": "c3f6adff-09e8-420c-b2a5-b5479ae1ebf5",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "42e793b3-9e28-4489-b450-c78263710bdf"
        },
        "item": {
          "id": "c9c54769-3150-4a2a-98d4-6690a9dd9ddf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4d01dfa0-ac33-4874-bbc7-4c14a2163735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0564fa-ec77-4642-82f5-3e94b2562686",
        "cursor": {
          "ref": "4a664f59-edc6-451f-afd0-7a413d4c74c8",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "493ac719-c752-4468-ae8a-272b52c94324"
        },
        "item": {
          "id": "2a0564fa-ec77-4642-82f5-3e94b2562686",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1645645c-ed19-451d-a3f8-62e94ec54dbb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58234493-a719-4469-a36e-cd76d6071706",
        "cursor": {
          "ref": "5a102cd7-d4de-4037-a261-18c7a87a83ce",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5fcf3961-f552-4bfa-9b40-fdad1c4122fe"
        },
        "item": {
          "id": "58234493-a719-4469-a36e-cd76d6071706",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "add8ff13-34cf-403e-83eb-9f7793c8e956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "189013d1-1886-4315-be72-40dc4b48d4be",
        "cursor": {
          "ref": "6dcbf66d-e99b-48ee-8681-76a9aad139d8",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5d848589-a70d-47c7-b548-ee2a88fecbcc"
        },
        "item": {
          "id": "189013d1-1886-4315-be72-40dc4b48d4be",
          "name": "credentials_issue"
        },
        "response": {
          "id": "93b844ef-e431-404f-8bce-438d9de97048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5d2a1c62-606f-4138-9cc7-1643e10dda87",
        "cursor": {
          "ref": "e8dd8305-45a3-43e8-956e-d3cb39f390f6",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c3e64c55-16f3-4b9c-85ce-01e0d5c820b9"
        },
        "item": {
          "id": "5d2a1c62-606f-4138-9cc7-1643e10dda87",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2559ea00-3eb8-4440-8339-3d3c3f3dd837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7661144a-d364-4e83-a099-07699298aad6",
        "cursor": {
          "ref": "b53c0184-b6c3-4afc-862c-a1d0934393f6",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "754f46f3-f055-4073-ac3e-117713daf4d3"
        },
        "item": {
          "id": "7661144a-d364-4e83-a099-07699298aad6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6eeadc23-0406-4c00-a5e3-2a13ee092e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "412eb643-c89b-448c-99b9-9d834c19eaa5",
        "cursor": {
          "ref": "7c819b5c-4e18-4a75-ab2d-c3622f63359a",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0a4a096d-7dbb-4a67-847c-a06561676962"
        },
        "item": {
          "id": "412eb643-c89b-448c-99b9-9d834c19eaa5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "76ba47f7-3983-4151-bfbb-9ae67e1e415a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "de0b8505-226d-46a6-b65e-26a98a4b9a2d",
        "cursor": {
          "ref": "4f980154-53f3-46e4-b38e-528660389b68",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d71e6dc0-e335-45c7-b09d-b6b4f3246881"
        },
        "item": {
          "id": "de0b8505-226d-46a6-b65e-26a98a4b9a2d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0084d38a-3c06-463c-8e45-67870fd53ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "043f6067-d1b0-403f-aa8d-f04375867b5a",
        "cursor": {
          "ref": "5c0ed2a5-1bf2-4fc6-9cd2-16c69a6821c2",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c86adc4f-e1fd-423b-88e2-b6ff8e116b60"
        },
        "item": {
          "id": "043f6067-d1b0-403f-aa8d-f04375867b5a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cc3239c5-83af-4b21-9aa4-53d260a5800e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7135f882-cdb0-4f9a-87e8-ee97615f9c39",
        "cursor": {
          "ref": "b681b136-96ec-4f28-86c5-8f382db5c48b",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "789978e1-62d1-42c7-a4c8-8f84805778e8"
        },
        "item": {
          "id": "7135f882-cdb0-4f9a-87e8-ee97615f9c39",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "21c7a076-7ac0-49b1-b137-fd4b083382d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d7806d-89e5-4ce9-b841-0733b5c78413",
        "cursor": {
          "ref": "9a7eef94-02e1-48e4-a48b-f5a6bb8762a4",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d4a3f234-ac0b-4a41-9e60-58f3b769bb71"
        },
        "item": {
          "id": "77d7806d-89e5-4ce9-b841-0733b5c78413",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6c4212d9-3151-4c24-8a9c-dc0efca27c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a07612e-7029-4936-b7f7-c34d2bb4026e",
        "cursor": {
          "ref": "636a39d8-89f1-41bd-9107-786e13c80094",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f9adf186-888e-4855-8643-675f04682df6"
        },
        "item": {
          "id": "4a07612e-7029-4936-b7f7-c34d2bb4026e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9bd0184f-f74b-4e3b-87f5-e07dfac70942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aea3e75-189c-4cae-9119-39c94747f776",
        "cursor": {
          "ref": "122faea2-02bb-4a8b-af2d-c196db024977",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4739d6a8-9aa9-47de-bc03-112b2f322cad"
        },
        "item": {
          "id": "3aea3e75-189c-4cae-9119-39c94747f776",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8b8f4e3a-588e-4a64-9f5c-5313bb06f29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76c156c-c617-427e-adfb-a0394997e7b1",
        "cursor": {
          "ref": "e722f1f1-4aa6-41ab-949d-436c7b03611a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "33572fbf-6e29-4711-a7dc-b32d55d365dc"
        },
        "item": {
          "id": "c76c156c-c617-427e-adfb-a0394997e7b1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ce0a36d3-2a14-42de-8a40-64a2d533f343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e19bb6-2b8d-4592-9184-dbbb3aebcf77",
        "cursor": {
          "ref": "2c1cc30c-63aa-4203-a566-f35d8bccf839",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "65585823-6d50-4e56-a62b-fdecaf22c360"
        },
        "item": {
          "id": "36e19bb6-2b8d-4592-9184-dbbb3aebcf77",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ae4bfd83-5999-43a6-8fb6-56af6d816999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f9984a-2636-4625-9726-f2726377fe78",
        "cursor": {
          "ref": "85137234-3738-426b-9223-19d20f118094",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e5043573-edc1-486f-8ddc-402240d64920"
        },
        "item": {
          "id": "55f9984a-2636-4625-9726-f2726377fe78",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "19af5937-5c21-4620-93b8-3ef66275c082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef4af23-f1e0-4c12-a082-05764890038a",
        "cursor": {
          "ref": "6b16f235-0c6e-4cee-95e1-9732824377bb",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d0a045eb-34b4-4483-9e73-1cacf83c9946"
        },
        "item": {
          "id": "fef4af23-f1e0-4c12-a082-05764890038a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "25e61e8e-2307-49d6-b8a9-85ac982f4951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0867fc-3fcf-4039-8362-14328299a13f",
        "cursor": {
          "ref": "f8170f09-fb8e-4209-97a8-0ea7a0e02465",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d94ab2aa-23ce-4608-a68a-2a4d054626ab"
        },
        "item": {
          "id": "ff0867fc-3fcf-4039-8362-14328299a13f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cc9b1aed-6e3f-4f58-bb6f-63afa0e3ef89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21aa82c-615d-4388-b790-89cd04a81bc8",
        "cursor": {
          "ref": "7f21e6ee-b4a1-4f07-b513-5f80850d1a7f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b1ae2d79-aa69-4318-8a3a-cbaef436beb2"
        },
        "item": {
          "id": "e21aa82c-615d-4388-b790-89cd04a81bc8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2410aead-eb85-4950-8c19-738bd1a4be55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dce98c-166d-4711-931c-4fb35bd66435",
        "cursor": {
          "ref": "97092f1e-b19c-46fd-94f5-c1c3ddc6273e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6b8157f4-ec26-4671-bc22-143f1443b847"
        },
        "item": {
          "id": "a8dce98c-166d-4711-931c-4fb35bd66435",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0abbacac-85eb-48a7-83a7-99034c0bfcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90926c7f-5082-4c4d-88f4-1f1220f8bd43",
        "cursor": {
          "ref": "74874129-db33-4846-b0bd-66cceda6d276",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2effa66c-91cb-4b21-afa3-4400014ea96c"
        },
        "item": {
          "id": "90926c7f-5082-4c4d-88f4-1f1220f8bd43",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1003d4cf-f77f-4873-87c7-d13661f7b916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4f4c25-ca4d-41c5-9ac8-4a0f321dbb36",
        "cursor": {
          "ref": "c1b1365d-530e-4f03-8dae-18c6d14276c4",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8eb0f2fa-97db-43cb-a30a-b2d3c83dcb48"
        },
        "item": {
          "id": "bf4f4c25-ca4d-41c5-9ac8-4a0f321dbb36",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fbe9c1cf-c0ad-4de7-bc92-142778e8061b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f333bf7c-01bc-481f-8b15-7591fafb4dd3",
        "cursor": {
          "ref": "58b6e9cb-911d-486b-a04c-02165bf22ff6",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "370f2924-c311-48b6-aab2-ebf8f48f1e2b"
        },
        "item": {
          "id": "f333bf7c-01bc-481f-8b15-7591fafb4dd3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a1a2b98c-ba71-4a23-8ee0-64534395c177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d5f14f-bc7d-472b-89c2-36229560c207",
        "cursor": {
          "ref": "24167bfa-2693-4788-ab05-7518b255add7",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "31a1bc56-d9e8-4d88-bc85-d150aba3885f"
        },
        "item": {
          "id": "e2d5f14f-bc7d-472b-89c2-36229560c207",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6de7d86d-5890-4774-a7fc-932330fb81dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48674d5-0146-4f57-8bf8-dfb9a019f8a7",
        "cursor": {
          "ref": "6a306006-1f62-4ce5-9d20-bda976d797c2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "51819d12-9e7c-41ff-ab2f-ef1e297ccccb"
        },
        "item": {
          "id": "f48674d5-0146-4f57-8bf8-dfb9a019f8a7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "758730bd-f6ab-44ef-b584-cdcde06f1b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d272934-1939-4452-86aa-7ef95d7e7bcb",
        "cursor": {
          "ref": "f8321eff-fc61-4781-bb4e-5208cbcddb00",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "048ab57a-88b2-461e-996e-fb5c3ec7804f"
        },
        "item": {
          "id": "1d272934-1939-4452-86aa-7ef95d7e7bcb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d79bf519-0c4d-477d-9ce7-4de41c02c67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6525d046-ed19-4861-b28c-12845796eb96",
        "cursor": {
          "ref": "637df2ce-21d9-4266-a8e0-db0efea59e3c",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ea7c6f72-fe1e-4158-b44b-47ecc3bb83b0"
        },
        "item": {
          "id": "6525d046-ed19-4861-b28c-12845796eb96",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "efcf331e-f4ca-436c-a896-243c6909c2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e3e3f9-feef-47fa-9e8f-e6662148a20a",
        "cursor": {
          "ref": "3e0b8fcc-fd58-4b70-bc78-f91b86157947",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ad82359e-7f83-4270-bd62-9d324233a14e"
        },
        "item": {
          "id": "b9e3e3f9-feef-47fa-9e8f-e6662148a20a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "98fc2ffa-572f-4456-8d1b-24ba92c847d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf9ab84-3beb-4583-8f07-992f42dddcd4",
        "cursor": {
          "ref": "8bdb02ac-56d1-463d-a4fa-3a4d9ebca124",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "066d9fcf-2634-43c8-b803-de29914bca76"
        },
        "item": {
          "id": "fbf9ab84-3beb-4583-8f07-992f42dddcd4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1fe8e317-cee7-40e7-b225-b62452a3e4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1fc8bd-901b-4923-8284-8a504fa78f42",
        "cursor": {
          "ref": "0ec9f00c-cbf0-4af2-8801-b7a7a7a171cd",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f3cce375-26d8-4ffd-9fc4-39e013eb619d"
        },
        "item": {
          "id": "df1fc8bd-901b-4923-8284-8a504fa78f42",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "633eea35-08f8-4d7f-b0cd-d68ccb872b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ac8f04-d38e-4bb5-9829-524824bb85a7",
        "cursor": {
          "ref": "6e698329-b107-435e-bf3d-55b3dda89a09",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "49f56cb1-4332-4b6e-9cec-c47a0a11d5fe"
        },
        "item": {
          "id": "17ac8f04-d38e-4bb5-9829-524824bb85a7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e0172f30-0928-4f38-858c-501478399816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5743665-eded-4564-a249-489cb04d4701",
        "cursor": {
          "ref": "4c5a0af9-d5d0-499d-9ac9-fa1e73600b8e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b68bc93c-a0e8-4a7f-b63c-fa702d2f1536"
        },
        "item": {
          "id": "e5743665-eded-4564-a249-489cb04d4701",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "39bb2bd6-7591-48d0-93ba-d365c88b8b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7049df79-6be6-47f6-b348-0c9e5d1d4167",
        "cursor": {
          "ref": "c5131ea0-467e-4c9d-9d6d-aef236e6162a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "56264a0f-2409-4f10-97b5-2f48bb2a8f00"
        },
        "item": {
          "id": "7049df79-6be6-47f6-b348-0c9e5d1d4167",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "84847845-8048-49e6-b447-10f60dd624d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67be3db6-c632-4423-bd74-174234645820",
        "cursor": {
          "ref": "48e0acc5-1b81-4aa3-ab04-a1d5b7be474d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6042a133-1365-4cb6-8ddd-90f45546670c"
        },
        "item": {
          "id": "67be3db6-c632-4423-bd74-174234645820",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "326991f0-94c1-4771-b934-0b9bc730692c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e07042-a421-4b66-9db4-805291ebe085",
        "cursor": {
          "ref": "05d8cd1b-b99b-496a-a1b4-37049d494eda",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "001fdc23-e9bd-4512-b853-c49c319c7ea4"
        },
        "item": {
          "id": "74e07042-a421-4b66-9db4-805291ebe085",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b709d07e-29b6-4d0a-b788-ac609e428e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcb7de6-c20a-4c08-8fdd-8e1e3bf68205",
        "cursor": {
          "ref": "874921f9-2a74-4d10-99e1-5e7fac8358dc",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "19eb6f9d-07c2-406a-8dd3-b44c24424083"
        },
        "item": {
          "id": "3bcb7de6-c20a-4c08-8fdd-8e1e3bf68205",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "229eebd1-ede4-4305-88ab-87aa28a8e66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57cfb19-62d0-4919-a575-4e245e95a877",
        "cursor": {
          "ref": "19e0adcd-456b-44c3-93b5-4f1a27edf802",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b59eeb8c-e106-4fc5-9405-3bd4099fc3ab"
        },
        "item": {
          "id": "e57cfb19-62d0-4919-a575-4e245e95a877",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4c34dc16-49ec-471b-91a5-b4a799281215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f381126d-274a-487a-ba26-c19dd9662a1b",
        "cursor": {
          "ref": "d114ae92-301a-4f7f-b027-c8c6e0b636ee",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "44f64e4c-fd89-4ff1-9a1f-972c0a90e5dd"
        },
        "item": {
          "id": "f381126d-274a-487a-ba26-c19dd9662a1b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e3a197c3-74e5-4f05-8453-313192645b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7303c91-2b74-42fd-bb93-50424b6eb5cd",
        "cursor": {
          "ref": "39f0b48f-57c4-409a-bbf4-0b06ff86cade",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9103065c-1eca-4c7c-a38f-ef1ad94b4455"
        },
        "item": {
          "id": "d7303c91-2b74-42fd-bb93-50424b6eb5cd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2cf3aec7-774e-464d-aa74-7c76df7b710b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6bd26b-f7b9-4524-80d9-35d1d1208663",
        "cursor": {
          "ref": "b9a19693-717d-4e21-a766-0851d41e643b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9225658c-88ef-4fb6-aa66-6139165a17fb"
        },
        "item": {
          "id": "ef6bd26b-f7b9-4524-80d9-35d1d1208663",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "12aa9a5a-7870-4e06-bf44-96d13a8e9cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c13d33-e68e-49ed-aac8-a8b80007d09c",
        "cursor": {
          "ref": "fd1e9c48-fe85-4bf6-ac07-3fd723badac7",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "515a7ee6-ff8d-45f8-a38a-65b66321b2c4"
        },
        "item": {
          "id": "07c13d33-e68e-49ed-aac8-a8b80007d09c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "16945702-9ced-4cc3-a3c4-e708b75b07e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae335786-4b45-43a6-8322-afb2ec531fa3",
        "cursor": {
          "ref": "4adc004c-da01-4c80-a3e4-4da14eef403b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "595945e5-90f6-4ad7-b10e-daf1fe7bac71"
        },
        "item": {
          "id": "ae335786-4b45-43a6-8322-afb2ec531fa3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2f7c77de-dc6c-49c2-8f71-0eb6530f28cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e025ff0a-3742-4871-8c9b-c73a25e60ba5",
        "cursor": {
          "ref": "61a7cf9e-ce76-4f7f-b3d3-bb55ab16d71b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f791d07e-ed9b-424f-8b21-b42f3462c798"
        },
        "item": {
          "id": "e025ff0a-3742-4871-8c9b-c73a25e60ba5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "00368d01-929f-4dae-8c5d-bbea7870118b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdfdace-8c84-4069-b714-926957e1c6ef",
        "cursor": {
          "ref": "ff131821-01cd-42fe-9aa2-f35991a3067e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "68eaf41a-de73-4859-80b8-15b246ac7081"
        },
        "item": {
          "id": "2fdfdace-8c84-4069-b714-926957e1c6ef",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "18fa2644-723c-42a8-9a8f-c5beb010c0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb4c685-3554-4365-a344-26226342f268",
        "cursor": {
          "ref": "3b564ca5-72fd-4c93-a944-86f6b04fdbd6",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5002020f-2d00-4679-80a4-70c85d2c40f2"
        },
        "item": {
          "id": "9bb4c685-3554-4365-a344-26226342f268",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bd2a8338-bc58-401c-ad18-6ef340e05623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced78cbb-65ce-4823-8b7e-f8d0d4a549c3",
        "cursor": {
          "ref": "89701139-3bbf-4ae6-a1fc-d7bce2e9025d",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9a15a36e-2061-4589-8241-0412416813e0"
        },
        "item": {
          "id": "ced78cbb-65ce-4823-8b7e-f8d0d4a549c3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "21f78444-090a-4b5f-9f0c-055ad80e0a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e72371-a34b-40e1-adcf-bf39d62d31c6",
        "cursor": {
          "ref": "82352eda-46e3-457c-8949-321a42599c22",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5aa03b61-bb6e-41aa-b481-90ae69560030"
        },
        "item": {
          "id": "29e72371-a34b-40e1-adcf-bf39d62d31c6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4fcf81e3-781e-47e1-b1d5-17abed8f2a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de22e309-8a70-4228-bb3a-ee617f825312",
        "cursor": {
          "ref": "8efa7a3f-3818-460f-a4d0-1e1211c613ba",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "19e9129e-f919-4cd0-9add-58dd76d8e1df"
        },
        "item": {
          "id": "de22e309-8a70-4228-bb3a-ee617f825312",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "86c76e7b-8617-40a4-b7b6-8a3b57ae8a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaefecff-dfad-4ca4-aaa9-17554c869082",
        "cursor": {
          "ref": "06d9007f-fa3d-4767-9b3b-efba86877ccd",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c9091f39-3f9a-4a5f-b643-adc4a97f121d"
        },
        "item": {
          "id": "aaefecff-dfad-4ca4-aaa9-17554c869082",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f652bdc3-a204-4080-a536-935a67b5e49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db45937-b5e5-46d7-abd4-77b5f1079d21",
        "cursor": {
          "ref": "099b52e3-0a9e-4e6f-b9a6-a8ec85fe951a",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "83ab7999-7fd4-4e02-ade3-e5eda686a9da"
        },
        "item": {
          "id": "9db45937-b5e5-46d7-abd4-77b5f1079d21",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7bdead32-8c3c-46d5-9c6a-2258f2a61019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8cbce5-29e0-4fa6-81a5-ab30b00f28ff",
        "cursor": {
          "ref": "bd347e3c-cce5-487a-bc50-54a791730903",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "33089eb8-b656-4da9-b929-617dfa27bc68"
        },
        "item": {
          "id": "5d8cbce5-29e0-4fa6-81a5-ab30b00f28ff",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5d4a9752-5817-4106-bf1b-892fc812f935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450d082d-d98f-4fd2-9be3-2fade55a54f9",
        "cursor": {
          "ref": "86169bc1-3e9d-4b9d-83ed-60a0bb977486",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0fc49a10-bd14-464c-8827-fc04c34c0089"
        },
        "item": {
          "id": "450d082d-d98f-4fd2-9be3-2fade55a54f9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b50eed6d-d2ba-49e0-9714-58375587c920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ed63d5-6d6e-483a-8166-f7dbc110cfa6",
        "cursor": {
          "ref": "b5a6fccb-54a3-4574-b708-d0d942040267",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f376a31e-257e-47a4-875e-7b544fc72d35"
        },
        "item": {
          "id": "64ed63d5-6d6e-483a-8166-f7dbc110cfa6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c93c66d1-7ef5-4b68-8dcf-ecd548a875e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b875536-2fb7-4061-b2f1-24a2ca585b92",
        "cursor": {
          "ref": "8fb620ef-1649-43fb-927a-556d700becad",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "65e2f8c1-6d5e-4d62-94ed-06cd767f336e"
        },
        "item": {
          "id": "2b875536-2fb7-4061-b2f1-24a2ca585b92",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "74b3a32b-aa9e-4d2c-8ced-f542edc10685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7ab48f-ee93-4a2b-8482-8cd29bc52ac5",
        "cursor": {
          "ref": "b1d0b52a-651e-44d0-98b0-493c2904cfdd",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "afe3d1b2-fa43-44df-9728-642aa782b8fc"
        },
        "item": {
          "id": "be7ab48f-ee93-4a2b-8482-8cd29bc52ac5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "049b56a9-2ed4-4d35-b0fc-cc9b7dc4cc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a635b15-9409-43dc-b004-dea29f1b27ea",
        "cursor": {
          "ref": "4df76e91-3230-486b-904d-f4a2585b44e6",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ef8dfc2f-3ee2-4a26-868a-309e59e09a26"
        },
        "item": {
          "id": "7a635b15-9409-43dc-b004-dea29f1b27ea",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "06f07c12-5fb9-4bac-a68e-47456c3a7d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7040c5-ebec-4f3b-a7b3-0c9f8d232764",
        "cursor": {
          "ref": "e2bf063f-26b8-4b75-b7f6-0692de2261b3",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "80c91f54-d6da-42e2-b9c5-4c0df800302e"
        },
        "item": {
          "id": "3a7040c5-ebec-4f3b-a7b3-0c9f8d232764",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3cb0fa52-bc92-4acb-81d6-20a2be0a3cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da550661-7efd-4ea8-86c7-f8da5bbaae54",
        "cursor": {
          "ref": "85303ab0-0816-4560-9a88-47a9e53149f6",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "89da4704-3b3d-4b96-855e-a60791e4c60e"
        },
        "item": {
          "id": "da550661-7efd-4ea8-86c7-f8da5bbaae54",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c0a6de7a-5c91-4544-9763-ff05950a7c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0123c9f4-6c4b-4813-a381-0190281fb7e1",
        "cursor": {
          "ref": "16e8e1d9-d54d-410a-90a3-52fc3ba05720",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d52b5a3a-735f-44a6-8bca-a5f688aef134"
        },
        "item": {
          "id": "0123c9f4-6c4b-4813-a381-0190281fb7e1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "da90bb3e-d5d8-4206-a8d9-0d7025866fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cb4a22-e18e-4c5b-9c2b-24cca7566ee0",
        "cursor": {
          "ref": "abb42be0-1c42-4c79-a3f2-21688c13f2b8",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2bde2641-d0ce-450d-a187-b166efc74df3"
        },
        "item": {
          "id": "37cb4a22-e18e-4c5b-9c2b-24cca7566ee0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2e11f277-365e-4d83-ad47-1cb8dd8884cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43a2777-cb04-45f8-b08a-1417db3ef487",
        "cursor": {
          "ref": "ea6b3c0d-bfd8-4c79-85a0-751e40e82db9",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cf5b00f1-1eea-4a2b-bb7e-fe79c665c52b"
        },
        "item": {
          "id": "d43a2777-cb04-45f8-b08a-1417db3ef487",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "757e6874-4f06-4097-9e84-8ffe0bcf3c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3ffd83-32ab-419c-94fe-5fe98e2d2aaa",
        "cursor": {
          "ref": "39acf5ac-1fde-4c43-882e-1166187f0cfa",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a388fa87-2eab-4280-97c5-e4dc95e9b2f8"
        },
        "item": {
          "id": "4e3ffd83-32ab-419c-94fe-5fe98e2d2aaa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a9080f76-8a43-4fc2-8460-cc05db0db1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da20f3ef-687d-4050-bf08-722c30601d44",
        "cursor": {
          "ref": "58733b1f-9252-4533-9462-a2e689412da8",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "23b9fd03-1f5f-4d2c-9b2c-69829b001c23"
        },
        "item": {
          "id": "da20f3ef-687d-4050-bf08-722c30601d44",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d0dd9597-6c5b-4bd9-b029-b7a616bfeffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a54395-03bd-431c-a57e-4b87b0857872",
        "cursor": {
          "ref": "34008448-50b8-4cc6-abfd-c9e9c9593f6c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fda08934-ff18-4bd0-b3ef-7e1579c7d38a"
        },
        "item": {
          "id": "53a54395-03bd-431c-a57e-4b87b0857872",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5f239aa8-22dd-4b22-bdff-ae2e3ac6721a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035c05ab-4c5d-4c75-9772-fdd6417c479c",
        "cursor": {
          "ref": "1b57f7af-099f-45d3-bef7-02c0922ea09f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "14408713-ef98-4fe1-b447-6bcb8de61445"
        },
        "item": {
          "id": "035c05ab-4c5d-4c75-9772-fdd6417c479c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a64bd5ff-28f5-4b78-8bc6-da8feabb94f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0a562a-6f1a-43ca-8e23-35096882f23f",
        "cursor": {
          "ref": "de82e517-483a-4488-966f-b2cec2346cfc",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a423013b-ce8b-43c8-8949-7c0e1fbb7dd1"
        },
        "item": {
          "id": "ce0a562a-6f1a-43ca-8e23-35096882f23f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "91c20676-b933-495a-b801-239c20bc6c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859729bf-ebba-4391-a141-188bc2bdbbbe",
        "cursor": {
          "ref": "a6e49ea4-78f1-488a-9fa7-6dd610d74253",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c754b55b-3a83-4467-8c22-77baa1a1bf84"
        },
        "item": {
          "id": "859729bf-ebba-4391-a141-188bc2bdbbbe",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bee9e2f3-9ed6-41f9-9a51-8f6c6bc08cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586248ea-281b-4e6e-ab89-46d46216c291",
        "cursor": {
          "ref": "0f8b578b-03f2-4269-97db-a0a2d7c94829",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "357935d1-0cc8-4fb6-b7b4-d03553c94a60"
        },
        "item": {
          "id": "586248ea-281b-4e6e-ab89-46d46216c291",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "edc1e2af-9024-4d96-a678-0d1b3912a4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf10fad-1de3-4fd1-bb47-2b204f5b9e81",
        "cursor": {
          "ref": "a604f10c-258f-45b4-9c17-3f1a48da3cd9",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8fcf8a95-9df6-46a9-85e9-aeb8c8d46e16"
        },
        "item": {
          "id": "bdf10fad-1de3-4fd1-bb47-2b204f5b9e81",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "13a852d2-c44a-47ef-b945-dd72519d59d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a82e39-f5cb-423c-9739-911d9401def9",
        "cursor": {
          "ref": "c063c332-75e7-483a-ab2b-97336f08718e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3724dc2b-9a8c-49e5-a283-7440dbe815e7"
        },
        "item": {
          "id": "16a82e39-f5cb-423c-9739-911d9401def9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9b3c26f2-40b4-4e0a-aabe-2ca52fcfbed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda3fc70-d201-423e-bf88-b66903e8b3d7",
        "cursor": {
          "ref": "3d03546d-e3bc-4b3c-8f87-0791ae3f42b7",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "51802ab1-9327-40be-b031-8792b12f0894"
        },
        "item": {
          "id": "bda3fc70-d201-423e-bf88-b66903e8b3d7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "eb097136-3ee4-4c9e-88f5-a2719cfb2d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d4074c-68f7-4e47-82a9-e49f066059ae",
        "cursor": {
          "ref": "d8ee1d83-c51f-4489-ae13-aec1db4ae9e3",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "63c11ac3-153b-40f7-ab85-e9cb08f5b0bc"
        },
        "item": {
          "id": "a6d4074c-68f7-4e47-82a9-e49f066059ae",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a9692186-5e25-4d61-9174-bc60cf15f36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4edfcc8-777d-4b0c-ae7a-b13472032191",
        "cursor": {
          "ref": "a3087fc3-8744-46e2-b444-d310cc869dad",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3384e437-dd09-4398-bed5-2578ddf08459"
        },
        "item": {
          "id": "d4edfcc8-777d-4b0c-ae7a-b13472032191",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c791d4aa-b34d-45e9-b23e-dea55b53537b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a043f5f-c53b-4ec2-99ed-678a4099f9c0",
        "cursor": {
          "ref": "0e85fedd-43b6-4206-a0c6-b0952894dd37",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2b586f47-fda0-4833-8bed-3ac01234b386"
        },
        "item": {
          "id": "4a043f5f-c53b-4ec2-99ed-678a4099f9c0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f683ce06-1082-4dc2-9963-bb3da9a4dc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5689d94b-767c-4972-8edb-a4b386f11e10",
        "cursor": {
          "ref": "6ddd1ad6-258d-464d-9d9c-3036852afac2",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "37d674db-4f74-4728-988a-7f1be5790bcd"
        },
        "item": {
          "id": "5689d94b-767c-4972-8edb-a4b386f11e10",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6b987651-5934-42c4-9c0a-3e4c1cb35b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445a8d00-83a0-48cb-ae57-aa49cc7538da",
        "cursor": {
          "ref": "12dd47c6-5f0c-4d18-ad81-c1d43d1cb179",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bbc462e8-e4a9-4bcd-9f59-575176c4514f"
        },
        "item": {
          "id": "445a8d00-83a0-48cb-ae57-aa49cc7538da",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c6514a97-fd5e-46a0-bfca-969ec372fcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4088956c-979f-4bdb-93e3-9c3cab7e1bb1",
        "cursor": {
          "ref": "9bca7b49-0634-433f-bff1-30ec3dd2df6b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9c782dce-464f-4850-a420-e4c051c2b44c"
        },
        "item": {
          "id": "4088956c-979f-4bdb-93e3-9c3cab7e1bb1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a71fa536-6412-4792-a3fd-90d359b4012b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c027eeda-0cd3-4f36-ac3b-00d7c1a9455a",
        "cursor": {
          "ref": "7ac71fea-4e9f-4fea-800f-b189cf3825f0",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "32de31c3-5ed4-4dc7-a980-4f8a165e33e8"
        },
        "item": {
          "id": "c027eeda-0cd3-4f36-ac3b-00d7c1a9455a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "758e6601-1725-479b-8d80-99303f29b113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb708cd-7b76-4d89-bf72-71674d9efdc0",
        "cursor": {
          "ref": "85763ce1-b78f-4645-a0e9-9b642bdb2fa9",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6dff0878-ff8b-435f-9203-deec81ebbc55"
        },
        "item": {
          "id": "ecb708cd-7b76-4d89-bf72-71674d9efdc0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "496b156b-0044-4075-88cc-421923189c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68176e9d-45c3-424d-b812-08843e64df4a",
        "cursor": {
          "ref": "25641a2a-ef66-40bd-a5c7-f587d1880ee2",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4b2d67d9-c5fd-45d6-857c-1065633cbb10"
        },
        "item": {
          "id": "68176e9d-45c3-424d-b812-08843e64df4a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aba1e899-3c3e-47e4-81d9-a30e4bce7a99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7319714-279d-45ad-81a4-09eb153e0e5c",
        "cursor": {
          "ref": "2c892e2b-e18c-4912-ba99-0796cd5f58db",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "82305950-7544-465d-a6ab-4b97ab5cf035"
        },
        "item": {
          "id": "c7319714-279d-45ad-81a4-09eb153e0e5c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3ab11747-5e39-41f1-a339-2d959b2770bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51624464-b11f-4a62-9d8f-543e1ae3f4ea",
        "cursor": {
          "ref": "5a3f584b-66e0-4c7d-a23e-3c1c8ad890d8",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b9ed0efe-c76f-4429-85d6-160b5807f430"
        },
        "item": {
          "id": "51624464-b11f-4a62-9d8f-543e1ae3f4ea",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1e1bc62a-9362-45f9-96fc-a543ffbd4aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02ea519-517a-4a64-b10a-9438e0392310",
        "cursor": {
          "ref": "71e0a83f-871f-464c-893a-547722055ac5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f2f3e1a8-13ac-407f-a915-4ba4bb258aa5"
        },
        "item": {
          "id": "c02ea519-517a-4a64-b10a-9438e0392310",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "902326d2-d635-422b-b147-ddcb2cc4f147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39837649-18a0-435a-9dee-ab02247ce77a",
        "cursor": {
          "ref": "df5730c1-4610-4e0d-9ea5-82ccc25b2cde",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "78d27ba4-86dc-4776-a4c9-dd096a20d75e"
        },
        "item": {
          "id": "39837649-18a0-435a-9dee-ab02247ce77a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ecc99600-fdad-4c64-952a-1ee68e3d9617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a73bcd-a604-4280-9b82-ecc48c385ed1",
        "cursor": {
          "ref": "089fa01c-59d2-49ab-9c21-bbef7dfd2a4f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5cef7f26-2ef2-4949-950c-a3206dff8ed6"
        },
        "item": {
          "id": "e9a73bcd-a604-4280-9b82-ecc48c385ed1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b8748900-9818-4532-8b4d-e49a3eb65bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a7cb5a-8d5f-45b3-86b2-3ad3ce535964",
        "cursor": {
          "ref": "b205dce6-e983-4d6e-9660-45e1e418a444",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "25a6393a-0f2a-4e8b-823c-5f5118a573d9"
        },
        "item": {
          "id": "03a7cb5a-8d5f-45b3-86b2-3ad3ce535964",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5850ab3f-3af6-4f9f-a9fb-b8dddb32a52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dffc70-98c1-44a2-ac2f-2b9184740ee4",
        "cursor": {
          "ref": "eec3d317-b1ad-47b5-9bf9-f446e4b3567c",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e876667a-61b4-420c-a4ab-8837f4597ad0"
        },
        "item": {
          "id": "d3dffc70-98c1-44a2-ac2f-2b9184740ee4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f722d498-c9cf-4440-8693-022f7eda6013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0ad1e5-0adb-4409-b34f-8e7b079929f5",
        "cursor": {
          "ref": "50a6b256-8044-4848-af32-4ce3303ca223",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "45511dd2-2ed7-4540-bcfe-c35b2287efc0"
        },
        "item": {
          "id": "fe0ad1e5-0adb-4409-b34f-8e7b079929f5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f1dbe1c8-49db-4f71-9dbf-0f2fad5b04b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9ed155-fcc8-410a-a2a6-3c9898bdfc59",
        "cursor": {
          "ref": "e3f57e46-8329-40a0-8991-5408f0f53ccc",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a84c3ea1-e32f-4503-971c-468ec19f33ab"
        },
        "item": {
          "id": "7b9ed155-fcc8-410a-a2a6-3c9898bdfc59",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f0cffe60-4e51-4515-af7f-bbe12ac52794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f95f3e-af38-44c0-9590-22547ca8822a",
        "cursor": {
          "ref": "ac12dad0-374b-48a2-a4ff-f3b255123dd2",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "393cf891-30a3-472b-a49e-44817399f09c"
        },
        "item": {
          "id": "75f95f3e-af38-44c0-9590-22547ca8822a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a9b69145-9103-4f2c-9e78-4342552d4143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429a912b-ec39-4b1e-85f4-591593adccb5",
        "cursor": {
          "ref": "99df86d5-6477-4637-9f51-36f6f297c907",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "48660f77-a677-4ad0-9a68-4de019f3cf2b"
        },
        "item": {
          "id": "429a912b-ec39-4b1e-85f4-591593adccb5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5c7e9020-acda-4ff0-9199-9dcb397fda81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719a1240-7401-491d-99c1-18864a37f71c",
        "cursor": {
          "ref": "91b58712-4c49-4ffb-8818-0429330f12bb",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d76c1d0a-13ea-400c-9399-b357babf322e"
        },
        "item": {
          "id": "719a1240-7401-491d-99c1-18864a37f71c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8be69ee0-87a2-4a4b-ab80-492778aadc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a0727d-1f8c-4c99-a1f4-1cb530f4ca46",
        "cursor": {
          "ref": "cf7bfc31-d054-45df-b345-989bcb19687b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "99c929d0-d255-4fe5-a403-7efe95b62d5a"
        },
        "item": {
          "id": "99a0727d-1f8c-4c99-a1f4-1cb530f4ca46",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f19ad5f3-68ce-4fa8-82aa-1cdd673cbc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ec9518-bc80-4b12-8f2d-7e8744e7a030",
        "cursor": {
          "ref": "2156275a-d8c5-4f36-85bb-f419ad9fc5b0",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4a661e69-fab4-4545-9b29-3a53bf9a8634"
        },
        "item": {
          "id": "80ec9518-bc80-4b12-8f2d-7e8744e7a030",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3d1cc6f3-54cd-4148-8b6e-c0630ce5c94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1074b7-ac3f-4bbd-afcf-a90144ad98aa",
        "cursor": {
          "ref": "afdfec86-cc83-447b-821d-11f1c4611087",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d60f30e0-1011-422e-aac8-f03adad306cf"
        },
        "item": {
          "id": "7b1074b7-ac3f-4bbd-afcf-a90144ad98aa",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3c1f85b8-4641-4a32-ab95-399d24d2314f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbb339c-6dec-453e-aff2-572163a39eed",
        "cursor": {
          "ref": "b3001aad-d2fa-41bb-89c0-13c3b6b43f72",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "18d375bd-1f6d-4852-8ff1-375099b64d64"
        },
        "item": {
          "id": "8dbb339c-6dec-453e-aff2-572163a39eed",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fab5caa2-1b3e-4ce1-a839-244dd6477f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81132332-82d7-4852-8472-40b4047cd6a1",
        "cursor": {
          "ref": "82ea2cc6-cd16-44a8-96f2-a225c2c30286",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "651acad0-d14a-4162-960d-6e84a86ccd5c"
        },
        "item": {
          "id": "81132332-82d7-4852-8472-40b4047cd6a1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cc4ad44c-c0fd-4b9d-b416-246cf552af4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cbc763-2458-4dd8-8373-bbfcd7e5dcb9",
        "cursor": {
          "ref": "ff76489a-4c9e-4948-92f8-b1d9b768d5d9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c43197be-c01d-41a0-8f9d-5d59d8193f66"
        },
        "item": {
          "id": "57cbc763-2458-4dd8-8373-bbfcd7e5dcb9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bea6768f-bfd5-4aa3-8855-750fb94d3ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdb02ff-ecd5-4a45-9a9a-53f4aa57138c",
        "cursor": {
          "ref": "a373e09f-36a3-497a-8c96-45657181b0df",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a7ba045f-7a06-4321-960f-ca069b80d1a2"
        },
        "item": {
          "id": "4fdb02ff-ecd5-4a45-9a9a-53f4aa57138c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "58460f19-90f7-4de7-97cc-78259dea3312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6112d785-aa09-415e-b68e-431d202ebe2a",
        "cursor": {
          "ref": "b42a3f09-5e9b-427b-957a-dc042d802374",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "04360db8-e78e-49fa-b61c-66b0880e252e"
        },
        "item": {
          "id": "6112d785-aa09-415e-b68e-431d202ebe2a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ea8ad709-0cea-4322-b03f-d52922c1e1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1a142f-1e75-4973-8d7b-3a774bf00136",
        "cursor": {
          "ref": "fe2dd3f4-465c-48e9-86b2-a05e72cb0927",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c6df5667-fb7e-4fb0-80da-54df2cfdb5f2"
        },
        "item": {
          "id": "7c1a142f-1e75-4973-8d7b-3a774bf00136",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5351968d-58ab-416f-8e96-7cfcb961843f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5246d66d-0348-4caa-acce-3738f5068173",
        "cursor": {
          "ref": "ed6f5a53-db09-468c-a7d2-0efeecb09baf",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "52dbaf1d-7915-42ef-a132-77d09f1f9fc8"
        },
        "item": {
          "id": "5246d66d-0348-4caa-acce-3738f5068173",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8e9fe196-c919-4c9c-b1dc-366b6f908adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9dd7b1-95d5-4051-bad2-4d24e62df2a2",
        "cursor": {
          "ref": "a4c12ee4-ac33-4f3c-8513-887dfb8acc87",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "eabfc593-2940-4b8c-b1f1-b5bdb7b23eda"
        },
        "item": {
          "id": "7a9dd7b1-95d5-4051-bad2-4d24e62df2a2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4b8050f9-5e96-4c11-bd4c-605c8750cdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea59d788-67f5-4c92-9217-322b92b47390",
        "cursor": {
          "ref": "39228449-2a18-4e01-8b45-7c7423ced4a0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "eecfb251-ae3e-4a29-b33b-7c21985cd5c1"
        },
        "item": {
          "id": "ea59d788-67f5-4c92-9217-322b92b47390",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "eee31c82-6820-473e-b035-680d8bfb9fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e271cd-f909-4eeb-b66a-c3bd8d75b961",
        "cursor": {
          "ref": "f081c123-329f-49fb-8067-fafd4ad0f46f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2550f51d-35cc-47a8-ad9b-539829d7ea96"
        },
        "item": {
          "id": "06e271cd-f909-4eeb-b66a-c3bd8d75b961",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5f0f217a-e4fc-4d15-9c9a-5d5f7431c79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac0bdb0-5661-425c-8e1f-98a0c3e42c50",
        "cursor": {
          "ref": "26eea8fa-262f-45e9-9aae-a74d2707946a",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2471d0f0-dec7-4d1a-919a-c5cc616aa2a8"
        },
        "item": {
          "id": "4ac0bdb0-5661-425c-8e1f-98a0c3e42c50",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a2562dd6-8d72-4e4a-91c3-8bf678328428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffad2714-59cd-47b1-bafb-a7cd1e545b20",
        "cursor": {
          "ref": "f4838218-fa14-4258-a752-a6626833c215",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "efc91566-adde-4088-b2d2-0c0dcdc9a9b0"
        },
        "item": {
          "id": "ffad2714-59cd-47b1-bafb-a7cd1e545b20",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e1e74349-5d1c-4f06-91c7-62367ac7a31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c66dc31-4e2e-436a-ae94-fe40b455cfb9",
        "cursor": {
          "ref": "d5f1a687-6414-4982-84d2-0fcd4c064d54",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e70e27d3-b249-482e-ab5f-e59aa3827e6e"
        },
        "item": {
          "id": "3c66dc31-4e2e-436a-ae94-fe40b455cfb9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e3488295-7997-4f6c-ad12-1f4e1bd1467c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1052569-7e81-4772-819d-ce9a6db351f0",
        "cursor": {
          "ref": "f933c856-539a-412e-ba81-5fd50df5f656",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d1d4ffc9-c063-47d5-a26a-09c68684d116"
        },
        "item": {
          "id": "e1052569-7e81-4772-819d-ce9a6db351f0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "719cf85c-93fd-4f07-a50b-9d4ea8f3728e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371a280e-29fd-4390-9f22-f5831a796fb0",
        "cursor": {
          "ref": "3d1e5d38-0237-4326-b54c-7f6e7578d243",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3d13c401-822c-472c-86f4-2dd39c476de5"
        },
        "item": {
          "id": "371a280e-29fd-4390-9f22-f5831a796fb0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dd8da8df-2582-4868-90cf-89fab072409e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb03e13-a1f7-4f3a-940c-d0c1032aa6ea",
        "cursor": {
          "ref": "d1c05f17-2af5-4e4e-9562-e058a71c2300",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8527bf07-95cd-4d3d-9e6f-ed48d7f0651a"
        },
        "item": {
          "id": "3bb03e13-a1f7-4f3a-940c-d0c1032aa6ea",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dc553131-b722-4b9b-bd2d-eaf45b403bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9821d4-d731-45b7-bf86-ffea7da4d71e",
        "cursor": {
          "ref": "7c38afe3-dc6a-4110-8f73-da02e51f990d",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3a429dc0-eaba-42ee-82b6-5ff40218e0e4"
        },
        "item": {
          "id": "9c9821d4-d731-45b7-bf86-ffea7da4d71e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e4847bea-f3b9-4804-a875-58b6d10da8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97502ed3-7488-48b8-a905-1fe1515e31d0",
        "cursor": {
          "ref": "dbbf8c8a-90bf-4ad1-9890-7b7333ae44b2",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "607fee11-7d15-4436-bc46-b7b5baf6e2ab"
        },
        "item": {
          "id": "97502ed3-7488-48b8-a905-1fe1515e31d0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d05cd1a0-1083-4c12-9265-4c026c235606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac0295c-7931-4b88-9492-cf7fad794705",
        "cursor": {
          "ref": "317fcbeb-d7b8-4306-b501-ddb31ff5c484",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "31f1488c-aa82-45bb-81e6-d8f904a0248c"
        },
        "item": {
          "id": "9ac0295c-7931-4b88-9492-cf7fad794705",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "131a884a-55d7-4ea9-9061-8b4fa0e89962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b409b20-1bbc-4d63-a4ee-033cff6c5157",
        "cursor": {
          "ref": "24fb0040-9eff-43ca-a958-8c0e8cf1a86a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7bfb38fe-1562-4e22-94d7-f78bdeec2bc7"
        },
        "item": {
          "id": "0b409b20-1bbc-4d63-a4ee-033cff6c5157",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "98b55333-0a5b-4a5a-9c8b-a7c2d33f5a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c63bb54-73ac-495b-9cd1-77ed109607e8",
        "cursor": {
          "ref": "207fcfe8-2ebb-42ee-8c38-3c9fea478ca2",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "140cdd72-5a5b-4736-baab-323ff56fca65"
        },
        "item": {
          "id": "2c63bb54-73ac-495b-9cd1-77ed109607e8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "416ac75a-5f33-4317-bbba-18e14768e88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e883b1-adda-45f9-9a78-d54a199cd8e7",
        "cursor": {
          "ref": "9c81f93d-2fd0-485a-8202-831a45d847fd",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0ecc77b5-dda6-4c0f-be9b-e3fe79fc26b1"
        },
        "item": {
          "id": "35e883b1-adda-45f9-9a78-d54a199cd8e7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4f481723-6b86-4708-98e5-4f5ea85e5595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31076f5b-46b6-4716-b2c5-a20d1e178c3e",
        "cursor": {
          "ref": "1d2122a2-da25-4ba7-8912-287d7f5844ce",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f68c3dc7-5df2-479a-875e-c98480ff15b4"
        },
        "item": {
          "id": "31076f5b-46b6-4716-b2c5-a20d1e178c3e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "72c98fb5-6efd-4feb-9ff8-acbeea4d6b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e49d7d7-ff35-44fb-b576-993c9d92f46d",
        "cursor": {
          "ref": "10437858-4a50-4482-adc6-29c3b3493482",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "88cc7dbc-06f2-4a80-a66b-9525e38e7cca"
        },
        "item": {
          "id": "5e49d7d7-ff35-44fb-b576-993c9d92f46d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "45153729-7ec3-4c2a-967b-99efc41d0dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6602d7c6-45b6-42a9-9311-ee53347a08b7",
        "cursor": {
          "ref": "ec01176a-9e3c-4a2b-aa73-365e267809f6",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bf07dda5-b730-4365-8808-03420fdd175c"
        },
        "item": {
          "id": "6602d7c6-45b6-42a9-9311-ee53347a08b7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6dbed5b9-fe28-448c-b2b4-5e12692bd05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37df7592-94e2-41f6-abd2-df073951553a",
        "cursor": {
          "ref": "c313b4d4-dc40-4519-8e45-39eb36105f98",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "36512ffd-f4a0-4f96-8c10-9ea5c22b3672"
        },
        "item": {
          "id": "37df7592-94e2-41f6-abd2-df073951553a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f8144dd3-9742-4ffe-8ed9-93b8b8698560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8b32e7-f83d-497f-834c-36e0e19cf3d5",
        "cursor": {
          "ref": "8c478424-d9ab-4185-afdd-bfba9399ee45",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6f86fde5-4223-43cf-a4d0-3246f891a10c"
        },
        "item": {
          "id": "ff8b32e7-f83d-497f-834c-36e0e19cf3d5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "90b84234-779c-4bfa-aed0-d58ed6db0023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51a3376-a75c-4bb4-a6d4-0589aea3bae6",
        "cursor": {
          "ref": "e73909e4-7a71-4d81-ab39-e2c7ed51d44b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "14c7ca29-576f-448c-a02d-da2e2e616acd"
        },
        "item": {
          "id": "e51a3376-a75c-4bb4-a6d4-0589aea3bae6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3be316a2-df40-4182-ad41-9a005b8663b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6524ea4-d2c2-42e0-985a-f3b590f841b1",
        "cursor": {
          "ref": "5a8f9ba5-f0fe-4c6b-8066-3427abb0bfeb",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "472b2354-e595-4b36-89af-c92ae12ca48e"
        },
        "item": {
          "id": "e6524ea4-d2c2-42e0-985a-f3b590f841b1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bcd5732a-19da-4062-8883-135aeedcb59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2b7ecf-5ad7-4971-81c9-d6bd7b2a8b86",
        "cursor": {
          "ref": "9412d91e-168a-409d-8524-6df4cf070ed5",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fa0458c2-d1b4-4158-b81f-6bad5e534669"
        },
        "item": {
          "id": "7b2b7ecf-5ad7-4971-81c9-d6bd7b2a8b86",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "093a48cd-feba-413e-a2e9-8aa337a89680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff446ad-bc4d-4e9b-a554-09b1e42082e1",
        "cursor": {
          "ref": "ae69a9f4-9f27-4797-b6f9-26db664beeec",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "289a95ef-2c65-4107-9827-20cd40907274"
        },
        "item": {
          "id": "2ff446ad-bc4d-4e9b-a554-09b1e42082e1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0bd7a1f0-c355-4cea-b9f5-9af2511f41dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3698757a-36bf-4e23-8a39-9909e91e1e3c",
        "cursor": {
          "ref": "3372bb76-3984-42eb-a6d1-58b7b5c1ba24",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5ca68451-9174-4f4d-bbc0-88e962655c89"
        },
        "item": {
          "id": "3698757a-36bf-4e23-8a39-9909e91e1e3c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "525bd7ae-e472-4745-b224-da5efaa60302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c015a1f4-c481-412f-96d4-6d3ae593f49d",
        "cursor": {
          "ref": "30bcd675-eba0-4767-8a0f-bd5dd644854a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c091097f-e939-4aa2-9f77-cd1b75afd462"
        },
        "item": {
          "id": "c015a1f4-c481-412f-96d4-6d3ae593f49d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "15d01dd3-69cc-4935-9860-546db571047d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bafd4b-2953-4ff6-ab1a-9966fe8a2742",
        "cursor": {
          "ref": "d55ba31f-d2ee-4363-8269-f269b4754c32",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8f597911-f630-41f4-8ba7-13037c40674a"
        },
        "item": {
          "id": "a3bafd4b-2953-4ff6-ab1a-9966fe8a2742",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0947d0b5-1c37-446c-81b6-b74c1f8b4192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492b6ea7-5029-4cac-a43f-4731c6fe3da9",
        "cursor": {
          "ref": "85a66446-3c7e-41d7-a26d-1677a9bf22c5",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1086850f-3cb9-467c-abb8-3a8268a58a31"
        },
        "item": {
          "id": "492b6ea7-5029-4cac-a43f-4731c6fe3da9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4e752b45-9e21-4a0f-8b07-1ae31fe44a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938bd5b3-5da7-4658-9360-1b284d462b42",
        "cursor": {
          "ref": "f7b74f00-c7a9-4f3c-a455-51ae7c84c146",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "830c4cb9-839b-4ebb-a380-f4a60f9fd728"
        },
        "item": {
          "id": "938bd5b3-5da7-4658-9360-1b284d462b42",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a5ca7392-3d53-48f4-ab01-0ed3664c1011",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "265b16cb-f361-44af-8e24-63effe6ba4e8",
        "cursor": {
          "ref": "7dbfeead-8e26-4eb2-b49f-99c0ffb6ec5c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6cc68168-2ba9-47e8-b609-97a61ed0df03"
        },
        "item": {
          "id": "265b16cb-f361-44af-8e24-63effe6ba4e8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9d533f0c-9a2c-4988-94a8-91833205b1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55e8faf-19dd-4e77-913a-5ab50a443f5e",
        "cursor": {
          "ref": "b07e625a-a3b3-468c-b790-7d21a6a764e3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "77127d40-b2ab-4ff7-b3e1-23552cfe7540"
        },
        "item": {
          "id": "b55e8faf-19dd-4e77-913a-5ab50a443f5e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d185bf38-8004-4275-a823-04e6dad8064a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87378a09-33c5-42ec-b5db-0c0c041f5d8c",
        "cursor": {
          "ref": "6a10f386-6b50-4fdd-8587-c7cc5cc5136e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7abdb3be-8adb-4484-a13b-c3394d735ec7"
        },
        "item": {
          "id": "87378a09-33c5-42ec-b5db-0c0c041f5d8c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "26978b15-a073-49f3-b999-e5a6decae181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c555fed4-ad37-42ae-9186-9d9e05aaf44c",
        "cursor": {
          "ref": "1559eb4c-3059-47f0-b5cb-7109e67ad2ac",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ebf6a071-5035-44d2-98ba-47e3c4712812"
        },
        "item": {
          "id": "c555fed4-ad37-42ae-9186-9d9e05aaf44c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e9bacd03-b68e-43ec-a2df-8fa45de291e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e6cef1-9edd-4256-9508-3e48bc167c67",
        "cursor": {
          "ref": "81bba9c3-e0ef-4b6a-b075-7a73c696013b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "13ffb7a4-97a5-4896-a96e-2bfef41d19f5"
        },
        "item": {
          "id": "93e6cef1-9edd-4256-9508-3e48bc167c67",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ce569e1a-cef5-482f-991f-b9c0bf06924e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd3e530-2400-43d6-ba69-6b4b83f0d674",
        "cursor": {
          "ref": "74246f41-90e9-4b7a-9ce4-7069604ff977",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d92987d3-4f39-40fe-a01d-5b625f0fc4f2"
        },
        "item": {
          "id": "cbd3e530-2400-43d6-ba69-6b4b83f0d674",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4d606fdb-973e-4d1a-ab3b-8883038567a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8517a5-0b19-48e9-af6d-d8519d05d432",
        "cursor": {
          "ref": "b8d97939-428a-4e81-ae34-be2cc91616cd",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "73aa8045-0c9d-43be-a28e-246639707c6c"
        },
        "item": {
          "id": "ca8517a5-0b19-48e9-af6d-d8519d05d432",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9bd81bd6-841e-4371-a636-891efbb30f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a95738f-76e8-40bf-b315-76c6592e3038",
        "cursor": {
          "ref": "f44ee505-e0d5-4e1d-b016-e926287a5949",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5335b673-416b-439d-a6a0-903b520184e7"
        },
        "item": {
          "id": "5a95738f-76e8-40bf-b315-76c6592e3038",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "37021fc8-f19a-48bb-9efa-305a87cc6c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57abfb19-a8b3-470a-8e2f-2d6a9e868b81",
        "cursor": {
          "ref": "97df32ea-cfef-433e-9172-5cc544c02052",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4e9d2ea4-ece2-4556-80ec-91e7cb93d7b1"
        },
        "item": {
          "id": "57abfb19-a8b3-470a-8e2f-2d6a9e868b81",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c495c5fc-96d9-45fa-bf42-81e80c00c7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2987dc-6e9b-4d56-bfcc-44c790a4a0f4",
        "cursor": {
          "ref": "f2288c74-c6c0-4233-a096-daf40eb1a3ab",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "26f753e3-c1c0-4481-8a3b-d8c3de67c0c3"
        },
        "item": {
          "id": "4f2987dc-6e9b-4d56-bfcc-44c790a4a0f4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cada7258-9851-4472-b978-8af14ec420a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d137cce-181e-4fe1-b452-1237436b2840",
        "cursor": {
          "ref": "35419b83-6ab0-4038-ba7c-3d23d9331389",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "969e97a6-5a63-4caf-9c99-149300b0a58b"
        },
        "item": {
          "id": "4d137cce-181e-4fe1-b452-1237436b2840",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d6f4956d-cb2e-421d-9fd4-1e819c1e7b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb39b1a-9d42-489b-ae01-5adbf4265fb2",
        "cursor": {
          "ref": "2d83e60c-7d32-4323-9424-b6010365278e",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0a05e59a-8cba-42b4-9aba-c48e34cd177f"
        },
        "item": {
          "id": "2eb39b1a-9d42-489b-ae01-5adbf4265fb2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9a0033a3-ad02-4b13-9af4-9b7ac1bead4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906c9baa-8075-46da-9802-ac302213519e",
        "cursor": {
          "ref": "0f5742db-aadd-4bb5-904f-9b4bd866a59a",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "338acc84-8784-4385-905b-d64804897446"
        },
        "item": {
          "id": "906c9baa-8075-46da-9802-ac302213519e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9c600c45-f59d-4560-9d10-7733dae715dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be57b3fc-c12e-4142-8054-98b693c33976",
        "cursor": {
          "ref": "828e0f27-e62f-4427-a472-e66492e99cc7",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c0ea5ca0-36fb-40db-a999-50b244248170"
        },
        "item": {
          "id": "be57b3fc-c12e-4142-8054-98b693c33976",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7f1a8527-42df-4b83-8249-350039b780db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cf2873-bb91-4c57-8255-9b4b45fc47bd",
        "cursor": {
          "ref": "106c5207-9058-45a5-902a-183218ce3e08",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1fa86c84-a2fa-4a4f-a229-8c6b69183745"
        },
        "item": {
          "id": "66cf2873-bb91-4c57-8255-9b4b45fc47bd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4270a655-ee6b-4426-9887-3b7cc8107a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30307240-f186-40b4-b178-f27e911a264f",
        "cursor": {
          "ref": "562e7453-787d-42c9-b0ab-dab4c86bda21",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5c5ab361-f1bc-4d30-8d65-4c22ec807ee9"
        },
        "item": {
          "id": "30307240-f186-40b4-b178-f27e911a264f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9e21e18f-d811-4820-bb87-6be647725633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5279dfc1-4d97-46f7-8e28-95f1b377bf78",
        "cursor": {
          "ref": "2de6bd0d-1fbd-4e65-be04-a2ff9f3c569f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2eb79ede-598f-4582-b749-11864f35d1a1"
        },
        "item": {
          "id": "5279dfc1-4d97-46f7-8e28-95f1b377bf78",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f13d6202-3fee-4f33-8a78-bdcd97751650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa3c023-735a-4319-b9fb-5c9221778c71",
        "cursor": {
          "ref": "afd9b7b9-1a45-44e0-a057-8b66606a424f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2da3e189-d840-4354-9f73-6155ab37b1fe"
        },
        "item": {
          "id": "bfa3c023-735a-4319-b9fb-5c9221778c71",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7b06478c-1924-4989-b1b5-6d985f71af9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c85bd4-8507-4283-a09d-4e0b548f035c",
        "cursor": {
          "ref": "33edc77c-e9db-42b7-af3d-2265384bfa7f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1752c62d-d406-477e-8163-bcb44ff00702"
        },
        "item": {
          "id": "f5c85bd4-8507-4283-a09d-4e0b548f035c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "34420ac7-51fc-4389-9940-0927e0a05550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9705ab0-2796-43b7-9e0d-5afead6a51d1",
        "cursor": {
          "ref": "da6eb98b-718d-425f-a689-8f9024381c36",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d2b447ca-9b42-495e-bb37-ff3278dc364f"
        },
        "item": {
          "id": "f9705ab0-2796-43b7-9e0d-5afead6a51d1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "421becda-2b2d-462b-9247-dbc23b247df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfe08f1-b7c5-4c10-ba6d-5f5d7a6cbee9",
        "cursor": {
          "ref": "180e1a3e-c8f4-4c8e-a0bf-4420f4198cff",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "43c9b234-6666-4fa5-98b0-5b5059d051b2"
        },
        "item": {
          "id": "0dfe08f1-b7c5-4c10-ba6d-5f5d7a6cbee9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3b6db8ec-041c-4b2a-855d-d0b8a9044896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a167fc-e286-4840-adf1-d37ccd32ecf7",
        "cursor": {
          "ref": "a3c0236d-0904-4826-843f-fb39a8e43df6",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "94181f24-f7b1-44d3-b51a-1053ac047272"
        },
        "item": {
          "id": "c7a167fc-e286-4840-adf1-d37ccd32ecf7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cd54ff04-f772-4bd3-8a24-2a5f338687b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c073f5a-9f05-49dc-a240-9f35415388d0",
        "cursor": {
          "ref": "1149efa3-6a2f-4fa9-8d0c-9d1e13d7ff95",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "822d83c8-56e5-4fd1-befa-cf5c53147781"
        },
        "item": {
          "id": "7c073f5a-9f05-49dc-a240-9f35415388d0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "236592d2-e27f-4f8c-be28-e6603ce3c1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f967e10-260d-4fff-9036-04c19be828fc",
        "cursor": {
          "ref": "7236a0e4-2bca-41f6-b143-f6c6ca573896",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d4edcc2d-f960-4ffb-a592-937e61af76ff"
        },
        "item": {
          "id": "2f967e10-260d-4fff-9036-04c19be828fc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "db64ab75-abe4-467c-8e11-48a3197e3dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4c093b-2e1e-45c4-a3a2-f642a491b9a6",
        "cursor": {
          "ref": "3cdd2393-b36b-46bb-a3b8-5ed769e2d5d0",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4c6242b4-0066-455d-94e9-40893a9245f9"
        },
        "item": {
          "id": "fd4c093b-2e1e-45c4-a3a2-f642a491b9a6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f6f46ddd-695d-46b5-b1ac-5dea6d56e67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b68510-50d7-4d82-b70f-a1c9e385c71d",
        "cursor": {
          "ref": "c2a0511f-0455-476f-8aea-8a3fb226c0b1",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6caf9592-a9cf-4c3a-81ff-2aaee917ef93"
        },
        "item": {
          "id": "80b68510-50d7-4d82-b70f-a1c9e385c71d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "78234108-5525-4b7f-a707-5de76aa16a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28b052b-03e1-417b-8d45-3585e3be4a9d",
        "cursor": {
          "ref": "d4a1334e-413f-4117-a656-00c2c3881d40",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6d98c003-9ccb-42c8-863d-742a59856767"
        },
        "item": {
          "id": "b28b052b-03e1-417b-8d45-3585e3be4a9d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "181395a1-a09c-4394-b5d0-54acafa9e6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ceb24ac-abcd-4784-88fb-ab2ccb49a5e3",
        "cursor": {
          "ref": "752a30f8-bbc4-445d-8d6b-ed65f97a3d99",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b03dac71-0004-422c-817d-7deded9846b7"
        },
        "item": {
          "id": "1ceb24ac-abcd-4784-88fb-ab2ccb49a5e3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f704384b-f5b6-49d8-83e9-a8acee5c18c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56044c02-b4b1-4187-ba16-cd8ed0d5b105",
        "cursor": {
          "ref": "2eb2780b-f12c-4550-a8d9-c8ec4f78fa98",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0fe67efb-74da-40a1-9a54-ad5a1cadaa26"
        },
        "item": {
          "id": "56044c02-b4b1-4187-ba16-cd8ed0d5b105",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3fafff57-20bc-41ca-a59d-adf24f49b227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c05a31-139a-4c9c-bd90-befbd078a7f8",
        "cursor": {
          "ref": "85759525-8ac9-4399-a0fa-370d09509bc2",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "65580542-3cee-45c1-9f12-e2d101a5a79a"
        },
        "item": {
          "id": "c9c05a31-139a-4c9c-bd90-befbd078a7f8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "73474c47-245b-4dc6-aff6-baf51667b26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2034d7a-6510-43be-a27b-44bcbbd42899",
        "cursor": {
          "ref": "13d4895e-21dd-4422-82be-ba2c3e16be9b",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6dec4ac4-f07c-476e-94b9-94e385041493"
        },
        "item": {
          "id": "b2034d7a-6510-43be-a27b-44bcbbd42899",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f79bb323-6cf7-4a72-9d0b-e101bf90c868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c12d40-8531-4213-b090-f84730afccda",
        "cursor": {
          "ref": "c5b00d41-f7f6-4a94-a311-c6bdb51236e2",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "39d1d77b-a982-4078-8a13-7a7a727eb816"
        },
        "item": {
          "id": "17c12d40-8531-4213-b090-f84730afccda",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a0cdae1d-606b-4957-b356-b7a9c69a121d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a534e89a-18f5-4775-b2c4-5ed4d867a735",
        "cursor": {
          "ref": "17787d9c-7256-4d26-aa60-f843d78cf74f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ba1ab48b-30f6-4555-8292-df18303e7e08"
        },
        "item": {
          "id": "a534e89a-18f5-4775-b2c4-5ed4d867a735",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4f620c43-1489-4766-9a95-48bd7011efac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd8c91f-3cce-4a82-9518-366cbfe803ff",
        "cursor": {
          "ref": "93a9bbf9-190e-4e43-acbf-4855a03ddad9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a907593b-7397-46e7-bf07-1f60e40cbb17"
        },
        "item": {
          "id": "fcd8c91f-3cce-4a82-9518-366cbfe803ff",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "95a7fee3-0a31-40b5-9f6e-d5b86e17973c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3445f3-b8b9-4911-8291-d875add36468",
        "cursor": {
          "ref": "fc61f666-7642-4d6e-bbcb-d3a93584315e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6277f3f9-451b-45a5-b53e-c52d80b608e4"
        },
        "item": {
          "id": "1e3445f3-b8b9-4911-8291-d875add36468",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a107aadf-d4b1-44d4-a05d-48b96a0cc227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e16d8d8-0d7b-4168-916a-df4bed71b352",
        "cursor": {
          "ref": "68291c2d-f766-436c-8717-593fa28b68a7",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "cb1c843b-3ed5-46cc-bf7e-e71a35383f5a"
        },
        "item": {
          "id": "6e16d8d8-0d7b-4168-916a-df4bed71b352",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7609495d-d529-4cfa-a41e-ac41e6393238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a3042c-bc04-4a7a-b6cc-4bd981c5366c",
        "cursor": {
          "ref": "69e663b7-78ce-4e49-8869-5b3259dacc47",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e112fc40-4a9a-4b74-8831-0079224c9811"
        },
        "item": {
          "id": "10a3042c-bc04-4a7a-b6cc-4bd981c5366c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0833ed74-b6a9-4e4a-84f1-d1d2b3ffa2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c60a3dc-6f8b-4629-b5ee-80fdc3be7757",
        "cursor": {
          "ref": "5afde46b-c556-45ce-b00d-bc8b9bff5f4f",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "48203156-d566-4b57-b2ec-db9fdb30f165"
        },
        "item": {
          "id": "3c60a3dc-6f8b-4629-b5ee-80fdc3be7757",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "369b4b8d-c8ef-4db1-80f8-4b5d6616dceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9560d14-bd78-4c32-a1b0-55df12a9e647",
        "cursor": {
          "ref": "aefda6bf-78ec-42c9-a67c-8bb4f874438a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2153f5f9-98d0-4b22-bad0-8e25be9e3b40"
        },
        "item": {
          "id": "e9560d14-bd78-4c32-a1b0-55df12a9e647",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "94959e56-cb22-4453-85b8-5f416dfe49a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a0b89d-1729-4887-8861-4800eea0cc57",
        "cursor": {
          "ref": "70680a17-dee9-49e2-9d19-23a91262c2bb",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "682a8c9a-f319-44ae-a915-95f65a30a470"
        },
        "item": {
          "id": "b2a0b89d-1729-4887-8861-4800eea0cc57",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b748cdda-1130-47e7-bb78-3c431d467587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623ade2b-99f8-48a6-8e09-396ba851ac9e",
        "cursor": {
          "ref": "0ad77fef-a1c4-4990-8a01-dd88e9e2de37",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ea8f381d-2fd6-4e0d-8e5a-a0d7f9e7b8c6"
        },
        "item": {
          "id": "623ade2b-99f8-48a6-8e09-396ba851ac9e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "94a35618-aa03-4f20-a77a-facc147428c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b99c49-0ce6-4ffc-9f9e-f2da5016c8ca",
        "cursor": {
          "ref": "bab54ee1-cea5-4f0d-a6dd-6eb858e47f9c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0341fd28-6a07-420e-a85d-d7ed9c6b2771"
        },
        "item": {
          "id": "a0b99c49-0ce6-4ffc-9f9e-f2da5016c8ca",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "108e3284-a50c-438b-bda4-a59965c1e609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db4e998-7d27-454a-b1db-1b532d23700a",
        "cursor": {
          "ref": "b3105116-44a0-4bc9-b40a-7dfd958bbde2",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b00b21d7-1f13-43e6-8ac3-20f50ea4191e"
        },
        "item": {
          "id": "1db4e998-7d27-454a-b1db-1b532d23700a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "13bb9de1-8f8e-4396-8e84-b14753bedf43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79219e4f-b8fb-413a-bd9f-a996abea347c",
        "cursor": {
          "ref": "f435daaf-5db3-4074-b4e8-7f5f26bd591e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5f96a8a0-df4d-40ab-9e52-4115f7809ca5"
        },
        "item": {
          "id": "79219e4f-b8fb-413a-bd9f-a996abea347c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "30502ef4-a253-4e5c-b302-2d5c2ebbf004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447e9523-4494-4d14-961a-4684a83ee1b5",
        "cursor": {
          "ref": "64009187-efab-4526-adea-95a5626adeaf",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9c8d58a4-46df-42b1-91f8-2628efa81d44"
        },
        "item": {
          "id": "447e9523-4494-4d14-961a-4684a83ee1b5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fe1d0317-b8dd-4a71-8869-288e8e27346d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00121568-669e-439e-aa13-f77879cd36fe",
        "cursor": {
          "ref": "f761b5ab-876f-4b54-8d69-bed3bb91c2c0",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "baaf6538-dcdf-4490-b2b2-30ed2a689e3b"
        },
        "item": {
          "id": "00121568-669e-439e-aa13-f77879cd36fe",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "529ba0bd-ff09-4416-993e-2a69759a32e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323670ef-14c5-4968-816c-88808f84396b",
        "cursor": {
          "ref": "0e052f79-d871-4819-9a56-da07df43aa25",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "919c1774-e92b-4527-af49-8dc25a485cee"
        },
        "item": {
          "id": "323670ef-14c5-4968-816c-88808f84396b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "78b1c8b4-8b1b-4c56-8a1a-6e8564a950e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5a80ab-1e1e-416c-9440-8fe8b2eba157",
        "cursor": {
          "ref": "767bb9ce-6dbf-41a9-8f57-40afd00eeee5",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a93938ab-1b1f-4ef7-b468-ece710a99b34"
        },
        "item": {
          "id": "7c5a80ab-1e1e-416c-9440-8fe8b2eba157",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a72c694c-ad7d-47b3-90ff-04fc271272e6",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fed554-16bf-49d7-953a-fd46478eaf68",
        "cursor": {
          "ref": "f2fc2ddd-f17b-4459-811b-1e471bf13167",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6082964c-0b9e-4bd7-8c19-1cd27b2350f4"
        },
        "item": {
          "id": "18fed554-16bf-49d7-953a-fd46478eaf68",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bd55b624-75c6-4568-96ff-e25f3c7fbe41",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "801c1e0b-96db-4ac1-b90d-905f71c56327",
        "cursor": {
          "ref": "f2468989-0a84-4e93-867a-1a064206a38e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d3913918-71de-427e-9d15-2234f1e75c1d"
        },
        "item": {
          "id": "801c1e0b-96db-4ac1-b90d-905f71c56327",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7f48290d-b03b-478a-8e20-4341b58e7e4d",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d240d0-b6ca-4db8-b4a6-f7439afe2ac6",
        "cursor": {
          "ref": "0d52aa5f-b2c7-4066-85e0-5a97339e2f42",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "66644d9f-25cc-4caa-b3df-ea0de6ad2bc4"
        },
        "item": {
          "id": "62d240d0-b6ca-4db8-b4a6-f7439afe2ac6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c0f1e152-c797-4b89-a3f4-9b2547327486",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d240d0-b6ca-4db8-b4a6-f7439afe2ac6",
        "cursor": {
          "ref": "0d52aa5f-b2c7-4066-85e0-5a97339e2f42",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "66644d9f-25cc-4caa-b3df-ea0de6ad2bc4"
        },
        "item": {
          "id": "62d240d0-b6ca-4db8-b4a6-f7439afe2ac6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c0f1e152-c797-4b89-a3f4-9b2547327486",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c7f79c-e2ef-4e91-a33a-5d6b8fc189cc",
        "cursor": {
          "ref": "bc6a41f6-6c1b-43e7-8fc9-8dc1021b8743",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "dd9956b4-59f1-464f-80e3-1a1459c732a3"
        },
        "item": {
          "id": "91c7f79c-e2ef-4e91-a33a-5d6b8fc189cc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e35a44f0-1fca-4340-8339-0f63d61d3997",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dba2e4-a9c5-475f-8002-0d67e2f7ac90",
        "cursor": {
          "ref": "f2ef7f2d-735b-4080-bd94-181beae4f19b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "142dd868-0463-4638-ae03-b735c995cee7"
        },
        "item": {
          "id": "75dba2e4-a9c5-475f-8002-0d67e2f7ac90",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "83b788f0-69bf-411f-a757-c06d3ea61d0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}