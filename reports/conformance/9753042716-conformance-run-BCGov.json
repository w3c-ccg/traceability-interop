{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "16615810-3fc1-4acc-9447-72f1a0151444",
        "name": "Clear Cache",
        "item": [
          {
            "id": "07056639-b359-4e20-ab70-23c22a580f1d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d209a9d-47ac-4908-a89b-04a7e5bbae00",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cb3e4f47-63d3-4958-9b54-a64b4e78e8bf"
                }
              }
            ]
          },
          {
            "id": "2e53c524-f3bc-4916-b4e3-bda78f9fc324",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df10d0a3-6994-45c2-94d1-54342991b4ed",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f4b08309-a1df-435a-b6a5-770d06dbca35"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6b71a0f0-954d-4487-87c3-4b7975e465db",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7b1e26c7-b0ed-47d0-bd25-815a0f9bb752",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7b20a4ef-691a-413f-8df5-31806b2cbdc9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07df1879-45ac-4132-9844-8dd4acfddbce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f5fa1bf-0504-496e-9fc9-be14eaada7b6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df4fcec3-c92a-4c49-aa2d-af99079dd4a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9ff3a61-8fe7-4124-82cc-dc3a018eb87d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d706cb44-867a-4a14-a69a-a50d2442107d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "99defe7f-adf0-4bc4-8c96-8bd9390e182a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d156d80-ad6d-4c8f-8bae-f6f478ff625e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "04749754-bfbc-4efc-97f1-c73fed4d8930"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81d3d265-0ada-424d-85a0-e44eb6477fc7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34938e42-b94d-4433-91eb-45b19ce53cbd"
            }
          }
        ]
      },
      {
        "id": "a175ec52-1d02-4655-a6de-1a65a65d7d14",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a6ce0cc5-204e-451a-a87e-e5fdb2473621",
            "name": "Negative Testing",
            "item": [
              {
                "id": "075d600d-e27a-41af-bb50-544649d3dca3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38456553-4806-4773-a715-37b1c79e8cb7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e681949-d625-4dc4-895e-8badb488e8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f29b79ba-9bf1-4178-b539-2e8015250720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8ae4e8-1b7c-4509-a5f2-ec527b1dabdf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d715f721-6a06-4275-90f6-71c29057d897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15e32b68-b941-43da-b6d6-d7aa8b80058c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4c5638-77da-4367-afdb-e5dd5dce4054",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c507c54-e477-4421-8681-030fcca162be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80bc8565-a178-4b36-a59c-a032babfb6fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d0dec6f8-7567-468b-9905-11b078a6fdf4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "860046de-1c5f-4a4c-8267-18d1f78cd813",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1271f0-bda2-4020-a4c1-c2a018c718c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dedafa9-1d44-45d7-bfd9-5c83d449f221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d5d01a-12bf-4e58-895f-debea7737795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040196bc-3107-4864-b719-6f5f67f43422"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "750c7e0f-9f22-4450-9418-9a56a4a1dcea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48e30f20-9c1c-4041-ba79-ccb6093b8b99",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34506626-e836-48f7-98c9-3cc920b34f5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f6878145-59bb-40bb-b51f-618dd07d48e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "625fc325-0761-4a30-88ad-a0369305ca8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8a13bb53-09a8-43c6-a454-e09abef821b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7205295c-296c-43b4-846c-5353b5208025",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fdf76393-4b3c-4947-9e89-fcf82092dcdb"
            }
          }
        ]
      },
      {
        "id": "2a5e47c2-a77a-4968-afc9-0d0a6f4b86f2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4fbcccee-5a05-46c8-94a0-68d8a6265078",
            "name": "Negative Testing",
            "item": [
              {
                "id": "003d64e7-0d1d-4ae2-9595-0e51373f2ffb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "02605c1d-9c2a-456c-9e37-295101ed2d46",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47eae2d9-00ad-4939-9a10-a1ffa5566832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5673a812-75f3-429f-9f4d-8536e33af83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa9d5f0-08ab-4b19-8302-2338be0bcec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1ccf551-2562-4abe-8eed-16f772efe4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b3bd54-c1d8-49cd-b3e3-516a3d7697bd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf655a23-f864-478c-b8e7-26e2857d8120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2baad6-e1e2-4ff0-8412-5418864c7e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd454e85-a78e-461d-b2d8-0104b933af98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c0a8439-1f76-44bc-8f9d-056a91163909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e581bf7-2515-4444-91a5-c29040dcac7d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71d6c7f-40d8-4275-934d-81bf9f82e280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f47e73-df86-47af-9772-a2fc8a4acb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795cbfad-949b-4859-b8bd-4f88e00034cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0015cd3-d9ac-4c26-917d-4275ccfcf2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f87cf18-2bb1-45e0-9989-019a3cb5ab59",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3ba2bb-9520-4561-8109-b2ba56d0cdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7183599f-fc78-4542-8fee-124f089b63bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43805a32-94b4-4d5a-aa47-8d929b1a7528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9429e7cd-ff5f-47ae-8110-9eb526cbe461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0a3b05-c190-4579-a876-8ae995f23ded",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28ac8fb-aab4-4efd-be0a-02eb24a25f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205da463-ea95-4e9d-a3a6-d0c2ce57b577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bdd31d-f30c-4d9a-a606-eb02bc811548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06db5de3-abd8-45be-9adf-24e29d56d53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f293df51-3910-4608-95b7-cfe18ca4560e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72533012-d39b-4522-a7fb-3ab875e8e1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7ba572-4495-44f5-8df3-8062ca04f02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b94ee7e-dcb6-4556-929c-f1937c205468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f90f4959-ba2a-49a8-9b85-153133852f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd105d7-d5a5-4b98-bd22-65b800f23cf7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faca71dd-a7f0-478a-b88b-7555ac69d11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de34a334-e23a-4de5-9ed2-9c1900997c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932af78a-2588-49a6-bd65-7e7d326f9cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36fee065-4c78-4c95-8c1f-e853558ea94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fa759b-0a62-475b-8f2f-83f0adbe3470",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2eedea-64ee-4f08-bd56-a4f7c1fd7d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e4c2ed-343e-4b38-9d87-3e3a9c6c9028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2840d77-9ff2-456e-903e-4349ebc7a1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0f7bb10-9479-4008-8b57-20975335bf81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956fabde-7b27-4044-9f81-b7780fa0545a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb11ebdb-ef40-4de6-b031-e7472daf54f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a95227-6e4f-41b4-a01f-97d95a983d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65292f4f-2612-49fd-90fe-1ec2f6103803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cf9f18b-8141-4aa7-b28c-7620028cc743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f442a07-2605-4d3a-a88e-85d6af7adadb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55dd0ae3-89a4-4afb-8d1a-75f370b06786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26bfcea-d0ba-4191-bd00-31dea65af3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b11700-03a7-410c-801e-a20f34ad8f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa5d0ba5-bc3a-4cea-aadc-0085885307af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5daacc5b-10f1-443c-9fe1-3d3fd91ddf15",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb97d866-f996-4cee-8471-a0ae65ab7d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2114ee83-5157-4bb2-b895-31abf21021ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9079e0c3-6ce8-42d4-bd6f-17750aba782c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5d0431f-905e-4835-bf21-9e1956c5caf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a35d40b-6229-4923-b6ae-42523a15db47",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4559225b-06a3-47fe-9fd6-47df087378cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67296af-a50e-49cb-9822-0c8eb2bf7ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9661e6-e4bb-4f86-b963-07fe10f2c58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a41b505-d975-4e19-92db-4232463a7bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46dddbe-70e3-46db-918a-f56adfdff3c3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64d89c8-e569-452c-84d7-36893faf86e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830f0243-75e6-4512-9a8f-6153ab2c38aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0c17c7-0837-4ff2-96ee-405c2082a670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a8dc1a5-d52c-407a-9a2f-846d9e6f5253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff360c40-6eeb-4a7b-8048-84b3f70de232",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c61a277-9c97-41fe-8145-1eede17dea04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5734d758-2c01-4bcb-b5cb-030204a34186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63feffcc-ec1f-41d5-b2b4-cf504ccecc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "488973dd-59c6-4811-889b-237666f1b5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0262afa-8c7d-44f0-91c5-739ad6e0c568",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729f0514-4d80-46c4-95c9-5bf5720866b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35bcdd9-25c8-48c9-8b6e-5e4058257347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2e350e-aa95-4801-9702-654528f68ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2546d3fa-b442-4eb6-9449-4e666ad2305c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd3f012-aa82-46d6-8076-6ded3290bbd5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afebea6-62fb-4e8d-8936-5a6b44362ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2f57e7-b399-4bf8-ab8d-c9f985b8f37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c7ce23-03ee-422f-8dc0-c5e5a5d1d66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b4c70c9-6b8d-4a1c-b7ed-f16b7bf53fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b15d45-e453-49c8-84e1-df708b7194e5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9bfd08-1623-497e-b722-9fb0307f7fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275c7010-939d-4150-87a5-dde980ad064e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b885e92-a303-4b5a-a1d9-6e9590e45a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "560cfc3d-e93d-43cc-b7c2-e37dcd93edfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ba841d-1dcd-4a7c-8945-6180753791a6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883b85eb-a012-48c1-ab46-08e0923ffaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4517759e-27b6-40d5-bc2c-505c74ae9dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79669dc-a7d0-4fe7-95f5-79173558634f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "83fd0778-a2fb-45e3-b136-c2e5d02edf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d35670-b0f1-44bf-9547-b9e896c437ef",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14f25fb-ed06-4a59-875f-984fab98f74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8db639f-ddb7-4097-b02b-c7e941fd5891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac02f1fa-5b4d-4c11-98f4-00535ab64e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96f626a3-05c3-42d7-ab24-e74074ccfe79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5e3a09-24dc-49f1-93e2-a2897b10afe9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b36ee9-506a-4b62-ac53-5d8ccc490652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25822ba5-22f0-41d1-8f31-72226e9d7410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea4a902-a9cf-44d6-9d7c-9e4359bb4479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6abc4e39-5ddf-4fe3-b83f-7c1d6c3d29d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc072671-70db-4109-aed0-bbcab7eb60b1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db69dcf0-01e7-45aa-92c9-3f70cdf9c9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b26350-8e15-4305-adc6-61944531fccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcab08af-4521-4c43-a8ab-1880033c2ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65e2838c-5ced-4ebd-a534-87b1532c778a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0044bf7a-1a6f-4c24-b6db-2f649330ad40",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06da3516-09a6-4464-b6f3-d020270dd28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7684cb2-1dfa-438b-8a9e-0bed70a28a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5963c21-a407-40e2-9916-abf78eacaee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5daf6da7-ba31-49a4-a7bd-517704a6b2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa10b09-c63c-4ead-b9a2-c0ce6d39fe5f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54df8189-a63a-44e0-83f6-72871ce9c7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b966cb5-beae-4ff1-8713-1a700a7895b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f5459f-aa19-41f1-af9f-246d61b7fcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b3134c-3092-4105-8a23-0659828c3ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce884735-64ed-458d-bfab-c910875fcf92",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d94addf-aa0f-49e0-bb9e-b67017dacbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fbb143-51f1-4cc7-b910-6b0c3a7e1abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5234d1-9b3e-4b54-a542-cdb86acff815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe44e0a-8e37-4f96-a098-922912af9954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c6fc37-21bc-49f1-905d-9f67a4379c82",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a583293-580f-4e43-b81e-bbfb63131374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad167797-0442-444d-b196-14c75077aaf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd51b2fe-59c1-44f6-9fb0-c132c397b521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bbfa331-e56a-45aa-8de8-d12ea329b2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2439777-c568-4ae8-a4c1-177c3bb716ee",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a33a10-5d02-444d-844b-95007b08593e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bf6cee-2e4e-4a29-83f4-9e9f10d44333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97486648-6187-4dbf-b7b0-a8320dde75a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "22c0fd23-1bd4-4d75-a713-36bbd2702639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edc0e8b-2e40-401d-8a8c-9e100fd4d107",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b4fff0-5e10-4c30-a194-6e6d08e6995f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fec01f-3012-44d1-a83a-4df0986001fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d068bbdb-bcf9-4a5f-9b61-4b7af536a95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "22563e79-fe4a-47a7-a896-e53e4d1553ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a021cd-510f-4ae1-b5c7-6b0021c8641f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80b20c5-d75f-4e17-a54f-6edb672b6ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6918e7-5125-48d9-ad48-1be4b42a488b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15009e81-2ca0-4b11-ade8-2b7006293062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9126c35-ef67-442d-b67d-c2dbfcc0751e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1932baab-1be2-48aa-accc-0f8661bc4ce4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66be76b7-945f-4c63-b5ba-4a0032230453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e0e89f-eceb-49cd-85b9-62f1506168b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f116a5ea-0ce0-4332-8a22-5668615fd945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97301b29-2d3a-4326-a6c0-f66bdcf66398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe69020-7d21-43a4-b9de-abe71400c180",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce25546e-4166-4a52-9b75-c04cdc224403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c640eb72-1c79-451e-8655-17599b003f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1171be32-216f-4dad-9f38-0fcb558f0971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf96e58-3273-4883-afd7-3e7606dbe44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a946a09b-d9b5-4e2d-af6d-3cce9e8fb2ad",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ceb541d-f1af-40a4-b75e-6e10f35de493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28b1b93-3741-44fa-9c09-a8926f65937b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fce40d5-c895-4951-95af-d4b868a89b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd264380-e773-4a17-9dd3-a4aa4d31617d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b6ac42-8944-4a7c-a925-3b23e06a6eed",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ab2e21-57b3-47b5-b8e5-f21abb99cb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b10c03-7905-4090-b43d-e8e91f8bc648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb084e4-6294-4703-8d8d-389137d35c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "219d0ce2-e152-4366-9b58-534bd7607700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae6d9a5-eed5-45bc-8705-7b7ce06e3a60",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a34b06-323c-4273-a7ef-1b4022bc00db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65700ae6-cafe-4977-85a6-7940489362e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d05434-a3d0-4986-94bd-3ccf8df9195e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0fd956-5d78-4d0a-b16d-2473e70e4cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43933d90-937f-4abf-b024-34bc4e68cc67",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedb432a-1f5b-4dbe-9c0a-70c832f1b0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f2a1e4-56dd-43e4-a5b5-acce2d07a163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d048132b-a842-4fac-921d-e5fb73f52f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d64e047-a8a1-4662-9476-2d314f8d8138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef46f8bf-7e2f-4c25-a0d9-b6c66aba2f70",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33ae7ec-7dc2-49a1-8774-a121f91d6e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95231cf-3b9f-43bf-96b3-b68f3bf1898b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a7bdd8-15cf-42e6-885b-56b82e014820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4be2dcd1-12a3-4edd-922d-6d1ecf5bc7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cf46e0-a7dd-4080-aec8-9c9d48c8d320",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297e4133-d0a1-4f9b-9c39-19624cc3c1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d53b02d8-dfaf-456f-bdd3-17b173fcd4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93947be5-17af-46bd-bde6-4fa16119b12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c3dd58-b1b5-4cc4-a9d5-42bc7be00c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c4e8dc-0a33-47d0-b49d-8fc305b117c7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecadebb8-7037-4922-a2b6-55ed0c5a746b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96aae66-6972-406a-b346-8761da08f402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4384633-8e9b-4ef0-aa2a-ec18d1cfc67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db64851d-008a-48c8-a55c-6f25aeece4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea95cb1b-e2c1-4084-bbea-ff2dfe5f8778",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5a5e68-8d50-4377-aa1c-654e89880662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215f5d57-c019-45d5-806c-825bd67f66dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca064832-6865-4765-ad25-05809a99adbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a875e82-fe4a-4ec1-9ab6-8746417792b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bc6e2f-1036-4fd1-91f9-0ca617ac9dde",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aea9466-36a0-4094-ab96-fa7ce0725ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7e24ad-f0fe-425d-a929-87c531e8ca09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fef2f2-ae41-4ea0-bc78-e0ae5fe0beb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd18f90c-3394-45ac-851f-872be07af15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dd5f36-1e33-4146-9c86-48e219cd621c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8000af91-4cfe-497c-98e2-ff10d1080111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021f57f5-a9a3-405c-b9f2-3607e72b1a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c143636-40b2-42c0-90c6-0861bfacc073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4786a566-75a3-477f-b06b-73694d4c3e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa2fb92-a42f-4ca9-9415-7076758a5dd3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b25483f-3074-4d68-904a-f20bff43d176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb10f7f2-dc94-4a87-b1d9-db7b051289cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4508e2dd-40ac-446e-aa7e-1032ab3d367f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e89f4e3e-55a1-4c22-9931-0049d7096b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307b4550-dad8-4107-935c-60bb62e2ae31",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ca0baf-06f4-4040-9995-0bad2df4d26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ddcece-8df2-4789-9143-30ddcfd51a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5413c65a-0f79-431a-ba56-935823b7c6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "de8bafe5-d4e5-4366-b3d0-4a45d16dd0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd84c3b3-0d35-4977-86fa-0eb1e1f2aeb9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec474fc2-1416-427b-9252-eb5adf816ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ccb026c-c571-4a11-87ad-317e7317e9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76fabe6-f346-4ca1-9dd6-c4fc75eee307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "52a00c97-f4b0-4049-a24c-f28592964ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cbb487-f49a-4288-ac6f-49c43afa013d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8427e778-d2cc-4c6f-b1d1-acd04ab32d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b10d39-737c-4dae-abff-14b0f7c64281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e86c13-6c17-4dcb-bb12-61a9ce6dfaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea1dd68-2a43-43d3-9fdc-fb2c93356ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dc434d-7cd4-4d1c-af1a-d5411be3f44a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296effdf-8377-492c-a2ce-0106d2d926e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26565493-b50d-49b1-8e23-77abc2d1225e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945fcdff-cba0-4a92-aebc-2a98ac6306eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2abdb7f8-2816-4b62-aecd-0b1ad76e0bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5f2b75-01a6-4731-9e10-47c21d9f31c9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6b5139-66fa-4ca0-bb6e-3a4434c245e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0e59ad-ad09-45a2-b6df-3210799c60a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1808090-255f-4a75-bbb8-f48d6b3899b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24cc9a17-5c49-4236-8bd8-6586be04b379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60797c89-fe48-4d9a-bd21-336e3898a6b9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c11290-4954-4d35-b9be-0bab9d1eaf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a09275-1061-45a2-8dcc-9f19b5cf984f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14eee7fe-5160-4330-b936-62c12017660e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57efc464-ef72-4950-bed2-3324cc039d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a940119-ad92-4f5a-86c9-73aedda36357",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f185f26e-bf68-4f16-a2a8-93bfc2c93570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27b76e9-e943-4fc4-905c-d2bc66fce2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fa3445-858f-4bfe-949f-d21f7060708c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24b55520-644e-4db4-87ee-a1f5497b389c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fba345-0050-42b4-a41c-67c1aa7c7a94",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43799bc-81c6-4972-b0d1-f502a120a3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a26b713-dabd-4188-abd9-c32d718779a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baf07c3-288b-4c88-b182-421842f21034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb682be3-cb6c-4680-a80f-c9a126139d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38edde6a-6249-4cad-9761-07bdb0b671ed",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32925f95-24f5-4db9-b3e5-e0ff1a6a8020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d120cf-dbfe-4e56-af0f-bbcb91c93b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3152a35d-b309-4dfb-8a6e-54fbbe0b6ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e9fc52-3671-46c5-bb1c-1d21b6e6ca90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3d3759-a309-430b-b74f-824df7b60c25",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932a5f6c-cae1-43c1-8317-743828a1cca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36050aae-1368-46b5-8980-37af1e7d17da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91f7ea8-8b47-4750-b500-ed4930cb7f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf45136b-63fa-42f5-8fb0-0f9acb629948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1a9c41-7e22-42b9-9ac1-b6e633541057",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013a9256-f8b4-49f9-9457-e4cb5ac0938e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2837e67-e95f-453e-aa62-a930c26bb53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ce766a-0cd3-4df4-91e0-8e7304f949c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "595fd021-b139-4afc-9835-feab4cb92f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3f5394-521f-4aad-b4a9-d99e5fe30f85",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a4a4fa-9ec4-4899-8c18-2136b5e572e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76b2b14-bdc9-4c03-b2a9-852152f2ce04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bdb72f-0763-4618-b56f-0a0b32880801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f803ac1-e41a-4481-bcab-5fd59afa69cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41503d0b-0045-4c0c-bca2-6a366a621c21",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c41922-a6e9-43e8-a5b2-14aae1022f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f8b8d1-d9e6-44e3-8859-11daa01e30f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207176c2-ab96-419d-ac65-c542e94935fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0a1700-4178-46fb-abcf-97a3f6757529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19cb0f2-56ce-4b33-989b-ab61a8e350bf",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf95457-5bbf-411d-890a-d916e2f668f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b745ac8-553b-409b-b76d-a673dfa4c7b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a72a67-aaa5-4a3d-b715-c3fb312b3e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11e36076-165d-42a6-8c49-19bc3391ccc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ba3a58-5f1b-41a5-acd5-e37bede4e393",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbe0964-1140-40be-add7-bed075887726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81582ddc-d39c-4568-a12c-40d480e8f728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ee5a84-27da-445d-bd16-026cd0ac3697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b636a297-86b7-4d82-86d6-0339351b3d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58967d2e-04a8-484f-89ed-f69e49014c79",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67a0d0b-9483-4784-b34e-14792568b812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6336e398-e432-4f0d-968f-79410d471d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0dd339-0fab-4aa2-b8f8-5d28520d160f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb063f0a-4e3f-42e6-a87f-ca4ddc9f8fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e10454d-4d9a-454d-9e56-d2718c73cf00",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f833da-dc1e-4676-b0a8-e41b28291c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cf6a37-bc14-449f-8754-735ce088495c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14577149-77de-46a8-afe7-ca4cf88c6d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "592bded5-8c91-4f33-b0ee-b10c2183c7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e5f310-6043-4eca-b52e-4b97b698ad28",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3080a2b5-b8bb-4cd0-8068-25eeae04b696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9232e46-561f-4d63-9ac3-e856622b7cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74b7d6e-b974-4c5e-a8f5-720c100f12ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d23bca-ae55-4bdb-9465-3259eabc0b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f70c98f-11af-457a-b663-97828e2d4265",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f3bc5a-e0db-4667-ad1f-375246a65544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f86a68-12af-427c-aacd-e6a535ff7c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12640ca-24e2-47d5-b4d8-f21682bdf1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d24332-7c73-468a-9954-f9fafc891470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec03604a-d90e-454d-b32e-6e337c5a2f97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60911eef-87bf-40b5-adad-e4a88bd18166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f33f476-b77c-493c-8649-c1fdd6e8234c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596b17d6-ad35-4110-8d72-5534a7fcd0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "09fbfc6d-edaf-4f63-ba42-3ee3c35a4c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a824e90d-fc94-4fc3-973d-2e095a849252",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743fe061-18a5-4b6f-9752-a23381751ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81221ed1-cbb1-4817-aeb8-8a5c9c2bb41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa62cd91-df26-43b7-b5e3-1b4c33d50b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb11e4a-6d57-47c9-b627-58a629ace60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d4fe54-a808-46b5-a8c1-237f03a02b03",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d20355e-6204-45aa-8b3f-71e2f20a3c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f4a6ac-ac10-4ee2-89c6-b38779279f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20448715-b57d-46be-ad74-5dcfcc962556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e248e6c-2038-488e-8d47-e4dbcf6c64c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7cccf7-8993-4a69-a4af-cd89175e5dc2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da054534-12ef-459c-9a39-dbf85cfce4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c51e92-5215-4f3d-a77d-38de891e41fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21afc653-9431-4cc3-be88-fe6fa6be7212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d176c92-8f13-471c-9afb-9145f2faf79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46caa2ae-b5d1-4976-a3d6-064d6782f368",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3abfda8-498a-40ed-94d6-4e76dd7b2b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea12b05a-06c7-40a0-982e-960031612566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fa8273-120f-4296-98b0-2c9110fdc8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bae25377-4054-4d74-9922-62fab52b9ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b40fef6-9e04-42a9-9958-e24e72cbfb34",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91373864-baf6-4136-908d-165376054d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7998d9fb-8130-44b5-bbfc-f2041ddccd66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d4c888-ec2d-421d-a45c-a25115d696e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b48004ab-cd23-4330-9a0d-db6de6665176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2cbc23-0308-4794-8ffb-23ca45443d0e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874a8b59-52ca-45fd-83a3-82026f70255e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7342d85-936b-48f8-b6fb-ab33a32d109a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b32834-23ce-445f-8040-0698b5374b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c143b8d-1ecf-4097-8624-1354e42a831a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6e6840-d327-4d6e-92dc-96c8a3709e8b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76942c6-9c98-4b99-be13-2b7d731d8c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61fbc612-cac9-4090-bec6-fb83633b8ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff96a1f-ccf7-40f6-b466-b7eb7f875f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d238ef95-ca35-4322-9e19-fcb312cbea97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db2fedb-9db2-4091-892d-254f92f47694",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a5f96e-7b84-49c8-ab80-7b155b623a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b5fb82-7444-4eda-bc6e-fcb27c045dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bae225-55c2-46d1-a4a3-dd3e2b7f1f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1c0cbf-935b-4b6f-b514-6ad5244a80aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160a5d44-7298-41d9-889a-2cbff664683e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b125c3-1384-49d5-acfa-89daef01e63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a115dd-ea61-4d0f-a8dc-9c68e405f85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffe38f7-e21a-4f7e-b713-5e3c62bc4cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "415ba1d6-7f67-4045-b806-e89c8e9b119d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29101ca4-bd99-48d0-b474-ce7ebf2164ca",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19572bbf-beb8-4e11-9c57-57bb5486ef52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8a6749-3a89-45b1-ab4e-25937388bd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded0155b-143a-42d2-b38f-5ff9d699b7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d070d0f5-9d12-4414-b225-6bb3d35fbdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3609dfc-9365-4a11-97b5-09917f48016a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e99120d-59f2-4473-af2c-b3465a37df7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57a6379-f3e5-4809-a3bb-9d6eca5f8b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6c5299-ea04-4362-bb4f-4cee70d020e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "370bf802-87f1-40b3-8e86-cb1bc157da7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68247d8c-b740-456b-aa5d-68f47bc64990",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd36b7df-0411-487c-a3db-268a811afe4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b17b2b-5a39-45df-8a7f-e64a1b6d0e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d06cf6-7cec-4a57-a011-c947aa56ad0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1709c86-4b33-4402-bb4d-b6e043a4f936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dcae80-321b-41c6-a17b-aef81d51e525",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58982920-597f-44ea-9877-426d19db89ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5dbfe4-2d33-4ee6-9d99-77278f54fd27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1c59c3-781f-41f7-949a-74a9aab6144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd46c5f-e9cf-4633-b5cf-f149cb591bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33bb09d-a06a-4121-af52-959dd9930c15",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36cfef8-741f-4908-94a4-c00cfa2e7676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472d9e86-3935-4340-ba67-eb16ad945c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbd6292-cb07-4b17-b36d-50d20e28a278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e7f7d9-fb8b-4dd0-a086-71639edfdfb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57d5a67-56b5-42dc-bacb-f5a7f9f2d41c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c33e3d9-835b-49ce-a502-1857ea4eacb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c260115-0204-4af8-ac1d-6e999864ef50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63310981-ecd4-4d0c-bbfe-2a40f0e0ad6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9599bc23-f0e5-4bf9-82b6-c0a949b4cd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35122548-6e08-4a8a-af1b-5b221e26abdb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2659115c-965c-4211-80e9-ccc3998c7eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db14e60a-6e3c-4f94-8f8b-6e99657e7830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980cbc22-4add-4c0a-b26e-6f6ea875dfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62fd7f1d-32f3-455a-bdc2-cc685fb89e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8239c08-03aa-47da-88bc-36c67bc9abc5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47e43c6-6bd0-481c-942a-e3bc7951d9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90f0d88-394a-4d0b-81b5-bb8ae6640444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b3f373-b5e6-4b78-b700-96880c099e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f519bfa4-bf99-4536-97b7-44a59edb03a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445298d9-dcc6-4a4f-9e31-ed32e3cadd9d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36402ed0-2f5d-4466-a6c4-5de1c06ecbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645784e5-871c-48a8-b515-59fea2aa7037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26371329-27ba-4bf1-aa41-e9bece325288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a848a72e-b785-43d9-8323-2f347c31911f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e469e5-739f-4352-97a3-8508d52156ed",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e05980-7303-468b-a978-7dd322886f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d195e61-39ff-482e-bd42-177d5db17e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5218dd-7aea-40c6-8a46-c41694bff3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f193df-f8f7-472b-9026-8704ab1f61f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c9ef84-dce8-4bc8-a686-41fafaec4b35",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b68116-53ca-412d-b40e-21ed01680809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8222bae1-5ff5-4ffc-a3b1-dea4796a855f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ddc1b6-970b-40c6-9589-d1139ed7902d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a70ae823-947d-4309-b0d5-5243228084d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43386fe-479e-4b7b-997b-ee610cc9e44c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b946dbb8-e481-4484-b153-81bce96f3e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceccc034-4b2a-4199-afb4-4d561345d141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a109a8d3-90b3-4a48-8963-a8ae32d1e88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75810feb-fbc8-4ed8-8e87-80be0d718239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f1c0e5-ac50-4d50-8e7b-4e213ff2d133",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47c9d3f-4356-4b3f-b0af-13e4f02c0106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8241234d-1879-4cfa-9110-38b6e4baeae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e0a5f9-dfb2-4510-9dbf-da0bd289733b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "836d6174-f9db-4983-b7fc-05816d058262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a0a50a-67d6-4f23-a011-b10bd88b1242",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17889594-85c7-42a5-a478-0b9624bded32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29c27bb-4880-4e7d-a179-e6b727ed1950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b55530-bd3c-480a-af5f-4fbddd902b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aae7e0e-2e4b-4790-afce-c8112844f8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73949230-b6dd-4d5a-b90f-24d48b4b3ad0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd31360-7c9f-4cd3-b4fc-957c3f1aaba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907a068b-1d0f-404e-aebf-15efbd4e686f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556c4856-b338-46c0-87d2-7c39452156ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa36f6ce-2fcb-489d-a531-154cea0a8d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3137f0-ee56-4ac2-9044-9d2ae2e1c520",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5e1073-ea3f-4c6c-bbc9-f7c3951376d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254972c0-7ff4-4129-b80a-285805a4ec1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e7157d-9238-4863-8f2d-14a4f817c4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82a2382a-ef4f-48f5-bd49-1f0d708804f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b909820-416b-44a9-a2be-4e7005f0153a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f37f90e-ae14-410a-9fda-c655889c6a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa7b392-4703-43de-b691-671ed67ddfbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c762c0aa-d90a-45a7-b308-7dd82e030a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5425555e-2436-4a8c-94dc-9637a11a1527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d23f42-2515-4bfd-9ed1-6c134948f57d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f660b2c-d618-4051-b19b-78a460b3e51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd5db76-1ee1-4dc1-99d1-99943d601de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78106d71-fae4-414b-a0a0-5971321f2794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfc2ce3-1c92-4955-ba19-da03146921f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c870806f-4364-4dba-a945-08a4951984c1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e372a8-768f-40b2-bd9e-85bc66cf4fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8495ae2-b8a0-47bd-a0b1-a1438f1c1d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b1769d-c8df-4584-8a5f-a6154985354b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "87af746a-8a68-412f-9f57-073d0a512c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d919572-135f-46f8-8409-9b43fcd0a29c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7ae453-b4b5-4140-9c03-e8406d8b876c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1d5e2f-1405-4eac-b278-13a20b2800ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42f36e2-8ec2-4efa-a651-ffac0fcdacdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "acb49b13-f179-4d63-b55d-5bcea068b6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddca240-f16c-4942-83c0-c1152cadfcb2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fe8919-3b55-4643-a080-d4ca8257e7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7814d5f-8e6a-40d4-860c-bb184938b94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0bbf04-e331-40c2-9d25-e6fe01562d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7c87e5-decc-4d3c-8c6a-da045ba5f710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f84f2cf-8144-4a8b-b297-347e2ec3168e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acadc9e-3412-477d-9d22-e01072916f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "86808c9a-fe20-4d9b-a806-ed0e6440e2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f632df32-dc79-4a82-b70e-663192bd36ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c868c9-76a9-4df8-978e-f949eab9180c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8885d6e7-0019-4cc4-be73-2dad29ffce5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50d94cd2-9f6a-4894-8d3b-d16619c25f6e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5787e231-1765-4ea3-b79b-774242d6bdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee66cbf4-d8db-4532-9fdd-997f11039b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4e6627-f2a9-43f4-93a7-f0dac6b9fa56",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cff83ef3-24ed-4c90-a139-8c52bb4d7250"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9e9e6ed-de04-4681-89be-24c053cbaff0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bcc2d4b-d5f2-4d38-b7a9-879794d4112e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04bd1fc9-9d4e-4eec-8614-761e89c0cf49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa061b8a-12dd-4dd6-be6f-42a3657e17ef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "45ccda8e-6550-46c9-8acb-13040b0384d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1b7f2e6-7fac-42af-b12b-17c66fa3abdb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8f11d577-b511-4533-9dcb-1465f7f46b8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "402f965a-e0df-45cc-8f9c-854dde11f836"
                }
              }
            ]
          },
          {
            "id": "2b8c1ed5-fac1-497c-a27a-d4102c0cbb1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f2ddf6f-bd8b-4654-b012-8441b6379a1e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5caa0868-2678-4b85-b8ce-2113c7e19429",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26920bf4-f212-4e95-8ad6-351c077e4621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "74af11f6-d2b9-48fd-af9d-4903fda9308d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925eb1cf-5476-4742-b070-e21affb66366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09eefbbc-4a07-4695-9b9f-fdef143c20fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "180db09c-2ca9-409b-90a0-264859814661",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f8c815e-0963-401b-8306-d3e96e72358b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e289163f-43ad-4d35-89c4-56c4780462d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e5154c1-c255-4505-b70c-871af86a4b01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e587dbd1-e6e0-418e-9974-63bf0effb897"
                    }
                  }
                ]
              },
              {
                "id": "b9215e91-705a-4a30-9a47-3712305ede36",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f944e7b9-1b9a-462f-b3e6-0dc1fb6e5458",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d591f7a4-f253-4b34-82cb-b6d0b956161e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68845c34-82ee-4805-9bec-350590c5e518",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "911c5cfc-dae2-4838-ae65-3c61b8176ed5"
                    }
                  }
                ]
              },
              {
                "id": "1f212023-7c5f-4907-8663-ba8f4cfa1a7e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdd56169-d08f-441a-a724-f2ac522a1681",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16dab6d2-318b-49de-8d5b-da165250984b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca83676f-bfa2-4fa4-8911-b07a2023f596",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cfeec95e-a9a7-442f-ad47-e791e29a0ee3"
                    }
                  }
                ]
              },
              {
                "id": "3422d1fa-d734-42c6-8f03-803621971045",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c358bd29-22e4-4c8d-80e3-60c0b229aa92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d963742-d6e5-4569-9703-ad3c40869d40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d3c5947-beef-4043-be7d-ae87a481a0bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8e531fe1-39e5-4632-9630-07396ef234f8"
                    }
                  }
                ]
              },
              {
                "id": "9e1e3194-8c93-49f5-b384-0b1c08eb0684",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "441ac588-c020-4888-b0ed-fea8b2ac7d42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07d8ba4c-9fbd-4648-a552-38e1953280e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ef3048f-0089-48b5-b6bb-c88b46ae2121",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "47f6f788-c7ac-4f57-9af2-e63df68a3b80"
                    }
                  }
                ]
              },
              {
                "id": "b9201f12-7b0f-400a-b4da-b3d1ba6736e8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f43ba043-835d-449f-9058-6f216bb68dde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "923022c0-d738-4275-8d96-afd8ff1c5079"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "073ad78e-ea3d-44fa-a4e9-b4219810b361",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "768169af-688e-4d28-9875-76c8d2cbc638"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d2eef04-756e-4cff-9f7e-095e2ec48347",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a46e5dc-1400-4287-9d2a-1be7e7a467c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f3ef2ac7-b18d-452b-8bde-83cd9b608683",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d468275f-9c15-4aca-9942-6a34427fb441"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04e6cb8c-b982-4c2f-a02c-c99d7e30fefd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "66fe07a2-f15d-46c7-944a-08aa26ed72ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0051763e-bba7-479b-b14d-b3aa6b52b84f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12db547f-7b9b-4fdb-b984-4f21b7eaac02"
            }
          }
        ]
      },
      {
        "id": "5632d290-abfb-4d55-bedc-0671d848a561",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0fcef344-3194-4e66-8a37-e680e04221b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cdb91d98-78e0-4dbe-bf74-610a62d92055",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4320de3d-d3be-4f76-a406-72b0affb3b74",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62596753-cb8a-4b17-9fac-b322543a4abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6711ef09-ba6e-48a6-98ba-86e7a31cd761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25198b0-02da-45a3-95f0-ea0794ea2802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be8f746-5e70-4945-bf2f-6f5a8da577da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3feb32a4-2dea-4148-8890-059269ca7dbf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a510dc40-b2ad-4580-9dc3-d39c60bf16c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e26bde-7bf5-408e-afe9-37167a1411c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd813ff2-59fd-4765-abb4-7670d91b9669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1715bba-083d-4288-a152-41d7ba8fb527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af54c15-94e6-44df-93cd-320c48727bb8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d28bc97-c8fb-4428-86ff-288e32e0e939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2363e0e5-be81-4510-9675-bbc764ba964a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bfc848-dbf6-48c7-8bc0-8de67286eeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b0b53c-37ac-45be-9e86-600ad423e104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0630eec-32de-4432-b6ab-214a42d0fe26",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3b0cfc-b4c8-40ac-bf96-0e5526bc0cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c43d6cb-6e69-45e4-993d-b3283c983b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da20922-88af-4937-8cfb-9d7ee393815e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d96cac32-b852-4090-a710-3840eadf5d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89872a90-e5e7-44c6-9565-15feb4366e7f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436cc68c-6352-4326-88df-6ccdddb2aeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a573aff6-aca6-4c3e-9dc9-6a7eb62b963c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2a82e9-aee1-473c-bda4-5d853a30d0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf736674-5870-490f-b9fe-902220595a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922f2421-f230-4cb4-8c6d-301c373aa0c4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3652a38e-0c11-4f9d-b289-d635a05c363c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef9d405-ac48-4003-afed-2ab4d920ce2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45a38a6-8f91-49dc-a079-ac96bf3fe469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c817081-4e7d-4e9d-9967-83853e1a423c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ea28fe-8776-4ea5-bc7f-b42fb66ccbae",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8115dae-0de2-4935-b040-131a1e27e062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc82b22-1e84-40d3-a65f-3ee760137e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5715414-1578-4b43-a8c8-d12cc8aae3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a83428ed-9a02-419a-a8bd-2acf78dbc2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480320d2-4a92-4e1d-85a1-013bd9aa566c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eaa4ef5-7771-4469-a783-d58851a59ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e76e5c-3f92-4b7b-a983-358b0bc4fbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18eb44ad-93c9-4df4-b176-1e97330958c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7be1f93-faad-474c-a5ab-70b7138176d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef82190-a09b-4761-9036-7b1cf1342783",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef29869-9985-476f-846f-855675d29f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bf08a5-f7fb-4d34-a264-8a165f31a505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d25300-5ca9-4f4c-9ced-833c49e4801c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb3e0f5-ee26-4123-98ee-3750836a0798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a9ef78-2159-4a61-bf40-96377e825f2c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfcdbf7-a182-4e61-bf67-9225ab31225a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b284ca1-58e6-40f6-b16a-10e3bdf01d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea15bedb-9d78-4f43-a0df-c47ee85be236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0e966c-f56a-40ee-aca9-d288651fe8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c62dd6-a680-4954-a059-6f2e256bd659",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40586bf7-2e4b-486c-aa10-9e2d90adcb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad74014-2648-4b71-ba45-ddad5b0a635b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344797f8-af5e-4021-b334-c531b95e8393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e1365a1c-d860-4a40-8707-e68a088e7639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15eb7ab-463c-4485-97c6-cba732d1715a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a225057f-2730-4c2a-bf3a-36b561888f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7699d1a6-f381-40a5-a6ed-f365726f9747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58934fdd-999e-4ecd-bc5f-b97d0d080af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75178b29-f13e-442b-81db-28626a4627b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38cfbe8-8afc-4039-bf80-9dd60393d7f7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a9f107-23fc-4883-b83a-a25f15f79c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec6b1b9-a9fa-4251-8fa1-3affb28be106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2901cc4-7589-49b3-8dfc-5e3472859070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d636c0c-0648-4736-be17-831f84802b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b17a6b0-48d1-449d-bc8d-435302a0f4a8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7f7dba-50c1-4190-a257-e0a39cbd16af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902fb8ea-c1de-49ee-80c7-97956febd1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a791a283-59f7-4d92-9645-42dac1048181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb0dfda-38d1-4037-a653-8411e993c1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c1577d-9e4b-45f0-aed8-dfd9509eaced",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed7b664-b88c-4aae-a56d-b482df1a84cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6cc1a5e-d0ed-43fb-b7df-cbd339b36dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28a94c1-e112-4fdf-afde-db06adfca703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "684f4b1d-e262-4ea1-93d3-f66800b7a76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27516b35-eafe-44da-a2c1-497f821fb189",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7700b715-258a-4cd1-8a84-fb4e901fa512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec81199-e78a-4ea8-8b99-a45983785381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8882774-7426-44f2-ad3c-0fc0362df843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5db35f97-7706-472b-99d1-effc86cad733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e927f2-c8f3-48fc-a992-0f5ac39c1e64",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5cea5b-5f5e-4ff9-b4e5-deee2be62437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb6252e-6ee4-486d-9306-f9edf961e59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bdc110-a302-4426-8c8b-031f7ae88ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c27a2a-fe7a-414c-af39-04d98e250ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b37bff-00df-440d-bc10-74b96da97665",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d6148e-ec36-4dda-a169-e227abb04b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1f0c9a-52ae-4884-a004-0e66cce5d308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc05b31-b5d6-4be6-8e76-d56b814a29f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1a7ff2-b848-452d-a9dc-e728fd0f8251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35e72db-205d-49c2-b266-263763703c4a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d09cc45-6070-4939-8a90-759edd9418cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6659abf-17c3-4a87-8626-982b00037290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8425f51-9693-4257-a982-92086ea6137c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd4cb80-b69a-4180-acdb-41d00b914c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3c11bf-5b50-44b0-8279-64b2de0e1412",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ad5fa1-5be1-46af-bbaf-4091bae1f36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555d9673-27f8-46b0-8b6f-1fb4672fdb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a076a9c1-0da5-412a-91f7-a9f3f2f3dc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b097b1d-5376-4206-9791-d540e067a0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe82a60-c1f5-4ec3-ac91-60cbcb484f46",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10149816-2145-4876-9545-57238725ecac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068f6a3f-35c9-481f-a006-3fab064cd0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8e70e1-a62b-4c4b-9ac0-9d17e989bd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4611bf8a-f1fb-4235-bfbb-31e0f8725651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2682ce-6c0b-4f8d-8e98-9cc17cc1c73f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e64519-c211-4c57-93fb-11423bbd022f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d35062-52a3-4d1c-a00c-a9dc08205a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31d762a-abd7-4f4c-a851-a62b90b30edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26eff6f6-2939-4fa4-9e72-365b37e348e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391bb869-b182-41cf-82ae-95bfba862783",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413bb1a6-26fa-44d0-aad4-60500c06cd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c4d3e9-1e5a-496f-b40a-7b5fbe49a76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe346fac-7078-480e-be56-a3e2a462994b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d07f3de-61f7-44e6-89d5-f11b2ed47015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fff865-2d6d-49f4-8ab3-e4f94c370038",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f11cbd-3f8a-4509-9011-8ee44a74e998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffa65c5-65c7-4a9e-8cd6-359b0c662e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b81045e-439e-4b92-a8cd-f5c3727e2aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a64431b-a16d-4007-bf40-cf13931fdae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd333c7-1ddd-4820-a1d8-d125b3d5a775",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9337a1f6-14ee-48b4-aa16-433bad5b8222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0777063-709f-436d-963d-49d839d0ad1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0efb013-1331-4a6e-beaa-a64dfab87914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "919cf447-ac41-4310-ba1f-fe4941b1d036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e311ead9-2165-4561-bf1d-a925f33e0265",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b92b39f-f268-486d-a498-ea2d23970418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e564c02c-4f54-4dcd-8b59-aab5d263723a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93546c4e-2199-42c9-9e58-1c62d44dbf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc2c94a-8fbe-4251-9327-ed9e7bddbad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768e93fe-c9ad-413d-98d2-4f0ae1dcaa40",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ebb88e-502f-4738-afeb-26c4bb7078cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8afdb51-99ed-414b-a157-3fe2c6f6cf0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12c3902-c191-465e-aac2-cc036c608ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0df0854e-135e-4181-b388-31e871380369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9835d0de-4892-4e8a-b475-a35099b10d03",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da2eb88-e9bf-4c76-b7d7-7232201934dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22d839d-b6ad-45e8-8436-dfae7b142797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c81a772-71da-41b6-9a39-04ce1e94f7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9043a31-5f41-4d00-8dd5-e7e0a015bc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf16ee2e-ef9f-48c4-90e5-654fd8b6dbc3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0d5afa-5473-4261-9f1c-51f49e60d325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d60c630-8018-4f7d-a533-689e692224a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf6526c-6f37-4a43-ae71-50091139c6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0689fa02-b181-4599-923c-000f0072ea76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d249862-9181-478f-9e86-1457fd984043",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523a121a-eaa5-4d16-b696-e6fbf5458573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c57a12-3488-46fe-befc-e910aab0889a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb34942f-ad06-4c75-a602-480074e23e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2596511-a56f-4cec-8b24-6d4269ecddbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c321bb8-57e2-4470-889e-c1d69661b053",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883223ce-e487-4b3b-8451-d1bec7f658fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cff1058-69d0-4077-af62-fc5745633a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81a8646-6612-47b1-8ed5-f9180d278ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a41582e7-5de2-4b92-ae58-ea33ff096a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94f56a9-cf25-43f8-8ace-1e4e74537460",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597f73d5-c023-40f8-af39-64f05b084821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141231ac-9299-4a3e-8f44-a3d30a6f07da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5408212-4be2-455e-b167-f4c5ff361fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de70397d-f8e7-490a-ac78-b8411ef6f45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf47680d-5dcc-403f-8cf4-544b12d9a772",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90aa0f24-94c4-4e98-9509-7e51fb58e1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdda9bd-ef84-4061-915b-46d7109de25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db057f18-8bcd-451e-9341-f5af1de4b56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5da081-a5ec-4002-9d00-d290dc73a8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573e3f10-c89b-4ecc-a6da-4f4d248349a5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acb935d-ac86-4e21-8765-8bb8df3c7c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cc71fe-3bbe-490b-bf94-9ffb114adfe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc48ab80-fe30-40bc-80c7-2d1f06be22ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2998bd34-8488-45f1-8fd5-4bed99454196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb170043-a077-40c5-b1f7-3a6177e5cd66",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c353b5ac-b216-4932-ad5f-822f97d046ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcce3b04-53d0-465f-acbb-0aafe96725ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a229d476-b71b-410b-b921-f4dea4dd16c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14334732-05f5-432a-9ab7-42472ba3c0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6765fda-ac1a-41c6-92bf-cae3f45e08f7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e84dfc-bb26-4504-ac13-14c87000e89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7bd184-2614-4cc8-a42e-b714d3fb7c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d52ba1-a9a5-46f6-82e1-732172d2f0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29cb88a1-65fd-4539-bbb9-d913cf5703db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07f07a5-e08d-4274-8133-dbcf377c7638",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725ad86c-d3a1-4d9c-b5bb-df2a131e06c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e086cf13-0363-444d-9270-80f530a26f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bc2adc-1f4d-4028-900a-e8459d9df62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b431a4e-594d-43b2-b283-e0f7cbe1fd1c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ccb0ae5-959d-46ba-a859-14e5bc167431",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36b94a3c-083a-4ffc-8fed-5e8ce404ea1f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef48a5f-45f3-4342-ad8d-f3a34d96eac8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5e593f4c-d20d-413f-b5f1-86faf41cf3e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfed12af-a5ed-4b63-9b93-3457c84de86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3088edc-96c3-4e31-8bb5-361d88e69c39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c5299c4-240b-4d4a-819a-67b00a48e436",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7c25025-724b-4d01-9a47-b4167c116eff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe9ff22b-fa35-40f2-8a50-d8d676097c6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e7affa2-dfff-4fc7-ab73-005910ad050f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59bf5c31-e6d2-4059-a783-34b2e0dc857f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1354340c-212e-454b-add0-58009bc54658"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7b8c05c-4354-44ca-847f-2607ce2ddc39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7127e34-b6c3-4765-9fb4-8445293450b9"
            }
          }
        ]
      },
      {
        "id": "5d2c19b6-7c29-47cf-9885-103c6e8f2724",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "51c73902-9ad4-465d-a939-3bec927467cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7b01a26-b68c-4947-b465-12b8be38e174",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ab5dea8-4ab6-4bf1-8c8f-ded3444f9493",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002b143b-e4f3-4463-a627-5dc6cab8a6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a821519-2788-48ad-b66e-b4da1c514d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1130bad3-fdb9-4bd7-b7f7-b6b6964d4cb6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd3253d-e710-4b79-857a-d217d22bc4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c6bd2d-0686-4026-8771-c6e718184f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55023b55-46e0-4d6b-bbd6-71f0bd7438f1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85e322a-1dc1-47a5-8cfe-df4539df534b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106f203f-50ab-468c-9cc9-8bf66c65c8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbaba45-82c9-400e-8fc4-e7ec1bdbe86f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207a1260-af7e-4c68-89e9-c623dbc4dff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64f171e-9c76-4bfb-a009-7a9240552800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2a51c2-62b0-4369-82d9-acf0f7320103",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268c0dd5-c4dd-463b-aaae-087120001085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdbfb95-9e27-4ffe-9943-eb4cb5ec41e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d166a4-4435-4eb6-99a2-824f7b2beebb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1054e201-f7ec-4a13-a362-92c51a654823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467c4405-b200-4927-b906-6395d909d05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5622dd6-4251-4480-bb58-363468330db3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bb5e3b-e1c5-484c-8ee4-a0b451d8435e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478250ff-5027-4ac9-a81c-99d291199cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dca9da-614a-4844-bb60-2950704ce890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f0f2ee-a506-4a94-ad31-deb65ae131e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30382889-8dbd-4262-a2b0-2ff69ceca70a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463e73af-e2c5-47d4-8913-4654aae272d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93ebd0cb-b80a-40a6-8338-ee65b74ace39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a124718d-bc04-4f24-af1b-bb89cf30e7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3beacd60-1cf6-404a-9462-0664eb50963a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f5c511-df78-4a4b-815b-c5b02ad943b4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d888094-2f67-492d-85c2-9d68f3f18a82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d3e3838-2f91-4f50-8787-3f4ce28059a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed46d6f4-10b4-4cb6-ba06-a29140506e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedc1196-5127-4fac-8a05-63bc874c2883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ca1469-cece-480f-a9ee-6d96af124d4a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f88938-ac63-4a7a-ade5-115fcfbf07f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0421ed87-2a09-4719-8116-255ae96fa943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e292232c-da65-4294-8c05-b1a2a67767a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e2b550-3c2f-4cdc-b650-e0120ad9b35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248cc011-2271-4de1-a970-0201aeaa22fe",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee0e01f-5eb5-41ef-8471-07ef518e9fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a897e3b4-e7a3-4207-a602-358cba5d7efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec85669a-63d8-4931-9f49-f3de4f23b6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f83bdc-2344-4dab-b1cc-6b8cf7f805a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543c216c-be4c-4efd-a2d8-2d66af1d9515",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4bb5a0-da7d-4985-a9f0-eb1a1fcf7de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6766b7-14cf-4d90-8d5b-fd02509bb4c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "946e48ca-4917-4d90-8779-66023fce09b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb7e64d-6025-4603-b04a-dcf79863146a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd600384-7021-4514-b8e5-dd356c0fc313",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdd5edb-1ed0-4a11-8ecb-26aa95d50cd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "853634c9-75e6-496d-b249-253a33a0e446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c96763d-7bef-4458-96bd-a9c9b8a1dad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff40710-60fe-41ee-813c-3c87eb812ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfccbb1-665b-43af-a5f2-5c5509c9a511",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd345e0b-3e7e-4584-a34f-88cf89a330e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78c2dec5-d3ec-4b78-9431-00abdd197aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02456420-ee68-4e75-92f2-5350f72c4f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf9b2b5-1cce-4724-afba-de7e8e3ad9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fc9599-1ca7-413c-b8dd-39558cafd806",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f81584d-fac3-48cc-b736-c82d3172a3fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a35f3f2-e426-45fa-94bf-f35015296f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdf56bd-02a9-4c1b-9dd4-bfffcb8b399b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5bef2b-c5d9-4387-87b3-b160a5567cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b44fbd-f50d-44d1-9b21-ca6ded37f34b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2693dbbf-a11c-41f5-8bba-4dd33ce46d50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b197413-2ec2-4c21-8f53-bd446b11cd11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5166bf1c-e6ba-4660-9832-27d76d3e9dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178d3994-a767-432a-a106-e9df5a3fb8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a416f7c-4c66-4114-a39b-e36df8de20af",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38040d3-48f2-46ba-a80a-8b6b7e9e8981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5384660-5019-4beb-9b5a-da37e0f3d2de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66031a72-28d7-4ccf-bf88-f19c80ae010e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46646131-7aec-4229-baa3-d7470a9e28b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8379524a-d476-47fd-9861-530551ddccd1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de748213-f81f-4653-bf9b-e0b3a724a8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ff5a7d-ebb7-460c-99c1-48b17de90df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6874dcb9-7623-4d76-a718-159cdc7861a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980d3672-6380-4c9f-b24e-ed4c4523289d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58b3d60-972e-4e64-9253-f5ba7602c756",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec74f36-1e51-41aa-b5d0-d45912ab4302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e80dc5-9e56-4abb-8c7b-2da1b21690b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e00938c-362c-46d1-a988-cb2bd8f77863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844b2a54-823e-442b-81be-2eb5008afe0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0eb030-7141-407e-b7af-aa0465eb2157",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5d3904-5b73-43dd-af6f-ecff40217a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eceafebd-4c59-401e-81e4-9f203be62bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de535a9-673a-43bb-90dd-8fb45e6e65f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6185ad-f5f5-4371-bba0-8acdef897f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6715f67c-c60e-456b-95fb-8d426f30263e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d9a312-71ea-4943-bfe4-65fee2766a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fe0d62-55b0-4c78-86e7-76747855e2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e341987-ed5f-4e08-a8aa-8d3538a0941e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4bfaab-875f-4667-a95f-29a196cbcb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a795224b-b91f-4871-a0c7-392402da7827",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b82166b-1754-46eb-8082-1e61410fbb60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cdddb26-65eb-454e-8e84-72fa433c2778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8dcc1a-2aca-4a4e-ab96-2df346285fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7635c30-0103-4b79-86f1-5358c016bb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b21c410-d63e-4f6a-9cbe-778e55ea4ec5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c66a5a-6130-4d3d-9bb5-fa047f009e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9a10ad-bc00-4ba4-93fa-3eb5d7aa4f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1bb483-ca6b-44f3-9903-64ca309f3222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ee37e5-a218-42af-a8aa-ecd7d6744a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfeea884-1442-4861-9df7-572d2ad3efe9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e22be69-b8ab-4ea3-a4ba-62656d93a5f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcafa509-4520-428c-ba25-b034813973b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daab83f8-a4f8-478c-a95b-94182e99095e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6979689-a469-4af9-a2bf-ad9e1d72cd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dd1983-af2e-44eb-9b86-ad300a597aad",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9b8268-1a52-4ad7-a5a3-a2e0f910ee89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aa781b7-d62d-43ce-8f28-ed4e8aba0c9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457d6a0c-2a25-45f6-9cba-b6651c3a37d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b354d9-5e8e-4737-ab0e-90fbbe4356c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c840d3-a309-43f0-93d0-c942aa00e52a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f103f8-bd0f-49f5-827b-8d5f89762351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f117b9e8-6660-45ad-ae8b-ac00823c19e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1c4ebb-86be-4b14-b16f-685d9e7f15de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ae0f10-6599-49f5-9f72-95d746b0bc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a597b6-5dda-4263-8cf2-29998d4efecb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f05e388-9368-4181-ab9d-04bf0d6996f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09778ffd-b8a6-4c48-973b-bc3c5143ec5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaabeb8-de4b-429e-9711-5c3161c7dee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af31bdd-9b58-428b-a7fd-b0b7919f0677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f202c464-3f89-4258-8bf5-bcad8825518e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287a94a0-6a42-4382-be5a-ecab18ed67be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb543ef-eb9a-454c-a6b2-78c95e4dfeeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efa711a-e10c-4f1d-ad09-a4821abd9d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5576c3cc-7357-4a6a-904a-5ae44cd2428b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2363550c-dd04-4e19-922e-0c61b0cec02f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfac866f-6c2b-4f61-9da0-394bea18b442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c05892-9fd5-4cf0-8a1a-4eedf45531db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03398282-c015-47c4-b145-1b7aaf9e55ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464228c7-9a20-4101-b359-c781cb1752c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7604c0-696c-45a6-a2f9-599b6a1e796f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf999c6-645d-403f-baf4-3f48c578497e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81d2aa98-e444-4117-8b96-ae374188baf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa2161a-7a9b-43fb-9694-d327e4c5f34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad15f06-c776-4e30-8738-81b75bcd5fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec17d7b8-0aac-402d-a553-3e013afc35f1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc7e65e-f5d0-4820-9f04-9e752c9aecfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f3d6e2-b5c5-4984-93ee-1757ac20b753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f850f4-d286-4acb-9431-1205cd367a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ccfc47-dd7d-46fa-945c-d53f7317a828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7096e9d-8c39-4fbe-8878-2ca03707c91f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119e82ef-2ff9-4504-a652-ccaab7bb3e88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d460972d-b44e-4511-b842-7bab8ccb781d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129e486b-30c5-41e2-b9d2-5452e46ecc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0848e082-fa41-414e-8586-4f42668ce3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b44a67b-627c-412a-926c-731fca68af1c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70aa3bb1-7e82-4b2b-96eb-1c4940ff7ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a80c19c-7395-4dd8-937f-a83e7dc3d4cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e520a1-2bd9-41f6-aeef-60244e62144b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e30510-a2b6-494c-a451-8d7cde8e8947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a86ba2-7953-4c52-a136-0dd24a2af0df",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76fbdbc-ef07-421b-86a9-7e03ed72b851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e812e3f5-5bb3-471e-8307-b7486c30ac88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86d077e-1779-4021-871c-39403fe9a2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152ad4e5-5566-4eb7-9471-fa6ea6b576e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adccb16-8734-495c-a3e7-3fcd9e29b533",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f44e3b-1f33-4d03-b895-f693ae0ac560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55dd5303-1972-4732-b0b7-2b1f0ccd27fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0969d91c-248f-4a9b-9859-77a622ae01d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1dd963c-7301-46eb-b82c-2e84056a9dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a49605-8043-48db-965e-46aefac61f4d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63f4c95-cc57-41a1-aad6-4177e832a4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a9f2bb-d601-461a-8d50-e3b739131dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f846f71-c623-4577-8506-776bea6b1bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0759b86-f705-4f1b-a030-2016ee1cbe36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d0d5e6-ce42-45a3-b248-b79c3ec1bf06",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27382549-9a50-4435-b480-dff2f9094b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a21b3d-c45a-435f-bedb-3dd28672ad2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5a4366-91b7-4e30-ad5f-e96244449393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bf9e7c-daef-4948-8f50-292aa513c7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dccfbf3-7264-41ef-87d7-bec55efb020a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e574b55a-e66d-41f8-ac42-3622e1451cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4687c877-9f94-4008-bdd3-0375b8f1a96d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33380134-8936-45a4-8c42-852a181ab12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af43b841-fb77-42ef-9282-997048b3ea2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc27790-23f4-48c5-be57-817cf4362531",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406a931b-c388-4ba4-887c-fdca009732d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7987514-fd54-46cc-882f-5123a9214905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d98920-f8b1-4623-a5cc-13e8fa431e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c352106-375d-487b-b7bc-e26b266f6e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27efadca-e7a9-49b4-bc48-67c3949f78ee",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71aa11c-db5e-4335-a68e-5cbed96e3cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4619891-5718-41aa-ae67-7d50599e9d84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95f64cb-a549-449a-aed2-bc8c0a2d2ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b579e8-7d72-4083-a2d0-75a245750912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79f077e-7f77-44e7-94f8-b8639173508a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cc3043-ee74-4e65-afc0-a8efdcc80007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49b9d2d-8183-4495-a849-95179737532a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e866d309-bebd-41ef-8db8-f578657e49b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd43b75-b292-4c21-9bb7-bbd050bab5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbabb7c-0d65-4f40-bc7e-61e09ba60f6b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10437a42-e38f-4605-9a82-feb03ecc3084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15a819d-5b37-47d4-b404-43a61c3ff2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aedde6f-088f-4bd6-9db4-e10da12e5384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d90237-8591-4a60-8f6e-8b031cbff299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5532ebab-d848-4de2-b2b8-067207bac68f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08636dfd-784f-42bf-9699-3ae6fb39ae76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770ce99c-ac8b-495d-bcaf-36c11e5bbc1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ea7284-a905-4cf1-9f17-341023ab7471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234acf56-8882-474c-a99f-39c462af2bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f5782b-8819-4e2f-bb63-78965c5079b1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd14d66-ccb2-48f0-99c1-f03d23932f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ff5cf7-694b-4da8-857d-718d14a4010e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e8dd72-c3cc-4b5e-ad84-af6b4445b53f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2e675e-8434-4b85-af7c-54f55fc37bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3d10d9-31bd-4f91-8918-45c439f9f93e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32e670a-6029-4ea1-ae5f-6e3172149dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4c1d86-1491-4649-89d8-8e63cdad4d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17113b9d-f2a9-4028-8bbb-88305b1c2d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e418f6-cd26-4497-b063-0c278dbc293a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc01d46-c546-4263-ae51-a0eb4399ab25",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa12af37-0bb0-4ee1-a81f-00a898d3b663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "118c72cd-ca3c-4bfd-ad8a-925cb856b56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea92018f-95c4-406c-a3bd-1cd3819efde8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b0e5d5-aafc-4d86-b8ed-2dc1dcbd6c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4c2b63-8abf-422c-8907-759db6a6ceae",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56bcef6-9012-4292-becd-4024886c1e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36244df-cb2a-4d9c-82ee-5d5ad69a83cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649cc042-ea6f-4c55-9972-8c7e313b6bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2aa380-2b4b-458e-9508-d33d33c13823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b8269d-dd7a-4c7d-b7f4-7da64d41b734",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b751ab9e-d39d-40c8-840e-ac863cba28f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8c8b51-71a3-440b-9733-86add462a77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d79e5d-6ab9-4c1f-b954-12ebc424cb18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ead9af-56f5-454b-8b20-da33a2561349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976c2c9c-6dc8-49fa-a024-723f7742aa12",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff57a354-633b-4e8e-9c3c-cc289790fb17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c49cb18-ecf3-47e4-b246-f707ab3041c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b39b1c-2b17-4614-a91a-32f7c163b7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12223577-84c2-4018-8b2e-030775c4ddd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9119ea7-eb31-452c-90b2-483bd304f0b2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640298a8-3282-4ea2-b3ac-e4a2aaaf76d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141232a0-f0f3-4c7f-b898-94a996545b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491df209-55ed-466d-9a92-c1d11a42835e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b18259-c844-4023-ab58-40b4cd69869b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be78a5fb-55e0-4a72-9dde-e54a6ddde86c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcb5ee8-eb5a-443c-aa39-c81689fad9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9930ea47-381d-4b39-9729-ff1898ca69a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef93f4c-1381-4bc7-b09b-4720195b2fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee53cf4b-15d1-4311-9b14-24a12eb5805d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1749ed-ae8b-4fc5-be66-6a368796f0e1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fc58ca-86f0-48cc-b69e-8221a869b9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f172055-4ab0-4b8c-8fca-27c64d6d1085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b1493b-dbf1-4091-9306-e22e611492b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df73533d-79f6-4026-8141-d50a46aac5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5773daf0-cd53-419e-bee9-0dc53fdd68cd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e39341b-b774-43f6-a87c-76a87331179b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0adbc2e7-1166-4376-85a5-29a576f67d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d02fb8-85b0-4e7c-b9f7-c7d8ff36053e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dceec977-b6d6-459f-8f94-bb128a2fc067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e597e1de-6355-415a-9a5b-61d4c0c7291b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c49b69-a701-481d-825b-af4489dc3f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8dbde7-0859-446d-b78f-940751185ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ab1ab7-c881-4750-b673-844f1aeb84d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d59e97-fe87-4983-b514-b5a05f88dcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1a0263-491f-48cb-9d3c-5dc8568f16b3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7462595d-230a-4ccf-8ad5-d8d6f252e405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88f5f1b-92c8-4a96-9a98-5fd5e278c290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81067ef-f820-46c0-8331-406da310641c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48692a3-44f8-4989-9538-048b2ca86299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0071be-9837-4b51-ad11-95480f066279",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd9667b-a87d-4de4-a53e-cc37e76490ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9f81ff-a635-4c8c-80bc-f1ba70b75df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39b7a04-5acc-4175-80d4-0bbf22ed28b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caaeb56f-fa76-488c-9e76-72f79cc972ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdf459e-ce00-4468-becf-4afbf014e348",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd93261-5c34-4806-a185-c79bd8e03f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9af2834-d19d-4f97-9b23-23f29ecd8274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb92b60-08d6-4c27-a56f-6ef685ff79e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89758a5-39e6-40fa-ba8e-6bf6e5d94cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063876bb-f29b-4fe0-9ef3-6676216e6630",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c2d8cd-8f16-4f93-8eda-238cdbb4c2a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bb30cb-d20d-4e11-8dcc-ca38c2eb0042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "130130fd-1461-4751-9d3a-ebb1bf3ac165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2259a911-2520-4cd3-83ed-b0a7ba05be08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c6af37-55e5-4f27-9daf-0753010c2b3f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63475e7f-914d-4ee0-aa94-cf1f1ff2e7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d07b78-adab-4f9a-b604-66274b642fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce4af74-3aeb-4232-a7ad-8f135b93c07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be60a9e-5149-4557-9f88-bf452bc8b4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2f2f7f-8f49-4b4d-a188-242c403b4283",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cf0cd7-b9dd-4100-b725-a5ead2a95a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9117247-e0c3-45f1-be94-84a9d9501697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942bffc2-bec5-4b52-a545-4f5e7f5dd717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c6f7cc-600f-40ef-85be-c416078835d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cbb963-7fd3-4285-a0e7-c6b14d05fb5f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb620dd-1961-4243-84ee-dd627039ec82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509120dc-da50-4817-921a-02608ffdc731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea65380c-7010-4dc2-a7c0-ee71bda619b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468e57ed-82b4-4df1-be58-b6ff5fed2b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a9aef2-1be2-4a87-beb8-e7e19aac3910",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddd54c9-9cc4-4c53-9a1f-f3564d185db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce5b8e3-f766-461d-a098-b4b7ef6e3502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa94154-c72a-4e36-8da7-0784fd5dda3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9665698-33b0-4024-97a9-6e56a67b2e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f79163-8c48-48d1-874e-e34436a9bb6f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8195ee09-c657-4374-bcb6-d7e85e0982fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228637b6-5b47-451a-85c4-431a092d45ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b621638c-217e-456a-93fb-0936a2926c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91de4777-362a-41e1-a103-a1779bd8e093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7af09c8-701a-4322-94c1-5e7081d6c2ec",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685268c5-e986-43f1-aff7-92cbf4beeee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3266b006-ff19-4821-b557-8921fe735eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333b9687-c57c-4ada-a624-d8829436761c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab18748-02ec-4314-84ba-b79c9abbea98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb18336-53e9-4419-aaad-d4cd543f6d30",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ba74a6-fe29-4ef2-aeda-6fb4fdbcbee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20ae1c8d-7f1b-44c2-9bc8-3ce50d02eee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc23ac29-cfed-4d82-b43f-681bccd6c260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464af607-25f3-4f47-9b31-95e3bb7271fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e34d568-c4ae-48b2-83c9-6ef6299d270e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469fdc0a-7c0a-4be2-9440-a74aa3f892f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "900bcb79-4d00-4e16-a4fd-d073a3ea0607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8c65a7-901f-4a96-8850-a35608a3dedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b338ebd9-f00b-44c2-880d-b8da8a842646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6447586b-7e48-4db3-8dd4-a6865ed010e9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159c2c62-1b15-4465-9513-f6cba7496083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb78a2c-bfce-4677-8b61-6d13e232ddc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16358e1-640b-4f5c-ba1b-6b14a410a857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53047144-3105-4142-8ad9-b00480172d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f004e2be-c54d-48f2-98d1-9fecdbdc2d0f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a054989f-d1e7-470d-8199-1da96b56a2f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fbefe87-6a26-441f-8dcb-12abeea2c961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dacd403-3e0f-4d2d-b107-7eaf288bc051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fa717d-15f8-4cae-9d07-506b28424b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400a0288-930c-4a60-8f9b-cfedf8d56bba",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a265a91c-8070-4597-916a-63d36e8cb069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cccc2688-385c-4aee-8af8-16d97ff26619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048fe2d8-0d07-4346-b4d4-d6ceff13dffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ee6041-5ae6-411a-8c27-3d895f440384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c20700-7723-4c34-8b78-ed22ec5dade9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5aabfa-7696-49ce-9c84-92ebebca4b64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1d9acf0-66c7-4194-b5a3-91267e09b3a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6781dc5d-5bfd-4a43-ae99-8062447c2531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7f51ee-44d2-47d0-bbc9-0f3bee0970a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd98faf9-7817-4e4e-b25a-9bceb6d0c19f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8334dfbe-add3-452e-98ba-e50e971f6f10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a793125f-46d4-4f83-92d3-30052be0e4b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db80f4d-0c4f-437f-bb65-ff174bbf1714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ab7b4c-3cae-4995-b319-32558b938db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26ecb90-de4e-4665-8d98-999c721518ab",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9d1ca6-4670-4517-9286-6ef58560da7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca0c1344-7357-4a1c-8116-a3985945d195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03afd218-b65e-44fc-b543-b624b47cf677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865f6779-d4e3-4fbd-bc9f-a50e22fe279b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d86f7f-b475-4e14-99d5-234d891dd189",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c7ec60-6650-4cdb-99a3-a079a2c4f1eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed96d51a-fde0-4e8f-ac6c-1052712d852e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2a7bdf-f89a-427c-a231-51cd28388bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340d5258-4529-4a6a-8fe9-691bbeb89321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a81d310-13ca-473d-8456-72063dd3a044",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd81e64b-1e16-4de2-930b-e0bdb7ffef00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0e95a75-9175-4949-8360-1bd5e193ae04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f05fd7-8188-4423-a603-f5ca526f3ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5a52de-3139-4269-8a51-1281b4377154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d36b2f-5625-46ff-ac27-1751609f39e5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431c13b5-728a-41d6-ab6d-fdffcec6f5d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "154e8b01-d3bb-4c2b-bd0a-6efa5d2eceed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d58308-8e5c-4317-9782-39cc561521fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a202a62d-0db3-4384-8025-7034085a32e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f18a1c-c342-4f8c-ba05-58de0b41af3f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754e17c5-e8b9-46ab-ae14-2bb7a5c08728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c619d57e-7241-451e-a3c7-c6072916b393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d481593-a646-43d2-b4d8-7f11145af2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdc58e2-e6c6-4929-933e-d8fd6c4d0023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a870bb-2eaf-4b4f-9440-26baa1fee052",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e9c200-818c-40bb-9643-1baa8b5959af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "958482bb-0c49-4ae5-af39-e7715ec6df04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881d1539-e2ca-4c2e-b231-1ecbe1581a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc06c5f-074e-46eb-aa38-ef10114ec59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb266d3-02d6-4421-9dd6-3b658647bf4f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a52c0e-d6a5-4c4a-950e-220a7ea61c4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e08ce2-d18a-40a6-888c-cb16d8c108bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e89e43-864d-4bfc-aaf5-c971cd544a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbaff08-8185-4e58-9ed9-926510ff73ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9bf442-996a-4873-b338-e6a2dcce5bd8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefefb20-4d87-461e-a954-980f15f1a856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e1daf7b-ccef-4f0a-bedd-c2fbdb9dad8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb552d1-b1c4-4d30-a74e-5eef96a27b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6a6a55-b2b2-4e97-a54c-484ffa7e71d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d2fd93-7309-4401-8ee1-634be80f0a84",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67d7140-bab5-42b7-b82a-28ecfaaac3b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a62b66c2-43e1-4926-b628-61d8ac644fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c31b8b-27ed-49d6-b320-58ae1740db48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64be544-1895-471f-ae4d-2f643631c943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b247c17-4bfc-46d2-9c3a-6548ae5803dc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe7d849-aaf3-4c28-ad08-fee037c2602b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7991717c-8ef3-4b5f-a41d-ec9e670972b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0478fcc0-3d72-4dbe-b622-2cad81754bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36462b90-ca96-4783-beab-99296e8fbdd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26258199-cd8a-4eb7-861e-6a35c41d7576",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe48603-7581-4468-bafb-3f5f8b1a4df2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f5b650-a041-4c85-b4ea-c498a3de8128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c733c2d7-1a9e-4d36-a27a-f780331d9f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd18842a-7434-435d-8ae0-f001e915b191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfc02b1-1265-4413-8ee6-285ae8d75243",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d26c58-6b9d-46aa-b369-d1842a620442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79c4bd47-167d-4952-a144-f2069782ee51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e63032-64a2-40c7-b6a9-cba23eef6c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068a6e56-2ab7-4ad8-9237-b065072b2688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2dadf6-f5ef-444c-8bda-c4be23af8858",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f782b64-54a1-44f5-86be-e817bdbc05c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cf7dd51-41bf-4b14-949d-b12df784e892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32eb44b8-19e8-472e-84ba-4032a9229df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4957da5c-b0de-4794-b219-6a73d017c910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c76f683-e6ae-4f83-8074-943518820267",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289cce6b-76c3-4240-a025-8e34e3f69895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9a2bde1-0787-40ed-a608-5677782c6fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fec7d0d-ee18-4b2b-85b9-1ec54c846866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe5a583-efd4-47e0-811d-b64a7e15d53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0931f81-e43b-428d-b078-c14b5a8ec5e3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bcb2da-8bc1-4865-9cfd-727a8f63e7da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41300273-f6cc-4a80-9ca1-08fbd903285b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73805446-e13c-42af-a49d-3f63ca7d6c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966bb107-8dbd-4704-8507-5b56f5cebe8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24065bd4-e63d-43ef-a59b-c152924c4668",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266b8702-5b06-4328-b924-a7fb829991e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3662b5d-ab81-4dd8-9100-97ae75542fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f87bec-38f4-4bf3-9c46-848125b08c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8eef45-4f70-4a2f-8718-e00dd9359aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8310996-6a6e-488b-9df5-0a1e5a84aac4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e465505-71fb-4331-9437-d8fe975649f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b1f2094-38f6-46e4-8010-eccad070c649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d586a20-eefa-49d9-9b74-5e2f70a5b1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af4c8f8-147f-4640-ab21-ee91170931d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577a4645-cf26-4560-9053-4ab70b5556bc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197a9eb7-9eb3-43f6-8739-1ad68e95dac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3ed5b6a-ccfd-42aa-a395-0e10c3af2bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe88d79-4690-46fe-92b4-b62b91f655e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8e539d-37b2-48a8-8166-2d67bf5d0528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca646b4-0bf5-4492-81e6-55ea945c77ee",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86734a43-3999-458e-8350-d2785536d817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "531daf8e-441e-40fe-84c2-82b0d82af123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a453238-3608-4382-89cd-d0622dfc947b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc25401a-29f4-40e2-93a2-905ca57f76c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1c9d25-712d-411d-bc74-cec985fee396",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b348ff-4d34-4929-9c94-a11cb91a391a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71da9a6c-26c5-40b2-8270-94fb1ecdd4b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f254227-3a73-4efe-ba46-3971bcdb25b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2259c3-fd6c-448e-b535-8a8a35bfc771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1786b86a-d6b7-42a0-a767-5dc594d86f87",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6c0b2b-32a9-434f-bf10-979588f28913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8280738f-a510-4e79-a5b7-9274a5f01319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57dd1b9a-ab77-40c5-8851-8354dd9ce5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6152960b-0ede-4438-86eb-8e8b3a8e3191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2475623-dc08-4fa2-b690-30a70b5e3db0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412a598a-f902-44c5-b5ae-110434b4f657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b64c5177-09dd-4867-b940-1c4cfd5a5113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b33c37-a79a-4a72-ac05-388f3de503ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0b3271-4366-4763-9f96-630b0bbce54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd819f9-a922-4483-839e-9fb17e6dcd55",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a2752c-5abf-43e8-b859-53a0e11fe355",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77c736f-9da6-4709-beda-a809d6c6b404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75695f74-ca4a-4604-9400-25d9951c2337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f37b33-2409-4036-a8cf-db269060269a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a207de56-268b-4788-a97b-a65c092b5a29",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6df164f-eab3-405a-a3e3-c2a3522923b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36d7ac5e-ef27-4c4e-813c-a38e22498d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac3e1b9-caf6-401d-a264-665f39fbb9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee42ae5-d8ad-49ae-8556-78bf22a1bf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf040aa1-1402-4eec-9f55-baec813fea75",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c138a48e-bf77-4d9a-b9af-a228ee07a3db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a7f417-35c0-4b2f-b197-c46e9e0dfe2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6537b000-3939-4bd8-866f-2c0007a390bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4d0c20-fccc-4500-ad60-7e85994b4865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a2533a-69c4-4079-8a6e-8006ece066b3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17f2221-1d81-4844-b485-354df5f17ea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fae34e35-f88b-4f07-b70e-b6fbd6c93eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c14f6d4-caa7-47fa-b24c-b57000ea8ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b020d5c4-07cb-4f37-ad45-1c26e52ee50f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c18dfdc2-634f-4fa2-8028-cf4e6b09efdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3c4a229-d575-4e18-ac2d-52c1625a2724"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b6c1150-641d-4b9b-94cb-731b2f3ae814",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30def0ff-23c8-492f-af68-24bc869f9174"
                    }
                  }
                ]
              },
              {
                "id": "f6041577-c7c5-4794-ba89-28446a1dfa2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58ead3b4-7058-4901-a687-2c63249bfc47",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f242920-4eba-4258-98be-f8e7451ae39f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "af2dc980-375d-4a58-b6ae-eb600dde86b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f51650a-aecb-4d9a-96fb-5b861177c6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc762e3f-0cf6-4ab8-ba10-e61807693456"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f52336ab-3558-4dfd-8301-8022fc305b63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d6ea632-ee99-4677-bba2-8133f85d1596"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa64bdd2-6ba5-42ad-a940-758390aba9a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee26e1bf-6a4c-40be-81a6-35d8d06fe801"
                    }
                  }
                ]
              },
              {
                "id": "f402835f-7200-4a34-b620-ffe1a1730c0e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bff31341-53bb-4a8e-901b-8d74e9da0a0d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103ba01b-0f73-4dbb-8c59-feb48b9e9639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9faad280-6e8d-40ff-8379-89954e8c9d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f24ac7e-f54d-46cf-aff1-43a43de0eaea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a081c6a2-ebff-4214-a3fe-75fe94e2e3b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "21490b06-7476-48e5-a284-67fdfd61442e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "14bbf0ee-6a76-4fc9-a09f-d2ea7b2c8a19",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "add8d9c9-2dbb-402b-9aca-d4816bad37c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "65deda40-ccfb-41cc-b458-0d458328dc10"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a4b508a-cc67-4e12-93c7-410f7476be91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d35bac0f-6feb-434a-a757-194fedb7e70d"
                    }
                  }
                ]
              },
              {
                "id": "0c0ad171-4e88-4b91-b9b3-2bd1d6271d92",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e542531e-9eae-4c28-99e7-ecd110742d82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a19bb44e-38b4-456f-b66c-d38c1c1cdcfa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b09bde5-ff23-45bf-b61d-132ab0fa9017",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5574e629-3ac0-474c-8582-0f65468457cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5115842a-48fe-460a-9df7-189b44875699",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e216ec9e-75e6-4a57-aee1-ac090b369465"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a83ded8e-0f43-4b74-a8fa-a658d9bf066d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aeb8735b-11e6-4a8c-b84c-61862b2ab65a"
            }
          }
        ]
      },
      {
        "id": "7712f333-b2a7-41f2-b92d-0f08f1cf9e32",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2b91e585-dc30-45b4-bf86-d509f05fff3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c2e9780-7c82-423d-8d53-6dd8e3f04559",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b218cc4-52ef-403d-a78b-15390066cf36",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75de248e-4ace-426b-a3a6-5b7d878d4c75",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "80aba4ba-e996-4469-9570-fb44e8c268b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6062d61e-85e4-44ca-be34-3b6893a745f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bf681cc-e6be-4476-972a-16465bc12f08"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "421b5aa3-1e29-4d4c-8f73-5ece57392c50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b27e8f40-2432-4770-94d1-3b55a9f554a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22b103cf-3e67-4485-8e51-945c0f5aed3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f5f117d-090a-4b66-a508-1569e4e2fdc9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c71ee38a-1b15-4557-977b-b9d671c6f16b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ee395ade-b1d8-4bf0-bdd5-b26bfd059daf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a47fe390-6f29-47b7-b9eb-f5e2dfe5c278",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d31f0e8-ed5c-4433-9e8e-67c0a914ce4f"
            }
          }
        ]
      },
      {
        "id": "e904ce9a-422d-4657-8576-9b39b4930969",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3c9c1785-3f7e-476f-9cab-0e6e0ce4090f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0fe185b-e937-4ae0-88bd-17e6b10a1961",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1873f0c5-6033-4526-868a-9017645ee908",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1059ca05-6110-475a-b5c6-0c8f61ba4e09",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aab7edee-a505-4f71-84d9-a9431aa573e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aab8ae-605e-4de4-bc36-6b8d78e258ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8f74a19-8f51-43b8-9b50-27340d948565"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "411146ca-8492-48f4-beca-1d62e217beb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e46eb486-d1c1-4e66-982a-09770c6e4475"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b83aeef8-1922-4322-a3d7-5211cc42fa88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "822b7730-93ca-4053-a8ea-a3e635b5de85"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ece0ea9-a524-4603-9fb9-4a00da24477c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7123931a-b4dc-4cdf-b974-275806980feb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be049f25-2337-4a9d-b5c9-60bf528a73fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "121be7c3-290a-4e61-82e2-a9492707d9b5"
            }
          }
        ]
      },
      {
        "id": "c60adb33-5c74-45f8-8606-b48ad774308e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f64704dc-82e6-491f-bd7a-afca3089ea45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f11b0f71-47b8-49ed-a6fc-c4780ca70be6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0705191-e7af-4744-a10e-05178cf3bb4f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bda094-a7e6-430f-89fe-7d2a93c4683e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64907022-39fd-4079-ba68-5728a940b675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed59527e-7ef3-4be8-ae72-04710a64d763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f576fdb-44df-44ac-be7b-d01fc707b9f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fe098d0-ca97-4a4a-a6af-4d3851b65fda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36247b32-f055-4c23-979f-4563027c877f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8318300b-a775-405e-9c73-2ef5b9e63b98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c664935-4444-4107-ba64-07dfe06b1393"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99e63bb5-b0aa-4ebe-a70f-64711625e53a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5ab2d41c-b39c-4383-a863-0a9b219f7b0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e125289-9102-40ab-a31b-17bf14b879c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "847d07d2-9f9d-476a-a433-03070bccba1b"
            }
          }
        ]
      },
      {
        "id": "d22387e9-9824-4b88-8e4e-1e5f8d7d4130",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d650ea1b-b1cc-4645-98ab-e37ccdf6f9b5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29a906ca-3c0f-4eb4-9c8a-6642f4aa2934",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "212fa035-58a2-4391-9f70-1162fb4464aa",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93eed87a-8799-4f07-a70a-cbeb337a1928",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "933c971c-1453-4879-a078-4d6dbd3bc7d1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 359.26587301587307,
      "responseMin": 10,
      "responseMax": 9529,
      "responseSd": 1403.653369776934,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719880720347,
      "completed": 1719880819348
    },
    "executions": [
      {
        "id": "07056639-b359-4e20-ab70-23c22a580f1d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "55e738c7-8df6-44a8-8a82-9614aadf6cb8",
          "httpRequestId": "6dd64671-f700-4ac4-b044-e4fa0da98a47"
        },
        "item": {
          "id": "07056639-b359-4e20-ab70-23c22a580f1d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bbe4bd6c-0c5d-4daf-bf16-2cfe1b7522ae",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "2e53c524-f3bc-4916-b4e3-bda78f9fc324",
        "cursor": {
          "ref": "3d78680d-4c90-42e1-a5e9-bd8cb2096d32",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "028440af-d5df-465f-bb19-af4ea63522d5"
        },
        "item": {
          "id": "2e53c524-f3bc-4916-b4e3-bda78f9fc324",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ea749a36-6c60-4905-98c2-644e965fcdc6",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "7b20a4ef-691a-413f-8df5-31806b2cbdc9",
        "cursor": {
          "ref": "04c4e08d-1eb0-4937-a70e-bd227613587f",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e625fae3-f82d-4748-90a4-8a4afdc0e143"
        },
        "item": {
          "id": "7b20a4ef-691a-413f-8df5-31806b2cbdc9",
          "name": "did_json"
        },
        "response": {
          "id": "eed3b0b9-9429-47f2-b9c7-79e50644f723",
          "status": "OK",
          "code": 200,
          "responseTime": 476,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38456553-4806-4773-a715-37b1c79e8cb7",
        "cursor": {
          "ref": "5b335aee-2d62-4c6c-aa22-e7748de7bb50",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d4093930-3c00-4428-939b-6a8f2d5176b3"
        },
        "item": {
          "id": "38456553-4806-4773-a715-37b1c79e8cb7",
          "name": "did:invalid"
        },
        "response": {
          "id": "af64d586-70c8-4667-a415-9fca338ff897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2326,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38456553-4806-4773-a715-37b1c79e8cb7",
        "cursor": {
          "ref": "5b335aee-2d62-4c6c-aa22-e7748de7bb50",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d4093930-3c00-4428-939b-6a8f2d5176b3"
        },
        "item": {
          "id": "38456553-4806-4773-a715-37b1c79e8cb7",
          "name": "did:invalid"
        },
        "response": {
          "id": "af64d586-70c8-4667-a415-9fca338ff897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2326,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8ae4e8-1b7c-4509-a5f2-ec527b1dabdf",
        "cursor": {
          "ref": "5987b97c-3c38-4da3-aa8f-8bd9d5892fba",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6bb21de4-6786-479e-a076-5cb590a72857"
        },
        "item": {
          "id": "de8ae4e8-1b7c-4509-a5f2-ec527b1dabdf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3bc23c51-8954-42f3-b3be-2f291e812b04",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2687,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4c5638-77da-4367-afdb-e5dd5dce4054",
        "cursor": {
          "ref": "1812dd8a-ff13-444e-8258-dfa708251826",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0bf84815-9300-4ba1-8d7e-36ba0e101629"
        },
        "item": {
          "id": "8b4c5638-77da-4367-afdb-e5dd5dce4054",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9bcb6269-da77-43b8-b89f-860f9ad2e320",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2028,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860046de-1c5f-4a4c-8267-18d1f78cd813",
        "cursor": {
          "ref": "9e5fb6ba-4313-4bff-b3fd-eef614d936ce",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d7e8b6cc-8665-4bf8-a77e-7fd89fb05403"
        },
        "item": {
          "id": "860046de-1c5f-4a4c-8267-18d1f78cd813",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5b382b65-ab40-4208-8b84-14b5d9dbe01f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 253,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e30f20-9c1c-4041-ba79-ccb6093b8b99",
        "cursor": {
          "ref": "928d6fe3-1a6c-449f-86c4-7146a49e696a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "83b5271d-fe41-48fe-9be7-aeb65b374696"
        },
        "item": {
          "id": "48e30f20-9c1c-4041-ba79-ccb6093b8b99",
          "name": "identifiers"
        },
        "response": {
          "id": "598cb634-8778-4ebe-8911-2120762ad12b",
          "status": "OK",
          "code": 200,
          "responseTime": 2500,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02605c1d-9c2a-456c-9e37-295101ed2d46",
        "cursor": {
          "ref": "600beff5-6d8a-43bc-89eb-456c3fc57447",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ffe8a5e5-84e1-4196-af08-6b1f87acd28d"
        },
        "item": {
          "id": "02605c1d-9c2a-456c-9e37-295101ed2d46",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "66f5ffff-cde3-40d6-be9f-5ffb96ee02d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b3bd54-c1d8-49cd-b3e3-516a3d7697bd",
        "cursor": {
          "ref": "2ad76fee-97c1-47bb-ac66-59ef5137172b",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "440c1b56-0563-421f-8aae-740c46f38ac0"
        },
        "item": {
          "id": "72b3bd54-c1d8-49cd-b3e3-516a3d7697bd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "78d111d9-e8f1-49d4-a75e-21b2b2807062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e581bf7-2515-4444-91a5-c29040dcac7d",
        "cursor": {
          "ref": "f52df387-457d-47ed-9a36-1a284c244ee5",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d94fe512-ae6f-4f04-9765-209a6cfd076d"
        },
        "item": {
          "id": "7e581bf7-2515-4444-91a5-c29040dcac7d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4e16bac6-5992-416a-a443-dffd6c9669b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f87cf18-2bb1-45e0-9989-019a3cb5ab59",
        "cursor": {
          "ref": "d7b22ee0-58c5-46a2-8cf5-6337314648b2",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "64ff6dea-fa08-4f7b-9fdf-7b09639b98b5"
        },
        "item": {
          "id": "0f87cf18-2bb1-45e0-9989-019a3cb5ab59",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "00b7a67a-9386-4399-9970-e7a9d2590cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0a3b05-c190-4579-a876-8ae995f23ded",
        "cursor": {
          "ref": "51f08f80-a816-4ba7-b779-4b5e39fafb27",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a30fd3f1-ae78-45df-9fc6-99a5cb3ca913"
        },
        "item": {
          "id": "fd0a3b05-c190-4579-a876-8ae995f23ded",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "242ce617-ae17-4a4e-975f-bc7d1d2e9acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f293df51-3910-4608-95b7-cfe18ca4560e",
        "cursor": {
          "ref": "b302c54b-be59-48c1-996a-559c0a9e4635",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "61b38976-6e7f-42e9-98d3-59587903a6e6"
        },
        "item": {
          "id": "f293df51-3910-4608-95b7-cfe18ca4560e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "750cd6a8-483b-4a3a-97cc-5918098407db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd105d7-d5a5-4b98-bd22-65b800f23cf7",
        "cursor": {
          "ref": "75c37ba5-facc-4bd2-95be-ac662f96811f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d02c72a2-9001-41d2-9f86-34bf1be91636"
        },
        "item": {
          "id": "bfd105d7-d5a5-4b98-bd22-65b800f23cf7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "803a06f8-12db-4c02-9c73-62a05e404269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fa759b-0a62-475b-8f2f-83f0adbe3470",
        "cursor": {
          "ref": "ccf0e950-849d-4975-972a-c3ce78a848be",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0e479df4-b507-43a9-991f-b1e0be48f09b"
        },
        "item": {
          "id": "d1fa759b-0a62-475b-8f2f-83f0adbe3470",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "204c8db1-6a51-494c-85b8-ab79f41a98f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956fabde-7b27-4044-9f81-b7780fa0545a",
        "cursor": {
          "ref": "819d381f-c9d5-485f-a22b-2d4b0d2b6a14",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "50f711ea-0a43-442a-9622-9e89777b7957"
        },
        "item": {
          "id": "956fabde-7b27-4044-9f81-b7780fa0545a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8f63fffa-4356-4756-a742-deaa3dc7eca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f442a07-2605-4d3a-a88e-85d6af7adadb",
        "cursor": {
          "ref": "5c9247f5-73de-4e67-9275-a81aebbcaabf",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "19eaf056-937d-4898-9c84-aa01da41bc10"
        },
        "item": {
          "id": "6f442a07-2605-4d3a-a88e-85d6af7adadb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "52c91b8c-5f4a-4669-aa1d-ed848306bd95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5daacc5b-10f1-443c-9fe1-3d3fd91ddf15",
        "cursor": {
          "ref": "a5bbd065-6480-4ccb-b878-d040643be583",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "eed7af3a-edc2-4cb0-a778-db86fd5713c8"
        },
        "item": {
          "id": "5daacc5b-10f1-443c-9fe1-3d3fd91ddf15",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a7c56d42-186e-44a2-b38c-92c584f5c381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a35d40b-6229-4923-b6ae-42523a15db47",
        "cursor": {
          "ref": "b7de96e2-2cb6-49be-b64b-0d7c4a1c7a0c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d302f5b4-c46f-4cf0-add5-71f0b04da9bf"
        },
        "item": {
          "id": "2a35d40b-6229-4923-b6ae-42523a15db47",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c3666252-9e81-4b7d-9bf1-b377ac1accaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46dddbe-70e3-46db-918a-f56adfdff3c3",
        "cursor": {
          "ref": "74cf6fc6-66ab-499f-b7dc-1d2a45997397",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7ce9f922-c0b3-4e30-b9bc-d4fed35d2a48"
        },
        "item": {
          "id": "d46dddbe-70e3-46db-918a-f56adfdff3c3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4c489ad0-60a3-4bd0-950e-929ed2f99d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff360c40-6eeb-4a7b-8048-84b3f70de232",
        "cursor": {
          "ref": "9c8cf35e-bf0e-4fb1-b422-f690af3d9847",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "54637d11-b8b4-4914-925f-931d5351d352"
        },
        "item": {
          "id": "ff360c40-6eeb-4a7b-8048-84b3f70de232",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9cfc3b38-7998-4347-a12a-d2d663392884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0262afa-8c7d-44f0-91c5-739ad6e0c568",
        "cursor": {
          "ref": "107ec579-c508-4f02-86b1-51011d4b668f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "07a0e534-552c-438b-8c88-bf55816381c1"
        },
        "item": {
          "id": "c0262afa-8c7d-44f0-91c5-739ad6e0c568",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0e1c4884-0f79-4d76-91a7-1fb1df3239d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd3f012-aa82-46d6-8076-6ded3290bbd5",
        "cursor": {
          "ref": "52c76f1b-8806-45ae-8af7-e226fc9c4fb5",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f34063fe-dc50-40d2-961a-59ba144c57a4"
        },
        "item": {
          "id": "5fd3f012-aa82-46d6-8076-6ded3290bbd5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "35ce2a04-45e7-4569-b34f-9ff8770f825d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b15d45-e453-49c8-84e1-df708b7194e5",
        "cursor": {
          "ref": "75b4f354-5657-42a4-855e-c3818c5fd322",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fb50c130-bccb-4205-9f74-edfa08ebb8bf"
        },
        "item": {
          "id": "16b15d45-e453-49c8-84e1-df708b7194e5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ac8034f7-2717-443a-ad2a-83765df972ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ba841d-1dcd-4a7c-8945-6180753791a6",
        "cursor": {
          "ref": "c05e54d8-870a-4f4e-b54f-69d1f2cccf2d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "668bcc57-66c2-4ddb-9817-dd3332afee73"
        },
        "item": {
          "id": "74ba841d-1dcd-4a7c-8945-6180753791a6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "764bee45-7569-409c-b537-2f4d21a4d0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d35670-b0f1-44bf-9547-b9e896c437ef",
        "cursor": {
          "ref": "387e5b2b-07c2-4136-b6f0-2b33bbc53659",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d17ebe1e-8381-47fe-925b-2831bfe438ec"
        },
        "item": {
          "id": "45d35670-b0f1-44bf-9547-b9e896c437ef",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9f5f64eb-9fe2-4ed7-afd6-6def4e10e597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5e3a09-24dc-49f1-93e2-a2897b10afe9",
        "cursor": {
          "ref": "32738c31-ffc3-461d-a840-ee57788fa7e2",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1ae71dc6-3d4d-4ca3-8e8d-6ff534564818"
        },
        "item": {
          "id": "7b5e3a09-24dc-49f1-93e2-a2897b10afe9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e130e344-6835-4cde-8e93-0bc538deb91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc072671-70db-4109-aed0-bbcab7eb60b1",
        "cursor": {
          "ref": "7cb16667-004a-42a6-a285-17db7201a8db",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d10caca1-c6b9-4df4-84b6-dfcbe3b6b5b2"
        },
        "item": {
          "id": "cc072671-70db-4109-aed0-bbcab7eb60b1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f89e48a0-20d7-4041-80d5-7b162e54bdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0044bf7a-1a6f-4c24-b6db-2f649330ad40",
        "cursor": {
          "ref": "efa4754d-774a-4f65-8545-ae78cc84f08a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7241668f-0b67-45b2-9610-c07d853d5a1a"
        },
        "item": {
          "id": "0044bf7a-1a6f-4c24-b6db-2f649330ad40",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5193d7b4-1512-4754-937e-e4e79362a448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa10b09-c63c-4ead-b9a2-c0ce6d39fe5f",
        "cursor": {
          "ref": "2b13e2dc-33ff-4fd6-9b1c-7d02a24b7133",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a6be1ce8-c8de-4827-857f-f4e94bcad2ca"
        },
        "item": {
          "id": "ffa10b09-c63c-4ead-b9a2-c0ce6d39fe5f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "197f109d-234d-4107-b077-34697287148d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce884735-64ed-458d-bfab-c910875fcf92",
        "cursor": {
          "ref": "c6af2ba4-e0b1-4d95-b33a-ceca01cf9250",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "857081f4-129f-40b6-8571-29d7c5c8c351"
        },
        "item": {
          "id": "ce884735-64ed-458d-bfab-c910875fcf92",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e691b715-b8df-4b30-83fe-81a0b0d310bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c6fc37-21bc-49f1-905d-9f67a4379c82",
        "cursor": {
          "ref": "56bc5de4-7c30-49c5-ab47-78007f4cbb22",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f0536c48-a5c8-4887-be3d-8aed68aa629d"
        },
        "item": {
          "id": "81c6fc37-21bc-49f1-905d-9f67a4379c82",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7c09730a-4492-48a5-bbd3-5ed819b68b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2439777-c568-4ae8-a4c1-177c3bb716ee",
        "cursor": {
          "ref": "5a94e76c-075b-4454-ad13-e5cdc44a4baa",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4e61f5d4-c73f-41a4-a6b2-393bfa1e2c96"
        },
        "item": {
          "id": "f2439777-c568-4ae8-a4c1-177c3bb716ee",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7a27b5b7-234f-49c8-8544-4074c3be6d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edc0e8b-2e40-401d-8a8c-9e100fd4d107",
        "cursor": {
          "ref": "8df15d29-db56-4429-80b7-dfaca5ec6120",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8784508a-fb65-455f-b01d-c671b638dc7c"
        },
        "item": {
          "id": "4edc0e8b-2e40-401d-8a8c-9e100fd4d107",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "022dd1e4-abbe-4ea3-b388-ed13bbdde0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a021cd-510f-4ae1-b5c7-6b0021c8641f",
        "cursor": {
          "ref": "6ae819f2-bca1-4a7f-9ec0-3ec88e996535",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2a8aa859-5c65-41b4-843a-b8f83e23515f"
        },
        "item": {
          "id": "a6a021cd-510f-4ae1-b5c7-6b0021c8641f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a7b7da72-9529-4d2f-a888-54e634770362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1932baab-1be2-48aa-accc-0f8661bc4ce4",
        "cursor": {
          "ref": "4a966042-e930-4a4f-a09e-be255034bc92",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d2aef89a-6d72-4005-9e7f-28068f33b786"
        },
        "item": {
          "id": "1932baab-1be2-48aa-accc-0f8661bc4ce4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "abbc91d9-4659-4805-9267-5d21c8f14f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe69020-7d21-43a4-b9de-abe71400c180",
        "cursor": {
          "ref": "1eb623a8-459a-4b01-8fce-fef9e731ccb3",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "35642b2f-4d9d-4423-a389-8a8f842d0a0b"
        },
        "item": {
          "id": "3fe69020-7d21-43a4-b9de-abe71400c180",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ac3ea693-41fc-41da-928d-5d6ae10a9099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a946a09b-d9b5-4e2d-af6d-3cce9e8fb2ad",
        "cursor": {
          "ref": "c14558e4-4ccd-43c5-8750-057d4de13cf1",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "656fb7bc-13d1-4846-83fe-2890147d33ea"
        },
        "item": {
          "id": "a946a09b-d9b5-4e2d-af6d-3cce9e8fb2ad",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2a1f9e57-4ed9-4def-a4ca-b35ed6c2b989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b6ac42-8944-4a7c-a925-3b23e06a6eed",
        "cursor": {
          "ref": "30a97fd5-662c-4aee-b3e2-aa4c34f12464",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b2cc4a02-b3dd-4f97-846a-65dad123a09e"
        },
        "item": {
          "id": "e4b6ac42-8944-4a7c-a925-3b23e06a6eed",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e9e8f780-d854-40c7-93e9-9c0381bf5420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae6d9a5-eed5-45bc-8705-7b7ce06e3a60",
        "cursor": {
          "ref": "6b9b5335-8d8f-4a36-a3b6-4da0c68daf95",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7b6e2aef-22f5-45c1-9a7e-1d3a996b8a3f"
        },
        "item": {
          "id": "3ae6d9a5-eed5-45bc-8705-7b7ce06e3a60",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a8563df4-fd8d-4a3d-b41d-c404d2f8c920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43933d90-937f-4abf-b024-34bc4e68cc67",
        "cursor": {
          "ref": "47ff3a21-d805-4729-8651-4d51a167d81a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "59d34286-742f-410f-b42a-572a7364af03"
        },
        "item": {
          "id": "43933d90-937f-4abf-b024-34bc4e68cc67",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "06c53cbc-c5d0-4a4a-8ef7-06d5d9c83a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef46f8bf-7e2f-4c25-a0d9-b6c66aba2f70",
        "cursor": {
          "ref": "271e9b14-80da-4f94-8807-6cbe648f8162",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d4e26e8a-bc2b-465e-81df-6b0222f73ff6"
        },
        "item": {
          "id": "ef46f8bf-7e2f-4c25-a0d9-b6c66aba2f70",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b3ba36f9-3a30-40a4-9e83-974b49500f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cf46e0-a7dd-4080-aec8-9c9d48c8d320",
        "cursor": {
          "ref": "c7352f30-0ba7-4068-b759-74cd1cadcb67",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "69176100-089e-4531-b47e-764fed929b06"
        },
        "item": {
          "id": "f6cf46e0-a7dd-4080-aec8-9c9d48c8d320",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a8f85aaf-6daf-461b-99fe-eea54b6ac8c1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c4e8dc-0a33-47d0-b49d-8fc305b117c7",
        "cursor": {
          "ref": "71fdc82a-1e2a-46e8-af87-4c1e2cabaef4",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2fb9cdbf-0422-463f-9873-27b64c8b5f29"
        },
        "item": {
          "id": "77c4e8dc-0a33-47d0-b49d-8fc305b117c7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c5a06d50-c103-4428-963a-4b4318a66d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea95cb1b-e2c1-4084-bbea-ff2dfe5f8778",
        "cursor": {
          "ref": "f0d949f1-f984-4eb6-92bf-a17e3f89cf11",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4168273d-c603-40ec-99f1-3540f27dade1"
        },
        "item": {
          "id": "ea95cb1b-e2c1-4084-bbea-ff2dfe5f8778",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "177c5168-bc3f-47e6-b122-e383540e41c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bc6e2f-1036-4fd1-91f9-0ca617ac9dde",
        "cursor": {
          "ref": "4ff32e89-0309-4b59-9f98-258b67ed4688",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "91a6a86e-6b11-4f90-a226-0b1a4a3b7c0f"
        },
        "item": {
          "id": "54bc6e2f-1036-4fd1-91f9-0ca617ac9dde",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8f18bc07-4835-42c7-be50-6d0923444435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dd5f36-1e33-4146-9c86-48e219cd621c",
        "cursor": {
          "ref": "21b25b34-ab73-4927-99cf-d21444e954d6",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bd70b102-5218-43fa-a46e-aa0deda79332"
        },
        "item": {
          "id": "72dd5f36-1e33-4146-9c86-48e219cd621c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c247b1bb-1b38-4535-9b11-ed0a416147e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa2fb92-a42f-4ca9-9415-7076758a5dd3",
        "cursor": {
          "ref": "159cf999-26c2-4410-b400-850486ffc4e6",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c30854a5-ba65-41ca-8b81-a65f9e052004"
        },
        "item": {
          "id": "4fa2fb92-a42f-4ca9-9415-7076758a5dd3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ba0d75d6-0285-49a8-bcb7-54dfe8c30c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307b4550-dad8-4107-935c-60bb62e2ae31",
        "cursor": {
          "ref": "dcf875ab-b193-4ead-9790-102e5ff9c12a",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "323ff238-237d-4e0e-aa6d-878e2f3fb5e4"
        },
        "item": {
          "id": "307b4550-dad8-4107-935c-60bb62e2ae31",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "39c22b57-3421-4635-acbf-637e9386478d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd84c3b3-0d35-4977-86fa-0eb1e1f2aeb9",
        "cursor": {
          "ref": "79c0e67b-3668-43a5-a45a-940a3fa68c82",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2bc85917-961c-4e12-bb83-b557a7b0ba1a"
        },
        "item": {
          "id": "cd84c3b3-0d35-4977-86fa-0eb1e1f2aeb9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8fcfcdd7-ffb7-4723-b8f2-14175ffc85ad",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cbb487-f49a-4288-ac6f-49c43afa013d",
        "cursor": {
          "ref": "dcf30391-13ab-49e9-9504-af18ba90ce15",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9c727b3e-f825-4f7e-ae34-976ef9778e87"
        },
        "item": {
          "id": "f8cbb487-f49a-4288-ac6f-49c43afa013d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dd60741e-0b0b-4589-b699-41e4b342bc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dc434d-7cd4-4d1c-af1a-d5411be3f44a",
        "cursor": {
          "ref": "8cae20ef-b5c1-4b4c-9539-3fb65d2346f8",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1bc85c32-ed27-44e5-8377-4022347e40b2"
        },
        "item": {
          "id": "d1dc434d-7cd4-4d1c-af1a-d5411be3f44a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2a41f8b4-1c63-4c2f-8147-5f5c8a4d8248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5f2b75-01a6-4731-9e10-47c21d9f31c9",
        "cursor": {
          "ref": "f40bb788-acf2-45e3-8adc-80795f2e0bfb",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cfb693a4-aeab-4068-adf7-f698eb91e671"
        },
        "item": {
          "id": "8d5f2b75-01a6-4731-9e10-47c21d9f31c9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "21818aa0-133c-431b-ab3e-5a705434d568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60797c89-fe48-4d9a-bd21-336e3898a6b9",
        "cursor": {
          "ref": "a6665a97-222b-47b0-b6d4-94227ccda188",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a4dc27f0-6e89-4d86-8134-de8341d5c2f4"
        },
        "item": {
          "id": "60797c89-fe48-4d9a-bd21-336e3898a6b9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "119f8a96-eedb-403d-9504-93d1728b5f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a940119-ad92-4f5a-86c9-73aedda36357",
        "cursor": {
          "ref": "2af815af-82e2-47cd-b436-5af8deba291f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "52bd1f30-ac03-4cff-b8bd-14c2f7f8a420"
        },
        "item": {
          "id": "0a940119-ad92-4f5a-86c9-73aedda36357",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d4b66df5-2bcc-4f7d-a185-514d92518b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fba345-0050-42b4-a41c-67c1aa7c7a94",
        "cursor": {
          "ref": "baa2ba3f-9b00-4ac5-bd05-f8a24cb7af49",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "80238fac-5073-4491-8122-6e694f38cf00"
        },
        "item": {
          "id": "85fba345-0050-42b4-a41c-67c1aa7c7a94",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "00fcff4e-ad2d-4d09-ab20-8e89ddce78f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38edde6a-6249-4cad-9761-07bdb0b671ed",
        "cursor": {
          "ref": "7098ecb4-be04-4438-b3ad-a2c6a0c9ba50",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8c699c06-8662-458b-b8ff-7652e32f69b0"
        },
        "item": {
          "id": "38edde6a-6249-4cad-9761-07bdb0b671ed",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f859ae0b-d4c4-4aa0-8fdf-1b243950440e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3d3759-a309-430b-b74f-824df7b60c25",
        "cursor": {
          "ref": "295a2db8-ad9a-4dc3-a488-ddaa900df665",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1bfb02a8-5d15-4dd2-862c-b5d250c72829"
        },
        "item": {
          "id": "df3d3759-a309-430b-b74f-824df7b60c25",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e6809f1f-f276-4d08-8531-664d1212ba6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1a9c41-7e22-42b9-9ac1-b6e633541057",
        "cursor": {
          "ref": "26dfa901-0bc7-4bf9-bbd7-13fd1f79e4b5",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "41150f84-fcbc-4893-a53e-6e96f0269047"
        },
        "item": {
          "id": "7c1a9c41-7e22-42b9-9ac1-b6e633541057",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c2890e4e-b066-4d05-afe6-0a0e02cc06ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3f5394-521f-4aad-b4a9-d99e5fe30f85",
        "cursor": {
          "ref": "3ca60125-2126-4ecd-9fd0-102e1600864b",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d0d4b714-4776-4c98-9a09-c649292791c5"
        },
        "item": {
          "id": "da3f5394-521f-4aad-b4a9-d99e5fe30f85",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b965181e-8190-48a2-809c-abadcd9980bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41503d0b-0045-4c0c-bca2-6a366a621c21",
        "cursor": {
          "ref": "13c12c0e-3914-4154-890b-6fa865a885b7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5bc89352-74c1-43e5-9ea4-3a644d6b00c6"
        },
        "item": {
          "id": "41503d0b-0045-4c0c-bca2-6a366a621c21",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2b377cec-2570-4026-81a0-7a6a1a7e75e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19cb0f2-56ce-4b33-989b-ab61a8e350bf",
        "cursor": {
          "ref": "d2a4817b-2ec9-419d-b9eb-95c4496032d8",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7b469654-38ec-478a-ae13-e7bf5387f7cf"
        },
        "item": {
          "id": "d19cb0f2-56ce-4b33-989b-ab61a8e350bf",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "928e2d28-0fec-4da4-b397-cb0aafd1ebb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ba3a58-5f1b-41a5-acd5-e37bede4e393",
        "cursor": {
          "ref": "2fe0d966-aca4-4f55-91e9-3db54dc120dc",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "eb8512e8-58bd-46b8-a9dd-1977c6c1a664"
        },
        "item": {
          "id": "25ba3a58-5f1b-41a5-acd5-e37bede4e393",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "72b71721-39e9-4f94-b760-6d511d519913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58967d2e-04a8-484f-89ed-f69e49014c79",
        "cursor": {
          "ref": "f6dec572-f890-45d6-b978-ff7d5684d7fb",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ce581197-987a-4915-a27c-5111d277fdf7"
        },
        "item": {
          "id": "58967d2e-04a8-484f-89ed-f69e49014c79",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e3923d36-22e9-4c0b-9f6d-753929341145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e10454d-4d9a-454d-9e56-d2718c73cf00",
        "cursor": {
          "ref": "b06a03b1-ed74-4a00-9e49-6d033aed9447",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f1282b07-247b-459a-ad5b-43e614949a9d"
        },
        "item": {
          "id": "2e10454d-4d9a-454d-9e56-d2718c73cf00",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a6927c8c-e337-4b35-8613-b837c5cab4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e5f310-6043-4eca-b52e-4b97b698ad28",
        "cursor": {
          "ref": "c6d872c4-5082-46a0-bbda-b9c0ead728cc",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5827940a-3ca0-46f6-b442-d9ea26428d98"
        },
        "item": {
          "id": "b6e5f310-6043-4eca-b52e-4b97b698ad28",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "753d78fc-0c10-4ae4-aac3-500652d87ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f70c98f-11af-457a-b663-97828e2d4265",
        "cursor": {
          "ref": "0b7ad820-d657-46b8-b2e5-e43642b158b2",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "97600bff-d8f8-4e98-9cc7-846c11656982"
        },
        "item": {
          "id": "6f70c98f-11af-457a-b663-97828e2d4265",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3a146918-8ddd-4309-a863-d9d85bfbf8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec03604a-d90e-454d-b32e-6e337c5a2f97",
        "cursor": {
          "ref": "18cacfb8-71fe-4e57-bdc2-7c18f1c4b2ca",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8373b9b6-4729-4391-9e0b-96f0ecef06bd"
        },
        "item": {
          "id": "ec03604a-d90e-454d-b32e-6e337c5a2f97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5ea35ba8-9005-4369-a08a-962cc8e07bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a824e90d-fc94-4fc3-973d-2e095a849252",
        "cursor": {
          "ref": "f5e15c32-b7c5-4fcb-bf7b-1bda8a1fcc5d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "431c148a-e7ff-463e-8671-1e2f81a45b2f"
        },
        "item": {
          "id": "a824e90d-fc94-4fc3-973d-2e095a849252",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "da7212f3-3f1b-4158-b84c-559b011965e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d4fe54-a808-46b5-a8c1-237f03a02b03",
        "cursor": {
          "ref": "a473a594-5f03-4c92-8386-4746ba9151ae",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fa1ad43a-d512-4eb1-a968-2837aa62c742"
        },
        "item": {
          "id": "b0d4fe54-a808-46b5-a8c1-237f03a02b03",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "107232c3-e151-4d1e-9462-42b535a26acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7cccf7-8993-4a69-a4af-cd89175e5dc2",
        "cursor": {
          "ref": "59f9c367-0061-435c-a240-89cfe57133b0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "588dfb16-de72-4c17-b4d6-a402b148400f"
        },
        "item": {
          "id": "9d7cccf7-8993-4a69-a4af-cd89175e5dc2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e5d23c34-05a6-4f9e-aa17-153c97f00915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46caa2ae-b5d1-4976-a3d6-064d6782f368",
        "cursor": {
          "ref": "46dc3c79-50e6-4b26-a3d4-0118cad6053b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "be67a269-42b4-4828-94c6-f99c20c0a027"
        },
        "item": {
          "id": "46caa2ae-b5d1-4976-a3d6-064d6782f368",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "46d43387-5dc7-4bc8-aaa9-f18616eb3a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b40fef6-9e04-42a9-9958-e24e72cbfb34",
        "cursor": {
          "ref": "56f16215-89e2-43ef-b069-725d2ca89b9e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c6df091a-f169-4d3e-83d3-08e308273b75"
        },
        "item": {
          "id": "2b40fef6-9e04-42a9-9958-e24e72cbfb34",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ea5bedd9-36b9-44ac-b6f9-a1f1caf538e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2cbc23-0308-4794-8ffb-23ca45443d0e",
        "cursor": {
          "ref": "3e55c5a6-a943-4957-becd-a55f6ecf81e8",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a544b0f1-bfb4-430d-a1ce-f980e89d2eb5"
        },
        "item": {
          "id": "cb2cbc23-0308-4794-8ffb-23ca45443d0e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "497698f2-5c53-400b-ae45-10188575c7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6e6840-d327-4d6e-92dc-96c8a3709e8b",
        "cursor": {
          "ref": "f3ffe5e6-23ee-4110-812f-07d4c6c83438",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "376fb1e0-35ec-4ad7-b89f-01797d431de3"
        },
        "item": {
          "id": "6d6e6840-d327-4d6e-92dc-96c8a3709e8b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2654d911-5a68-4e7e-9503-09e232798b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db2fedb-9db2-4091-892d-254f92f47694",
        "cursor": {
          "ref": "7cb38f69-4355-451a-9dcf-987bef7f0394",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "008df6cb-7c2e-4f39-b3cc-6a201f613acc"
        },
        "item": {
          "id": "5db2fedb-9db2-4091-892d-254f92f47694",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "05303642-3d76-4370-ae69-05506bc2580a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160a5d44-7298-41d9-889a-2cbff664683e",
        "cursor": {
          "ref": "7e2c371f-708f-410a-b0e3-baf84cfc5ce0",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ff080b07-1ec8-4015-b184-5d7602b029a1"
        },
        "item": {
          "id": "160a5d44-7298-41d9-889a-2cbff664683e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "97b69c72-aeb6-42d0-82a0-7b5126e607ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29101ca4-bd99-48d0-b474-ce7ebf2164ca",
        "cursor": {
          "ref": "9fd0cca3-1755-4016-b4a9-29ca96c5fd0f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3f77d57c-3df7-4077-9428-0c429115891d"
        },
        "item": {
          "id": "29101ca4-bd99-48d0-b474-ce7ebf2164ca",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3dd83b25-1fcd-4b2e-b6bc-7952893682bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3609dfc-9365-4a11-97b5-09917f48016a",
        "cursor": {
          "ref": "fa0f6f01-0a69-4a1e-839e-edfd6f633fda",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f049b13a-7c59-4097-adca-8a9044d3b358"
        },
        "item": {
          "id": "d3609dfc-9365-4a11-97b5-09917f48016a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a86771c7-05f6-48c3-86fb-3113ec0235e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68247d8c-b740-456b-aa5d-68f47bc64990",
        "cursor": {
          "ref": "85bd8317-8b4a-483b-a746-0b027ecb55dc",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e5145950-14c3-448b-83e3-3732f120a9f2"
        },
        "item": {
          "id": "68247d8c-b740-456b-aa5d-68f47bc64990",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "af0d063e-2532-435e-b903-2183691460e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dcae80-321b-41c6-a17b-aef81d51e525",
        "cursor": {
          "ref": "87471278-774d-4f85-b537-84ebb5bca51e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6915e005-e600-4f09-93ff-d3e1cef56d1f"
        },
        "item": {
          "id": "03dcae80-321b-41c6-a17b-aef81d51e525",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4b721638-2364-4ac9-a817-4452c3a18e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33bb09d-a06a-4121-af52-959dd9930c15",
        "cursor": {
          "ref": "0b8ed0a1-0530-44a1-9861-09fad9f011ab",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0cf5ee19-c5e6-4e19-a19a-59d35a8cd889"
        },
        "item": {
          "id": "a33bb09d-a06a-4121-af52-959dd9930c15",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2a0fd39e-c965-459d-9cc9-521fa9ec9ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57d5a67-56b5-42dc-bacb-f5a7f9f2d41c",
        "cursor": {
          "ref": "a59df36f-5670-4469-9042-4d98ab4c8804",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7d3f599e-5788-4b6f-b075-ca41a607e9e2"
        },
        "item": {
          "id": "d57d5a67-56b5-42dc-bacb-f5a7f9f2d41c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d8a736eb-de19-4cc3-b21e-6c2695bff3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35122548-6e08-4a8a-af1b-5b221e26abdb",
        "cursor": {
          "ref": "db979c01-673b-487d-87f7-4a8c09409931",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "976040c9-d635-411d-9e2f-c58ded8a418b"
        },
        "item": {
          "id": "35122548-6e08-4a8a-af1b-5b221e26abdb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5fa2fbd1-e66a-469a-8119-941da64f0a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8239c08-03aa-47da-88bc-36c67bc9abc5",
        "cursor": {
          "ref": "020a563d-1906-4357-a670-5328e50cba26",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1efb927a-0ee6-46dc-ae75-28b53d325343"
        },
        "item": {
          "id": "c8239c08-03aa-47da-88bc-36c67bc9abc5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5ff91064-c4ac-49e1-a2c1-7fb83fed4fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445298d9-dcc6-4a4f-9e31-ed32e3cadd9d",
        "cursor": {
          "ref": "4dabf526-1cab-4d03-8405-7e9bef2f0e0a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "87afb1c3-3f15-4088-b21f-c903edd8a76e"
        },
        "item": {
          "id": "445298d9-dcc6-4a4f-9e31-ed32e3cadd9d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "368aede4-8c4b-4dc2-98cc-dddc2e37767c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e469e5-739f-4352-97a3-8508d52156ed",
        "cursor": {
          "ref": "778006d9-d0e5-4f40-85fb-0a8c22f05f63",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "60ceabb8-35ea-4322-8295-f2f04326a825"
        },
        "item": {
          "id": "01e469e5-739f-4352-97a3-8508d52156ed",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dbece5a7-f416-4bce-97bc-8c932471eeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c9ef84-dce8-4bc8-a686-41fafaec4b35",
        "cursor": {
          "ref": "81a90561-efcc-4fc2-b153-3071158a5c81",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c8e0f078-aff6-4e5f-921b-233b6cc68072"
        },
        "item": {
          "id": "a7c9ef84-dce8-4bc8-a686-41fafaec4b35",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bf1def55-94a3-4187-81af-736553f17c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43386fe-479e-4b7b-997b-ee610cc9e44c",
        "cursor": {
          "ref": "07b211e1-f7bb-4053-810e-c3028ca6a37c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "51a001df-44e2-46c1-a049-3bde7f921a2d"
        },
        "item": {
          "id": "e43386fe-479e-4b7b-997b-ee610cc9e44c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "01bc5867-43f2-4c4b-90b9-20bbe87ff62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f1c0e5-ac50-4d50-8e7b-4e213ff2d133",
        "cursor": {
          "ref": "9db4f7e1-c95d-4ad4-afe0-0df534dc74e6",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4a452a73-84c0-4d43-90b3-f3f558a9115d"
        },
        "item": {
          "id": "80f1c0e5-ac50-4d50-8e7b-4e213ff2d133",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d8fd0603-edb1-4aa9-b1d1-a10691b08d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a0a50a-67d6-4f23-a011-b10bd88b1242",
        "cursor": {
          "ref": "bbe16e47-bbae-4697-acec-f7936d66f8b7",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ae84ea3f-02c5-4d10-a4a2-6bf3a7188bc7"
        },
        "item": {
          "id": "a1a0a50a-67d6-4f23-a011-b10bd88b1242",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8f81a89e-a26b-43e7-b791-e3513cc01db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73949230-b6dd-4d5a-b90f-24d48b4b3ad0",
        "cursor": {
          "ref": "e74ee4a9-753c-4981-bc46-cf1c95877caf",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a2afc818-d0e6-4881-bbff-eea0e3f0612d"
        },
        "item": {
          "id": "73949230-b6dd-4d5a-b90f-24d48b4b3ad0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ac6b2868-f3f1-46d4-a3cb-ae305670ae74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3137f0-ee56-4ac2-9044-9d2ae2e1c520",
        "cursor": {
          "ref": "198ce9a2-60b9-4762-ba0e-103d93613228",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "97326d00-7fa4-4da5-be45-322c661f46d4"
        },
        "item": {
          "id": "3d3137f0-ee56-4ac2-9044-9d2ae2e1c520",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ad9e4f39-411e-43b0-a839-be72d3e19061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b909820-416b-44a9-a2be-4e7005f0153a",
        "cursor": {
          "ref": "f24d317c-1e78-4845-a463-620a7e5fd8ef",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a0ece525-9454-45c4-9917-6426e30c96cf"
        },
        "item": {
          "id": "1b909820-416b-44a9-a2be-4e7005f0153a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b1076056-d608-4e78-ac8b-3e95d43bb795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d23f42-2515-4bfd-9ed1-6c134948f57d",
        "cursor": {
          "ref": "bbbed503-7fc8-4674-b60b-487be8d3e6a9",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "660fe719-4420-463d-9b27-ef33933d5885"
        },
        "item": {
          "id": "e5d23f42-2515-4bfd-9ed1-6c134948f57d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4d3f5246-c0ab-4cdd-93cd-3a779bb25afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c870806f-4364-4dba-a945-08a4951984c1",
        "cursor": {
          "ref": "0248960c-f19d-46bd-ab8d-2cf28ab64dcd",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bb476a04-6112-4c01-8cd7-a6a539fe999c"
        },
        "item": {
          "id": "c870806f-4364-4dba-a945-08a4951984c1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "53397ce2-196e-4cf1-abcc-54eeab177ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d919572-135f-46f8-8409-9b43fcd0a29c",
        "cursor": {
          "ref": "1d1e3161-9db9-4146-8d5a-bbc75d695e49",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b94aaf6f-cf6a-40dd-83b6-fa8408802d93"
        },
        "item": {
          "id": "9d919572-135f-46f8-8409-9b43fcd0a29c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d2454b77-f890-4053-b684-9eb2bc9249eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddca240-f16c-4942-83c0-c1152cadfcb2",
        "cursor": {
          "ref": "6d62a8cc-ddb5-4ac5-9d67-9643bdc34fc2",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "eab3d6eb-f707-4583-8747-65f259f300ce"
        },
        "item": {
          "id": "cddca240-f16c-4942-83c0-c1152cadfcb2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "64e51830-a596-465b-af7a-aa680e8e8df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f84f2cf-8144-4a8b-b297-347e2ec3168e",
        "cursor": {
          "ref": "102b46dd-e21c-4d78-8540-3ccb271cf7c8",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1d39ae39-6825-4273-b7d8-2c694aa131c9"
        },
        "item": {
          "id": "9f84f2cf-8144-4a8b-b297-347e2ec3168e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "572b419f-e570-45a2-ba5f-1b387a19de7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d94cd2-9f6a-4894-8d3b-d16619c25f6e",
        "cursor": {
          "ref": "c98e11c1-ca0d-413e-a9d9-b4bbd425fa56",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "45b554ed-7566-47e6-92f5-412d9d2f500f"
        },
        "item": {
          "id": "50d94cd2-9f6a-4894-8d3b-d16619c25f6e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3a8e90c7-b768-4427-b5ae-f56f81d2c7de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5caa0868-2678-4b85-b8ce-2113c7e19429",
        "cursor": {
          "ref": "6b1ebb02-731c-4535-a9e5-85c8a8dd8417",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "108c79c6-8e81-4371-8c05-eb198a5888f9"
        },
        "item": {
          "id": "5caa0868-2678-4b85-b8ce-2113c7e19429",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "392f2dc4-117a-4eb1-8231-52f22701643c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "180db09c-2ca9-409b-90a0-264859814661",
        "cursor": {
          "ref": "15a44548-df0f-4133-8a64-88204343f0b0",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "23c99ac4-2667-4626-918b-71872ab91c1b"
        },
        "item": {
          "id": "180db09c-2ca9-409b-90a0-264859814661",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a3bb2b78-30e3-496c-bbb4-d5d2d1e62762",
          "status": "Created",
          "code": 201,
          "responseTime": 9529,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9215e91-705a-4a30-9a47-3712305ede36",
        "cursor": {
          "ref": "7246715e-b377-4c35-995a-1a928e9f4bd1",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0aee2175-430c-4d99-90e3-ad75e20c4ec2"
        },
        "item": {
          "id": "b9215e91-705a-4a30-9a47-3712305ede36",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "db8bffe9-fc6c-40a5-a4b3-e5ff0a0fc53d",
          "status": "Created",
          "code": 201,
          "responseTime": 9090,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f212023-7c5f-4907-8663-ba8f4cfa1a7e",
        "cursor": {
          "ref": "227be8fe-5ae0-48e4-8379-a41aa61a99ca",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5c730274-ff5a-484f-980d-56bd402e75d2"
        },
        "item": {
          "id": "1f212023-7c5f-4907-8663-ba8f4cfa1a7e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f2dbeed3-fdab-4f79-ac59-0006869947e9",
          "status": "Created",
          "code": 201,
          "responseTime": 8654,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3422d1fa-d734-42c6-8f03-803621971045",
        "cursor": {
          "ref": "21b9cf80-1720-4d3f-9404-0e1d903fa3ba",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ffec4189-2b3c-4bc4-879c-976c9e8979bc"
        },
        "item": {
          "id": "3422d1fa-d734-42c6-8f03-803621971045",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "49d556ac-9c0d-4dc2-9585-d7a571a879b7",
          "status": "Created",
          "code": 201,
          "responseTime": 8907,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1e3194-8c93-49f5-b384-0b1c08eb0684",
        "cursor": {
          "ref": "c5766b4e-1243-48c4-a79e-6addcc89f3c1",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b1130a3c-f8fe-43e7-afb1-68c1c94342be"
        },
        "item": {
          "id": "9e1e3194-8c93-49f5-b384-0b1c08eb0684",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b176d9bb-7493-496f-be73-829fbab2baa3",
          "status": "Created",
          "code": 201,
          "responseTime": 8735,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-07-02T00:39:46Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-07-02T00:39:46Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b9201f12-7b0f-400a-b4da-b3d1ba6736e8",
        "cursor": {
          "ref": "b025e8df-4c19-413a-8e69-4b4a91e5ec2a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "35e97ab7-1204-4576-be66-c9085222991e"
        },
        "item": {
          "id": "b9201f12-7b0f-400a-b4da-b3d1ba6736e8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2572ddb7-327d-41d4-8c18-f66c31314467",
          "status": "Created",
          "code": 201,
          "responseTime": 8957,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4320de3d-d3be-4f76-a406-72b0affb3b74",
        "cursor": {
          "ref": "4c06c136-20e7-4b1d-ae31-a4efb8544ac8",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "237c263e-bcd7-4d6d-950a-0a7191fd9405"
        },
        "item": {
          "id": "4320de3d-d3be-4f76-a406-72b0affb3b74",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8779cb8a-7c60-4ae9-81b8-ce5ddf82a237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feb32a4-2dea-4148-8890-059269ca7dbf",
        "cursor": {
          "ref": "32325400-5548-4e17-9e5c-bc3bcf20e593",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d1ec1075-698e-4e0b-b1ff-0d96934562cb"
        },
        "item": {
          "id": "3feb32a4-2dea-4148-8890-059269ca7dbf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "35083b96-3645-4140-8de0-ba58f0ead7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af54c15-94e6-44df-93cd-320c48727bb8",
        "cursor": {
          "ref": "1b093b46-e1be-421a-b717-a1f802f2edd0",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c37211bf-feab-458b-a90b-8966a32e2e72"
        },
        "item": {
          "id": "3af54c15-94e6-44df-93cd-320c48727bb8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "855560a7-43b0-4563-bc03-c2facd01455f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0630eec-32de-4432-b6ab-214a42d0fe26",
        "cursor": {
          "ref": "b842d0df-1ffa-4cab-940b-6b62161246f5",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "05668695-0357-47ee-a43f-cb335d0c823b"
        },
        "item": {
          "id": "a0630eec-32de-4432-b6ab-214a42d0fe26",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c2f61151-165c-4993-9b6b-5caa4a8b3626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89872a90-e5e7-44c6-9565-15feb4366e7f",
        "cursor": {
          "ref": "e59d0692-c124-4ccb-ae9c-7a82ada9e846",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "46c5ba54-89d2-480a-8d03-f8eb785dedb3"
        },
        "item": {
          "id": "89872a90-e5e7-44c6-9565-15feb4366e7f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2bedfb21-0fa3-4c7a-9d6b-7290ad5a3921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922f2421-f230-4cb4-8c6d-301c373aa0c4",
        "cursor": {
          "ref": "56dbcaba-eeb2-4af3-9e13-9952ae0982b8",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e221d5c8-ac23-43ea-90af-cf62a08f623a"
        },
        "item": {
          "id": "922f2421-f230-4cb4-8c6d-301c373aa0c4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dfb8a522-395d-4470-b6ba-5e126164e4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ea28fe-8776-4ea5-bc7f-b42fb66ccbae",
        "cursor": {
          "ref": "e23c2c59-f3c0-4292-be2d-de4933a5720e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8605699a-4f5f-4281-a975-8d9b32cde750"
        },
        "item": {
          "id": "92ea28fe-8776-4ea5-bc7f-b42fb66ccbae",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0266fbb7-9343-43d8-ba7d-a78037b53942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480320d2-4a92-4e1d-85a1-013bd9aa566c",
        "cursor": {
          "ref": "dd9dc05a-40b6-4c3a-a870-8f71bfd93576",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "88ae4a38-9162-420f-a4ce-9161ab72d9b9"
        },
        "item": {
          "id": "480320d2-4a92-4e1d-85a1-013bd9aa566c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "881c2bbf-2ee7-4b29-b6f9-036db12c82a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef82190-a09b-4761-9036-7b1cf1342783",
        "cursor": {
          "ref": "69367d78-0029-4815-99a2-0a0bc73f5fb5",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b9f89131-94e0-4ed5-93a4-f37167b31877"
        },
        "item": {
          "id": "3ef82190-a09b-4761-9036-7b1cf1342783",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "25814a68-608d-44d3-b5c4-f452c919d12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a9ef78-2159-4a61-bf40-96377e825f2c",
        "cursor": {
          "ref": "eaa62fef-5680-4c6a-ada8-c04821c85341",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "09446214-6757-4c1f-9efb-7addeb727f17"
        },
        "item": {
          "id": "76a9ef78-2159-4a61-bf40-96377e825f2c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c9673afd-12c8-4815-ac3b-8d0d90ea4b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c62dd6-a680-4954-a059-6f2e256bd659",
        "cursor": {
          "ref": "804c9a4e-6619-4c5c-a615-133110a32efa",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "87e9b13b-c6cd-4c74-9f63-106ab22d7383"
        },
        "item": {
          "id": "77c62dd6-a680-4954-a059-6f2e256bd659",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "026fcf33-b884-47a1-b235-47774aaa68d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15eb7ab-463c-4485-97c6-cba732d1715a",
        "cursor": {
          "ref": "aeda5f70-59a6-4fc8-a2bf-a632215a9c42",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3295a561-014f-4cf8-ac27-530ed5d43627"
        },
        "item": {
          "id": "c15eb7ab-463c-4485-97c6-cba732d1715a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3fcc268a-33fb-4ae1-a5e5-72547330a296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38cfbe8-8afc-4039-bf80-9dd60393d7f7",
        "cursor": {
          "ref": "8b944452-dfcc-492a-a734-2c96fde6f7a0",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5d17fdee-e274-4a63-bd69-33e1b78e4e2a"
        },
        "item": {
          "id": "b38cfbe8-8afc-4039-bf80-9dd60393d7f7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "af748eb0-71e8-44cf-9f8e-43b67360082c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b17a6b0-48d1-449d-bc8d-435302a0f4a8",
        "cursor": {
          "ref": "ba98d8c3-b23f-4797-8506-01b23a05150d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4caa51b0-a0b7-4cc2-81ed-0fec08f4b026"
        },
        "item": {
          "id": "9b17a6b0-48d1-449d-bc8d-435302a0f4a8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d58193e4-d5e9-497a-8680-ee60de901b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c1577d-9e4b-45f0-aed8-dfd9509eaced",
        "cursor": {
          "ref": "4df238de-63dd-4750-91cf-2819d8de5977",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b3f00ea2-7268-4c9a-bc57-269d54754c72"
        },
        "item": {
          "id": "90c1577d-9e4b-45f0-aed8-dfd9509eaced",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a4a5a698-02e3-4179-ba6f-6121ef5c38e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27516b35-eafe-44da-a2c1-497f821fb189",
        "cursor": {
          "ref": "c39ba77e-1f01-4c53-aa78-ffd55641cda0",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6a6804a8-d89c-455c-bf1d-df0edbddd103"
        },
        "item": {
          "id": "27516b35-eafe-44da-a2c1-497f821fb189",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "74de1d84-4de1-436d-8b68-2aca2852a98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e927f2-c8f3-48fc-a992-0f5ac39c1e64",
        "cursor": {
          "ref": "5a0fe2f4-ff80-4d16-820e-ce6b3ebea849",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "62412116-b499-442f-827f-a42a8ab532f6"
        },
        "item": {
          "id": "a4e927f2-c8f3-48fc-a992-0f5ac39c1e64",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cc0c0a9d-0c84-44e1-818c-79376600032c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b37bff-00df-440d-bc10-74b96da97665",
        "cursor": {
          "ref": "560fcd55-6cbd-48bf-acde-1796691bbd00",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1278f2fe-a29e-4542-b3c1-8096fa9a4cce"
        },
        "item": {
          "id": "d9b37bff-00df-440d-bc10-74b96da97665",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c5100b78-7b34-454e-ae67-ec107001b774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35e72db-205d-49c2-b266-263763703c4a",
        "cursor": {
          "ref": "0ca47bbd-14e8-44a5-9a10-e766cf7bc469",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4cd111b2-1a4b-45a4-a5cd-a776b3b850f4"
        },
        "item": {
          "id": "e35e72db-205d-49c2-b266-263763703c4a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "76434905-5f0d-44cd-a2e4-f7e237296acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3c11bf-5b50-44b0-8279-64b2de0e1412",
        "cursor": {
          "ref": "8a28f93c-7aff-49a7-8b9c-b2031b96a121",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cb6905e6-5313-4efc-8d03-118dc4a18a66"
        },
        "item": {
          "id": "fa3c11bf-5b50-44b0-8279-64b2de0e1412",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "125711f4-56ea-4e72-afba-f2d42125652e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe82a60-c1f5-4ec3-ac91-60cbcb484f46",
        "cursor": {
          "ref": "6d42600e-bdac-4563-b337-b33d48088d61",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ab2316cb-63ca-4634-a67d-c945a0a1ba73"
        },
        "item": {
          "id": "cfe82a60-c1f5-4ec3-ac91-60cbcb484f46",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f47c0fd8-7e30-493b-b769-df2b8a91e8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2682ce-6c0b-4f8d-8e98-9cc17cc1c73f",
        "cursor": {
          "ref": "28d0c11b-7ed2-4d13-9dc9-043acb469aa5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8be8134c-f266-40cf-8114-b4e302b6cacb"
        },
        "item": {
          "id": "9b2682ce-6c0b-4f8d-8e98-9cc17cc1c73f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "762bfad9-a3da-44d8-a468-5dbc7465296a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391bb869-b182-41cf-82ae-95bfba862783",
        "cursor": {
          "ref": "24a6b80f-c64d-4c78-ab14-2058d0a05730",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1b5346a2-3ae1-4e7e-9dbd-423fe10ca842"
        },
        "item": {
          "id": "391bb869-b182-41cf-82ae-95bfba862783",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e995baff-2969-419e-8409-4557c5f4ff29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fff865-2d6d-49f4-8ab3-e4f94c370038",
        "cursor": {
          "ref": "6d07a9ca-352e-4901-8221-1a42ea42a8d3",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "94e9c314-3d60-46ef-b267-a242371ff838"
        },
        "item": {
          "id": "25fff865-2d6d-49f4-8ab3-e4f94c370038",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "379a9faa-522d-4524-8bf2-4bf9c47c8cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd333c7-1ddd-4820-a1d8-d125b3d5a775",
        "cursor": {
          "ref": "a29d8fbf-4bd1-4c01-a5c0-752666ef0a92",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1ced8ffe-dc71-423b-9b5e-7ba85d9be1b8"
        },
        "item": {
          "id": "7fd333c7-1ddd-4820-a1d8-d125b3d5a775",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a602c687-8375-45a7-831b-629664dac07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e311ead9-2165-4561-bf1d-a925f33e0265",
        "cursor": {
          "ref": "c94f46a9-e45e-41bd-9259-d83dbc09dcdd",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d7a68f2d-ce68-4538-9bab-23fcf3ef9fbb"
        },
        "item": {
          "id": "e311ead9-2165-4561-bf1d-a925f33e0265",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3b5dcde0-3ecd-4fbd-8a58-8b745ef9b737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768e93fe-c9ad-413d-98d2-4f0ae1dcaa40",
        "cursor": {
          "ref": "d5a3127a-6e7f-4962-8fb5-37428cacb0d5",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "97142f38-feb7-4744-917c-821a862c0cf6"
        },
        "item": {
          "id": "768e93fe-c9ad-413d-98d2-4f0ae1dcaa40",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1925e590-e109-463f-b61c-6644f117fe6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9835d0de-4892-4e8a-b475-a35099b10d03",
        "cursor": {
          "ref": "5df8d7cb-546f-4d63-97c8-feb10801c256",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1ab410fc-943f-4c91-97d2-ea65d68f0ebc"
        },
        "item": {
          "id": "9835d0de-4892-4e8a-b475-a35099b10d03",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eab92769-dc42-40d4-93fd-aac0c33ea9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf16ee2e-ef9f-48c4-90e5-654fd8b6dbc3",
        "cursor": {
          "ref": "67270771-94f1-4de6-9d8a-ca8a025a8231",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "81d56a8a-4245-447f-af36-617ad020325f"
        },
        "item": {
          "id": "cf16ee2e-ef9f-48c4-90e5-654fd8b6dbc3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4b778a36-60f6-42f4-9e40-44e6c821da97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d249862-9181-478f-9e86-1457fd984043",
        "cursor": {
          "ref": "7dc2ca08-f9de-49be-a8c5-b0b638bd50b0",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "23c0956f-f03f-4563-b6a3-3dd7fe09192c"
        },
        "item": {
          "id": "4d249862-9181-478f-9e86-1457fd984043",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "93a6e53d-2f8a-42f3-a63d-724d1baa407c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c321bb8-57e2-4470-889e-c1d69661b053",
        "cursor": {
          "ref": "b598dad1-8705-462e-b246-5171c0a1a313",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5a9d1f5b-2709-4779-8147-a6edbafa62f4"
        },
        "item": {
          "id": "7c321bb8-57e2-4470-889e-c1d69661b053",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c567cb9e-9cbc-4ab1-b3c6-b2ba74dc54d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94f56a9-cf25-43f8-8ace-1e4e74537460",
        "cursor": {
          "ref": "e2fe0f25-33d5-4091-8eb1-34e9c4c755e5",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "42e46a6a-b6a8-48d3-9c41-aa3d9d4a39a9"
        },
        "item": {
          "id": "a94f56a9-cf25-43f8-8ace-1e4e74537460",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "789a0585-ba1d-415d-9e76-7894e311caec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf47680d-5dcc-403f-8cf4-544b12d9a772",
        "cursor": {
          "ref": "3fe69020-973e-4d73-aa96-cd0be32bbbff",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d4072245-a204-4da1-99fc-2dcbd69d1658"
        },
        "item": {
          "id": "bf47680d-5dcc-403f-8cf4-544b12d9a772",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7d408379-5be3-4d97-9005-02fa11c87179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573e3f10-c89b-4ecc-a6da-4f4d248349a5",
        "cursor": {
          "ref": "63d7d350-4b50-4d07-9db8-fd4b9ca52437",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "624daf34-1527-425a-88ab-3e45bae205cd"
        },
        "item": {
          "id": "573e3f10-c89b-4ecc-a6da-4f4d248349a5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bd9dec84-fbbc-4a4f-b073-32afce57d723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb170043-a077-40c5-b1f7-3a6177e5cd66",
        "cursor": {
          "ref": "15054ea1-3505-4d01-9b66-2788c58f7324",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "47b68ae5-af06-4145-87fd-535c7600070c"
        },
        "item": {
          "id": "cb170043-a077-40c5-b1f7-3a6177e5cd66",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "147f23a9-a1cd-447a-873c-eb8356823128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6765fda-ac1a-41c6-92bf-cae3f45e08f7",
        "cursor": {
          "ref": "6a85c735-c9e7-4253-a4cc-6a754af44784",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b35f1155-763e-426d-848a-1d9112c86c52"
        },
        "item": {
          "id": "b6765fda-ac1a-41c6-92bf-cae3f45e08f7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "65580cc9-c900-42c7-b574-570048255588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07f07a5-e08d-4274-8133-dbcf377c7638",
        "cursor": {
          "ref": "b51879e3-3fae-4d16-80a3-d83a249aa180",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e52bfa74-9877-4067-8430-18aeaec11430"
        },
        "item": {
          "id": "f07f07a5-e08d-4274-8133-dbcf377c7638",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bd298d8f-92a6-4ea3-bc63-6907fe7c72f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b94a3c-083a-4ffc-8fed-5e8ce404ea1f",
        "cursor": {
          "ref": "d225bf47-87ab-4d9b-a077-986863f23d03",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "53a8f823-490b-4ef6-8dc4-fc3e0973ae92"
        },
        "item": {
          "id": "36b94a3c-083a-4ffc-8fed-5e8ce404ea1f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6efb328f-f79a-4fb0-b3aa-e82e20113d03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab5dea8-4ab6-4bf1-8c8f-ded3444f9493",
        "cursor": {
          "ref": "aeaba5b7-ece7-4100-ad17-7d0f601b4fb7",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "da9a6c80-5d72-4ea9-87bc-49abd8332f67"
        },
        "item": {
          "id": "7ab5dea8-4ab6-4bf1-8c8f-ded3444f9493",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "083517a0-25da-4df5-b48d-b807bfcec365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1130bad3-fdb9-4bd7-b7f7-b6b6964d4cb6",
        "cursor": {
          "ref": "46324bde-f631-4e58-a974-e6d73ee51009",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b6c40f07-917b-4ad7-abbf-a24b7f02ce0c"
        },
        "item": {
          "id": "1130bad3-fdb9-4bd7-b7f7-b6b6964d4cb6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "02e2334f-7e43-48e8-87f2-edc206adc4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55023b55-46e0-4d6b-bbd6-71f0bd7438f1",
        "cursor": {
          "ref": "44b2ac03-2d02-4820-a71a-792c1997bfe1",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "92cf41be-d57e-4931-99f7-f47ba088d178"
        },
        "item": {
          "id": "55023b55-46e0-4d6b-bbd6-71f0bd7438f1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "11031f7c-dc40-4367-b6da-3586b2ae3ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbaba45-82c9-400e-8fc4-e7ec1bdbe86f",
        "cursor": {
          "ref": "3dd539c8-6c4b-4b89-9481-66d69a00c1f8",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "467a8b40-e3f1-4551-924c-5b9cc228997c"
        },
        "item": {
          "id": "1dbaba45-82c9-400e-8fc4-e7ec1bdbe86f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "32c6e292-7b21-409a-8f21-d134160792ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2a51c2-62b0-4369-82d9-acf0f7320103",
        "cursor": {
          "ref": "f50ac1f6-34b0-4956-8e2e-d0eb1534c006",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "012f9ffd-ffbc-4e34-8e6f-3ea44f057eda"
        },
        "item": {
          "id": "2b2a51c2-62b0-4369-82d9-acf0f7320103",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0e22ef09-9154-4bc4-ac98-36dd3b69bf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d166a4-4435-4eb6-99a2-824f7b2beebb",
        "cursor": {
          "ref": "5656b90d-f110-4108-a92f-d8b12243dce8",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "39683ac1-120b-43b4-b57c-483ca78ce696"
        },
        "item": {
          "id": "29d166a4-4435-4eb6-99a2-824f7b2beebb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "939e39ee-47cc-42fc-92a3-7fc536abf43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5622dd6-4251-4480-bb58-363468330db3",
        "cursor": {
          "ref": "8ad050c6-d5c1-486c-9d5e-2ffa41aab9ac",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "20bedd11-e200-49a6-9c24-c5b02b2f50b0"
        },
        "item": {
          "id": "b5622dd6-4251-4480-bb58-363468330db3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "958baa37-fa40-4e19-882b-f445f99c9e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30382889-8dbd-4262-a2b0-2ff69ceca70a",
        "cursor": {
          "ref": "37a32f2b-dc95-47ff-a9f3-d33338c3b239",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2dc2ceab-c571-47b4-88f9-12caeef3184b"
        },
        "item": {
          "id": "30382889-8dbd-4262-a2b0-2ff69ceca70a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "71afec89-791f-4a7a-b000-04dbd0c06185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f5c511-df78-4a4b-815b-c5b02ad943b4",
        "cursor": {
          "ref": "a89067b4-6758-446f-bb90-ec5ffec88b5f",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5621d804-d5a5-478b-97e9-99c84d59f34f"
        },
        "item": {
          "id": "47f5c511-df78-4a4b-815b-c5b02ad943b4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "51315bac-7058-4eed-9b2d-4bb70f4f405e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ca1469-cece-480f-a9ee-6d96af124d4a",
        "cursor": {
          "ref": "493bd549-fe52-41ed-b1e6-2c325b9ad715",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "74dbf705-6d84-4b80-9ec1-75bf034d11f6"
        },
        "item": {
          "id": "82ca1469-cece-480f-a9ee-6d96af124d4a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7aaa4f3a-d4e3-4d5e-b2b9-333d3bea9a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248cc011-2271-4de1-a970-0201aeaa22fe",
        "cursor": {
          "ref": "15476309-e104-43c7-8d35-d2e481d27ea8",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c0c53fa1-9b90-4cc2-8599-1eeb59969b7d"
        },
        "item": {
          "id": "248cc011-2271-4de1-a970-0201aeaa22fe",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "85bd0cbc-b7a1-4683-97f8-b9128cc12c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543c216c-be4c-4efd-a2d8-2d66af1d9515",
        "cursor": {
          "ref": "33853e37-70d3-4ee8-925a-ca1eb015110e",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5e98f2ee-0860-4685-80a7-a8d0e957d777"
        },
        "item": {
          "id": "543c216c-be4c-4efd-a2d8-2d66af1d9515",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "11f76386-9b79-4216-bcc3-2179c0da3720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd600384-7021-4514-b8e5-dd356c0fc313",
        "cursor": {
          "ref": "53e76b58-1900-4b46-b715-6317f1fc4528",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6d6b4883-6567-4606-a732-9b44ec39c3ca"
        },
        "item": {
          "id": "cd600384-7021-4514-b8e5-dd356c0fc313",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f90dae8b-fb88-4fdf-aafe-b2d7334afec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfccbb1-665b-43af-a5f2-5c5509c9a511",
        "cursor": {
          "ref": "0fb62b55-6259-4079-a6dd-2a1982a2a759",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ca5af4a5-f996-4faa-8170-fcf4ee277dc9"
        },
        "item": {
          "id": "dcfccbb1-665b-43af-a5f2-5c5509c9a511",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8e26b81e-25b4-4db9-b665-803c21e56430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fc9599-1ca7-413c-b8dd-39558cafd806",
        "cursor": {
          "ref": "ce82aec8-b4c9-4307-85c7-3ab8c2d0f82f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9e08c992-99c7-4b3f-a462-ce0785ef8bcc"
        },
        "item": {
          "id": "17fc9599-1ca7-413c-b8dd-39558cafd806",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2add0a20-d5cb-4cf3-bc83-181c030d9339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b44fbd-f50d-44d1-9b21-ca6ded37f34b",
        "cursor": {
          "ref": "1e1bd7ad-1ea5-472b-8954-981bddc7d67a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ce28b305-44af-476e-b5f8-17dbd4fa936d"
        },
        "item": {
          "id": "78b44fbd-f50d-44d1-9b21-ca6ded37f34b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4bd79ea5-0829-4246-9ec6-38316fb05725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a416f7c-4c66-4114-a39b-e36df8de20af",
        "cursor": {
          "ref": "f82b792a-d5df-4659-bd4b-3cacd09129a7",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0f3da00d-63a9-439d-bd7c-77bb3ef175f8"
        },
        "item": {
          "id": "1a416f7c-4c66-4114-a39b-e36df8de20af",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e2909172-ae70-47b6-87b2-c569f09cc933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8379524a-d476-47fd-9861-530551ddccd1",
        "cursor": {
          "ref": "fa193b71-edcb-465b-a76a-ec76348d1f15",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f78ba39d-f6b2-435c-8b90-2b6c09a30a54"
        },
        "item": {
          "id": "8379524a-d476-47fd-9861-530551ddccd1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0519fe24-b7b4-4413-a39c-f28143971a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58b3d60-972e-4e64-9253-f5ba7602c756",
        "cursor": {
          "ref": "494ecd1c-4cdc-465c-854c-9a9e45e590f5",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "16d3673e-c505-4e65-8015-ace02d2d05e0"
        },
        "item": {
          "id": "f58b3d60-972e-4e64-9253-f5ba7602c756",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "317f6c7e-25bb-4fb3-9854-e9c4a9746f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0eb030-7141-407e-b7af-aa0465eb2157",
        "cursor": {
          "ref": "cd0c9dc3-9c94-48d8-a3f4-6369bbd045b9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "08b63c82-7d05-4613-965a-9d6c14c03518"
        },
        "item": {
          "id": "da0eb030-7141-407e-b7af-aa0465eb2157",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "138bfbf0-42b2-47c4-8e5b-7521cde0947d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6715f67c-c60e-456b-95fb-8d426f30263e",
        "cursor": {
          "ref": "34ed08a9-c98c-4048-87cd-6b860ac0ce70",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ea4307c3-3a36-4989-b3e3-07ab05d46151"
        },
        "item": {
          "id": "6715f67c-c60e-456b-95fb-8d426f30263e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "428388e1-221f-4625-a906-d50ec8de2b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a795224b-b91f-4871-a0c7-392402da7827",
        "cursor": {
          "ref": "4c25cda1-8511-468b-97d2-513e36fd1a51",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b53b2dfa-6779-4b22-8d05-e521862c1b39"
        },
        "item": {
          "id": "a795224b-b91f-4871-a0c7-392402da7827",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3c189ad8-6038-4348-8fd1-4f816a207122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b21c410-d63e-4f6a-9cbe-778e55ea4ec5",
        "cursor": {
          "ref": "36c3d6eb-06a0-4336-bd09-49dcd3052b12",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "add8ed31-8ef4-41fb-9274-2c2f8f8f3281"
        },
        "item": {
          "id": "0b21c410-d63e-4f6a-9cbe-778e55ea4ec5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "dfdb0a52-2081-412a-b38c-56206fa7b02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfeea884-1442-4861-9df7-572d2ad3efe9",
        "cursor": {
          "ref": "b370fbdf-022f-48fd-9e98-e8a9645dee0f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "adf5c284-6460-44d2-9ac9-13656feab72e"
        },
        "item": {
          "id": "cfeea884-1442-4861-9df7-572d2ad3efe9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b43f1c88-fba7-4ad6-b87f-c871fdacbf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dd1983-af2e-44eb-9b86-ad300a597aad",
        "cursor": {
          "ref": "a12b168f-da79-435a-973e-d98a0a9dfcc1",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "84874e6c-ca95-4d13-ac20-6021bb96185e"
        },
        "item": {
          "id": "f7dd1983-af2e-44eb-9b86-ad300a597aad",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b493b9fa-e5a3-402a-bcab-c1a92d7d040c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c840d3-a309-43f0-93d0-c942aa00e52a",
        "cursor": {
          "ref": "3443cfb6-8ab6-45ff-8219-64ad96b3a9eb",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f0df3bdb-098c-4518-ae03-5e02c19d542c"
        },
        "item": {
          "id": "15c840d3-a309-43f0-93d0-c942aa00e52a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "706c4e66-75d4-499e-a02b-9182fc2f5131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a597b6-5dda-4263-8cf2-29998d4efecb",
        "cursor": {
          "ref": "3b5a9b0d-9abd-459d-8d4a-6ff50ac20e04",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c17bcc86-bd7f-4a1f-ad19-5aebcc622431"
        },
        "item": {
          "id": "10a597b6-5dda-4263-8cf2-29998d4efecb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1bfe81d4-e36c-4216-8605-0f9f7e0681eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f202c464-3f89-4258-8bf5-bcad8825518e",
        "cursor": {
          "ref": "a9e9ce6a-b992-4f11-a131-f94117aa0c46",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "76d0691c-fe52-4b95-85bb-fa430e2f9594"
        },
        "item": {
          "id": "f202c464-3f89-4258-8bf5-bcad8825518e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a2bebc27-66f9-4543-a45c-26f4ddef2183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2363550c-dd04-4e19-922e-0c61b0cec02f",
        "cursor": {
          "ref": "2ec4571d-00be-46df-8d2f-8bd80f91acbf",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "85e87a8d-ffa6-4450-8a93-f8896e92710d"
        },
        "item": {
          "id": "2363550c-dd04-4e19-922e-0c61b0cec02f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "85921cda-9472-4f24-bf78-c0fa015ad7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7604c0-696c-45a6-a2f9-599b6a1e796f",
        "cursor": {
          "ref": "dce50942-0eae-47cc-bd0d-e73e42661bb9",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c38e4c77-93a9-4c56-823d-0f9b2ed388e2"
        },
        "item": {
          "id": "cd7604c0-696c-45a6-a2f9-599b6a1e796f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "31d00568-4761-4877-8d16-d1f2ccd3adc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec17d7b8-0aac-402d-a553-3e013afc35f1",
        "cursor": {
          "ref": "bff4ea34-ab4b-4602-81c8-2ec6b48709e3",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8d7918e0-5da4-4412-ad2e-93dc52ba3341"
        },
        "item": {
          "id": "ec17d7b8-0aac-402d-a553-3e013afc35f1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e86e8d2a-80ee-4e00-ba8c-fc40eaf270fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7096e9d-8c39-4fbe-8878-2ca03707c91f",
        "cursor": {
          "ref": "c24c5c67-6968-4a51-a645-30d936adbec4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dcf4c723-23e2-40d8-aebe-dafd0cf595bd"
        },
        "item": {
          "id": "e7096e9d-8c39-4fbe-8878-2ca03707c91f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "13df7d43-8e36-4caf-b10e-9b948cef0d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b44a67b-627c-412a-926c-731fca68af1c",
        "cursor": {
          "ref": "2c905737-5729-4b03-87ee-c62d95d68a2d",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1fdbdf88-75b3-4dd8-a94c-31f95f7fadbd"
        },
        "item": {
          "id": "3b44a67b-627c-412a-926c-731fca68af1c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "30b15ab7-0f6f-405b-a1a6-4e854fe886d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a86ba2-7953-4c52-a136-0dd24a2af0df",
        "cursor": {
          "ref": "3201d121-0320-4cb5-87ce-4a7921e03635",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "526daad7-94f8-4300-b855-ea5bd6399df0"
        },
        "item": {
          "id": "f2a86ba2-7953-4c52-a136-0dd24a2af0df",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b17baf29-2dde-4920-85cc-4d3344b50708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adccb16-8734-495c-a3e7-3fcd9e29b533",
        "cursor": {
          "ref": "75031617-b19f-47f9-bd6f-133664e76b96",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "772f7e61-4805-4f44-8766-d342c5a01491"
        },
        "item": {
          "id": "5adccb16-8734-495c-a3e7-3fcd9e29b533",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "02b6d551-8a5c-422d-830f-ab2de6b330ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a49605-8043-48db-965e-46aefac61f4d",
        "cursor": {
          "ref": "f21b8b9e-40f2-4073-aa44-179a0a2e5ccb",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7852cecc-78fe-4c72-9212-1b221e389ce7"
        },
        "item": {
          "id": "f7a49605-8043-48db-965e-46aefac61f4d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "158769ab-39dd-4984-9859-e206b6412608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d0d5e6-ce42-45a3-b248-b79c3ec1bf06",
        "cursor": {
          "ref": "3d87ba05-18f4-4215-9976-b8b236e03505",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "52546cae-4dad-4a99-8e41-cae3f150f841"
        },
        "item": {
          "id": "55d0d5e6-ce42-45a3-b248-b79c3ec1bf06",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7a2f3053-6a7d-41f8-af13-3dfe189eacd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dccfbf3-7264-41ef-87d7-bec55efb020a",
        "cursor": {
          "ref": "e1f4143d-da7b-43d7-8e4c-cef35220805f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b2d4e17b-ba08-4726-989c-5bf8ac6d5cfa"
        },
        "item": {
          "id": "5dccfbf3-7264-41ef-87d7-bec55efb020a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3c2755fb-8512-48de-8a4c-f88175cf570c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc27790-23f4-48c5-be57-817cf4362531",
        "cursor": {
          "ref": "ae271265-f8f1-4794-a92e-14697cd5f72e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ff74d881-0032-41b9-a9ca-ec07a2ffe20d"
        },
        "item": {
          "id": "acc27790-23f4-48c5-be57-817cf4362531",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b310572c-d1f7-43ea-91de-6a105f60fc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27efadca-e7a9-49b4-bc48-67c3949f78ee",
        "cursor": {
          "ref": "f185a804-2f20-4093-acba-26c10751233c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c765e1af-0fb4-4da9-9d6c-39d1d96613b7"
        },
        "item": {
          "id": "27efadca-e7a9-49b4-bc48-67c3949f78ee",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "43abc3f6-90d5-43f2-ad8c-60a02b8d38da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79f077e-7f77-44e7-94f8-b8639173508a",
        "cursor": {
          "ref": "e00ed434-861b-4570-958b-6684fff67113",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f989d890-dc6e-4c27-8232-918fe78be693"
        },
        "item": {
          "id": "e79f077e-7f77-44e7-94f8-b8639173508a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7063d8a7-e35b-4afd-80cb-62f3f8d08c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbabb7c-0d65-4f40-bc7e-61e09ba60f6b",
        "cursor": {
          "ref": "dd74b460-00cf-4eb3-9c58-b1f76217324f",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c01bf42e-841b-4f45-b6d9-3eb7d6f4505e"
        },
        "item": {
          "id": "dcbabb7c-0d65-4f40-bc7e-61e09ba60f6b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "278378b9-427e-4689-989e-312afda3ed1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5532ebab-d848-4de2-b2b8-067207bac68f",
        "cursor": {
          "ref": "1a8cd885-451c-49a8-a549-7f4d03bab812",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "80bf7ab8-e163-459f-9aab-f1b5dd09a52b"
        },
        "item": {
          "id": "5532ebab-d848-4de2-b2b8-067207bac68f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "453bd36b-8e50-4687-91b7-3552e9334781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f5782b-8819-4e2f-bb63-78965c5079b1",
        "cursor": {
          "ref": "1d591f0a-9dd2-405f-9ecf-5a6850093071",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "02b27e68-14f7-4ee7-bba0-168852b55d79"
        },
        "item": {
          "id": "b4f5782b-8819-4e2f-bb63-78965c5079b1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bf521832-1932-47fb-85a7-b468230f50ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3d10d9-31bd-4f91-8918-45c439f9f93e",
        "cursor": {
          "ref": "398bdd4d-5189-48a1-b75c-4a71b08b5fb6",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "93a25c28-b1cb-4723-96f7-0c3a8e1f4646"
        },
        "item": {
          "id": "4a3d10d9-31bd-4f91-8918-45c439f9f93e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d8973a8a-0cea-437a-837c-7c1fbffdc096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc01d46-c546-4263-ae51-a0eb4399ab25",
        "cursor": {
          "ref": "04f5262b-513e-4bf7-a476-75a9d5073fb3",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d7934aa8-9e2b-4f91-bbd2-36330b3a358b"
        },
        "item": {
          "id": "cfc01d46-c546-4263-ae51-a0eb4399ab25",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "46ecf6ed-1a5f-4ef8-901a-1e139ac6d5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4c2b63-8abf-422c-8907-759db6a6ceae",
        "cursor": {
          "ref": "4ff4a514-770b-48ef-a496-50ca9ad9bb93",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c01799f2-696f-4336-9292-0c163587ebc4"
        },
        "item": {
          "id": "ec4c2b63-8abf-422c-8907-759db6a6ceae",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "247dec3e-0d1e-42a9-b743-2953780f7111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b8269d-dd7a-4c7d-b7f4-7da64d41b734",
        "cursor": {
          "ref": "b2dc3a69-3aa6-413c-a616-ceed54f26a5e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "920f3dd1-f379-45a3-bf85-23007a3aa8a7"
        },
        "item": {
          "id": "48b8269d-dd7a-4c7d-b7f4-7da64d41b734",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "83865622-ef84-48cf-94a8-bb143d7954ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976c2c9c-6dc8-49fa-a024-723f7742aa12",
        "cursor": {
          "ref": "2250dad5-f3f1-49d1-bcba-6fadd5ef2095",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "266414ab-a8db-4827-b523-c20bdbb9e18e"
        },
        "item": {
          "id": "976c2c9c-6dc8-49fa-a024-723f7742aa12",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8bb73bed-f477-4323-9daf-4d6fdff990d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9119ea7-eb31-452c-90b2-483bd304f0b2",
        "cursor": {
          "ref": "b809f1cb-9bae-4386-b9ad-1cfbf602f49f",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a0944b5c-775a-4b3e-b589-b09f7b19c030"
        },
        "item": {
          "id": "b9119ea7-eb31-452c-90b2-483bd304f0b2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fed5059e-9903-4332-a897-d37a7679e3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be78a5fb-55e0-4a72-9dde-e54a6ddde86c",
        "cursor": {
          "ref": "076a4ba6-a130-4f96-99da-d6d5522bd5d0",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7093a91a-fc39-44db-8725-0482d6ea907a"
        },
        "item": {
          "id": "be78a5fb-55e0-4a72-9dde-e54a6ddde86c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "83c153b5-8413-4a7f-8a53-a1b192cd0f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1749ed-ae8b-4fc5-be66-6a368796f0e1",
        "cursor": {
          "ref": "09f783b5-5e90-4ffa-a15b-171b03bdb408",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c499ab01-9588-4d30-bd1c-8b2d9215f9bd"
        },
        "item": {
          "id": "6c1749ed-ae8b-4fc5-be66-6a368796f0e1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9d0010c9-d5ef-479b-bbd3-3121ad4e4e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5773daf0-cd53-419e-bee9-0dc53fdd68cd",
        "cursor": {
          "ref": "762c29f3-7f5c-4e10-a787-3bf30810ed5f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "24549462-0790-4645-bcab-d3f71b5742b1"
        },
        "item": {
          "id": "5773daf0-cd53-419e-bee9-0dc53fdd68cd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "889ed680-d654-4a3a-8151-1ea8723753d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e597e1de-6355-415a-9a5b-61d4c0c7291b",
        "cursor": {
          "ref": "0f85ec8c-3ccd-458b-94c9-949aced0d0b6",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ab7e1899-c447-4890-b579-fb42950531e7"
        },
        "item": {
          "id": "e597e1de-6355-415a-9a5b-61d4c0c7291b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6e45f8c5-5480-4933-9e2b-932e93c67aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1a0263-491f-48cb-9d3c-5dc8568f16b3",
        "cursor": {
          "ref": "1c62f6e4-4b48-480a-b199-91e66a4c9431",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "67346131-5dd7-46bc-82bf-6d05ed0227c9"
        },
        "item": {
          "id": "5a1a0263-491f-48cb-9d3c-5dc8568f16b3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "db780a54-8282-4e52-bdee-8a35d7bdb5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0071be-9837-4b51-ad11-95480f066279",
        "cursor": {
          "ref": "0d18a292-ecfa-4f97-965e-8c00726af7a7",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "81efbee5-7132-4d37-b5cd-76cb1f73e16f"
        },
        "item": {
          "id": "fb0071be-9837-4b51-ad11-95480f066279",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c3539fb6-e373-46fd-95cc-295717409881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdf459e-ce00-4468-becf-4afbf014e348",
        "cursor": {
          "ref": "a4642eae-9b6c-4424-8eb6-f84fe04374ab",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dd333e00-4177-4794-870f-dcb756435d45"
        },
        "item": {
          "id": "cbdf459e-ce00-4468-becf-4afbf014e348",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3c2df97b-4486-443c-9113-e903390e52a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063876bb-f29b-4fe0-9ef3-6676216e6630",
        "cursor": {
          "ref": "73806192-24c2-4b3f-ae5e-3ca1dc8399c1",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0793777c-468d-4b56-8a3b-52eac367b130"
        },
        "item": {
          "id": "063876bb-f29b-4fe0-9ef3-6676216e6630",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c6ea24ce-7a46-4d7c-941f-9ecad71d8f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c6af37-55e5-4f27-9daf-0753010c2b3f",
        "cursor": {
          "ref": "0df53b4d-51d5-4650-bf96-ef1da502cf0b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "da8c19c5-2816-4e2a-980b-c423e496097a"
        },
        "item": {
          "id": "71c6af37-55e5-4f27-9daf-0753010c2b3f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "dd80594e-e3ad-49b7-bf53-61bc8b5906cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2f2f7f-8f49-4b4d-a188-242c403b4283",
        "cursor": {
          "ref": "d9d2530a-f59f-4b2a-bdb9-273fa008e836",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d3058b8c-5603-4705-88a5-c295ed40fffe"
        },
        "item": {
          "id": "ef2f2f7f-8f49-4b4d-a188-242c403b4283",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3ded3920-b32f-4aa1-90d8-6b1bc82adb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cbb963-7fd3-4285-a0e7-c6b14d05fb5f",
        "cursor": {
          "ref": "8557edf7-130a-4c58-a4a2-1bf46ffd53c8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0700de7f-b8f1-46cc-85d7-9a7b61fed43d"
        },
        "item": {
          "id": "82cbb963-7fd3-4285-a0e7-c6b14d05fb5f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7347aefe-1180-4932-999c-9a7374b4d420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a9aef2-1be2-4a87-beb8-e7e19aac3910",
        "cursor": {
          "ref": "79215307-3e97-4c4d-89d0-ec243edc6b6f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "43a35034-10ae-453b-913d-2fdc016e786b"
        },
        "item": {
          "id": "97a9aef2-1be2-4a87-beb8-e7e19aac3910",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ead58506-4085-4940-9ea5-447b57891b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f79163-8c48-48d1-874e-e34436a9bb6f",
        "cursor": {
          "ref": "4b37abaa-ef00-46e6-8320-8cc3f89ac83d",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "32417fe7-8ec8-489b-b6da-1383eacd4f21"
        },
        "item": {
          "id": "88f79163-8c48-48d1-874e-e34436a9bb6f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "96c01ed0-3baf-4527-af40-24a985e503e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7af09c8-701a-4322-94c1-5e7081d6c2ec",
        "cursor": {
          "ref": "9f32a260-dc8f-4ee8-838b-9869b2f9bc28",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9a1221f5-328a-4a6a-bf72-a2638dd881a5"
        },
        "item": {
          "id": "b7af09c8-701a-4322-94c1-5e7081d6c2ec",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f3276e92-79af-482c-b055-194a3c5c2189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb18336-53e9-4419-aaad-d4cd543f6d30",
        "cursor": {
          "ref": "7668b34a-fce4-4af2-8c1b-1c012ac57603",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f3084f12-ca6d-445d-9fd9-049663a3943b"
        },
        "item": {
          "id": "eeb18336-53e9-4419-aaad-d4cd543f6d30",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "65cac7d5-e885-4ac1-b0e6-d4614645df98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e34d568-c4ae-48b2-83c9-6ef6299d270e",
        "cursor": {
          "ref": "f3cb6f3b-c67f-45ab-ba34-7439cbc1a46c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "84a8da82-0418-4735-b6ff-503fee6fd175"
        },
        "item": {
          "id": "4e34d568-c4ae-48b2-83c9-6ef6299d270e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6364d290-80b8-4d5c-87eb-c0f35f3a4959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6447586b-7e48-4db3-8dd4-a6865ed010e9",
        "cursor": {
          "ref": "acb2b55d-a5eb-4ec2-9f04-4292da259bd6",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "80c6333f-9606-40af-a585-b71977a10082"
        },
        "item": {
          "id": "6447586b-7e48-4db3-8dd4-a6865ed010e9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e169bff9-feed-412a-b652-c6ad92bbf700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f004e2be-c54d-48f2-98d1-9fecdbdc2d0f",
        "cursor": {
          "ref": "de233372-e4d7-4680-b010-8aa9f887cf06",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "46747797-6910-487c-bd0e-4012b60928d1"
        },
        "item": {
          "id": "f004e2be-c54d-48f2-98d1-9fecdbdc2d0f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "baec042f-8b66-44f0-bd39-a86199e8ba1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400a0288-930c-4a60-8f9b-cfedf8d56bba",
        "cursor": {
          "ref": "357176de-16ca-459d-8465-b2120b909d02",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "95d550e4-3f32-445a-98c7-613b1bd96e48"
        },
        "item": {
          "id": "400a0288-930c-4a60-8f9b-cfedf8d56bba",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "51f8acc3-afdd-4fbb-a697-260f6e956665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c20700-7723-4c34-8b78-ed22ec5dade9",
        "cursor": {
          "ref": "e8fed48d-d7f9-4b97-8627-4d2b1277d131",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bef1f32d-9871-4464-af32-0c88f99438e3"
        },
        "item": {
          "id": "e0c20700-7723-4c34-8b78-ed22ec5dade9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4f3a1f5e-97a4-479b-b348-4c77c48fcf1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd98faf9-7817-4e4e-b25a-9bceb6d0c19f",
        "cursor": {
          "ref": "c20cc168-941e-45e1-afa9-a4292015a08f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a202c1c2-ca87-456b-9e5e-9a72a55abef5"
        },
        "item": {
          "id": "cd98faf9-7817-4e4e-b25a-9bceb6d0c19f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "41506131-f779-4fa8-9dcf-1b41681a950b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26ecb90-de4e-4665-8d98-999c721518ab",
        "cursor": {
          "ref": "887a8507-097f-48e9-bcdb-9e9e591d7ad6",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fbbd4c53-0b2d-4add-bb24-c3aab5e20821"
        },
        "item": {
          "id": "a26ecb90-de4e-4665-8d98-999c721518ab",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1a8063c8-f9f8-4200-bb3e-7af5db7f2288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d86f7f-b475-4e14-99d5-234d891dd189",
        "cursor": {
          "ref": "e97afacf-ec71-428d-8cec-043d1c4ddbc2",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0937f2dd-9841-4afe-a93d-450b63c09d6b"
        },
        "item": {
          "id": "c8d86f7f-b475-4e14-99d5-234d891dd189",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0a403560-5af0-4a1c-a08b-03139d9dffd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a81d310-13ca-473d-8456-72063dd3a044",
        "cursor": {
          "ref": "ee0bb528-5e51-42a0-8e46-44be82253f07",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "df056f6a-3af7-4723-85d2-43a4cbff3275"
        },
        "item": {
          "id": "1a81d310-13ca-473d-8456-72063dd3a044",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "541202fc-fff5-4329-b983-f0408693150d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d36b2f-5625-46ff-ac27-1751609f39e5",
        "cursor": {
          "ref": "5ae6cf79-348a-46c0-8f83-4c554493f73e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6bf33e81-1aaf-4ede-b7aa-8ad09325b7b2"
        },
        "item": {
          "id": "12d36b2f-5625-46ff-ac27-1751609f39e5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3946cf83-e620-4d53-8111-1ff3b064c7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f18a1c-c342-4f8c-ba05-58de0b41af3f",
        "cursor": {
          "ref": "44bbd400-81b4-4610-831d-a9dad01dec8c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b38cf629-e658-45a8-a87f-f0e42bd35724"
        },
        "item": {
          "id": "69f18a1c-c342-4f8c-ba05-58de0b41af3f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0b20085b-586a-4cad-b5d1-94f7322cec6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a870bb-2eaf-4b4f-9440-26baa1fee052",
        "cursor": {
          "ref": "a427cdb7-82c0-49b7-a724-ad35acad94fb",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a10371a8-98bf-4d11-94c7-223f4690df7a"
        },
        "item": {
          "id": "f1a870bb-2eaf-4b4f-9440-26baa1fee052",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2a3629c7-0157-4470-bae0-ba5efa770459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb266d3-02d6-4421-9dd6-3b658647bf4f",
        "cursor": {
          "ref": "d3f879d2-36be-458e-8b44-9df07dfc9434",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0246162e-f5b7-4c64-be89-a051acaeb3bd"
        },
        "item": {
          "id": "edb266d3-02d6-4421-9dd6-3b658647bf4f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "658b4908-3102-47c7-8091-3fe577141377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9bf442-996a-4873-b338-e6a2dcce5bd8",
        "cursor": {
          "ref": "1d916829-d3ef-4b4b-8ad7-90b860a460eb",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1d02c506-30b2-41ed-b5ce-b142ed98a564"
        },
        "item": {
          "id": "5f9bf442-996a-4873-b338-e6a2dcce5bd8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4ea10e9e-4bd3-484e-982a-c30ac3e103d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d2fd93-7309-4401-8ee1-634be80f0a84",
        "cursor": {
          "ref": "7c54aa58-2852-412c-a6f8-fc35e2eb335d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7c4042f5-78c4-4181-80f5-5c46f376368c"
        },
        "item": {
          "id": "14d2fd93-7309-4401-8ee1-634be80f0a84",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "dc9e8242-95df-4534-8709-cde4868e5579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b247c17-4bfc-46d2-9c3a-6548ae5803dc",
        "cursor": {
          "ref": "f5cf9894-2b83-4db9-a990-17589afd2d12",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4adad54c-cc87-4884-a9c9-bdc74aac7b7c"
        },
        "item": {
          "id": "2b247c17-4bfc-46d2-9c3a-6548ae5803dc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0be722b9-24fd-4d0b-b29e-421e7ceb1cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26258199-cd8a-4eb7-861e-6a35c41d7576",
        "cursor": {
          "ref": "1c1e9844-7150-444a-8c2a-b06780324f14",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e3d9802a-eddf-4e86-91c4-d3390ca1a71e"
        },
        "item": {
          "id": "26258199-cd8a-4eb7-861e-6a35c41d7576",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a3d1d765-58c7-4028-814f-774e1de58e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfc02b1-1265-4413-8ee6-285ae8d75243",
        "cursor": {
          "ref": "2c6dbd4f-37b7-42fa-b2de-1276f6b1ae19",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "70ce6af6-082d-4d23-920b-544224597a35"
        },
        "item": {
          "id": "adfc02b1-1265-4413-8ee6-285ae8d75243",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5191114e-b7c3-4903-8f90-baaf29036c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2dadf6-f5ef-444c-8bda-c4be23af8858",
        "cursor": {
          "ref": "b1ff35cb-c472-42a3-88c8-2910ea5ebeb4",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "08250200-29f4-42a9-9428-144c925d5b90"
        },
        "item": {
          "id": "ad2dadf6-f5ef-444c-8bda-c4be23af8858",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8f76e37b-ba57-4009-b1ad-50b70005d4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c76f683-e6ae-4f83-8074-943518820267",
        "cursor": {
          "ref": "762316a3-53fa-4843-a37c-5309e1496dfa",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f37bf3ec-6d10-47b3-ab5c-adf59921eb43"
        },
        "item": {
          "id": "6c76f683-e6ae-4f83-8074-943518820267",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1f57fd9d-0b5b-4689-9997-f7cb178dbcf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0931f81-e43b-428d-b078-c14b5a8ec5e3",
        "cursor": {
          "ref": "702f1632-3c28-4a7f-b267-174fff1217d2",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f8ba978b-a075-4b57-94d6-7a72ae1ab23d"
        },
        "item": {
          "id": "e0931f81-e43b-428d-b078-c14b5a8ec5e3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8b4a886f-b527-4746-821e-30bbf48017e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24065bd4-e63d-43ef-a59b-c152924c4668",
        "cursor": {
          "ref": "59395db1-4f67-4909-ba94-8d39c14a7a57",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1ed29d05-37b8-4bf1-bb03-441b49589fc6"
        },
        "item": {
          "id": "24065bd4-e63d-43ef-a59b-c152924c4668",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "38f44219-d4db-4ffc-866f-215b089cf8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8310996-6a6e-488b-9df5-0a1e5a84aac4",
        "cursor": {
          "ref": "48902411-240c-4977-a64e-02b325a110dd",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "38edf0d5-8871-4cc6-972a-22b98c684c41"
        },
        "item": {
          "id": "f8310996-6a6e-488b-9df5-0a1e5a84aac4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8524ab34-a927-4137-bac8-79efeb4f3eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577a4645-cf26-4560-9053-4ab70b5556bc",
        "cursor": {
          "ref": "75f27965-9f4f-443b-93a3-d2a203422e8b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9fbac630-76c8-4861-b3ae-8f85eb4de5ae"
        },
        "item": {
          "id": "577a4645-cf26-4560-9053-4ab70b5556bc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1d8639e2-c690-4486-b84e-7679c5adc485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca646b4-0bf5-4492-81e6-55ea945c77ee",
        "cursor": {
          "ref": "a1d3869e-487a-49d2-af68-fdeca704c93f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e27b0782-73c4-4642-afd1-df51f0b9ede2"
        },
        "item": {
          "id": "9ca646b4-0bf5-4492-81e6-55ea945c77ee",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b66775fa-0885-4a1f-ba98-d6d562bee5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1c9d25-712d-411d-bc74-cec985fee396",
        "cursor": {
          "ref": "8bc4b1c6-e0a4-4029-9715-931ea0d352e4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0a623037-5258-42e6-8803-87b2dbba532b"
        },
        "item": {
          "id": "fa1c9d25-712d-411d-bc74-cec985fee396",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a0974ebd-d233-4fee-bcab-46c6740719c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1786b86a-d6b7-42a0-a767-5dc594d86f87",
        "cursor": {
          "ref": "ee5da1aa-a133-4cea-9e88-c983dafb29b8",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "924b592e-c1ae-4268-9d37-848bea0a6ec8"
        },
        "item": {
          "id": "1786b86a-d6b7-42a0-a767-5dc594d86f87",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8f37396c-e14e-44aa-80db-6e53799b3759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2475623-dc08-4fa2-b690-30a70b5e3db0",
        "cursor": {
          "ref": "f3314f72-e47f-47f7-874c-daa9a61e43ca",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5719d8c7-e0fd-42c4-b2e5-228380ca2381"
        },
        "item": {
          "id": "f2475623-dc08-4fa2-b690-30a70b5e3db0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "70fe9d81-c287-4e3f-b967-30fbbccb023f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd819f9-a922-4483-839e-9fb17e6dcd55",
        "cursor": {
          "ref": "ca3d5a96-94c2-4963-be7d-d330ad5dcaf9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e302821d-4419-43a4-b338-a5b41539206c"
        },
        "item": {
          "id": "7fd819f9-a922-4483-839e-9fb17e6dcd55",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "eee854e3-be19-4c7a-99f9-988bd15ee879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a207de56-268b-4788-a97b-a65c092b5a29",
        "cursor": {
          "ref": "b284708c-6e44-4f3c-8b8d-cbbd2da744a6",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c7f35bcf-2666-49b7-9805-698d8ce47cde"
        },
        "item": {
          "id": "a207de56-268b-4788-a97b-a65c092b5a29",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7499fc94-8e07-4bb8-a6d0-56fdbf311289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf040aa1-1402-4eec-9f55-baec813fea75",
        "cursor": {
          "ref": "8679ca29-8581-46b1-bd16-560e1669ac27",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0dc5abde-c2b1-494b-b543-9c85ae5aecb1"
        },
        "item": {
          "id": "bf040aa1-1402-4eec-9f55-baec813fea75",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "764aae4f-c60d-4521-93ca-adbbc29c9361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a2533a-69c4-4079-8a6e-8006ece066b3",
        "cursor": {
          "ref": "0b0c20ab-b9cf-42e2-9dac-3b28aaa92a99",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1bed3407-b41f-455c-baf5-638f813d2e7f"
        },
        "item": {
          "id": "a5a2533a-69c4-4079-8a6e-8006ece066b3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b331db85-2c82-4821-b35e-dd31709502d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ead3b4-7058-4901-a687-2c63249bfc47",
        "cursor": {
          "ref": "e8e8ef5d-fa7f-495b-9cf5-89c7eb5f9c36",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5a2b4815-ccd6-4680-aeee-3b9210a671d1"
        },
        "item": {
          "id": "58ead3b4-7058-4901-a687-2c63249bfc47",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2df5cb7e-a586-491f-9826-62cac5ecc6c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff31341-53bb-4a8e-901b-8d74e9da0a0d",
        "cursor": {
          "ref": "2e4dc25b-f19b-40cb-9dd3-9b23c52cda70",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6051d439-8686-417d-b75d-9636f589565c"
        },
        "item": {
          "id": "bff31341-53bb-4a8e-901b-8d74e9da0a0d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "97a6d193-6a5a-4c49-adbf-a4338f308a76",
          "status": "OK",
          "code": 200,
          "responseTime": 2357,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bbf0ee-6a76-4fc9-a09f-d2ea7b2c8a19",
        "cursor": {
          "ref": "cbc5127a-57af-4b03-ac76-3bdb9e1d6de6",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d03f1d7a-507a-4cf9-b490-abfc55efcb86"
        },
        "item": {
          "id": "14bbf0ee-6a76-4fc9-a09f-d2ea7b2c8a19",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9954dbc3-2925-4c20-a47f-c1a48af1208f",
          "status": "OK",
          "code": 200,
          "responseTime": 3018,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0ad171-4e88-4b91-b9b3-2bd1d6271d92",
        "cursor": {
          "ref": "56e4770a-c2aa-4d7d-bdf2-0e2f3f745db1",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f9286a6b-8a24-47cd-afa6-e7d47eb80838"
        },
        "item": {
          "id": "0c0ad171-4e88-4b91-b9b3-2bd1d6271d92",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a7490de6-c23f-4204-8045-efddae6cb0f6",
          "status": "OK",
          "code": 200,
          "responseTime": 2294,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b218cc4-52ef-403d-a78b-15390066cf36",
        "cursor": {
          "ref": "1e2fc911-6dbc-4c54-b7a1-1525b5a34a2c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e127a02d-38ea-48dc-b957-2dc272fa9628"
        },
        "item": {
          "id": "3b218cc4-52ef-403d-a78b-15390066cf36",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "edc2cff5-ed85-48d5-87ac-4898824d0eff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b218cc4-52ef-403d-a78b-15390066cf36",
        "cursor": {
          "ref": "1e2fc911-6dbc-4c54-b7a1-1525b5a34a2c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e127a02d-38ea-48dc-b957-2dc272fa9628"
        },
        "item": {
          "id": "3b218cc4-52ef-403d-a78b-15390066cf36",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "edc2cff5-ed85-48d5-87ac-4898824d0eff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1873f0c5-6033-4526-868a-9017645ee908",
        "cursor": {
          "ref": "0b007e9f-e79a-45d0-8f2f-0e6b7f0eb6a5",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "accdc585-bd70-4e14-8252-0266a7736b97"
        },
        "item": {
          "id": "1873f0c5-6033-4526-868a-9017645ee908",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5cc7400d-6a8f-413d-a105-21bb3d3385a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0705191-e7af-4744-a10e-05178cf3bb4f",
        "cursor": {
          "ref": "d518c749-adaa-4f11-868a-015ecebc8d8f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "68d64bab-d8e0-4ce0-98eb-c4b1dc9b11f2"
        },
        "item": {
          "id": "f0705191-e7af-4744-a10e-05178cf3bb4f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "751d360e-57d0-4b38-8814-345d52ac4ea2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}