{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c9e74e60-bc38-4355-bdf4-b6ebc1df4cf5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2e8feffc-f6e8-4a8e-9883-7cd0e6e48c11",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63815e6b-618d-4194-9b49-34dee180c0b0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "77200882-818f-4f71-81e1-6150c9c16754"
                }
              }
            ]
          },
          {
            "id": "e99b6ec2-222a-44f9-8575-6ece5889d82c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf717fd5-5a98-4b4b-b926-044812b65b52",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7aa29f7c-e7f3-4fa7-9498-3351a075ba9a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "769d0209-fcc3-45ff-8c3f-159c9eb20667",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6197f856-7b12-4688-b436-875d913457b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2ffe7c6f-72ae-49da-a2d4-32699eff16e6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe97fc9c-91a0-4426-9d17-2de80fd180a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9eb5d70-af3a-4f05-8c58-05d7886eb8e2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18e27af1-6f75-4f8f-9c78-f3267737879d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "755683ca-831e-4a3c-ae95-267b0abf98c0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a1955fa4-8a76-4d9e-b052-9a4e2169ffd6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b988ff6d-e2f2-4f7e-82b6-b6031759aaa0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6fa8cf4-4444-42dc-8ee0-6cc3fe9d852f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d1f3893b-89d9-414e-a009-5283cf6a691a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0345da8-7771-45bd-9579-9c102bafc251",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8799f874-2f0b-4177-ae54-11a3f1ee9c87"
            }
          }
        ]
      },
      {
        "id": "173e2f15-fd10-406c-9387-7108ddf51e7b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "94269a03-a6a2-4560-8f21-3acb386ef7de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c895a30c-4b12-4e5c-9b77-cb87cfd49699",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f3924d1-9bc9-4436-97a6-156d9f9b887a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825e90de-cbe2-49e6-b804-9e234c41fb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5240050-7e26-4dd4-b7d8-e77c2fa5bbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc54c2b-2523-496a-b74e-c8236d9d5c4b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdf1abd-dc42-47a7-ab71-512fd39f2503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad6f2752-53b6-4dd5-bbd2-0864612de881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e199d1f-1652-4f43-9f25-c2328d24fa17",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7988ad-af9d-4b7a-b3c9-efedfae86e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb7d6fce-09d6-4f8b-b7b4-00bcc0ae1dbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f4bd61c-1186-41c4-85ae-06d2e4d9edde",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fde4034c-f790-48d6-9297-97a0904cb19c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5c0e93-57ac-4fb1-98ac-3e07b57d00a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ecf58e1-f49b-42fb-a15c-bbd8f7a04d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16945543-dadf-4629-b8e8-e8998d3e9188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e690be4-941d-49ae-a3ae-a4578b15c66a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "08d4e605-babf-4630-bb55-55299b4fe50a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0c5ca69-dc10-4129-a300-cd4cebe93fba",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "772a86ea-d722-46c8-918f-b3ac37abdb80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cf85dcab-1220-48bd-85f5-53dcbfd01027"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "691ec7a8-bcff-4ebe-b604-dc4ee2493244",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b40c8087-79c8-4fea-95df-a6c2e4d0baf0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "571dd584-acd8-4188-b5c4-09503154c742",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c66a5d11-27ca-4e92-99a6-8ab05c73289b"
            }
          }
        ]
      },
      {
        "id": "baa0e0d1-5b0d-4865-8450-4b55e32f9388",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "adb0727a-a7fd-477d-a4d6-b4eafac35ca0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01c5633d-53f8-4211-ae79-e34c8db08ca6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "07169ec2-7b22-4b14-89af-4fefa11ddbff",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8ea8be-03c4-43b2-91d0-0a448195a0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab07d9b2-82f3-4fb7-b480-852bda7c4ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f0fbae-8820-4798-8f33-864bbbb40321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5dbb8ca-fbe7-4db9-aa9f-d11548cc0de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c0abf8-cdfc-42eb-a760-9864831fe762",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097843af-056c-43ea-bf6a-a09d733be4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e73fd8-8e57-41dc-a76f-b5409ed3c032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255fcf1e-5da1-4d6e-a7af-5f97c5fbeefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40c7c92b-c97e-414c-ac73-524cfd0c1db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcde4fdb-0e0f-4fd0-abc0-4093a49a1c35",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8371143d-4fbe-47c0-8cd3-e04427b3656e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba34aa4-b42a-4422-935d-6a6932d1d259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42a91ac-9499-48f7-890c-ef005d8bdd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa6a58e4-989d-46ee-a44e-2fbaabe9f07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8278c7c-4e8f-4d39-ad2a-8c0c0cc6cf83",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975fe758-5efb-4f78-b63f-64416d2de002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efefb87-4a06-46ff-95e6-e199ac19916b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4684e6f-f36e-4a44-af64-e3634f573024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db96c994-88d8-4ff5-ac84-56c6463c772f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cc0b59-2efe-4ecd-ae3f-402d10d9f022",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c18291f-a12c-4132-88ff-435e98c21bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58810f34-f773-46e9-af44-7bb7456a5c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262d6975-f1f8-4d80-b290-40e9e009edf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aca0144a-dcfc-4f22-9f8a-8de270618ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271ec290-e8a9-4ee2-85c2-b315d7e3dcd3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1aff7e3-5a3c-4c36-84e9-f84379cfe5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30bfc84f-29c7-4c9c-ab01-953dff089c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109770f2-1d73-4996-bbff-baa0f42aa829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47756df8-f89f-4098-a657-c9e265f6e692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c03970a-3b45-46e2-b6a5-1e8e6d4f5d79",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8a1b42-b7bc-4801-97b7-f08db1b0a22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11550223-26d4-4c92-8de2-15a84557c56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03c1eb0-cf73-48bb-8dc3-3e8fa10ab11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f57f645-febf-4af5-8bc5-b23d706fabad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962f715e-40ed-4786-8184-1c77935306b2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecfc4d6-f398-4dbe-b960-5250d4fd1538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37b7648-bde2-4072-a087-f7d83dabb8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e125bc7-c1c8-49c6-a47a-75cd1f7edd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8322c18f-7082-4ace-9e01-c17d92e55cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58748415-1a54-4657-9214-883fc07b7fab",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845a68be-9d7e-475e-a322-76637dc2dc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfec5f9-4b5c-4d80-8d6d-5d9188e0b54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f5f676-5ec4-4d7f-8c14-f49442e8f431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a79a2308-41ba-490e-a19d-e34241ffa014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8725565-5dd8-4642-8094-e67b6ae82e0a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2db15a-301c-400e-a713-e28d662b038f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164fb5cd-d68b-4c6e-87eb-597040e8d419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c571a08-1cd4-42a3-a213-d5d1b516bea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cfa372b-6b34-4492-ba57-20c364dbc215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f015c747-b151-4fb5-a39d-8f622c91723f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd1fd3f-59eb-4ed2-a6bc-cbf4d290df89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769ce205-0198-4ebb-bbc6-20fd32e114c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c7968e-4230-4d0f-9d78-9aa443360000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61d6e4c7-a735-4e83-8e29-db803c3ea793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d93c095-ad6a-48f1-ac9e-5b5001cc09e1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22896ac-4b48-4e29-9ee1-5b9b1e5605ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10122f0-7716-4d0b-a71b-eba6fd0f71e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fc49fc-3d61-44e3-a586-be73ef97d757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1a0d9d4-c0a7-41eb-997b-99fa98c5a588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f521886a-cbf6-4f3f-b8d8-41cd65832ce0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadcf4c3-75cf-498a-9a3f-2a3858730de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dffb937-19f6-47de-82a0-f5ecad63a70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c2bfb7-de30-41f5-8af9-d830694adac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e91b69df-38aa-4c38-a7bc-edbc8c665e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11a737b-3b15-4868-a090-979bdbd303fe",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a1e2fe-113d-4835-9efe-a57da0fed5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d8aa94-5170-4f8b-ba04-6d6e572b7482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ad1192-41ea-4a27-b2e4-29d8f5d9c60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0a800e1-f025-489c-b6d6-1ca6d02eb715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d046774-ad06-4720-865c-62af8edbb6b2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdebe1a-5902-4ad2-930c-fbc3d85cb3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b37f97-7157-4ab0-ad44-947795884cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4e2fca-effd-4746-a4d1-74f3a1b2ff37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22c81500-08d2-4254-8bf6-8c8f68dc3ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e9e92f-cfd1-425a-b11a-a81868e6954e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0787436d-dc7a-45bf-98c4-206bfe06ff58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b77fdc-8724-4604-bce9-0f74d45f68a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60aa826-353e-4a68-ac0b-4853aa1877ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45ad9e75-b284-474d-b211-a4ee9d3b86f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7576fd78-f288-400c-8dff-019c39582456",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0789e7ca-c04f-428c-be8b-533318d9f2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c10716-f094-4296-b101-a9eede6afe8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903c4488-ec28-479d-a873-4a0e1709294c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a72a89b-bab1-4bdb-b78d-d6d15162dc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fec0db5-2984-4aab-8fb8-fc9b1d6c0340",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb834c47-876d-4ee3-8588-ce4948fffe03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1319c5bc-96d0-4d2d-978e-b4141900f0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef562a5-324c-4039-b533-02e67ee03129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "262f022f-6bd4-48ec-afee-e664922ca3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87702207-a54a-4b85-873b-9b9597faa46c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e637bc-9edf-46cf-bd80-39c2569f9810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad0f0b4-0507-4b24-9afa-3686ab6e8062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d1a022-ed1b-4323-b249-83492f10be3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db42f960-a5b0-42d7-adb7-bb1f1f27b915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9a1b6e-9fe4-4d11-ae6e-d13027999908",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342dbaa4-56f8-44b3-b341-55190dec52c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af225512-edfd-4c01-8f23-b00a638b37da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44295f57-b76a-42ce-920a-2789ba53716a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a10c6f36-1c28-4acd-83bc-8a79435f5869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca737e1-de98-4278-aefa-e5449f413bf9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6089be05-aa5c-4471-9456-1bd3c9121eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfdd4be-3b8b-44cf-bd48-024032337365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e333964-eee6-4ccd-9aeb-272e66f59c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db1e0c3a-3125-4fcb-ab0a-ce1c74bd93b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42480080-94d6-402d-9530-857d575e50f8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0db2d5-1252-41c8-accb-8fc7d1b68d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a98833-ca82-4f18-ace2-93334ac666dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a38367c-2d88-4dd7-9dcd-eaafc9960502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb3f5f5-fda1-4d85-ac83-1089eb7614ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3172f264-5e82-44b1-b826-3d2ecf4524d5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da98fc5-3653-454e-a148-c3c0b8f56d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c22d242-d252-4eac-bda2-8fb71d5117b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3332192-da5e-498e-9bda-31b87c274479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a681e6b6-393f-4492-81f1-b0725425139d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43a9c60-d38f-4b0c-bec0-3bf4dc6f6912",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae29c4f8-9cc5-4845-9c9e-c52862dfd575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef033ad-45e9-4782-a345-209f7b164aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f841bb11-ab35-46d7-bb05-8aad72e7a66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a872a62-7c75-472b-a91a-c26bc644dad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56167e4b-83e9-4d34-a5b8-0218380a92ae",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310d93ac-ea0e-4b2e-af44-969e757ae65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44df545a-5c19-4894-82c7-927f0590204b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4129c95f-5aba-4483-a3c7-dfb5dc28a558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92473f9e-527c-45ed-9327-42d6a8b9de3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f16a3fb-4d4a-4a09-bd27-9d5e8da5ff9c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923e0a3a-893e-4ead-aca7-a1d29a8c00ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f03f5c-7980-40cb-bc65-5c2de9a7a1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a087cf-7d14-4bed-bc87-87fe6e84f65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4fe12ab-31ec-4a3c-b54d-c0190cf32b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57910726-25a1-4923-9b54-ae67330d1473",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61209f1-6894-4484-b1f2-49b78e949c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b248de30-db45-4ffd-b968-f78f959b99f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5bcfc1-d5a4-41f8-8601-227a92f8c0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdbe004-455d-40d9-9ea5-ca04a7632723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b5ae2d-865e-4b20-862e-d5797fe44506",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e619aaf6-af64-4e71-8225-48ec531805e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a2ea8e-fb7f-4ff3-ba7b-6bdf4dec8bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af6c6a6-1c47-490a-8834-28d7949ef3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c856d989-ea66-4430-9113-6ede1110c5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8a4aa5-6905-46de-a27f-c76c48ebd61e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8a7f3e-19d0-4c7f-a8ba-9b4097760e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c923ef7b-9b4e-4781-abdf-cd427e116ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de51591b-ae7d-4de1-adfd-25738824e8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9043ceda-2b7b-40a0-bdbb-49c2ea07d9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9652719c-33f9-433e-9406-25337142fb7f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2d789b-ffda-40e8-a20a-e23c7383e065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694a2dfa-5bc1-4181-a70c-1363bc26cc80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf29c60-a1d9-4287-ae3a-9a0f5d331087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "113648c5-b095-4f31-8163-7cc70fc7f889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4797a07-5012-43fd-bb7b-e1ede3da8576",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f993d7-6d51-4e17-9a15-318a29f65498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e78e0c-48c7-49c1-b12f-5ea60d79249f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23816d9a-2d2a-4825-8844-066eb6bb77c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3623a8-298f-4984-ac62-2cface25a0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768ed30c-2f1e-40e1-aa72-45bfa4558d4a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fa1996-329c-4d7d-ab10-bf419eb56ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9646fc7b-24b9-4bd0-8f48-f2ea1d292047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e45f3f-3743-4e52-99a9-100f8f062eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01f3b7ac-2dbb-42c9-b82c-b74dc1d335e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff1bc53-fb6a-4a79-b43a-65be80cb2f3a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851fb17e-d492-4063-92d8-d1ba1642393c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb3186b-181e-4af1-9a1e-9abf7044f009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d378657c-a0cf-4720-8ae0-92894fbeb8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb9cf57-4f76-4534-98ca-4ff71e75007a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d65571-d27b-4a27-8813-0db02c2fd661",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dca8fd-e396-4a88-9d8e-c5e5475e3c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8dab146-1233-4b8e-a4dd-208ce148ec94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d553969-681e-4b85-bcb8-870ff4a7e6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fda5a2f2-c13c-4bcf-bfd4-97cff42e5d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3d41ec-f946-4b94-ad2a-9012fe364ed1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b921ab-2ed2-4488-9580-a685b3af2aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d697847-e97d-4fdb-b8f0-c3ebdf381afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeeadf8c-54fb-4c39-a68f-2810d951c14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f499df-68a9-42f5-99b6-3445a52e9090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd691ea-637a-40db-a150-8bdafeeaac09",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a722e542-b69e-47d3-b73d-a39c4a7a5b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac642a32-8641-4b69-9e64-90b55db07d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23d92e3-7853-4c29-98f6-3a6695fc74df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1671761a-06d5-46f1-a989-42c901696ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474e3867-c5a0-4af9-a124-39698af3b0ca",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1aceed-8894-480d-be4e-66f230ffd6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d441109-9880-42d5-87c8-474d33e14e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e29bff-e9f7-4f5d-abf5-a0e6297344d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36354594-564a-4529-8369-ecdc1733d825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8ede1b-95f0-4632-a089-f6c08534d7a6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ed6158-61fd-420c-8535-3cbe009e8fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2401b735-43f3-4228-a855-2bdda31cc0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56f807f-02b4-4fd9-ac10-bb323ff80c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2591ea05-dadd-4b0e-bc5a-8aad372acc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e10722f-2ac0-4e91-8763-7453550defb9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043cf98f-2986-42cd-bf54-76116d37ba7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6d69a2-8d57-48d9-833f-d7a951d24f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2e1d7e-0c21-4bca-a0cb-401d38d3e19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "efcc8bd7-0e17-427e-8a7b-fe652b0d063b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38d19d1-e7ed-43ba-bbeb-cc919f6b3269",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80af5e3-f1f6-456b-95f9-765a51d7a750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f955a64-23ed-4f91-b65e-30cf2f3ab539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fd728e-5feb-48f1-8c05-bc4fbc17b6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "53dcbd62-d37c-4397-8e1f-b83b85627c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0595e648-29d7-4adf-a085-3262f8e8a50c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cae8e1-9529-4750-a3e0-a21a06f1b25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d1159d-8378-4035-8ce7-5d44bc8a2d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e23b88a-155f-42ec-8bbe-b87e45e3e538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "32ef9187-6634-4f0c-8637-997e2e8459b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6894437b-9162-4df0-88fc-0c044ac84280",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781adbe8-9963-456f-9e9c-2ee58b06b3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5367ca-68d6-4a94-9dca-07cdaacf1498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6494467-1be8-491d-b3eb-1e7408851d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5872596e-8242-4680-8b54-54b2d8aea8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aa8893-4825-4d2f-af20-6b636f3a2764",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559f7100-720c-4950-a1bd-e064ac857f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e7ef8b-6790-4916-b5a3-edb462a966cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508b56b7-42d4-4694-be29-a8b288934539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c3d301-3301-4c27-ae6b-1a0a4e179c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4febde-d82d-4a74-87e6-4cdafa91bda8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15a6a23-2112-4fba-be48-246dc5cdea7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced3745f-a554-4434-a6c6-2d01047c1f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da05e442-f3f7-410e-9e6b-9e080f308b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2f742f-a326-4607-86ff-52b465b4cb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ca3156-e895-4a5a-8a24-c6964e0c6a8b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0899297-4881-4ab7-8b09-002cc09418a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c650f71-d03a-4448-81e9-f6498ddb27b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12024800-72a3-4977-b5c9-3ccef1d74a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ecf1e64-a0dd-435d-96a9-93cc80db7de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1ac772-49fc-4708-aac9-a009bae899a2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5917d3-72b1-4d5d-b479-1442e90ab727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096ca5f8-6403-4330-8688-a8378f1c2be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc85145-1c3f-4390-b3e4-74481fa83760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d62fa9-c7fe-44eb-b4ac-bfa63785358b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fb998e-a0e5-4ac4-ac51-fa1385feeda2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f5e1fe-5ed7-4b1f-8be5-33d87179ee70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd427c34-567a-46a1-a4ea-ec2185748f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a403fad-b208-45f4-9a57-f3729b89df82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d322446a-d120-4fb7-87e4-9d0756a6f40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36c7509-b94c-49b4-804b-ed657ade0a7b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238c50fc-3185-4d4a-80af-872ded3e4951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03d2de8-b3d8-4d94-8cc4-931086a9a218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a536e102-62c4-4521-9562-6fd73cc70594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f141dc29-03c1-47eb-bde3-155caf24b138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a57a38-0ee1-4323-af4e-c9c492f79ee7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf21c03-36b7-4338-ae2b-344ceff1cec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8f7eed-f8d5-45ec-ad38-9e4e02d02a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfab94b-5824-4964-b25e-f78613d08f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07454207-b946-409e-857a-3250dd854e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f344f3-decc-415b-b822-4f817f92be9a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e17626-9d97-4851-b3db-1cdbdfcdb602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80de22d0-408d-46d0-beb1-6078b9670f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d82946b-c5d3-43da-a0ce-1b9de38cc262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71d2106b-fc54-4c1c-ab1c-e772e97dbb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4b8ec5-894f-4a93-af1a-35da58196e23",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88437232-0de7-4881-81d6-a3016da46293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2f8e01-dbf9-4a0f-a96b-3eb61d10073a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98ceba4-806a-457c-a602-e3a6d5b28dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf3ed04-405d-454c-abce-b2d7bc187169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cf8b10-49cc-4f35-9854-923f0044ac20",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59081c75-a286-4d2f-9c70-0ba2f586eca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8f3116-719f-4412-92d7-eb9a5052b973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2139596f-0255-4a48-9a02-ed3b1a0fdc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7cbf69-aacf-46d5-b125-325bc21bcab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e35c228-f7f4-4fab-a4a3-4f2b7ff3d1c5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db24930b-815a-4c38-aaa4-0fb2a39e95aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0f1937-70de-4003-8d36-9551403702d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea537a7d-62c9-4472-b1b0-70b44e063828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85848bcd-fc0f-409a-8170-3718080ee39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f3e824-3d1b-472b-841a-42316e34262b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8ad5af-68f0-427d-bd15-43c374c6883f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3000db14-1131-450d-b785-0057802167b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d466cea-1813-4442-a093-27672408d9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17943cee-88dd-4c1d-91aa-c9542bee2bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fe5348-79aa-42f8-ad71-263f08448cab",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ea03bd-5746-4455-90f4-3ee5aa878777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b24973c-c29d-4487-b3d3-866cd54febf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1736f357-25cc-4cab-b4c3-522a0baea49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de430227-8416-42f7-92eb-6c89e3daf2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19987c30-d767-4a8f-aa23-aee193359e55",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e702e2-0b22-4981-bfd5-b6ccc1ba66d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1ba0a1-fef8-4dd1-9187-c20d537be016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303240ac-eb68-4576-ae0e-c2d23053073d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d5cc4373-5a91-4ec9-b1df-fbb0eb4f59b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae13b8c7-6a55-43ca-bffa-b26bd3f9746b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61cae9c-a601-4220-8e85-8b9a70c0b526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690a6b41-cc15-45bf-9299-d4ba54d4a26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa606a55-2bd4-42c8-a7e8-3e40fdf4b45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fb71256-6831-480a-a2c2-4c71e5561091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7efaa31-ef13-4ce0-ad60-fc97bdebf427",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ea573c-d383-40f1-bc39-de0d4c611116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110b507b-2d63-4e6d-81f4-a6be0f11f9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56cd6d9-687c-4cbb-87e6-3993766ab655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "31c8f851-2ff4-4148-b951-60609d9e62b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beaa7be6-5122-4bd9-bf34-793ae0d8ad82",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cf7c9c-9ddf-42ee-8e09-117f12a20a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03eee5e-2315-4a03-ae99-c3c3b7171e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5773e5-95a4-4dee-bed6-56693a1c5555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "743ef4fb-6deb-444a-9e56-b3d8a3623b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1361e99-464d-461d-a3f7-c428d60644ff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331647a8-30ec-40ec-8356-b4c3db75319b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b6724d-3ac1-4447-a7bd-79c84066a96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b793c1-34a7-4cf8-bd1a-2a77aa38bd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "885e81f1-bebe-4e85-b284-5a20768660db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f6e2fb-fe12-44ca-83da-e643316c2c08",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212e8c57-bbe6-4019-97db-c29a5c681a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e505fe-72ca-4fa1-88f3-61f9249daa65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd42bf71-95f4-4b12-89d9-e363fd6d3054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "10a46c56-250c-4276-a2ce-edb6293baa1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d78d060-fdba-4c0c-9fa9-4529a0bcc266",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb51b30b-7b35-4861-9d87-5c6606983f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2190de25-f851-4652-ab8a-e4939d0560a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6ce597-f053-49ed-bac4-d29294f652a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "227c9b23-dbe1-4ace-8969-1745bc3b8577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21884ee-ada2-497f-a7c0-c013f52e4431",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bd28f7-cbfa-498b-861b-ca577349a202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb34482-6f90-442c-816d-ec01abcc7780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669b3d35-57c8-4345-9bc6-04468bf670b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "99990f5d-7aee-4467-9c47-0634514af5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e24638-1f87-484e-94f3-0a650f0399ff",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b071670-30d3-41ed-8ad5-b64178572983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ed4ec5-bdc0-426e-adc7-d4e4154e96fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203cb106-9c1e-46bc-80f7-f278507ad140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35329e4f-c0a9-4547-aa98-9962310d4744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5e7f29-aa52-4d00-bb5c-e7a7d3e0c47d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901757f2-cd45-46c4-b449-85953ca4d578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f05381-0390-421b-8433-07e35961664d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93d2a50-fe3f-48a8-b80c-0046584ee603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34a3d835-2f8b-4de3-ad91-81f832721bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d90ecf9-1f0a-458c-afa1-fdbfd0c73890",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a1f504-8f50-4a12-877d-a4ef40132236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7c7966-71c6-4866-8d60-1d2315149cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc10b9f-56f3-4cba-9d61-65ccace8cdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1040ac4-2a47-47b5-b771-b9788a97ab37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602023cf-5531-4898-9cb0-84de1e717120",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6751e839-897c-427f-a5b3-52988e51f443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7b2b09-2190-48d3-85b1-1c0b6279b01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1868ae44-9589-4dd4-ab17-f1ebdcbec68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c604c421-0945-481c-86f1-529252ea5d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e616ae-ae25-4774-8a3d-f9ad1b865aec",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ee8ec2-de7c-4b96-87b2-a05a22fa321a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b350e2-81fa-4d7a-ba40-6827c2843e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8357cac8-2d69-4342-9e60-46cf5fa1d5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b479390-62fa-45ba-8fac-4355b42801b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4787534-2e23-407a-858f-83f9dc0f029c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcaf8b6-07c6-4c4d-a984-871088f6086b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1f3737-4cf6-4d2b-b872-4b2d7f136980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1a3795-ce23-4b5d-bf8a-0e2a08d318f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0068c01d-b284-435d-a719-2cc7436476cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1b98c0-dcf6-40c8-b1ab-93cecb9143a2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff18f8ba-937e-408f-91ad-2cff5f7ef94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ab39ac-3180-4fb6-92b6-15e761f4b4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c76473-47ea-4a30-a494-811524ad1e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "904e8914-0f99-478e-ba5b-ca8338f62489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf98782-caff-49e3-9698-d58de22af94f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9384b5d1-7c6f-43a6-8fab-b2cc9f4cbd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3625ea0b-d550-4788-9abf-c878207483fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34adf67-d45d-4c51-b883-68bdf79efbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1881a1c3-96d5-41fd-80ef-5db25ea09114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b72a66c-405c-4af0-af76-a062311f95e2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2ac196-2054-4c1c-bd32-4ce199edd708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a0cc14-2368-4a5d-a0fe-6338edf25e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cd43d6-c440-40fa-b70a-79e33b37c161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "258429fb-cab9-4d0a-848e-8b0f49c54baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c18b3ee-29a0-44e1-b15a-2225e541c453",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42c30aa-1a9f-4f6f-8f0c-cc2986886f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69cec5e-92a1-4ed8-a1d2-9ad81abd8a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c53935-71f1-467b-bea7-291c1cf642b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c77e1d-4699-465f-9918-ce1253f6478a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f331d8dc-eae5-4b3f-83ab-7b651b9443ab",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d3b95d-6356-47af-9855-927e6d97a3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab136d1-5a5f-4be2-9bd7-27bfacc94711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9852e474-5f07-4412-89a3-84cbb4984526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63dc0022-a9b0-42a6-8b3a-773382dec546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5759720c-631b-4c71-b1e0-636ddd072b78",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ac7c74-a3b2-4abb-ba83-f7eb3e367778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9507016c-88e8-4a46-9288-9d83a87951a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6dcb67-951d-438a-8116-0b939f81a74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c60de8c-7ed9-452c-a5ab-4cff9491becc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f55ea50-1cd5-496d-b98b-ae5d31bd055e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c837b046-7ac5-45a9-80d9-66285cce4bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb703d16-ffe8-45e7-a72b-5a966462d866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae38492-ae71-4bc0-9fa6-40450e602380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0acba1-1a7b-4fc5-94c9-be2c82ae9520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ff0abb-71f6-4990-8c75-ac741f990269",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216faf19-0243-4b84-8edf-b9b6b035487b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6730c72-e132-4852-9b5d-f22b80917709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5a2e50-ba0b-419c-8206-025f2dd95b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4178ccf0-c8d7-4497-b44e-1c3d1166cf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3322fbd4-3638-467f-a99f-46adbe7a19e5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794dd521-1aa8-4b2a-9100-dbb0aecf27b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3222890-e2d4-48a0-a041-31dd66dfd5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bb241b-1b81-49c6-a1f2-6662f63a5f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0826789-135a-4929-a59a-de349d402286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27075f4e-92d0-4382-8aa4-ee951b7fb02f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de90c990-c951-4802-88bf-0a985e799d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5271efdd-1874-447c-b281-1058991104f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34834005-4b58-40a0-a32b-9d12c16074fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8fc66a3-e759-4582-9082-8b4c0616cbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a512a2e9-21e3-4e88-86bb-5ad12d007daf",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738917c9-09b0-4c14-b1ae-949ac9c7704b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4d0505-facc-4785-a9a8-6aa1677c87f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f298c594-65d8-454a-9fc1-98ffab95c7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c984b6ac-3b1f-4880-b13d-39ebddb3dd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd6f38e-242b-412c-8e17-766761c6f3f4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa932c8-5924-4b7e-8445-e37c95584170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c34f0f0-923a-42bc-a3c8-c2b931627932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607ba8cf-e842-4942-8206-fccbbc543d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7866bc48-b1cf-4d29-84d6-a98ebc975e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f8278f-360d-4a4d-b596-9f06a1399a55",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e64a77-c49b-462b-b4cf-0840cdd86a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d570d2c0-c516-4c28-9cb2-3f60875e8424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7defb473-0f0e-47cf-8e6d-f68971601749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "944017f6-4098-4573-ad23-78866761a32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242b687a-a52f-49a9-a8ae-34c2fb9c6b53",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc91c53-244d-48b7-960c-06725f77969a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c3f598-3b6a-4a44-bcd3-875f0a3347f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39cab1b-f927-43a1-9d54-f96334d2506e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcfd604-8741-48f5-ad8b-eb95630bc058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89194fe4-cf6e-4cbb-aabd-d0c93119bbe2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61a9303-5006-4d0c-bd16-853169831ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a59a15-0cd3-45d8-b2ac-57f60ab1a55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d5ecb0-4de3-4807-aff1-b5d637311b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b982c3c3-c6a2-40be-b08b-e19526d057f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252821af-e545-4321-8f07-378fe6774105",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd84ca9d-3648-4787-8c40-0d155aa8856a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ac03d2-f198-4638-a84e-a4403a3ee6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30aec25a-14ab-4687-88fe-684a9c811efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54308f65-3763-4231-8b29-8c6233cfd7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56e26de-fa43-4c4f-8bb8-4cc64680fe37",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cc6989-a414-4078-83a9-c8973f98f7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f460e53-1102-4dcd-bd87-581b4d653c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e4673a-ab78-40d5-8c41-363c634531f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59eb9ee6-8bb1-4a93-b2c0-58951611e0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1c4d57-8242-4c67-94cc-d66f408e873b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5928ffd-aa6a-4bf7-830e-2641f18cf7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ce4972-3ebe-4608-a186-7d2d53040cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9005a3-6248-44b2-b2d4-23d716aabc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "da1982e1-ed3a-4b63-9d4b-8ce5ad349c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fdf780-37d2-45f7-8ae6-2701fa31c3d8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f13f763-c37a-4523-9e75-96b9a214605e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4fb9c4-8064-4624-a568-13ebaa8a5de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae692ac-4bd2-4800-88ae-3a7f05e5f96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "15974aa0-dece-452e-a01c-bb6273fe3fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f6a1eb-c681-496c-bd73-054032876afc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d31bc17-cdad-4f5f-8da4-8e2a02ec5e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5379c9-843e-49a1-99eb-7c96e514dd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee20644-0856-411a-98ba-6bf857ab7ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "193353f8-a683-4368-9e09-be87b97979e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b75cea-cf7d-46a2-ad14-7816a4a53cec",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f36df1-385a-44d9-ba9b-9b3407da21b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e328b1-d123-49e5-adf5-3ebd7e7a1966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b208172b-acc1-41ab-830f-91d3970ec55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "98079f63-e9af-4f59-8950-19a8a18b1af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2554efe0-57d9-4ee1-8200-ddda01d2c7e1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9963a6be-03b4-4bc9-b87c-7f7336cb80d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7c87d1-baee-4a15-b8d0-c412a7783aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0ff970-a42e-4fed-b3e9-064008e08627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3beaf1e-7405-472c-a5e6-fa79a26badfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802ae375-29f5-4e8e-b573-96b5754653b4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9783b7-8b36-4792-97fc-26c9b787ea8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7caab1e4-bce0-4611-ad3c-0da478017b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d98614c-ecfb-4da6-b29a-3e74217a5779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "da2d83fd-b8f1-46e6-a291-758a25e020a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e913fc1e-5cb6-4986-861f-66bd5d7859b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5025d21f-6a42-433b-a8dd-4c51426d20ed",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92adc1cf-55c5-4c20-af8a-0fc85d256e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63f22c0c-d711-4bb0-8d81-e27494d92a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfda1e2-aecd-4189-98f8-7e7cedb5d1a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27c70349-91dd-4cff-be4b-8da257fa9639"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ebe4f10-bff2-4477-917f-060decd6a1b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2679f3b-f4eb-406c-a67a-2ffbd27d4c5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cda8cc9b-4d42-4738-9490-f54331c36c0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a7b1ac3-8a2c-45a8-bdf7-f853e42f514e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de50aa8a-cb79-47d1-989e-0b276191f634",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32a2918f-f705-4da2-bf68-5daa668191d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c56978c7-a85a-4ebb-a114-f95d1b484611",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a791ab6d-c634-49e8-80a9-df4e57be67d3"
                }
              }
            ]
          },
          {
            "id": "a4bacc11-5fad-49c8-9b49-30741c289609",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5564855b-3f85-4f2b-bd71-702155db5a4b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1b9c1920-d65f-43a2-b001-5879da8eb73f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffe49a8-fdbd-42ce-aaa9-59d14252b9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "999728f6-3080-4552-bd90-7db5aa79ebc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f360d6b9-5724-47b1-92db-e2fc757f51f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc67f335-00ec-46ea-ac48-6243162a5495"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0029cb9f-3775-4626-8bb9-771306c5865c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a10f57b-3234-460a-abd7-50d718748f4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "234e72e9-1a99-4d29-9d6e-303dcd6bc473"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f87d7fe6-fb49-49ec-995f-f7a77ea4e94b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f4bcb274-0a6e-48b3-9168-6e03f0f0722a"
                    }
                  }
                ]
              },
              {
                "id": "727ea8c8-8e18-4381-8485-4de5070f79b7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "caff95a3-c48d-4fc9-b00c-99cf883cda5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "357704bd-067d-4354-85cb-61b16cc8d076"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1d33d83-99d2-4315-8999-62f6ce43aae8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "819bd4bf-fcdc-40f0-b4a4-743a6212b8fc"
                    }
                  }
                ]
              },
              {
                "id": "7b0e0109-8cd2-424c-94ac-98741a6b6c94",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fc2d67d-c1d9-43ad-a22f-1687264c7741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9f71cf8-559a-4174-8885-404341d9b6d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df86bcc4-4c41-426a-90b8-cf8767147de9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fd1228a1-2dd5-46e1-a66f-1236a682f491"
                    }
                  }
                ]
              },
              {
                "id": "9e584fb0-6757-4e78-88cc-fcf7bc494a70",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4441c62-6f51-412f-91a0-1d8b1df845c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6bc7b93-2592-4db3-a78e-e7220477b517"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a77ea406-af98-4a5d-8f99-41ce51be0d1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "43d6b53b-f3f0-45b3-8895-ac94f2107705"
                    }
                  }
                ]
              },
              {
                "id": "485c2857-6bd2-42e6-a27a-00f2a8b6dde6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca6c020c-3031-4179-b2c2-c0fc7f728a50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee2fde1f-2176-47b5-9e9c-d009abb9188f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d18d44b-b539-4098-9e4f-8c8e68d75f7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8d768cbf-2587-4851-9eac-6cbfb542e12e"
                    }
                  }
                ]
              },
              {
                "id": "b40b4fe8-961f-4e6f-85d4-c998c7dd822f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba56fc3d-d9be-4a37-84a6-6e3619ed2a3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3959204c-70e0-4e92-bc9b-bc9e3999c33c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1a570a5-43fe-4261-a862-a7168e14f90e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8509d47a-2802-4148-82db-924d58386304"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d4e9524-d815-47ca-8f8b-6c942c9e2359",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e3ed0dc-9f34-4f43-95c7-316031848c8c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1a9fd7ed-70c3-4888-95a0-b8f0b414ca41",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1baf07a-0c8d-4ce0-8743-6d67271bdb54"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e8d216b-aadc-4eaa-a9db-ba69b439712b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9a040f44-8947-48b8-a03d-5a3e02660175"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9851e1b-21f6-4cc2-b663-23c5cad9b03c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20c80941-9f02-4536-b136-ba61ab00ab0d"
            }
          }
        ]
      },
      {
        "id": "b6e91e8d-6049-47e1-b7c1-5e8d90a2f12c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e8d93850-0ddd-4bf7-a4dd-0b0bec241b61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "733a4f45-93d1-418f-af66-dc34641f99a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82b64973-e63e-4371-a554-0534d12dfa39",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31a5a19-34e9-4f0c-b56e-f31a27459ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee037f87-2f6a-4ebc-bb32-ca656b7b4424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf533a1-c436-42d4-b667-5215807f9e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e83828d1-e3b8-473d-a5a6-cd2a65e0e909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312ca71c-d8ed-44be-a6ee-e085d382b730",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d1c2c1-2c96-48e2-8f08-b8f6c8199a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35c609b-6b93-47ab-9724-fa4b4779a220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898f1ebc-1e43-49d9-85e1-177073189d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8229b9b-6574-431b-9907-dd07a78a437d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35aa4f5b-85f4-46d7-823e-670e31661f0f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2897e53-5cca-40e6-acf3-83eb348e17c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807d92cd-f7d6-4b83-ac3a-d3b9b01d1d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1057280b-8dc7-41c5-bb8c-ac700338525e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dff1e4a3-8f28-46a7-9f41-67b403f87a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ed8f81-b92f-42ca-8a10-9fc2486ceaaa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5071b6e2-c6a5-4ba6-92ec-a64a3932fc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae73f89a-091e-4cd7-8669-34d0842263dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ab8fc1-b38b-4423-9add-365a06121faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09fa7e9e-ee93-4012-b53d-923e6cbec4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb99dd2c-e0cf-42a4-a9b1-b3bcd3537b33",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c63c1c8-b1c3-47b7-9171-db3253118f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3424d76-86c3-44d3-9317-863518f53c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9da37e-d20e-427a-b2a8-cb42e548fdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "254f6709-b40c-4949-9129-9341dc31e25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741abdb2-3d07-4bc4-91b2-8c1248427ac6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad66c3b-afef-49e4-97f0-a7848543af5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efc9b1a-fc91-4028-b7c0-8cb902c68784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dce9070-2a1f-4e30-9882-fcd92f31517b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9709ce81-64c7-4c42-8779-8ac4939dd673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6835d4a1-d115-45d1-b13c-daaecc316220",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ce39ae-2322-4bdb-8771-15d143a0fbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf66606-40c8-45dd-8022-d9b8aeb2f153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8504f95-26da-419f-b30c-5f64ea1cafe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa3421b-9d80-42ab-93f1-f0dc0541ec06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61eb0909-4060-4941-b8e8-65d7389d1d9e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d02efe-ea7e-4b3c-9b6e-bb71dc8cd63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f50c13-3b34-45cc-97c9-73824464d626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76d2649-33bf-4595-bde4-11febbd4bf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf95a246-3c91-440d-acfa-405d3eb74172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dffdc4c-1d83-4daa-9e03-ce2132524b46",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdafa71e-ed39-4889-ab95-f6527b2e6489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95aa3589-5582-4b44-a632-3c0c8ee8172e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de23d959-efe4-451b-ac54-f6dc9a035a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "daa439e4-2ee3-4ec5-a7c5-be4ebd140d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7129aeb-b32e-4942-989f-ef28d1e5a5a8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39284d5-5dc0-4dbc-8313-979f89681fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60704455-e70a-462b-91f6-fcd1054296f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ecfb22-01eb-445d-b625-e77592e76166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8a4974-e542-4953-8227-cc86f21967ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbde70e-dc0e-4e05-ad69-9254e4aa37ad",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b29872-6d53-47ce-8bc3-12b83037c500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27270355-92a1-4b62-98fb-af81f877e2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5b05dc-4a41-458a-ac48-6eee505e3ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "20f9e517-2a29-4c46-b32b-f749448a8eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a931ee4-321f-4e1c-816f-0be874a97db8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f4412d-4c24-4d8f-a167-28978d3a45a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe2a247-e21e-42a9-a5ef-03f4cf7cccf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c8096f-544b-49b0-8d16-9ee9f011f824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b636ef94-a2a1-4ff2-ba46-5dc4b4c07832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca414f39-94ca-45fd-9a75-ab61d99bf4e3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a114a044-7604-4372-bcf0-28f796ca1e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1730d2ec-e723-4350-8a11-d601d57b17db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308f63b5-b93a-4cbc-82ff-279d6b0f576c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd7be6e-1181-4e77-9615-9bd029bcc9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ee08f4-9453-4487-af8f-790613d74c7f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43427af-b2d8-40c9-8703-cc1f76cf76f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931216b4-f4a8-41b3-8216-cda9cb5eeebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8916384-4419-4feb-b7e5-5949045f1862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "506308ab-f026-46a2-939e-ebd0457ff60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3161313-b67f-4a31-a500-e4956e61f1f9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0342f1b-c31c-4f6e-a3a4-50131e8f4c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753b5863-7abf-4f40-a0fd-7c93df5b912e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4676b1-1ee1-45dc-8eab-1838d4ffa377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "915622ca-c95b-44ee-a8fe-f6061ea486cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530317d2-d4dc-48e7-978a-261208e4db17",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23471374-a157-42fd-920e-1551d3bd71ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc2647a-dc27-4e94-9539-5a60b52ae5a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338f491e-a7cc-4fc3-a7bc-18159ef030ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a49edf-4bfa-463a-89de-68ba636eb6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ceea4f-1b52-444b-bbf4-508b314aa982",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e2c8eb-0fb0-4fea-aa94-4595d465b932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ec263f-4650-4ce4-b87f-fe721c6f26c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dea82a-6827-43c0-9ec7-efc67cd9509a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2440125a-7e4e-41a8-ab74-44dbe4d38c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550d48ac-28e1-45c0-8495-20978ce75a6d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e57204f-8e79-4b83-a3c6-dbec664f264e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59b8155-7345-4d16-91ed-a03c0e9833d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e78fcc-09e9-4dc5-9d20-90b15751336d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b08d081e-e2e7-49c3-89c3-01555264c383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2535b66-ebea-470c-a8a1-453b85103740",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ac32e8-bd3d-4f36-9119-1d9dab44877d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5985144a-d176-4555-8412-4ba0308aeabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ee68b1-ff27-415c-bad1-a96adb733ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe28268-61df-4e54-98e3-047052a858a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f314bc0-7c6d-4d89-b297-43a2ad5560c5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f2751d-22bf-4277-b258-921d3e0deaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b2eb48-36b2-4899-b3d6-e6cb7e027fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d3f787-bfca-4417-a555-cc5ee937c832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17b0ece8-047c-4d40-a20a-4302c325441d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb40fd6-f6e0-4952-99ea-5da06f65a0ef",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c919d47-87a6-4fb9-bf05-9370dafeb966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62557de5-3c89-439a-b908-d03fe67c828a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d918b9e0-7c10-4752-881c-6681e769d7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4566e4-7f03-49ff-b256-a858d86c0555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffae92fd-e759-4981-9485-85ea68a5ceca",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc80efd-517b-4e4d-9047-dfcf1d8b2969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac0e0d7-c3af-4e81-9553-1e1f94f1388b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1735456a-7080-459d-ba7f-212129487ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e30733d2-49cb-4b0b-bcfc-b2445b7a37e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13b50b5-059f-4731-8abd-70d7ace8bb5c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4019ba53-995a-4105-b2e9-7156b329a0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebea9461-4f14-49ac-aada-fb8884946766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3eb547e-eb94-4359-b6b1-701e84d3265d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d72c7a59-b7c0-431b-9fb7-e0d09b5dae6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14f473e-793b-462f-94b7-dc875bd96570",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff82ddfc-75d1-478e-afd1-09e113596c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf6f180-3a4e-4bd4-b7dc-5086aa0310fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e3a0ab-5cb0-48d1-87ca-869095b954f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79928f0d-07b3-40b0-8c39-c68fd65f7ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcd2d40-aeb8-49cd-99ad-6a2c43f5d221",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1a72d6-bb73-4f10-9e95-70e955065906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbf2ad9-2b05-4de6-924c-b7969233420d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d3fc1f-4b59-4a86-a9f5-7fe1a44f81ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6530f8e-9aa9-45a0-82c7-ff89e60eab3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189cf403-0d1c-4f3c-b9ef-c5fd89f59bf5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38c4b1f-6156-49da-99a3-6270fc76abf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30aaabc-30ac-4e24-9868-b75600b7880c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1010cb-c375-422c-95b0-794a70a04ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c2c653-8e14-473f-80d3-843bc746a8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677f19a0-ac48-4b68-b782-906d7a5038cf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b680ed3-75db-4f6c-afe8-a621e41ece84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6828d0cc-2649-41e1-bc94-a299bc580009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6845eb70-9ede-486e-acd0-a665719034a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d396d5a2-d0a7-4aee-bee6-ace3ef01b9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee09e053-b5aa-4bcd-bcf1-e5c84f9f2aab",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326831dc-f332-4703-a382-1122ace47a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82b771d-ff03-41e6-8c61-252d5a578024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda3f2b3-7fa7-4dc8-a20c-9e05021ae776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "199d8a39-da32-457e-aabf-a8496a02b09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbd2777-e203-4b44-9bb1-ef8b284f0a85",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6684fa7-3596-4b90-ba87-774ae03bf5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6d617b-5faf-4bfa-bc24-ac60a59098bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d935ef69-31c9-4ee6-b851-9c4cdd136668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9399d0d-472d-450a-8548-3364963ee00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d615414-ceed-491e-9980-26e9f936b2c1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08e83a9-02af-4ebf-82db-d61d7b1f19ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de0e16b-1671-44b1-87bf-487d57ac380a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb795f19-76a2-4979-87a7-b3d453c536c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1ee1f5-4352-4b05-b5c4-240463d4fcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398469a1-8edb-4cf2-ae81-a2c2fbd38144",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4226f655-b529-4977-8dc9-fa89eb5d5e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3170a89-563e-4873-a6c8-6ef44e3f93d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf324d2-b70c-426d-a1d6-7bf9da9f2ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35837297-4343-43b8-84a6-ed4ef328e95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b88f8a-ef40-4b12-94c8-89bfecfa1053",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0477d18f-9b65-48b4-a648-6341c2a26392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea0c372-6c61-4109-ab98-646c12034c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe63e9c-ff72-4d16-a79e-043b5a48d1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e12431-4341-4c7e-8eb0-01bf884fbe4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92877ea-379b-4a9b-b924-9cae05d44b19",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de58f9cb-51c1-4cd9-9fa1-c5722369dcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5fa5cb-5f12-4d50-bcb4-db2d39f6007f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da56aa9-553e-4cac-a569-7b7ffe47b23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "678b7f9a-9e25-48f0-ac7f-3b75e6a5cef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa05d54a-5370-422b-ad64-ceedbae09aca",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ca04a4-ed25-4be3-b069-a3ff8af1c433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ebde67-1fd2-4169-bc80-260338a920d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53599b86-b920-49f9-a504-46279e1cbf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb91b0a-f8af-4797-82e7-d2be4dcc0b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f34718b-2ad5-4a23-92e5-10b70d7f6972",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadb6cb6-445f-48b0-b566-1f1fefd6d272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3870ae-5cce-43ff-9458-2a44748bd0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a42492-5dac-4c51-a25b-a6728ca8e68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f03f5e0-50f9-4d18-9879-f04478c8f4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6a5352-a46c-4a71-a2f9-1d6ea244c00e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a79294-8464-4c76-9545-1b6f2cc4eb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db96153f-553a-454c-bcdd-24d06fbcd236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af15aa27-9e01-4023-abc1-f71a40fa331b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "480640a3-d21b-4627-bb9b-ff6c350f32ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be4138b-e832-4b3d-9507-b595687b6978",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9341f5-2ae8-4dd6-9f71-c55546358b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1180f97e-0ba2-45cd-a6fc-3dcb9a33e433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239cd769-cda3-40b5-b861-c985db56ec70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "821f2095-9266-4034-94d7-78746270a5bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd08b1b9-e8c8-489e-ba3d-965c2afc9c7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0f8502c-3eb0-47b0-aaea-a9ac5469c9d5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2961c05-0a09-48f2-9bfa-b4647c948e9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0ff499-7362-4188-8743-8ecf25145514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be706ed7-d86a-4a62-bfe3-74e968fd3fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4161b0e6-761c-42ca-8046-41642c0ab320"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adab65c4-0a14-42f5-acec-449e88950ee2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d35dfd91-d032-42ea-b09b-b774db386cc5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2aa8ab8-366e-47e4-aeee-0c476e07ba3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83585ee0-0f20-4373-87f8-168e7931c348"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0af61990-0680-492e-95e6-f7e33886b23a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "583e7139-cf79-4c93-bf5f-ed3e19abd0b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2024034c-a3bb-4ecf-881e-8a1446c727e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6fde626-6f78-470f-8a4e-d2f06efac541"
            }
          }
        ]
      },
      {
        "id": "3e7b5f0d-50b8-4c1f-bba3-fedb87750867",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9e2ff110-14b2-4a46-ad2f-f7df5f252aa7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "273f5eeb-b818-4d19-a420-8f20b48bfd62",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "012b4e14-bd13-4f59-953d-c68543ba57ae",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfca1b03-b8c8-4344-8653-04c63e081c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa887b2-2db0-4c2c-9678-cc22f280c9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7101886c-a8ca-4f11-8269-d2df7c6d0923",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a525ed3-5aa3-4075-b0bc-8452726e30ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78c8c02-50c3-468f-9416-88763264ccc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f7fd38-31b4-462b-bc0e-25a7e2661fc4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798de980-c0d1-4b4e-aeeb-cb9ca17b5373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfa2d1c-a2aa-4276-9ec4-2c00d40d6852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f5e512-ce25-483a-8614-23615e4da01d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019c7861-fff7-431b-a238-e6e6b77958f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebf4c9c-afdf-4600-aff2-b267944c1253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb1a689-6f6a-4146-a00c-b231dc762590",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f41d7aa-afdd-4f09-8d8c-69b9d16a10cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4413d96-faba-4bc2-a2a7-a74775a5be3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85739664-623d-45a7-840b-6e473cd8a90f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed2eac4-3fac-44d8-a085-2ccc04f8640e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53394c43-2678-4784-afa8-e6ff10b36749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61db91a-87e8-4589-a6cc-db9ba5692a5a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f186588e-d685-4601-b33d-17d1a7d768c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756ddf88-f8a2-4d1f-bb27-dfed846b40f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4b8a38-e21d-414d-9539-a3f91a5fc7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd0e951-970b-4f5c-a24c-98594484b4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a99863d-6fd6-4a45-8e38-2533f38679c3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ad6d14-3d80-412e-9ac5-93cad7ba6572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f2e24be-4ae5-4183-b058-ee688b2d0e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d739bbf2-3f36-47b8-b57a-be79d9b35f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98f5f18-2db9-4ced-963d-dd01d5336107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca57fc06-a526-4aa6-871c-64bb41c58873",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ed3af5-333a-4e8a-a070-c9de7400d130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2b0acd4-29ad-4769-9954-0af64c194537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a0456b-4090-44e6-aaa2-d61a824ee797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f584f72c-7138-43a5-91b8-70005bbd5b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bccb4a-c995-463f-afff-38f41102df09",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae13e13-a7e9-4192-abbc-a9de4689f205",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d059a17-3cf0-4524-bd08-1249f29adfed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136ad81e-0d03-4c68-9527-a8e8e0d87d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d7486b-5f98-4bff-bedc-0ecfd48101a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a234db48-36a0-4602-a5dc-2b243de26a74",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ce6f2e-d715-4566-9410-26e12b305843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2a1f0d-d1ac-4128-b66f-d18932406672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f6c9d4-df7b-4443-80d0-6497db1f71c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8a3ae1-b2af-41a0-9d16-8f39ed4ae47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcdbfb0-4adf-4437-895a-ae55a6813dce",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d482cdf-d76c-4cb6-bab0-8918301a0f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c5e00b-61a3-412a-a2d0-4c25a8897373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "346df576-8bce-41b9-93b8-7b81e5ba8ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7586adf-f781-47d4-b46c-f79ea4ca1948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96da5173-3f32-4a1b-a12d-77778de0eeb1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336f8523-64dc-443a-a0a6-ff5b4e750813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88ccfda0-fd64-4d39-b956-45663011ee79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0e6e33-690f-41a3-8943-f4699dae369d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe03dd7-c0c2-4a35-a69b-7431012fbfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572095d3-93f0-4022-9615-94f2a7be9a0c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8f2b59-7ec8-4cff-9aba-61065dc335a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8fd0794-63cb-4491-99df-9499d6334966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9547082-173b-4e1f-b11a-5dcca4d84b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cceac7b5-0a87-422e-8247-25d03a9063d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef378d0-8568-4da8-b455-5dc95c1ceffb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071285b2-750d-49e8-bf6d-a0ac663ac9f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab661df4-b79e-4013-b15c-dcfdb02ac846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12913bbc-e33e-459d-9332-b48af2c2f987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf6f068-7ef5-4982-bf40-7c43ba6973dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e57e867-d154-47ce-8b35-2f85707fb11a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3d1124-6771-4a9e-9665-3b528cc43033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76da8995-38cf-4eec-88c0-57cf8c457636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bc7cc4-ba41-47d4-8347-e8a0811e5f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915737f3-cf27-4755-9693-031235a5c735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59b56ee-e41d-47ed-8a14-fbe9e562c0b4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa0a470-4f8a-4f2f-995f-8143b07a9069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9cbead-3946-418f-9bfd-506de2f24b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbd8e5c-5168-44f7-bcd0-0ea48124d1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1f8d12-a66b-4151-a7ed-020641620ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af4614d-3a07-4de9-a304-5a6ccac80e11",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e107fee-9da4-497a-bb3b-6d4b3ca84c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04879a96-87bd-407d-a2a4-04d1f7a49423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8639b7c4-db39-4a43-9e67-06f952ee28cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d7e7b9-da2f-487f-99c7-e90a26a1a8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae407f36-a8fb-40c1-85f5-70bdbea6b145",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc3bfc4-1e7f-4605-a2de-9fc782c086c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12f3e98-6a0c-47ac-8bbc-aa32ca079278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7324823-c7e5-45a7-9a20-1149232122ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847b9391-374b-4d1b-a0e6-038adb4a7593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a65af28-205b-4db4-824e-f7b0a26f4ff4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbee092-8ef1-49d0-a3fa-57fe62553de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe77d90-7668-4216-a7cb-557fe949c749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc3b687-4d8e-433c-b50b-43577a22a2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94104db2-e2c7-4c21-9168-6386e629888a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6735d51d-7886-4823-9326-301a17ba47ba",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e1ad94-6870-452b-a2e6-c9a32cbad31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2856a93e-5bfb-40f9-bd1b-7e3b674636af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9897cf-c5b1-4d19-9fad-1532facf18fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0003b305-e14b-408a-bbb8-46a4ca330dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a765cf-f23f-4b43-9a69-f244807de0da",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3f6cf8-511a-4b50-ac71-4102456f52c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6546416f-b1bc-4628-9803-9833d5fb0185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c63c3d-d8b9-4ea8-9d04-27051ef985ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1c68f3-44c9-4906-a3bf-f92b4ce67e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764bb0e6-3637-406a-b8b2-8615e5354817",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52992ea5-0c25-4436-a400-db348e17e852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1988872-ddbb-4e0b-91ff-37d57070caa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0b2c7e-e728-42b4-af81-f55caf541131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c701ce37-9314-4692-8bd7-e20349faa2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab322fc2-0e9d-470f-a80c-58977e157e6e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ec1299-c05b-4957-b902-015894c659e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e91f401-5a3d-4de7-bfd2-a04ffc8404d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84030e37-d773-4c34-b53d-453ec81d795c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f30bfef-6b7a-4345-83f8-7366e8875547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469e2f5c-4de4-41fa-8315-60dbed565533",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48be872b-7902-4bc9-97b1-d76cbdb47e75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffa2f3e7-81cb-4be5-88e2-9f259a97af83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cf20f8-18fe-45b8-930e-75485d903577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d749d441-1afd-4505-852f-76636cf84cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2dfd79-4082-4e46-8e70-92000f790c36",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b6b9ff-5a89-45b0-b2c0-78bfe9c6b95a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cd946a5-14cb-4ad5-b0ab-049a40d95607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6aee05d-da74-499b-890f-04ef56f0302f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a247c82-683e-4109-a004-e1cc0ecac2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f14083c-1518-4b95-a005-ef96fbdd8d23",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42812c3-979a-4d86-a058-cdda67696394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "489eafe7-5db6-45d6-9738-85e3bdd1c3e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db9b02f-f022-4f6c-bf61-dcdbf683366c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66a6b77-9eec-460f-a3bc-37890555cc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bdeb93-36e3-44f4-ba69-c6bb2b852d85",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afdfb40-6b45-47a4-a95c-8062f3157c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab8c35f-d1c1-470c-a8de-3e3ae876729b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754ec58b-495c-4f85-8d1a-8e4bc7686469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae22ac2-718f-4fbe-b415-5e9f5b47c0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69660f59-c612-489f-aa1a-162a37b8b348",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4ea7ca-6957-4cd3-9236-9b877a11f053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "034e1efe-a0ed-4ee8-93e1-f9f2886fecb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093f5b9a-09f9-4141-9c9f-c9211888b882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2723b13b-e1d2-46ae-9ca2-ab857978c795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fda7e4-28f6-4df8-895e-74a7882985f9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af7a84a-9480-4613-9d40-7d873b20d51c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ecda49b-cb5a-49a2-8591-7e1839a42274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262285cf-2cde-4a21-a70a-49d7cfc1b726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2cce28d-fbb1-4b9c-ae01-b10dc1d6c5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7743a1b9-4d99-4ca8-80f2-107874236b42",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97c1cd2-285a-4738-bc20-7780ada752de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4fee27f-f30b-4d43-88d3-0e43e9e8d0d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb3f052-e07e-4dab-9568-d016733bf560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83b4718-a3af-437b-a998-79eabcb4965b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a632853-9413-4aeb-af2c-25b86ff7903f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2f0dbd-e9b4-4d70-a7df-70658188d897",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0acbea28-b9f2-4b6e-8bdf-84c489ce6792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d043763-8137-4b34-9922-46d3bda1a54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a99b2a2-9e9b-4475-870d-c1f791543e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04905ab2-3f2e-4240-8612-8d3c1259b468",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1226d56-1652-4aaa-979e-9c78c59237c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1027f5c-1c9b-40ba-88ac-06d5ec30fb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aeb9d87-789d-43e9-b2df-c18934bd7607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab07e24-f94a-424f-a0bb-6afed3339046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59ea05c-9854-4ba2-af37-b68fe485728d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2deb265-fb74-4780-beaa-82aa516cecdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd2ee553-3a6f-4f91-bb6f-f93ef253b43f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0ce7e5-e063-4d0d-879c-2ed5d0691a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f812c455-888e-4093-862a-7960a4bc5b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdfe82c-5df5-48f4-9f8c-d601f11e4d85",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bdf30f-6416-4bbb-9782-f1e6c941130b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc97ce59-3a04-470b-a05e-6bda1c5602fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7d87da-1027-454c-9e94-f1a3c7e66186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd32c75-30a2-41ac-82cb-bda1dbf48689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac504668-12f7-4c51-a029-ddc322302177",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c98f77-8457-478b-badd-125039258171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5624b69-7f59-438f-9337-f4376d6a7ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf96e5b-006c-434c-8f29-765fd910a8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18261de7-3934-4ad2-8f16-9fc78e2203b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e25e5d-ba97-459b-92d7-54454b3e276a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd08217b-525f-4625-be27-feeddbf87aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f5ea9b-1538-4d08-a7b4-18c846a9d6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84874e77-3fd7-44a6-9fa0-cd7215dfb3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639c7f4b-aecb-44ec-8286-7dd355acabe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af26cd2-7dd9-488f-972a-0837af821cc1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3972c7a7-ad9f-40a5-a3fa-b033fadf08b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557f423d-7264-45e5-a345-1e9c4320395c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337dda4a-ec3a-4ac0-877b-4fd5e06afb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c64d9fb-6ec1-4b04-b0f5-dec7a9bb1bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a727d0-13c9-4d3b-97c0-744e980ba2fa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91b2c4e-8686-49e4-9b3c-9eb4a607d8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831f3f27-da03-4a4e-bf0a-d724dafacb29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7742d528-5f85-45ba-9e76-66eab72cd1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300e846b-6441-4749-bea7-891a902afe6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e5c396-3906-440d-b55d-a5a46f1e7fba",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389b0082-dac0-4ca3-a2e5-df461e012fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68985e59-b857-47b4-910a-ed6d3c33e9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5178faf4-c1e3-4386-93da-97572854320d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c23db85-9e69-41f2-a3ca-a18d3b70a776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3cdefe-d73b-4ea9-ae64-0e60ba0280fa",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35da6d3-6397-49ba-9a3a-3290e27cccf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e53144-5cc3-416e-a94b-3be20c9a1838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4248149d-ceeb-41dd-9ad7-b250432f25bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c624b5-1dc7-4a15-81c6-0f42c667a0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7255ef19-2ca4-4ffb-b938-dd50bc9e09fc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6690e7f7-ba1a-4c02-a8f2-fdc3e73a1434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec92eec7-da74-4ddf-b8b3-6a777b79132a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16b676d-f07e-4c9c-9624-ffedd891efa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b802fdd-acfb-43c1-8c9c-5d8ae0d33f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003d191c-9813-47dd-80f4-674951663233",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a1767c-656d-4ab4-acd5-eded0a322e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2fbdca3-0eb9-4114-b890-7b128a2ff055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6575bd-72c5-4354-a87e-a890d8d32ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f70c893-2fef-4601-b079-d31e94f3b3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8070e93-485b-41e3-9b93-fa95905b9102",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba6dae6-4916-4e00-ae44-c8e271d9bd2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00066793-706f-4dc4-beb3-bd881e3537e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48196b68-06cc-435b-a23a-4546a2bcadf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98585b8a-3d6b-4e37-bcbf-4ce3629b8e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5730de5f-78d6-4954-837b-7126fd346aa9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089059d2-2654-420e-9fbe-1a33d33b1b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64da4278-b93d-4996-8bcf-4f5fd9ed664d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544f1036-68f2-4d81-809b-f8a4712f6b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f216d842-7d5e-4392-81c8-af7eb52cf08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d78bd3-abce-44ff-889d-499f68009712",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48998957-7661-4dcc-91c8-e7e0935b2a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e216c4b-1420-475b-9ec2-1d89eab476aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef209881-3ac4-4b17-97a6-83be29ea64cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3511a6d-9c4e-44b7-9e05-4e8e37e6db42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088fc2cf-b7de-4b0b-9902-4d087e958a8a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516d66ef-7974-429c-89e4-bf3fccddfc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95088d62-862b-4685-8634-fb20dc1f5078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba7894d-795e-4363-8840-9a5940e11743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbf8712-cd8d-4aa1-9c70-36c7e8c0715b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b779ce-ba65-4fdb-b686-ee58f7fb0aba",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f797e27d-47c6-4471-8f10-90802d83f003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7e1207-d286-4184-b9e8-9961526ffdd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f2cf63-f9ce-4c73-938f-a19643611cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cfe646-e464-403c-9278-a105d8aa1228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126eae39-0246-4c9e-9d43-1d88a993a873",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986c6fba-fd6d-432b-beab-51394ce9ee94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91cd5d67-19e7-4610-9fba-3a3b52006e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58aae4f-9346-4bd5-b52e-ff3ca1ee5789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dce30e3-4fda-4ccf-825a-48cfce4b9c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2e2df5-7a48-45b9-938a-63ca3651330e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a19b03-356d-495e-bbae-636737a1fff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5964bb-4508-43fa-9482-f6c192aab332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e2ce5f-0318-4661-8a0d-d123b890fa31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a185cd0-d6e7-45a6-a78d-c9299ba79a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590ab072-5dff-4a01-875e-ebd73c1b1895",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b8f407-fe13-41ae-aefa-7924f375306a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356a833b-e3d8-4c58-8aa8-d808e03b16f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3744d07-c874-4cc2-969a-796f357a4041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b424c2-d52f-46ae-acab-6233d1211d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5949cf0d-37a3-495e-8887-850fd48e4a49",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8cfd7a-3c02-4b71-9d4b-6be7998004eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76614df9-670a-4ea2-ac8d-47e6fc544ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475e66a4-734e-4a3e-a355-25a757f78fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdbb391-e95d-4a8b-8ee4-b96159be1766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef033a7-d2c5-44e0-9fec-e5380a233bdf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648cef23-6971-406f-aa79-c78fe01bab34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97e3d0a-3a6f-49dd-b514-93089be29ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2c5281-bdfd-49c1-8b3c-632a097de960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcea42a8-642a-4fe3-9809-4f3dbe38053b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5c91b9-5636-4ccf-9fb1-3c721b66f1ff",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42338a1-1ad4-4de1-ab52-eb4b1aacf602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19659ae-643b-4051-af04-9043b2463566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aae2cfb-8f45-4f93-9a15-7fec80d577a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b264895c-8119-4a4a-bb2f-0f1c260479e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ad4a50-3937-498e-b4e0-ced7ecc7aca8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca700e7-dca7-4532-a54e-caebdaaf95d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fddbfd8-dba8-4cef-ac7a-03f6738b012d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e38d2ee-a558-414c-9ece-989e98985aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba769af6-63bc-4bcc-b61e-79b6bbfcb2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56e6334-5096-469c-adc5-966c01af0e50",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e622e6-a930-469e-ba98-2e43bc8b6c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44754ae7-c3cb-41ae-8c86-4eeba0931367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2361a519-352e-4518-ac17-45bc34b90188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41767e87-80d6-4ed1-8b9b-589fabd97985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f075342c-dd63-4449-a7b7-512c56108be5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fc6f91-b7d2-487f-9dd1-15dade203143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2782d563-6b40-4e2b-bda6-f0641270438c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c33b00-e04b-4605-b9c7-f1c878494e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03ef347-77d0-44d6-adb8-2b6e3c3b231d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd217747-63b2-4e78-93dd-49b986161f1d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8839ef-9a22-4e9a-8646-667e34a70aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb91388-8b1c-4316-89a1-270c660b3771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a5cfaa-365d-4eb2-a16b-2f76ebff045a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578e9053-2e28-47c0-8d87-6643e34ad976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e681e8e-dab6-488f-8472-7907f0a92a29",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b522f6-cea1-4a8d-9368-8e091df893f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15007c5b-1f81-475c-8c38-804dd55872c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b19272-23d8-49aa-bcc8-51ff2339b820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29445e8b-7690-426f-8fd2-77dd84f6f75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bde872e-6a87-45fe-8bb0-500c0ae02c4b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fe6fa4-461c-47ef-bb9c-b630bf6b594b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13765f95-f0c8-434e-95b1-b4489433b778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e937cb8d-c04a-439b-8f4e-a44f5a517744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50dff43a-4ec0-455c-aa4c-def14a60ef72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43926fd-f37f-45e6-ba64-a3d0772a5807",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5cc9b4-d3a7-4a0d-9a4a-067d8f59ea36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7944da6-0c5e-4456-8da8-535c9adb9c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1ed481-7460-439a-9473-c1af47506fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b44114f-78cb-423c-bdac-f35766760f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664d0299-0304-443f-ad3a-56378b27783d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcddb678-9057-4b0e-945b-f5aa219d5336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b684140-2f7e-4cb1-87e5-a0d3e8ccc947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c281c1-3298-4407-a82a-aa37e13bd4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710bcc9c-672f-4168-bacb-8351d8ac5adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3558ae-e50a-422f-9b87-15e7d58a9ea1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef939e62-9abf-4120-9ff1-154a9ada2b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce39ee3c-3c15-4f03-b1b2-6ea90c2074f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3759403-ae92-4b64-964d-5f91e9e81975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac7ac3e-57f1-4185-ae45-cdfa892b6bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9c855c-f3d4-4ba9-bcd5-c82a427dac75",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a1f439-e8f3-46f3-9761-ac2a2f83c764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed74064c-8345-47f4-9889-3b040f6f845f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd36e8eb-3504-43b2-915f-474e50277156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5101133-77dd-47d9-b45b-1cd916e3ea56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2d4eb7-9421-4fa2-8a47-374f9a7fd8c3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45105a46-7b61-4764-acb8-efdb50d66328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e5b601-2573-415d-b06c-4c620603d683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "069e5d4d-2fc9-4abe-b285-8401bbaddb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9498dcf-6ffd-4f0a-8ef5-bb0ed2cb324d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa0ef66-9f13-419e-b1b5-d685f0f3c80e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929f3cbd-74a3-43ee-beb6-fe8d3963ebcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56aca562-e8ce-4f79-b35b-633583d87a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5597006f-6f68-4ebd-9663-f27634df24bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45c9ba3-b0dc-4050-b9be-cb7000708ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90871f7-2f87-467e-8557-58855f5ec8b3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9af034-7852-4d84-8f22-b4f654017187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c930f633-1afd-4908-96f7-19d6477334ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b9abaf-d2be-4323-826d-b1d7c7a2cf79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad8a83f-3010-43be-a5f9-709ce0a696a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c061a7f6-5a58-403b-8373-62cdc299d6dd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2023a0-ef03-4e14-9768-2a7785f9eb05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40257c6a-5625-4239-802e-695caa142247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e6f6b3-57e9-457b-9b99-386fe70f5040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ae66f5-3e67-4798-b1e0-97a63e0cc524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed44078-091e-47f4-abe5-12c40fae9a10",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d11b4cd-40ec-414d-8757-bba765cf223b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fd39d92-d0c4-44c3-afab-c1c70c9e2935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cac7e8-137c-41c5-a805-26736f35c3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df32b63-4129-428c-b0b4-c90a55f0bc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaac9199-7a99-44b0-b9f5-171c0c25f4f5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0487d4-43c1-436e-bc81-39853b06adf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b744f207-4bdd-4581-abc9-812d97f0f310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ef2935-079b-48e6-8b55-db9ea6eb8843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d796c57-270e-4285-b06d-438f80c0cde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5976215f-81e5-4bba-8c29-e06733e003fe",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d85b11-dd1b-4441-803a-ccdb6b76d16e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee8e4bac-5787-4074-ad9c-ace5b1f97da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c844626e-3108-4b20-b393-637f88925027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384ae957-0aa7-417c-bc8d-29b33bdabe26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6925e02-c2df-472b-ae78-3998a37cfccc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bf5ab2-5370-43ae-b184-a8ed2e5b4731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b3a6613-e9c9-48a0-b909-80c664cea8ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f49d6a9-b058-4500-ad02-d291897c72a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b68ba19-9301-40a5-8048-21dfb96fde6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68254d3-a7ee-422e-83b0-09019add0873",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67c92a3-afab-4383-b73a-421e6f3ca93e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6c6b26-00f9-4aba-b41f-3e3cc6e1450c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0f465b-c85d-407a-a76d-d86cc5247d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d28d32-2661-4da3-904f-a36022c8ca77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2d065a-fe01-4d4f-b859-ba037a22de79",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cda836c-b006-4df7-9d80-34e52a13efa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9faa2b17-f58c-47a1-bc48-8aef270a7bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d13257-ae85-496a-b37b-3b1bccf8e564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24034753-61f1-48cf-8d72-8fb5bc6d67ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486045f8-72a1-43b2-9fc0-b31ef7169ac2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a328e92-e163-41cb-8dbf-e6b2e1003eb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7124766a-4680-40df-a61d-a07e0f4b294a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4370182c-7cd9-4f11-b4a0-bc4ab6145204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a80f7e-f45f-40d7-a439-c555cf5b591b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854c3ff6-b644-408f-8c2e-9fb1456bd8e9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302f8f31-f300-4670-98a9-d46ebf4d4571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39c8e203-0f4a-4850-bafa-3562c54c51c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21077487-c683-4e4c-9cda-51f9476e2157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cabe64-6c49-45c8-9397-26be1be82937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbf65a3-d9df-4abb-a524-990f8bc1a396",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21750e0-8a90-47e5-864f-e8a54106039f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9beeb3a3-8847-47d0-a44d-eca3ea292128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2630bdc8-b9a7-49d5-bab6-3ca785ed8897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e301b81f-36fe-44c3-8b1d-37638aa1476a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965d882d-c325-4b44-8ae7-561650cd8b11",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f6c957-9b95-410b-ad9b-6f49452a85c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43d3e043-fba6-4d78-bb2d-d9567acb5da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f57361-acf0-45f3-aa91-a3c5885cb1a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d323b7-121e-4a37-82e3-63322fb2ee58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5163f63-e57c-4103-93ff-8fc3bd1ac296",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f057ec24-d61d-4b72-b560-968a8f9dfd5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab51cea6-15b0-47f7-9861-4f97e19381ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4129d2-841a-45c9-a086-8174ee3762c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68375b16-6d64-4f20-8386-5de8175ce0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff00fd3-e91a-4557-a9f4-5d219a88deeb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7def4095-be3a-4d80-8dd1-d59f5bdcd7be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c43f7d9-f61f-48fc-894c-a89bd355681e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f291c2-b30c-48cf-b775-b001cfa4ea39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ac77f1-e8d0-4faf-bd19-6ee2497b6be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6997d9a-c6ac-49d0-8b9e-8034ae9ef4b6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5823bdec-d9b6-4277-bd44-47a48b30c4d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "087abb2c-f7e0-480a-9888-4aad1df5322b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111eee5d-a164-45e2-8dc3-d9bd5db6ddfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39a3890-5796-457f-8c72-3b9a63b7631b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d3f8b5-b1f6-47c9-ac01-9407edc89484",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea51fd17-3dc6-44b4-988b-877c39d62308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04557fd2-a798-4e89-bda9-2fdcf26b06c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cde1bf-fccf-4a19-b919-bb02b0c0322b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177fa3e2-cb06-4d85-843a-08d163b5898d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6f739f-bf1f-4889-a171-c714699f120f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c63ec7-3c44-4f44-9ae3-6c80a3e31af4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53fa9d1e-3b4f-45cb-9aef-f9173da9c803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decee188-bdce-4591-9eff-9061a982cea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec27c123-b5f6-47b7-90c5-2cff6a088131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec5fe7c-9fdd-4529-9269-77aa2b774d3b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b95253-2f6c-49e3-9c4f-c88370bba327",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dcbfcdd-095c-4bfb-a5bf-3c483f2fc85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffc6b76-5327-4d35-b955-df3da5fc599d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8695dfd8-caa3-4ad4-a566-a968fbb9fc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280caa44-2c4b-4697-b97e-d14ccc4a1521",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79730911-2ee7-4060-b5d9-a6ebe4a87274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3465215c-1e8d-49ee-81e5-e2bc7e64a434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3addbd5c-08f8-4fcd-8077-d114c65c12f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf21369-ef49-4bcc-862c-9a439784bab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f471edb-31f5-4282-8852-66e7103d5bec",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c972d00-dacc-416f-8243-eef5e27e641b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd64183e-cbc8-49bd-b3b1-270a5b897d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc26c00-5158-4240-9dad-53b24d046028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf23f48-abb1-430e-8e94-fdfd12ac0ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015e3c9a-254e-4b9a-a9b6-e9e881075e72",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb037b2-89d0-48bd-8f42-663b86babf78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8efa0a-c5b3-450a-a7ea-98b21c5022e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8d1553-b9ad-40a0-861b-89156010db9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97daa4a-9a38-449b-90a2-ac9dc770a207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82765318-4dfc-46de-af72-d8d3ba70f903",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3c28d2-6ddd-40d5-9b4d-ce57041f26bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "526be784-9644-4b7b-bb0c-e6b820b6f69e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af87554d-208e-4075-a82d-b39a4cde41cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55948b4-8449-4023-a644-4f21685f05cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79851c6-2d56-4fcb-99e5-e828a353861b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde001ed-afa9-44b1-a30a-0663b34f755c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "999f6397-7c71-40d3-8ac4-bcbb39e2f30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52d9eda-3116-47ab-9e2c-f339a1a371c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ec3fb8-b7db-4ce3-bf41-a70ac53cb703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a7bc5c-0e32-4a96-993d-ca1084fee050",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3074dfdf-fb72-46f1-82aa-81231dd4b863",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a1becbb-a667-4065-ae2d-2dd4fabf8e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acc0882-2ebe-4534-8562-18c2d5ae23c8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5400489-8f12-4e61-8d1a-3f93e822bd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aca747a-8792-4bb4-b36c-1caec42cf0ae",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea486a8d-db96-4803-8b10-fba58f8a62e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8271eed4-5c17-41ad-b349-e82d8f92d6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5fb425-544f-434d-aa0c-847285fe255d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e85419c-811b-4681-9ac4-0f305a4f976f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63a50b0-b377-4762-8574-a881d5b9bb33",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318c92e4-58b2-4340-b96b-258fc28d8cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "583d89a7-6a36-4759-90ae-404b048ede1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0f085c-05b3-44a1-afea-a89055d09117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c17615-e2b0-4157-b55f-9fab5bf9f9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e1e412-f011-4aca-9f3e-dcb930bbc325",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18c166f-998d-4eb9-94dd-8cec66cd45d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e2a1985-14cb-49b9-86a9-3a6cba254d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1437c597-f962-4667-99c6-7be9e104f67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b278bd4c-8180-4776-9966-9fad2d7c3833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830df580-a75a-4a26-9e5a-967b0386bd03",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81782956-3d6c-4f48-ab8b-0a56d10d64b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d73fdac0-4a08-4108-9835-32e06f6da006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "becefca5-9cb1-49aa-b3e0-991c70e75a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca44bc5-46dc-4d7e-ae33-6a89578d2872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4b791e-d135-4e79-b901-3d9927fe3b92",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5d13d9-dad1-4806-bbdb-228011d7a28d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c6f8da4-5ff6-47f2-8231-fbe392a5e4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2091ef-5e95-4e28-8c1e-91f265087d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b95a11-bf88-4168-ad29-bc75fb1bbe5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd68bb02-d97b-42e6-837a-6652ff546c08",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55d8945-0134-4683-be1b-5f811b227c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c69f8a20-5019-497a-9688-964ed3e1d392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc8029b-f88b-48e4-83cc-22be2269580d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5edaae78-8277-4b7f-926a-618825d50a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62d4d46-2cfa-435e-9b99-b58aeaee3c1c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1f45ce-88aa-4fdb-85ed-e58226ec5bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aba1deae-0f2f-4514-bd7a-4a2e883a87da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5741f8-e4f3-4b3c-80bc-b5af7dcaa7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5855b3d-7602-43db-85bc-8d2707985ffe"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11b0a530-b3e5-4e5a-8987-670ed07c0ea1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d74c042-a439-49b0-adcd-c90f3579e4ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01d8dfc4-a735-4222-be30-e7937ff9b659",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3bb03840-6e47-41f5-9f4d-0c04012e723c"
                    }
                  }
                ]
              },
              {
                "id": "42325347-cf34-41a8-bce9-4df6839b5dbb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34815312-689e-4462-ac60-3129fbce4381",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed713aa-65dc-4aa1-b071-949107113ecb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c652c681-e76c-43b5-81ab-9174470fb204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c005271b-7b41-473a-98a3-c3a328a006b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a54fb74-990d-4338-8224-11ea47f19537"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13307f1e-ddbe-4ab4-a70e-4caf6355f06f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "def95e7f-ace3-4fb6-b1e4-b1618eb6a4fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50395fea-53b1-41a2-87ea-bb7c5f0107aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aabf528e-e70a-4b76-8133-5f09464fb3c0"
                    }
                  }
                ]
              },
              {
                "id": "63667f4a-c1cf-4ef2-bee5-830182af081b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cef7e757-800a-4b25-a9ef-ab6e59f2783d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bcd8b7-1d79-4034-8867-8798eb7af3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "36104241-85ff-465c-b5a0-4d3704e4096b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d6e8aa-6338-43a4-82a8-22bbebecb73e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39687c0-50b0-40a5-9f7a-2a4b09b3f6f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7a615531-232e-48b0-b1cf-b666b3fd5160",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4f285718-54e3-44b9-aa55-f905f10fa2bd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8065be8f-7624-4642-8f1b-d95d958f95c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4d108e8d-cd1e-4d8f-8c66-4f479f54d441"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e41287ab-4d57-4e07-bde8-0a9b2046c255",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5e6b8a9-7702-417f-b203-8ac02f715e4e"
                    }
                  }
                ]
              },
              {
                "id": "bf8b6356-72d6-43b0-82f5-1c5f35cb8e0d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cab3ebcc-4c29-428b-8c69-ad52b07fec5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d395546a-3bb1-42a2-875f-77a39ae11903"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c28ab51e-4ce7-4295-a67f-448d32ae44f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b7c9d06-6a68-41de-bd7b-35c9163582e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fae9b1cd-611b-4d3e-b5f6-de1269d7c0dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "abd3dd47-71f4-4f80-9e3e-3189f737723b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6757bf1-d1fb-4f82-9bb2-184afd10989c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2de04137-2380-4f4f-8462-7b662e76d2f5"
            }
          }
        ]
      },
      {
        "id": "db6dab72-4faa-4f89-905a-88b878d502c3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3ede3601-6011-44c9-9a20-7d5129905236",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb522bc9-ee70-4957-be55-7a880d72c693",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df2c0515-d22f-4ef4-9c7a-d4de6bc94e86",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7327a1-bed6-456c-b27c-44c49499421d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "03a3cd37-2f9b-49f3-b6eb-f3911462cc10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfc8d81-4315-4d58-b759-1fc5aed137ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f33af5c7-799f-483e-acd0-7b1d5f6d4e1f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8803f87f-a7b2-49ff-9d45-9bfae8c1c838",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec7467a6-6f2a-4baf-b9e2-4d39d8e5dc73"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a21bc7d-a37a-414f-ad10-6891be13a906",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df019733-dce2-4006-85f0-b30b5f60f2db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4418d1cb-1f94-4825-b479-1386e05f6494",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7772a328-23ea-4344-9187-5b51a8006bb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "373b04e0-77c9-4101-a26f-fbeeda42e8f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36e58842-fca7-48eb-aae4-f6a7ca21cbb8"
            }
          }
        ]
      },
      {
        "id": "45406f05-44e9-4015-a355-204321587f36",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d5af21a2-4a60-4523-90f2-b523ba5624c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86ea87b8-5954-4efa-a2f2-440a0984fb90",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eae4c742-b2c7-4075-91db-1f0f69556a48",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c822f2-f0a2-408f-b57f-2d35026c790c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34fc7bf1-a12a-47c7-8358-e5def5897193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521352ed-95a0-4a99-850c-3764e6e27d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c95a732f-ad0f-4586-8046-c383933e7690"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2b41d16-5a12-469b-b97f-57a7457306f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ef3edb1-10a4-446f-9178-be532ae92331"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b425c95-5d13-483b-b171-e5259436324f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "969779ed-021f-46a7-86c9-c44671033bb5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95a260e7-4fb7-4f1f-a6d4-83c02ade5512",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d8f5d50b-18e2-474f-a759-789f89494cfe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffdc57ef-b029-4f0b-8d07-99c66c69bf59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f86fd912-3609-400b-ba87-9e9e7dd6f965"
            }
          }
        ]
      },
      {
        "id": "dc6f33b5-3ffa-4fb0-8647-1a5c539b3bd2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "31463f51-2883-4c40-912c-d41fed6849e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5aa479a-1f81-41b2-8b06-5d69041d709d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6dfff5e8-2d90-437d-8c42-c664aae839bb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae36694-7087-40f1-8111-63ba9ce57459",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa4f017a-9784-4d19-af13-42c93dfdc16e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd294de-e4ab-49a2-86b2-2c4e7068d28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6cc99bb-6783-4676-9592-a8fdd412ab20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91038625-9377-4b00-990d-1d514cbf4a06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcad7a1a-1aaa-4d25-a243-3e671e75c5ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "537b4471-3060-4acd-8c57-868eb18a148d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfcd2702-4058-4e64-a845-c2ddcf79de63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99fbb013-9233-4695-8c93-f63b0421136e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "86f90f8e-17ab-4703-81da-76885dd90f48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd6457b8-c9f2-479f-8cb8-9635ca8f38a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddf121a0-6295-41df-aa52-f7fed238fd87"
            }
          }
        ]
      },
      {
        "id": "d96af2a7-9fcf-4832-9ef8-9b66bd3cde32",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b695a11c-c7ef-406c-9c94-2214acbe7c5c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e8d02e5-49b0-4837-9ecb-b151538dd7a0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "53fb000b-f578-488a-83df-b4e3ac691f7d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d44cfe9f-d9d4-45ce-8a37-5ddd5fa20291",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8802c999-0f24-4f2e-8a40-2e393cff99e5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 125.53968253968256,
      "responseMin": 16,
      "responseMax": 8049,
      "responseSd": 615.7683179907598,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727225165748,
      "completed": 1727225205861
    },
    "executions": [
      {
        "id": "2e8feffc-f6e8-4a8e-9883-7cd0e6e48c11",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e00ac514-1095-493a-8fc9-f3d3eade94db",
          "httpRequestId": "fee7c985-ca73-49ae-9e44-981086cfe785"
        },
        "item": {
          "id": "2e8feffc-f6e8-4a8e-9883-7cd0e6e48c11",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "77ef105b-cef2-4ff8-b5ee-80816c205a7c",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "e99b6ec2-222a-44f9-8575-6ece5889d82c",
        "cursor": {
          "ref": "38f7d18e-3401-4368-9b80-05ad3c83a95c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8cd734f7-878d-46a5-baf2-497edad960b5"
        },
        "item": {
          "id": "e99b6ec2-222a-44f9-8575-6ece5889d82c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0328c93c-fc98-4a42-a548-16ae46126e8d",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "2ffe7c6f-72ae-49da-a2d4-32699eff16e6",
        "cursor": {
          "ref": "5c4ebc37-3637-4b16-a765-2f7808a2bc92",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0ddfa8ba-f998-48cc-9f82-e8475e11396c"
        },
        "item": {
          "id": "2ffe7c6f-72ae-49da-a2d4-32699eff16e6",
          "name": "did_json"
        },
        "response": {
          "id": "faadaaa0-8bc5-4052-808a-2e1282c9558a",
          "status": "OK",
          "code": 200,
          "responseTime": 357,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3924d1-9bc9-4436-97a6-156d9f9b887a",
        "cursor": {
          "ref": "5a22d54e-22d4-4d1f-9cae-d0b48e7f758c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a7267918-bc92-49bc-86fd-38765c4f5716"
        },
        "item": {
          "id": "0f3924d1-9bc9-4436-97a6-156d9f9b887a",
          "name": "did:invalid"
        },
        "response": {
          "id": "2e3c2d95-3bdb-4814-a2d4-d435d43421d5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 357,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3924d1-9bc9-4436-97a6-156d9f9b887a",
        "cursor": {
          "ref": "5a22d54e-22d4-4d1f-9cae-d0b48e7f758c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a7267918-bc92-49bc-86fd-38765c4f5716"
        },
        "item": {
          "id": "0f3924d1-9bc9-4436-97a6-156d9f9b887a",
          "name": "did:invalid"
        },
        "response": {
          "id": "2e3c2d95-3bdb-4814-a2d4-d435d43421d5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 357,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc54c2b-2523-496a-b74e-c8236d9d5c4b",
        "cursor": {
          "ref": "dcdb066b-b352-4be7-8536-227b02724fe4",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f37d8922-9281-4bea-8c25-f66b7d260ec2"
        },
        "item": {
          "id": "4cc54c2b-2523-496a-b74e-c8236d9d5c4b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "853a780e-7dc2-4665-8818-c81f36df5618",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e199d1f-1652-4f43-9f25-c2328d24fa17",
        "cursor": {
          "ref": "63052b63-b7e1-4ddc-912a-79568638f210",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "47f5aad4-e689-4382-b990-22a3432eb9a5"
        },
        "item": {
          "id": "7e199d1f-1652-4f43-9f25-c2328d24fa17",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "06d85cfb-9ef4-48ab-bcd8-2e23f90b0ffd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 50,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde4034c-f790-48d6-9297-97a0904cb19c",
        "cursor": {
          "ref": "972ecbd7-d1f8-4e32-a6b4-558a64d10938",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e31bf6f3-4e2d-4445-ac61-4d0b0f136dc2"
        },
        "item": {
          "id": "fde4034c-f790-48d6-9297-97a0904cb19c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a6884138-8a64-4cd6-9c0f-13543e3d55ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c5ca69-dc10-4129-a300-cd4cebe93fba",
        "cursor": {
          "ref": "0e47bbe4-9397-4fb5-b09a-ce87de3dcf08",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d3115060-5eb3-4da7-b3d3-8006ced23fc5"
        },
        "item": {
          "id": "e0c5ca69-dc10-4129-a300-cd4cebe93fba",
          "name": "identifiers"
        },
        "response": {
          "id": "9adf9817-db1c-4c5a-a6c9-180970cd8948",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07169ec2-7b22-4b14-89af-4fefa11ddbff",
        "cursor": {
          "ref": "ddcaa79e-a8c1-463c-9922-368fb65cc4e6",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "12c5bdcc-594a-434c-baf2-90fe9cd614bd"
        },
        "item": {
          "id": "07169ec2-7b22-4b14-89af-4fefa11ddbff",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "39b40d81-ca0a-4099-b84f-4976853f35fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c0abf8-cdfc-42eb-a760-9864831fe762",
        "cursor": {
          "ref": "2d468e45-a63f-448c-a9c3-a52dcfa7be85",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1b93c7ab-2903-4767-a9a6-f3f3380031cb"
        },
        "item": {
          "id": "b9c0abf8-cdfc-42eb-a760-9864831fe762",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4b2fdb5f-0aed-46e4-af78-5b32bff1b9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcde4fdb-0e0f-4fd0-abc0-4093a49a1c35",
        "cursor": {
          "ref": "f7c97159-dc0b-434e-9bec-fee71be6c0a6",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "27d5ff7c-ff58-4e36-ba59-7fd0c19b955c"
        },
        "item": {
          "id": "bcde4fdb-0e0f-4fd0-abc0-4093a49a1c35",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "adf1e6b0-4197-4a99-8b50-3d6dc0cd1c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8278c7c-4e8f-4d39-ad2a-8c0c0cc6cf83",
        "cursor": {
          "ref": "65492e68-b054-42de-8a83-5fa06d73b26d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6900c8e1-628e-47fe-9156-b2fa3aa11431"
        },
        "item": {
          "id": "f8278c7c-4e8f-4d39-ad2a-8c0c0cc6cf83",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4162539b-ff77-40aa-8822-d3bbce70c52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cc0b59-2efe-4ecd-ae3f-402d10d9f022",
        "cursor": {
          "ref": "8eee3e90-9e02-46b0-9c52-1691fc20d24f",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5e813b05-9eb7-47a6-90cd-23ad410b6420"
        },
        "item": {
          "id": "55cc0b59-2efe-4ecd-ae3f-402d10d9f022",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "741007b0-d04d-4e47-82f2-6ec34e023779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271ec290-e8a9-4ee2-85c2-b315d7e3dcd3",
        "cursor": {
          "ref": "6f211a5b-bbbb-4194-8bae-3ebfa9532aec",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "31b0f10a-3f74-4edf-ad37-5d77f45a1a0d"
        },
        "item": {
          "id": "271ec290-e8a9-4ee2-85c2-b315d7e3dcd3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b9c5401b-acd8-43e2-80c3-ea16e14499a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c03970a-3b45-46e2-b6a5-1e8e6d4f5d79",
        "cursor": {
          "ref": "be909ee7-9391-41a9-a6f1-93dbd78651a6",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d09ea95a-bcc1-4efe-b3df-21326774a355"
        },
        "item": {
          "id": "5c03970a-3b45-46e2-b6a5-1e8e6d4f5d79",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e9587e30-395f-4421-b845-cde278a510e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962f715e-40ed-4786-8184-1c77935306b2",
        "cursor": {
          "ref": "bd7a68eb-d511-40c9-b789-c82458b94d9b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b100fa05-6c11-4f3d-a78f-d2320c81dcca"
        },
        "item": {
          "id": "962f715e-40ed-4786-8184-1c77935306b2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5466f432-8790-409d-81df-85b8abe5bcac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58748415-1a54-4657-9214-883fc07b7fab",
        "cursor": {
          "ref": "3f47063f-3c92-473d-8c8c-6e3127b19805",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "45a27dc8-b15c-4721-8418-4eaa010b976f"
        },
        "item": {
          "id": "58748415-1a54-4657-9214-883fc07b7fab",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "689cb541-5424-4a54-9c5c-116c53b4a5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8725565-5dd8-4642-8094-e67b6ae82e0a",
        "cursor": {
          "ref": "ba0e9b84-7422-47f8-8ba8-1fe3dfdfebdf",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "97ccc1ab-b64b-4ba4-a4bb-756e2eb29e0e"
        },
        "item": {
          "id": "b8725565-5dd8-4642-8094-e67b6ae82e0a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "597f9848-39b5-4063-ad29-5f3f2681f64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f015c747-b151-4fb5-a39d-8f622c91723f",
        "cursor": {
          "ref": "ec51733b-1522-4472-898e-bb341900f45a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "90cf881c-8393-4fc4-9b79-8d414f115bd1"
        },
        "item": {
          "id": "f015c747-b151-4fb5-a39d-8f622c91723f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "992ebc24-9dfa-4190-b420-4dbf1953674d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d93c095-ad6a-48f1-ac9e-5b5001cc09e1",
        "cursor": {
          "ref": "b89f4214-df83-41f1-ad65-e4aad2ee5339",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7b2c2f3c-1d99-4397-94c5-d80cc95884c7"
        },
        "item": {
          "id": "3d93c095-ad6a-48f1-ac9e-5b5001cc09e1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2f042ca4-d91c-467c-9a45-96cfd5bb7bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f521886a-cbf6-4f3f-b8d8-41cd65832ce0",
        "cursor": {
          "ref": "c11338db-b261-4e40-ae8c-c49d08ea4304",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "60b6b349-e09b-46bd-b698-2408e1f513f6"
        },
        "item": {
          "id": "f521886a-cbf6-4f3f-b8d8-41cd65832ce0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5922ba47-d2b5-4f37-b390-a52fae2d59ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11a737b-3b15-4868-a090-979bdbd303fe",
        "cursor": {
          "ref": "e874a8c2-13b9-48ab-8b42-f1d1c6e637b1",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "84a99efc-d1ad-400b-8dac-9016f30d1f2e"
        },
        "item": {
          "id": "b11a737b-3b15-4868-a090-979bdbd303fe",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2c8a5d63-e9d0-4fbb-8fc7-c11d93fc0b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d046774-ad06-4720-865c-62af8edbb6b2",
        "cursor": {
          "ref": "461018b1-a6cd-4cd1-8ea0-33ae6266a79b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f10a8b4e-8403-4a10-9e43-3c0b3a659a4b"
        },
        "item": {
          "id": "7d046774-ad06-4720-865c-62af8edbb6b2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "597ee461-e742-4edc-9696-7b7b275e9e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e9e92f-cfd1-425a-b11a-a81868e6954e",
        "cursor": {
          "ref": "31764158-e84d-433f-89ba-2b124bd33d44",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ebee774a-d48b-4334-8f05-334482b613a5"
        },
        "item": {
          "id": "13e9e92f-cfd1-425a-b11a-a81868e6954e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b8f020d5-e95f-4d13-aa50-e1d9a4df03fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7576fd78-f288-400c-8dff-019c39582456",
        "cursor": {
          "ref": "f48e8923-7b59-4ce3-be49-a97bb6a3fb0b",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bb81340f-3860-4c69-b55f-d3b967183ca9"
        },
        "item": {
          "id": "7576fd78-f288-400c-8dff-019c39582456",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3ed7bfb6-1d61-460c-a0be-916c504c4109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fec0db5-2984-4aab-8fb8-fc9b1d6c0340",
        "cursor": {
          "ref": "9fec0f48-6f3b-4663-811a-c4f2745b17bc",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1019963c-6837-469f-9acd-5d43057aecc4"
        },
        "item": {
          "id": "3fec0db5-2984-4aab-8fb8-fc9b1d6c0340",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "95f02294-9e6c-433a-bf82-442df09c1f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87702207-a54a-4b85-873b-9b9597faa46c",
        "cursor": {
          "ref": "7a3e07e9-7b16-4d0b-b627-1629fbe7cad4",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "538d6068-d63a-4c48-b040-7f48d0d8678e"
        },
        "item": {
          "id": "87702207-a54a-4b85-873b-9b9597faa46c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "41067a90-5092-4281-bdca-79619d8edac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9a1b6e-9fe4-4d11-ae6e-d13027999908",
        "cursor": {
          "ref": "ab96060d-668c-4eb8-8066-862be6c42c51",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2d6e795e-ca72-4324-a7ac-d666442b149b"
        },
        "item": {
          "id": "df9a1b6e-9fe4-4d11-ae6e-d13027999908",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b6161686-b36a-487e-9d29-cfbaac7d95bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca737e1-de98-4278-aefa-e5449f413bf9",
        "cursor": {
          "ref": "ff9d2544-8b7d-4e88-a2d3-44832f591856",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6ed319ad-a356-422c-b979-aa58a0e68dc8"
        },
        "item": {
          "id": "cca737e1-de98-4278-aefa-e5449f413bf9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "71387c0b-ccda-4482-814f-1cf3ccb029e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42480080-94d6-402d-9530-857d575e50f8",
        "cursor": {
          "ref": "383486ad-d5b6-4e34-91e0-68d64b0c34ec",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "affe45a9-ff78-4bbc-af3a-7182dc53e03c"
        },
        "item": {
          "id": "42480080-94d6-402d-9530-857d575e50f8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8d466c65-860a-401a-b68f-bf297f5440eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3172f264-5e82-44b1-b826-3d2ecf4524d5",
        "cursor": {
          "ref": "e4b34a08-9d29-4e65-b52d-5e55b604e09d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "290c914e-5d60-414b-88fb-957c20ecbd78"
        },
        "item": {
          "id": "3172f264-5e82-44b1-b826-3d2ecf4524d5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0523c599-1a4b-4d11-9697-93f1600fe0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43a9c60-d38f-4b0c-bec0-3bf4dc6f6912",
        "cursor": {
          "ref": "5922091c-5b5d-42ac-b841-b9e0706c8962",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5043bf68-5b7b-49f8-8b4e-44a0e0960885"
        },
        "item": {
          "id": "d43a9c60-d38f-4b0c-bec0-3bf4dc6f6912",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e2b765d3-c71e-4941-9b15-1adb73aef34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56167e4b-83e9-4d34-a5b8-0218380a92ae",
        "cursor": {
          "ref": "06f1fb77-5ef9-4ef6-97fa-3e6e436797d2",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a873389a-5b34-4b11-9290-7ecc13f33cba"
        },
        "item": {
          "id": "56167e4b-83e9-4d34-a5b8-0218380a92ae",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a6120ffd-46cf-4930-b0ea-d8b9d37dee0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f16a3fb-4d4a-4a09-bd27-9d5e8da5ff9c",
        "cursor": {
          "ref": "de0cb268-87ff-4c35-bac7-c6c5bdeb46e6",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "88c79935-f3a1-4465-8295-c68ed9b8e4ed"
        },
        "item": {
          "id": "2f16a3fb-4d4a-4a09-bd27-9d5e8da5ff9c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b2d72b6b-436d-40a4-be10-e797da4fb0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57910726-25a1-4923-9b54-ae67330d1473",
        "cursor": {
          "ref": "b5229bdc-8fa5-4e2f-865d-03cd9266ee9f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9a21f87a-1cc7-48e0-87c3-aa4d95a7064b"
        },
        "item": {
          "id": "57910726-25a1-4923-9b54-ae67330d1473",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d74f7a47-ae9a-47db-87f0-558211e27f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b5ae2d-865e-4b20-862e-d5797fe44506",
        "cursor": {
          "ref": "3d6fed49-9a49-4c91-8a6a-139cf64acf1c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6f2d5983-2c65-4881-9ff2-5d7e1698bd44"
        },
        "item": {
          "id": "86b5ae2d-865e-4b20-862e-d5797fe44506",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "78353397-71e6-4bec-a5d3-c1ea7a666008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8a4aa5-6905-46de-a27f-c76c48ebd61e",
        "cursor": {
          "ref": "4abab05a-e46e-47ac-87c1-f2c1576967a8",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0233d36d-b8ca-4c23-97e8-adebbd2dddbf"
        },
        "item": {
          "id": "ac8a4aa5-6905-46de-a27f-c76c48ebd61e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4ed95b9f-0593-4f60-8a5c-8a295f010171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9652719c-33f9-433e-9406-25337142fb7f",
        "cursor": {
          "ref": "cc581196-aabe-4a52-b07e-b66c24a7aef6",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4320efbf-ef9b-4265-8c57-15033cc80831"
        },
        "item": {
          "id": "9652719c-33f9-433e-9406-25337142fb7f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8c89da88-5613-4d81-a80e-640d2d78113d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4797a07-5012-43fd-bb7b-e1ede3da8576",
        "cursor": {
          "ref": "3b427342-93a9-475b-a875-14303f2fc075",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8d4b18f9-7ce4-41b8-a95e-9f6cb1e69664"
        },
        "item": {
          "id": "c4797a07-5012-43fd-bb7b-e1ede3da8576",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "73b75092-696d-4670-b4c2-f011cb3c8ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768ed30c-2f1e-40e1-aa72-45bfa4558d4a",
        "cursor": {
          "ref": "7dc6b79a-2e58-41ac-aec8-1f8f33e6eb27",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5c080412-57a5-410f-92e3-0cb56ea14676"
        },
        "item": {
          "id": "768ed30c-2f1e-40e1-aa72-45bfa4558d4a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ed8c8cd9-79f1-4ac0-a569-d1fa67a97a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff1bc53-fb6a-4a79-b43a-65be80cb2f3a",
        "cursor": {
          "ref": "3e4f42f5-5283-4a25-9ed2-ad69be308aaa",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cd334f8a-24b1-45e6-9158-96a566a43f15"
        },
        "item": {
          "id": "6ff1bc53-fb6a-4a79-b43a-65be80cb2f3a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "331af434-3487-4ce4-af8d-58df3a517a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d65571-d27b-4a27-8813-0db02c2fd661",
        "cursor": {
          "ref": "96b58fa1-0656-476f-aad2-1babddf94178",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e8c9af7b-fb69-4d65-a8f1-671fb1b59625"
        },
        "item": {
          "id": "d0d65571-d27b-4a27-8813-0db02c2fd661",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cc7db20e-995b-479e-8afd-c7bfdba9631d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3d41ec-f946-4b94-ad2a-9012fe364ed1",
        "cursor": {
          "ref": "9b830d91-39f2-4b26-98ba-c86867cf230f",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "851d24de-4609-4145-91ec-196f7f6b35dd"
        },
        "item": {
          "id": "4d3d41ec-f946-4b94-ad2a-9012fe364ed1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9784c5ed-b708-47ad-ac66-e480e2750fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd691ea-637a-40db-a150-8bdafeeaac09",
        "cursor": {
          "ref": "c6c9a405-9f1e-4b80-8e53-3e99473b3829",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "85cef339-8b19-4add-a29f-2856a3d6cf42"
        },
        "item": {
          "id": "afd691ea-637a-40db-a150-8bdafeeaac09",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "25117935-7e6c-4567-89e1-2a8e950c6620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474e3867-c5a0-4af9-a124-39698af3b0ca",
        "cursor": {
          "ref": "db8f3a7d-635e-4760-bbd6-f0a16ed817bf",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5cfa3ee4-6a30-4c24-90aa-202c03952947"
        },
        "item": {
          "id": "474e3867-c5a0-4af9-a124-39698af3b0ca",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2669b5c6-ae00-4188-b9a8-9be909d93c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8ede1b-95f0-4632-a089-f6c08534d7a6",
        "cursor": {
          "ref": "7d327ef3-962a-4a98-9087-a5ad0725e725",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d0538e85-8c4d-4ea5-8153-059aa7fedfa7"
        },
        "item": {
          "id": "4b8ede1b-95f0-4632-a089-f6c08534d7a6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "329d76f6-523b-447b-82b1-ad4db3b2a7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e10722f-2ac0-4e91-8763-7453550defb9",
        "cursor": {
          "ref": "7c1938e6-d531-4bb7-bbd4-ab5ed394095a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d8470e08-a780-4c6f-b0c3-4dfe59474c01"
        },
        "item": {
          "id": "8e10722f-2ac0-4e91-8763-7453550defb9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3cd63773-5d5e-4c2d-9d93-a8d90941c027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38d19d1-e7ed-43ba-bbeb-cc919f6b3269",
        "cursor": {
          "ref": "ab4eedc4-d2ca-4325-a26f-af6eb2b50f6e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0e50f01d-1c2e-4906-86d6-8168dca53104"
        },
        "item": {
          "id": "d38d19d1-e7ed-43ba-bbeb-cc919f6b3269",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f83b4108-230d-45a0-b1fc-88d35ed4add1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0595e648-29d7-4adf-a085-3262f8e8a50c",
        "cursor": {
          "ref": "1b1b6234-708b-4762-94a6-50ccff0575c8",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "57d44d97-e821-4632-bcf8-fdb7ebdb4537"
        },
        "item": {
          "id": "0595e648-29d7-4adf-a085-3262f8e8a50c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f2e6c821-46bd-45c9-8fa3-1938da00a5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6894437b-9162-4df0-88fc-0c044ac84280",
        "cursor": {
          "ref": "de1e706c-b941-4a1d-a369-9553f4c283ec",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0d88c4f2-1304-45e6-aec2-8d928561f0e8"
        },
        "item": {
          "id": "6894437b-9162-4df0-88fc-0c044ac84280",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c95ed9bf-2852-488a-bae0-ab76fc3e78e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aa8893-4825-4d2f-af20-6b636f3a2764",
        "cursor": {
          "ref": "1672fd50-138a-44de-849e-29136cd3c419",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fd837b72-f146-4328-8b5a-9eb73730a8bb"
        },
        "item": {
          "id": "d4aa8893-4825-4d2f-af20-6b636f3a2764",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e32adc3c-f433-4023-9471-a27e623da34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4febde-d82d-4a74-87e6-4cdafa91bda8",
        "cursor": {
          "ref": "02cfb03e-b639-4035-bdd2-3bc88598a106",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f1400b95-68c0-4f93-8567-997d0ca3090a"
        },
        "item": {
          "id": "8e4febde-d82d-4a74-87e6-4cdafa91bda8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "94da0d9d-3388-4ccd-a6b4-73d73658a2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ca3156-e895-4a5a-8a24-c6964e0c6a8b",
        "cursor": {
          "ref": "7d93d7a9-ba91-49ad-b038-9946ba0366e9",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "580a04ed-5f29-4f2e-b37e-055f2b1c9075"
        },
        "item": {
          "id": "d5ca3156-e895-4a5a-8a24-c6964e0c6a8b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e68129d9-cf6e-478a-b9d0-e65aaea0f7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1ac772-49fc-4708-aac9-a009bae899a2",
        "cursor": {
          "ref": "61b87738-9522-436a-95f4-a4d430465efb",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fa878d70-a10c-486b-a8cd-b42322a83a21"
        },
        "item": {
          "id": "3d1ac772-49fc-4708-aac9-a009bae899a2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "92ecf21e-aff7-4fad-9ffb-d8257f572130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fb998e-a0e5-4ac4-ac51-fa1385feeda2",
        "cursor": {
          "ref": "c7e1cf77-4d25-432a-a273-1b2bd74e88b7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fa74ec6d-587a-4993-832f-dba1fe36479c"
        },
        "item": {
          "id": "e9fb998e-a0e5-4ac4-ac51-fa1385feeda2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "77d99d1d-34a1-449e-85c8-eb3072052403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36c7509-b94c-49b4-804b-ed657ade0a7b",
        "cursor": {
          "ref": "49f12655-8643-4fb3-8773-1ae6e462edc0",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9c74ff23-3ba0-420c-b42c-60003a81db25"
        },
        "item": {
          "id": "b36c7509-b94c-49b4-804b-ed657ade0a7b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "86384b84-d7e4-4281-878d-dc93688f1649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a57a38-0ee1-4323-af4e-c9c492f79ee7",
        "cursor": {
          "ref": "97cc38fa-1f47-4b4f-b6df-35c12497916f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a6307126-5921-4e3d-8841-b1408d79c805"
        },
        "item": {
          "id": "65a57a38-0ee1-4323-af4e-c9c492f79ee7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "763119d2-b521-4db1-b0b9-301110f6e152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f344f3-decc-415b-b822-4f817f92be9a",
        "cursor": {
          "ref": "34bbe253-7aa5-4d8c-b53c-fe8faf6a825c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e93071a8-de91-438c-8017-f44e51119283"
        },
        "item": {
          "id": "e2f344f3-decc-415b-b822-4f817f92be9a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a03c1cae-8465-4d52-9195-46f8a2af8cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4b8ec5-894f-4a93-af1a-35da58196e23",
        "cursor": {
          "ref": "01e355be-9c18-49d7-8a2b-e501b07faaac",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "389484f4-b6ed-415d-acf8-084a2c6e5545"
        },
        "item": {
          "id": "2c4b8ec5-894f-4a93-af1a-35da58196e23",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "df0a624c-604b-4f5d-902b-fc42cd096e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cf8b10-49cc-4f35-9854-923f0044ac20",
        "cursor": {
          "ref": "47c7b4c8-dd84-41d1-b64c-10bc202544ed",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "eee83ebf-9618-4720-801a-ba9abcbb5336"
        },
        "item": {
          "id": "46cf8b10-49cc-4f35-9854-923f0044ac20",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4e1d91a7-a04e-4348-8924-f19f164aa955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e35c228-f7f4-4fab-a4a3-4f2b7ff3d1c5",
        "cursor": {
          "ref": "a39a1aea-3b70-4202-80a9-ab285ba5985a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ba4bf7ca-32cf-4ea5-89d8-3965bba9bd1b"
        },
        "item": {
          "id": "2e35c228-f7f4-4fab-a4a3-4f2b7ff3d1c5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1d9ac5e1-ff02-4a31-9f4e-d1360e93dacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f3e824-3d1b-472b-841a-42316e34262b",
        "cursor": {
          "ref": "c85d8f29-492e-4d90-96be-0cf80e595700",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ef7796ba-f52a-4736-b7b2-b49929506f31"
        },
        "item": {
          "id": "e0f3e824-3d1b-472b-841a-42316e34262b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d0a38ce6-1562-47eb-990c-4ee19b6dd35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fe5348-79aa-42f8-ad71-263f08448cab",
        "cursor": {
          "ref": "fc9f9a69-5e1d-4141-b80a-de5d2ee58ace",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ea4d85e7-09e5-4a9d-980b-09e8a5007842"
        },
        "item": {
          "id": "25fe5348-79aa-42f8-ad71-263f08448cab",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "595fe9a6-14e4-46bc-8312-d0c91f0ad115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19987c30-d767-4a8f-aa23-aee193359e55",
        "cursor": {
          "ref": "ebdd7ebb-cd07-4ae5-b644-6889f78c07cc",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "68c54220-4ab5-4971-9014-f31475d0f01e"
        },
        "item": {
          "id": "19987c30-d767-4a8f-aa23-aee193359e55",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "66e407d8-aca8-4bcb-9c3d-c5e4d7e23761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae13b8c7-6a55-43ca-bffa-b26bd3f9746b",
        "cursor": {
          "ref": "a9405918-5b69-44fa-9af2-af038f7df39e",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fbad3e61-861f-4fe5-be8b-ab74ccd56667"
        },
        "item": {
          "id": "ae13b8c7-6a55-43ca-bffa-b26bd3f9746b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c16d22a8-28da-4d54-ab06-d9b9ab0202d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7efaa31-ef13-4ce0-ad60-fc97bdebf427",
        "cursor": {
          "ref": "54364abd-01fd-41b2-900d-68a030deffc9",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "df3c5f0d-2386-41d1-8004-ae45f398f8da"
        },
        "item": {
          "id": "a7efaa31-ef13-4ce0-ad60-fc97bdebf427",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b57652a0-eadd-428a-bb8b-67a5685576ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beaa7be6-5122-4bd9-bf34-793ae0d8ad82",
        "cursor": {
          "ref": "245e9a78-2ea4-4264-8a1a-b6a3ab42b99a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2a460353-ee8c-4054-96f6-722d05cc43f2"
        },
        "item": {
          "id": "beaa7be6-5122-4bd9-bf34-793ae0d8ad82",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b70edbf4-bca9-48b6-900e-78e9ed8f3625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1361e99-464d-461d-a3f7-c428d60644ff",
        "cursor": {
          "ref": "45b32cb0-77dc-4547-b735-9740cca11fb8",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "28af6e15-77b1-4adc-962b-093f1f0394e9"
        },
        "item": {
          "id": "e1361e99-464d-461d-a3f7-c428d60644ff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "31b46354-c082-405b-98f3-b4132818a58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f6e2fb-fe12-44ca-83da-e643316c2c08",
        "cursor": {
          "ref": "d1ce234a-d5af-4f77-9e69-249398ab4eaa",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7e4102b4-dd71-47b6-9245-adab356efdf1"
        },
        "item": {
          "id": "c2f6e2fb-fe12-44ca-83da-e643316c2c08",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dd0d6c6a-1622-429d-b5b8-f5aa76ae812a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d78d060-fdba-4c0c-9fa9-4529a0bcc266",
        "cursor": {
          "ref": "a0a415c2-aef4-4ce0-94b8-5397ce4ac4cb",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7ed87880-7178-49fb-808d-f006cfc0df9d"
        },
        "item": {
          "id": "5d78d060-fdba-4c0c-9fa9-4529a0bcc266",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6991d3c0-a694-43a9-8a7f-3d61f4f6a0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21884ee-ada2-497f-a7c0-c013f52e4431",
        "cursor": {
          "ref": "ceeb3572-e355-4517-9b34-9cd689db36c3",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d1278d4c-5fca-4cf0-9849-6be4cb7af9b9"
        },
        "item": {
          "id": "d21884ee-ada2-497f-a7c0-c013f52e4431",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "abadebdc-9c9f-4668-991e-d7997f92a240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e24638-1f87-484e-94f3-0a650f0399ff",
        "cursor": {
          "ref": "5eac8d67-fb53-4a74-9d30-5ad6a2271a3e",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8b8bba20-054a-4733-a3d9-7f62e95e8124"
        },
        "item": {
          "id": "29e24638-1f87-484e-94f3-0a650f0399ff",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b6b437e6-56f8-4ec4-9694-431320f55522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5e7f29-aa52-4d00-bb5c-e7a7d3e0c47d",
        "cursor": {
          "ref": "c043dc75-526f-4eae-b38e-39bef316afae",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4b5e93d1-5aa5-4a81-96f8-ecd46292fd2a"
        },
        "item": {
          "id": "3b5e7f29-aa52-4d00-bb5c-e7a7d3e0c47d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "abd7a27a-89d4-4160-b1a4-2716ecd4050a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d90ecf9-1f0a-458c-afa1-fdbfd0c73890",
        "cursor": {
          "ref": "b4011f5b-a7ae-4e27-9be5-6020e594daa1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2c91eead-e65c-4220-88c2-44ffd73183f0"
        },
        "item": {
          "id": "5d90ecf9-1f0a-458c-afa1-fdbfd0c73890",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "84b3ca36-21bf-47d6-bdef-1d5d2296f134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602023cf-5531-4898-9cb0-84de1e717120",
        "cursor": {
          "ref": "bcdc2781-bcc1-4786-9ce3-4d1868c282e4",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9a27cca4-cf03-4967-ba4f-ce918c9c011e"
        },
        "item": {
          "id": "602023cf-5531-4898-9cb0-84de1e717120",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "46fd0e8f-aa23-45a9-95a6-4f22879cf2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e616ae-ae25-4774-8a3d-f9ad1b865aec",
        "cursor": {
          "ref": "b40fb54f-3658-411e-bf0a-fa3799af6661",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3c559d4f-7a9b-43d8-9162-2c46b5604564"
        },
        "item": {
          "id": "04e616ae-ae25-4774-8a3d-f9ad1b865aec",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "eaddaa2a-5afd-4bc9-a9ac-e0d8f21c3322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4787534-2e23-407a-858f-83f9dc0f029c",
        "cursor": {
          "ref": "54372e47-5800-416d-9bc0-b11414fb0bf2",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "44775d2d-494c-402a-8e34-f4f2ca463eea"
        },
        "item": {
          "id": "f4787534-2e23-407a-858f-83f9dc0f029c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ec64d719-ed1e-41f6-ae90-532d2c3c0a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1b98c0-dcf6-40c8-b1ab-93cecb9143a2",
        "cursor": {
          "ref": "fe1b3fe6-7093-40a8-969f-1902c7e12373",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fc2168c8-bfa5-422d-b7c0-35e942316c77"
        },
        "item": {
          "id": "4d1b98c0-dcf6-40c8-b1ab-93cecb9143a2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "508b2aea-bda1-4e9e-8faa-8935dbe6e0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf98782-caff-49e3-9698-d58de22af94f",
        "cursor": {
          "ref": "e69e039e-de88-428d-9261-bd130f08c548",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eb116945-3481-4bf3-8b40-327c2d8b6f4a"
        },
        "item": {
          "id": "6bf98782-caff-49e3-9698-d58de22af94f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e95032fd-dcf1-409d-9605-87a6f61070eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b72a66c-405c-4af0-af76-a062311f95e2",
        "cursor": {
          "ref": "6fd3c353-4d57-4f2c-9776-4b0a1de22a27",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a8dba27a-dbd3-4657-b068-fb707f594272"
        },
        "item": {
          "id": "4b72a66c-405c-4af0-af76-a062311f95e2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7a07c662-beef-4a9b-93b3-9c1b09d8341f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c18b3ee-29a0-44e1-b15a-2225e541c453",
        "cursor": {
          "ref": "af9ecd95-517f-4ada-b968-91c8cb060194",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "03901480-af03-4f83-ab0a-b476caad15e0"
        },
        "item": {
          "id": "6c18b3ee-29a0-44e1-b15a-2225e541c453",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "68b1e680-17a5-422f-b9dc-e39b93472437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f331d8dc-eae5-4b3f-83ab-7b651b9443ab",
        "cursor": {
          "ref": "7910404b-bd48-4e38-8c0d-6cfcb6e3a1d7",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "88857e69-6758-4fe2-962c-19f9f2a323cb"
        },
        "item": {
          "id": "f331d8dc-eae5-4b3f-83ab-7b651b9443ab",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "496d752e-a7c7-43d3-86a5-fb0f7329e7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5759720c-631b-4c71-b1e0-636ddd072b78",
        "cursor": {
          "ref": "bf193ce4-40d5-40da-bea9-30b303f5e0d1",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "24ec1136-0c13-4527-896a-8f8d5fd3102c"
        },
        "item": {
          "id": "5759720c-631b-4c71-b1e0-636ddd072b78",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d867296b-ef51-4e7a-a994-343f7b40f7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f55ea50-1cd5-496d-b98b-ae5d31bd055e",
        "cursor": {
          "ref": "96baec31-3c1c-4eb3-8cb8-85a5d57de93f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d7e321d8-6563-4446-a0f7-b0cbe94b7fbb"
        },
        "item": {
          "id": "7f55ea50-1cd5-496d-b98b-ae5d31bd055e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7e2d0bf0-8945-4914-8fe8-ef5df38cbc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ff0abb-71f6-4990-8c75-ac741f990269",
        "cursor": {
          "ref": "88bf7b8e-e77b-4eca-a9dc-150d8957ad91",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6c3da903-7f10-4491-92fe-9f6ea8452238"
        },
        "item": {
          "id": "51ff0abb-71f6-4990-8c75-ac741f990269",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "98c35c3d-437c-4287-b83b-3268190f37ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3322fbd4-3638-467f-a99f-46adbe7a19e5",
        "cursor": {
          "ref": "87acb27d-18b7-441e-a645-de16d825fe05",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4bed6275-1b53-4977-8bc5-c2e602db1bb2"
        },
        "item": {
          "id": "3322fbd4-3638-467f-a99f-46adbe7a19e5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a55f25df-6d5b-469a-a6b9-1df49db06aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27075f4e-92d0-4382-8aa4-ee951b7fb02f",
        "cursor": {
          "ref": "98b3b140-c96b-458a-818f-81138d09ed53",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "75100f4b-aaaf-4637-8d5a-bb772f249abf"
        },
        "item": {
          "id": "27075f4e-92d0-4382-8aa4-ee951b7fb02f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "980022e3-6d90-40a4-a130-a6bfd72f3c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a512a2e9-21e3-4e88-86bb-5ad12d007daf",
        "cursor": {
          "ref": "1d190bb8-b7ec-46f8-b2e8-3798c63828d7",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1f1c95de-6ad8-40e4-bc6c-6123d15aad21"
        },
        "item": {
          "id": "a512a2e9-21e3-4e88-86bb-5ad12d007daf",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "978a2429-8e65-45bb-82a2-fed406b7a4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd6f38e-242b-412c-8e17-766761c6f3f4",
        "cursor": {
          "ref": "ece894dd-47a0-4591-b9c4-1b0b14f826c8",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "956a9438-d6aa-44de-91a7-cbd6d28f4d50"
        },
        "item": {
          "id": "edd6f38e-242b-412c-8e17-766761c6f3f4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "14826c0c-7a97-4d8e-86ec-6507844f3b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f8278f-360d-4a4d-b596-9f06a1399a55",
        "cursor": {
          "ref": "365f6406-7a10-436d-9ad2-3683b840065a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "27992d41-6fea-47ee-95e4-76ac621a86bd"
        },
        "item": {
          "id": "d4f8278f-360d-4a4d-b596-9f06a1399a55",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b58e48fd-6b49-45fa-a7a3-eb69960ffbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242b687a-a52f-49a9-a8ae-34c2fb9c6b53",
        "cursor": {
          "ref": "3f650163-5500-4f38-bae0-b9977b3dc2d1",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f061e21c-becb-4cb5-a52e-d91192b97b1e"
        },
        "item": {
          "id": "242b687a-a52f-49a9-a8ae-34c2fb9c6b53",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b13a416e-a9e1-4d8f-a1cd-e33a0e78c40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89194fe4-cf6e-4cbb-aabd-d0c93119bbe2",
        "cursor": {
          "ref": "bf624918-eb8a-4774-88cd-d4eba4d9e3c9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "86933d84-0be7-4448-861a-560d9c4f12c3"
        },
        "item": {
          "id": "89194fe4-cf6e-4cbb-aabd-d0c93119bbe2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "609113ab-0a17-4c1c-b79c-3761c0653c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252821af-e545-4321-8f07-378fe6774105",
        "cursor": {
          "ref": "716c8be5-6523-4c0a-9063-eae2fe4c15e6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "759acd72-b285-4ed4-aaa1-bd6650c7be31"
        },
        "item": {
          "id": "252821af-e545-4321-8f07-378fe6774105",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "348af73c-2cf7-43f1-b4b4-7467ef3d30ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56e26de-fa43-4c4f-8bb8-4cc64680fe37",
        "cursor": {
          "ref": "31a82181-0c3b-42c6-8fb7-9bde39a1144a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3ed4604b-e507-4629-aae1-8ef316c8da10"
        },
        "item": {
          "id": "d56e26de-fa43-4c4f-8bb8-4cc64680fe37",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "00662ccf-84ad-4639-954c-adf7b831b4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1c4d57-8242-4c67-94cc-d66f408e873b",
        "cursor": {
          "ref": "62f738bc-a660-4256-815e-74e61b0e365d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0431da40-0436-4a70-9a3f-e78750d27858"
        },
        "item": {
          "id": "0c1c4d57-8242-4c67-94cc-d66f408e873b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "360fa6b0-17e7-4cfe-924f-e4ccfae74338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fdf780-37d2-45f7-8ae6-2701fa31c3d8",
        "cursor": {
          "ref": "2023f2e6-1c04-4a7d-8bec-7c319923275e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b992ee8f-ec9c-4302-8d14-8280cd21e07e"
        },
        "item": {
          "id": "e5fdf780-37d2-45f7-8ae6-2701fa31c3d8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "62482bda-13df-4397-9e80-f1d6e073fefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f6a1eb-c681-496c-bd73-054032876afc",
        "cursor": {
          "ref": "dc262b2a-9218-46ef-b20d-85d291b2443f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "97729416-8620-446d-a448-cf8054e73a5d"
        },
        "item": {
          "id": "a7f6a1eb-c681-496c-bd73-054032876afc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7fa6eee8-c8d7-4084-b49a-69b8931e08e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b75cea-cf7d-46a2-ad14-7816a4a53cec",
        "cursor": {
          "ref": "4867cf77-97c2-431e-b655-8d64e5ce4db4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a8c64198-bb6c-4805-aebb-08826e998b1a"
        },
        "item": {
          "id": "28b75cea-cf7d-46a2-ad14-7816a4a53cec",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e3f5096f-bfe2-4020-a886-955e88dc726f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2554efe0-57d9-4ee1-8200-ddda01d2c7e1",
        "cursor": {
          "ref": "9f4251c2-fc76-4cb0-8c6f-3e88dc7fb7ef",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a7f4d5ca-d10b-4f2e-9c72-d6e8267c7dc5"
        },
        "item": {
          "id": "2554efe0-57d9-4ee1-8200-ddda01d2c7e1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6184869c-b901-4ba3-9fb6-22b21676062c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802ae375-29f5-4e8e-b573-96b5754653b4",
        "cursor": {
          "ref": "35b3ae84-f15d-456e-a947-522bac1a8598",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e910607c-c1d1-4387-bade-0eecca508b23"
        },
        "item": {
          "id": "802ae375-29f5-4e8e-b573-96b5754653b4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "00756add-07a0-4c94-b6d9-7c95c28ab8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5025d21f-6a42-433b-a8dd-4c51426d20ed",
        "cursor": {
          "ref": "baefbe6d-2ccc-4d30-abbd-774b16b00de3",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "037e3066-c32a-47d4-a2ca-9115f31e5f6a"
        },
        "item": {
          "id": "5025d21f-6a42-433b-a8dd-4c51426d20ed",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5f6aba29-2128-4105-8f87-97bf6fe424b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9c1920-d65f-43a2-b001-5879da8eb73f",
        "cursor": {
          "ref": "4e2eec29-8198-425e-941a-9b398ffb9fda",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "414829cd-a386-4866-8d31-4fb2692bcce2"
        },
        "item": {
          "id": "1b9c1920-d65f-43a2-b001-5879da8eb73f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e799b116-34d8-4f7d-b818-cc16a92ea211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0029cb9f-3775-4626-8bb9-771306c5865c",
        "cursor": {
          "ref": "61cb4440-70ff-4b0a-9239-1c39b9a14d4d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "828eae0b-74d5-496e-9d08-7251909aaeb6"
        },
        "item": {
          "id": "0029cb9f-3775-4626-8bb9-771306c5865c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "56510899-6f1e-49e0-87a4-5a25ba91fc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "727ea8c8-8e18-4381-8485-4de5070f79b7",
        "cursor": {
          "ref": "c23ca10f-6e4d-4ba1-952c-bb8c2ba8e9c2",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "53e9426a-4376-412f-842a-9e5f86622247"
        },
        "item": {
          "id": "727ea8c8-8e18-4381-8485-4de5070f79b7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9668c0a7-11d5-483f-9262-529dd40cfb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7b0e0109-8cd2-424c-94ac-98741a6b6c94",
        "cursor": {
          "ref": "13b0837f-14ce-4b63-94c6-52cb8fb34ec8",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5037b505-ed5d-4b6b-96ea-c4f48b36db6e"
        },
        "item": {
          "id": "7b0e0109-8cd2-424c-94ac-98741a6b6c94",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8db8854d-a784-4a16-9dc7-1c9e904e149e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9e584fb0-6757-4e78-88cc-fcf7bc494a70",
        "cursor": {
          "ref": "4daaba00-9a30-40f4-8071-7744ddf6b439",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7e3cf807-99f7-4298-ae6b-f44b8198b9be"
        },
        "item": {
          "id": "9e584fb0-6757-4e78-88cc-fcf7bc494a70",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "36f1d415-7960-4fe8-8f52-dc75e53fe9ba",
          "status": "Created",
          "code": 201,
          "responseTime": 8049,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "485c2857-6bd2-42e6-a27a-00f2a8b6dde6",
        "cursor": {
          "ref": "ab57a870-2c63-487b-bca6-3d083c1c714f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "02fdc1a3-5c7a-49c0-8f56-c61ad2220e33"
        },
        "item": {
          "id": "485c2857-6bd2-42e6-a27a-00f2a8b6dde6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a2acbade-aaa0-47c4-820a-8e65ab6d0caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b40b4fe8-961f-4e6f-85d4-c998c7dd822f",
        "cursor": {
          "ref": "04fb87ee-58f7-42e0-9175-aa938c58e4e8",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "afcf13f7-8ced-4214-b1e0-9fd69e0533a1"
        },
        "item": {
          "id": "b40b4fe8-961f-4e6f-85d4-c998c7dd822f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b2b3f152-6831-42f1-87cd-e7372457a4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "82b64973-e63e-4371-a554-0534d12dfa39",
        "cursor": {
          "ref": "262318a1-c86c-4839-80ec-46015e3f75f5",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "40ac1b55-d585-4531-92cc-8a04eba4429e"
        },
        "item": {
          "id": "82b64973-e63e-4371-a554-0534d12dfa39",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b4b95190-bf71-4589-af76-4fed55782423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312ca71c-d8ed-44be-a6ee-e085d382b730",
        "cursor": {
          "ref": "da2ba39b-f4d0-4dea-8db4-3bb2d26725b5",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4e2854ef-6f61-4f4e-a545-1eb91b72e71c"
        },
        "item": {
          "id": "312ca71c-d8ed-44be-a6ee-e085d382b730",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7332029c-9f93-4d17-878c-688c7162cce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35aa4f5b-85f4-46d7-823e-670e31661f0f",
        "cursor": {
          "ref": "f4b54521-18d3-44a0-b76f-a9bb3c3980bf",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "eeee921b-19c9-40ac-8dc9-ef9ea62de113"
        },
        "item": {
          "id": "35aa4f5b-85f4-46d7-823e-670e31661f0f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "59a843eb-24c1-470a-8325-db67ee46f519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ed8f81-b92f-42ca-8a10-9fc2486ceaaa",
        "cursor": {
          "ref": "ced8819f-8d82-4dfd-9f80-df27ee215c3c",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a72a9505-43a9-4b1c-a115-99af8cf79668"
        },
        "item": {
          "id": "b8ed8f81-b92f-42ca-8a10-9fc2486ceaaa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "adbec3df-9598-4ddf-b908-9325847e0c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb99dd2c-e0cf-42a4-a9b1-b3bcd3537b33",
        "cursor": {
          "ref": "69da4ae6-8b13-43c7-b6b8-c20484585655",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b8b718ef-361f-475c-8f69-a415d140e4f6"
        },
        "item": {
          "id": "cb99dd2c-e0cf-42a4-a9b1-b3bcd3537b33",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a3110a85-6ebd-4000-a72d-6e748849427c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741abdb2-3d07-4bc4-91b2-8c1248427ac6",
        "cursor": {
          "ref": "fb00c830-afee-4d37-8ffa-8ad5fc5a9a51",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7d71e0a1-4945-4c5b-b633-e829044d9d3f"
        },
        "item": {
          "id": "741abdb2-3d07-4bc4-91b2-8c1248427ac6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1975a29a-1671-46e9-a5fe-809197cd6441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6835d4a1-d115-45d1-b13c-daaecc316220",
        "cursor": {
          "ref": "903d5fc1-153d-4790-9b54-e6f0f69a05b6",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d6b326f8-3724-48ee-985d-8e49099493d2"
        },
        "item": {
          "id": "6835d4a1-d115-45d1-b13c-daaecc316220",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8cc6f854-34fa-4340-8e71-0498fe506a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61eb0909-4060-4941-b8e8-65d7389d1d9e",
        "cursor": {
          "ref": "08f487e0-072f-417a-86b9-b1f3aa9ee1d4",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e690083c-84bd-4e24-ba6b-d3d58345b11e"
        },
        "item": {
          "id": "61eb0909-4060-4941-b8e8-65d7389d1d9e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ff971d34-9434-4aa8-ad36-589ed93a41ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dffdc4c-1d83-4daa-9e03-ce2132524b46",
        "cursor": {
          "ref": "9d87911c-04b6-4639-a2ce-469b2539e1a6",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e6a071f2-4117-43f4-99d8-3861ed8f7345"
        },
        "item": {
          "id": "6dffdc4c-1d83-4daa-9e03-ce2132524b46",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "783512af-c4d4-49cb-bdf5-93330ad1f32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7129aeb-b32e-4942-989f-ef28d1e5a5a8",
        "cursor": {
          "ref": "8630e445-7f7b-4a5f-bd3f-39bb05fa4b0d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3ea609fb-27fd-49b6-927d-fb4d74fbf237"
        },
        "item": {
          "id": "a7129aeb-b32e-4942-989f-ef28d1e5a5a8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c2adec32-c492-4fa4-ad2a-13e675e0a979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbde70e-dc0e-4e05-ad69-9254e4aa37ad",
        "cursor": {
          "ref": "f046a266-06f3-4150-be4e-53c9eb5a888d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "838427e1-9fd1-443f-88c8-2cda3e30fa2d"
        },
        "item": {
          "id": "6cbde70e-dc0e-4e05-ad69-9254e4aa37ad",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b2c45269-c742-4ce6-844b-5a0914475fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a931ee4-321f-4e1c-816f-0be874a97db8",
        "cursor": {
          "ref": "053a336e-942d-4c8c-aa5b-89ad2212b443",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "92b3cb2b-97ca-4655-8943-f79cfbf3238b"
        },
        "item": {
          "id": "0a931ee4-321f-4e1c-816f-0be874a97db8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "998b5e73-2a2f-42f7-8e0a-1e24779d83a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca414f39-94ca-45fd-9a75-ab61d99bf4e3",
        "cursor": {
          "ref": "564a9a70-bc91-4ebe-97c8-0d3a336a8dbf",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "44823bf1-ac09-4ef6-97a9-7dff343f7faa"
        },
        "item": {
          "id": "ca414f39-94ca-45fd-9a75-ab61d99bf4e3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7caf4164-fe16-4b66-968f-561a1e2d9f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ee08f4-9453-4487-af8f-790613d74c7f",
        "cursor": {
          "ref": "1b362716-ce62-4346-8a4a-78dd8f5d3e94",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9cb5d8bb-d29f-4ece-8cb0-d88fd66f0ba6"
        },
        "item": {
          "id": "b3ee08f4-9453-4487-af8f-790613d74c7f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f48910f9-57fb-47c7-baad-0ef6875399b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3161313-b67f-4a31-a500-e4956e61f1f9",
        "cursor": {
          "ref": "a944ac97-3922-4efb-bec9-a95fea34fc5a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d0bbc021-800e-43bb-a0ff-626a0e80b8a2"
        },
        "item": {
          "id": "f3161313-b67f-4a31-a500-e4956e61f1f9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ec70d41f-fcc9-4bf2-bdc5-584d70805dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530317d2-d4dc-48e7-978a-261208e4db17",
        "cursor": {
          "ref": "2c2b4248-e034-4728-af55-7292d3166910",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "689779f2-d878-4bd2-a32f-ef907e580e6e"
        },
        "item": {
          "id": "530317d2-d4dc-48e7-978a-261208e4db17",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d1750f5a-90bb-4e51-8e28-6d8a4e9ba2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ceea4f-1b52-444b-bbf4-508b314aa982",
        "cursor": {
          "ref": "5744411b-5ffb-45a5-a6ef-af342ce78976",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a216fd80-759e-4546-af53-505a00c0f5f4"
        },
        "item": {
          "id": "82ceea4f-1b52-444b-bbf4-508b314aa982",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9b80dcd1-9940-4528-bd4b-f7fd1d506762",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "550d48ac-28e1-45c0-8495-20978ce75a6d",
        "cursor": {
          "ref": "d0553082-824e-4217-89c4-e32d06d08be8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "204ab437-c0e2-4c5d-89bd-78d88ba2ff97"
        },
        "item": {
          "id": "550d48ac-28e1-45c0-8495-20978ce75a6d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "35e98d19-7d7b-41ef-8e36-8f6f0224a495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2535b66-ebea-470c-a8a1-453b85103740",
        "cursor": {
          "ref": "3679bdf5-2550-4c31-9a29-559f3f9c365d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a334b7d7-417a-4d45-baf6-7835aa66985c"
        },
        "item": {
          "id": "b2535b66-ebea-470c-a8a1-453b85103740",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2a5bd6ab-f082-4406-83c3-8f57fbbeb859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f314bc0-7c6d-4d89-b297-43a2ad5560c5",
        "cursor": {
          "ref": "5e96228b-1731-486c-95e2-01c513c7727c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2a5f5cad-13e6-457a-a8fc-10b58f980a28"
        },
        "item": {
          "id": "9f314bc0-7c6d-4d89-b297-43a2ad5560c5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "35b05546-7ca1-4d1f-be33-8c64f31b2556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb40fd6-f6e0-4952-99ea-5da06f65a0ef",
        "cursor": {
          "ref": "f54c3e2b-8b11-4f5a-8b81-a301d400b87c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1a83f98a-3a10-4d36-9a04-2b93dabe4f63"
        },
        "item": {
          "id": "7fb40fd6-f6e0-4952-99ea-5da06f65a0ef",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2b17b11d-03e4-4f1b-bb17-689f7ee1f8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffae92fd-e759-4981-9485-85ea68a5ceca",
        "cursor": {
          "ref": "c999886f-0254-4212-bdfb-16169b234968",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3c0bea1e-aa7e-4ac8-9bd5-5292fa0d3d9e"
        },
        "item": {
          "id": "ffae92fd-e759-4981-9485-85ea68a5ceca",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "028ccd34-6022-4184-b5ac-1e80109103fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13b50b5-059f-4731-8abd-70d7ace8bb5c",
        "cursor": {
          "ref": "4da29e6c-70de-4a79-bde1-e3fcd16f055f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1cd95a58-7358-47cc-b102-bcb1c20c5014"
        },
        "item": {
          "id": "f13b50b5-059f-4731-8abd-70d7ace8bb5c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a82f7a60-3ac9-4f86-99b1-ed8ec5a95002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14f473e-793b-462f-94b7-dc875bd96570",
        "cursor": {
          "ref": "00eba210-9ab6-4a7c-b405-74fab52175aa",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6867d294-adeb-44ae-934d-3da2d6a249ec"
        },
        "item": {
          "id": "a14f473e-793b-462f-94b7-dc875bd96570",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9a27987-1fe6-4a28-aefa-147e5d85455a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcd2d40-aeb8-49cd-99ad-6a2c43f5d221",
        "cursor": {
          "ref": "082eda82-5e28-4efa-97fa-a3fc4cb98d42",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e633a2ff-49d7-4d47-bd1f-17b19bb8148e"
        },
        "item": {
          "id": "4dcd2d40-aeb8-49cd-99ad-6a2c43f5d221",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "097c050d-bc44-4130-a8e0-456432aa2d1c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 954,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "189cf403-0d1c-4f3c-b9ef-c5fd89f59bf5",
        "cursor": {
          "ref": "8c378462-f3cc-4a23-b80f-9c00bc78a0b9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a78479aa-cf10-46bb-b5ee-6fc8980e61af"
        },
        "item": {
          "id": "189cf403-0d1c-4f3c-b9ef-c5fd89f59bf5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3a515a0f-c36c-4d20-a82c-49196e50dd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677f19a0-ac48-4b68-b782-906d7a5038cf",
        "cursor": {
          "ref": "4226ae43-07e0-475e-b029-9f9ea63b02de",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f73d7001-5374-4ea7-aa7f-57de9f42e65a"
        },
        "item": {
          "id": "677f19a0-ac48-4b68-b782-906d7a5038cf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4e4ed269-9016-4059-b795-70f81bed6ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee09e053-b5aa-4bcd-bcf1-e5c84f9f2aab",
        "cursor": {
          "ref": "88ef0357-c730-447d-933e-eaa7938c8c6a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f34e8bfb-2803-453e-8bf9-be55bc1e14ee"
        },
        "item": {
          "id": "ee09e053-b5aa-4bcd-bcf1-e5c84f9f2aab",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9a54a8fb-9576-403a-89df-605745dca2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbd2777-e203-4b44-9bb1-ef8b284f0a85",
        "cursor": {
          "ref": "75ce9ef6-5a62-4e8a-b098-5d85c0e55fc6",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5f678b9f-c4a7-4c99-91b5-bc83a8c40da8"
        },
        "item": {
          "id": "edbd2777-e203-4b44-9bb1-ef8b284f0a85",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "976c2402-9d96-4a43-bf83-c58ea87cbbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d615414-ceed-491e-9980-26e9f936b2c1",
        "cursor": {
          "ref": "c138b943-1ac3-4eea-8da2-fe9ce9faed40",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2f5475c5-87f1-474d-87a0-e16464cfc600"
        },
        "item": {
          "id": "5d615414-ceed-491e-9980-26e9f936b2c1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bfe86344-6347-488d-b4cb-a4eb6f263ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398469a1-8edb-4cf2-ae81-a2c2fbd38144",
        "cursor": {
          "ref": "dc16533a-7b6e-46cc-afe1-6d2beb6aacad",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2421de98-1a18-429e-bcb3-f77e7806e088"
        },
        "item": {
          "id": "398469a1-8edb-4cf2-ae81-a2c2fbd38144",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "30e9bcc7-3c54-42dc-bd12-dc27f251fd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b88f8a-ef40-4b12-94c8-89bfecfa1053",
        "cursor": {
          "ref": "9cee5d86-d3a0-49b6-80ab-653ac97dee72",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "56a28213-504d-4646-9eaf-c8be16c84bfb"
        },
        "item": {
          "id": "23b88f8a-ef40-4b12-94c8-89bfecfa1053",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "842c380a-cdb1-4b11-979c-40f8371d0e62",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "b92877ea-379b-4a9b-b924-9cae05d44b19",
        "cursor": {
          "ref": "ecf0257e-8ee0-4891-999a-15599c2c8472",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dc3356a4-dc71-4cf2-a68d-a6d0cae5a380"
        },
        "item": {
          "id": "b92877ea-379b-4a9b-b924-9cae05d44b19",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ff77f4a5-ef17-449b-aeb1-0d8b20355080",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 94,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "aa05d54a-5370-422b-ad64-ceedbae09aca",
        "cursor": {
          "ref": "aeb85973-7b3a-41c6-bb8f-0126be54e75e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5f572d35-0372-4242-9e33-7ea52886170d"
        },
        "item": {
          "id": "aa05d54a-5370-422b-ad64-ceedbae09aca",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e55b69a3-6e14-4eb4-928f-4fdcebc92006",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "7f34718b-2ad5-4a23-92e5-10b70d7f6972",
        "cursor": {
          "ref": "c209fcc6-20c6-47f0-a5d2-abbfc692049d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "616eac9c-0c74-481e-afdd-e316b9d5a32a"
        },
        "item": {
          "id": "7f34718b-2ad5-4a23-92e5-10b70d7f6972",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f8589501-999f-4a62-9cd8-b857441473c5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "9c6a5352-a46c-4a71-a2f9-1d6ea244c00e",
        "cursor": {
          "ref": "5cdfcc2a-e5d2-4441-8ce1-219dabd106c7",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "16a185ae-70ec-44cc-9a82-dc9a52a6ee02"
        },
        "item": {
          "id": "9c6a5352-a46c-4a71-a2f9-1d6ea244c00e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a55cb01d-6d74-4aed-94ab-f6a68fe91f5c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "6be4138b-e832-4b3d-9507-b595687b6978",
        "cursor": {
          "ref": "b899b7b9-e9bd-47a7-8894-57f2ca88c495",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5edee0cb-0e54-4d77-89f5-92aa2fecccf2"
        },
        "item": {
          "id": "6be4138b-e832-4b3d-9507-b595687b6978",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "69a223a6-afd4-49a9-a00a-e3d593d49a5e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "f0f8502c-3eb0-47b0-aaea-a9ac5469c9d5",
        "cursor": {
          "ref": "1939bf7c-954c-4c10-81e7-3284373221fa",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f2511beb-7ff3-43a6-8b9e-7e07f4e2dc74"
        },
        "item": {
          "id": "f0f8502c-3eb0-47b0-aaea-a9ac5469c9d5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fca7c425-980a-4938-9c33-d3fe74d2c8e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012b4e14-bd13-4f59-953d-c68543ba57ae",
        "cursor": {
          "ref": "7ea6343e-6c58-4afe-9eb9-93b9e466db69",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "693c7539-9940-479c-909a-c88bc8ba008c"
        },
        "item": {
          "id": "012b4e14-bd13-4f59-953d-c68543ba57ae",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "82fccf59-feeb-4cdb-8701-54d1d46af021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7101886c-a8ca-4f11-8269-d2df7c6d0923",
        "cursor": {
          "ref": "a0f00620-e750-49ee-8c7c-1e8d0abcc108",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "578a7f8e-5598-4468-ba95-fb4b153fe812"
        },
        "item": {
          "id": "7101886c-a8ca-4f11-8269-d2df7c6d0923",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f3513616-9a6f-483d-b0a8-21b599390eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f7fd38-31b4-462b-bc0e-25a7e2661fc4",
        "cursor": {
          "ref": "15b8588e-8fc1-4633-8e0d-0daba5bb9678",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fa4b4d88-d465-4ddc-a8d1-59dc31cbcaec"
        },
        "item": {
          "id": "e9f7fd38-31b4-462b-bc0e-25a7e2661fc4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "539957db-8bc7-48b5-ab01-624245a2d11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f5e512-ce25-483a-8614-23615e4da01d",
        "cursor": {
          "ref": "dd46be11-11ed-45a1-877c-2ac5a8865066",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d2615ac4-4191-491d-bc5c-d424a2b15784"
        },
        "item": {
          "id": "31f5e512-ce25-483a-8614-23615e4da01d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0b6290c0-31a8-4db4-92da-5976925ce96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb1a689-6f6a-4146-a00c-b231dc762590",
        "cursor": {
          "ref": "4a7273cd-9e6c-4e95-885a-0c9929247ad0",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5494050d-7813-4eee-adad-67d7c006c566"
        },
        "item": {
          "id": "fbb1a689-6f6a-4146-a00c-b231dc762590",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fcf08a3b-94b2-4aaf-8051-e0314b75da1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85739664-623d-45a7-840b-6e473cd8a90f",
        "cursor": {
          "ref": "a12ca989-a633-4867-9024-d4e8cfd53887",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d548534e-6461-490d-89d2-130790511fbf"
        },
        "item": {
          "id": "85739664-623d-45a7-840b-6e473cd8a90f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d23622ea-5922-4db6-9b98-904bdc2491d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61db91a-87e8-4589-a6cc-db9ba5692a5a",
        "cursor": {
          "ref": "99b5d448-af5e-4b8e-85e4-5b496df66162",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2d4c9f9c-4e8d-4400-8e59-a5706602d5ff"
        },
        "item": {
          "id": "a61db91a-87e8-4589-a6cc-db9ba5692a5a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "afd72a83-6013-493e-a687-11315499ead3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a99863d-6fd6-4a45-8e38-2533f38679c3",
        "cursor": {
          "ref": "66b6eee5-281b-4ab0-9732-1bd08cef7b33",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "922cf546-46b4-43bc-9490-5c499e8d7d14"
        },
        "item": {
          "id": "0a99863d-6fd6-4a45-8e38-2533f38679c3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d109e1c7-b371-4899-af49-e5ad87ee9fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca57fc06-a526-4aa6-871c-64bb41c58873",
        "cursor": {
          "ref": "31aea7ec-0747-4528-a943-d46d16cbe023",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6a42119e-1607-43f9-a8a0-ce5148180863"
        },
        "item": {
          "id": "ca57fc06-a526-4aa6-871c-64bb41c58873",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3ecaf306-1b8b-4870-8fc4-9c95e1cf5123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bccb4a-c995-463f-afff-38f41102df09",
        "cursor": {
          "ref": "5152e269-d0c1-41da-8f16-f943853ac439",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "13419222-c5d9-4000-8eb7-2d7c73b709db"
        },
        "item": {
          "id": "29bccb4a-c995-463f-afff-38f41102df09",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "866a25bb-3fa4-4c23-ae39-2c3529b8c8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a234db48-36a0-4602-a5dc-2b243de26a74",
        "cursor": {
          "ref": "d827c01b-35a7-4778-9b01-4c47d4fd23e6",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8b7438e5-546c-40b4-8ae0-9dafd8ea6b95"
        },
        "item": {
          "id": "a234db48-36a0-4602-a5dc-2b243de26a74",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "082b5c6b-f7e1-47e1-8a92-dcf5a39041a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcdbfb0-4adf-4437-895a-ae55a6813dce",
        "cursor": {
          "ref": "6aa59455-3122-4d5b-a6bd-c068df9958ed",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "32cc11cf-e59c-4be3-a135-c44887063ec1"
        },
        "item": {
          "id": "ebcdbfb0-4adf-4437-895a-ae55a6813dce",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "18b0502d-9e74-4420-9112-2053b66c9292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96da5173-3f32-4a1b-a12d-77778de0eeb1",
        "cursor": {
          "ref": "ba936cf1-b022-430e-8691-a5b7dd2b6239",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fc8e43d2-0689-4709-9fd7-07b3cc69f4f2"
        },
        "item": {
          "id": "96da5173-3f32-4a1b-a12d-77778de0eeb1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "930e6c22-98a9-477b-b273-7189839581c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572095d3-93f0-4022-9615-94f2a7be9a0c",
        "cursor": {
          "ref": "336d2495-ccb9-451a-95e9-fe4d9a8fa343",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "387354ad-e85b-420a-8c4d-b5310c4ed546"
        },
        "item": {
          "id": "572095d3-93f0-4022-9615-94f2a7be9a0c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "749b05cd-93f4-424b-8052-aa77d41e4439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef378d0-8568-4da8-b455-5dc95c1ceffb",
        "cursor": {
          "ref": "e99d3bf3-34ff-46ca-9058-bf8dcdba82ab",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b8baa349-ac8b-416c-8b25-6b448f2e9517"
        },
        "item": {
          "id": "0ef378d0-8568-4da8-b455-5dc95c1ceffb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "31d9e2b0-7d9a-48f1-8c3c-90c9c5922617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e57e867-d154-47ce-8b35-2f85707fb11a",
        "cursor": {
          "ref": "0f780ad7-bd31-4918-b5ea-665f25558794",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4f46b2f5-d46b-47ce-b1c9-b2b56562d7bb"
        },
        "item": {
          "id": "7e57e867-d154-47ce-8b35-2f85707fb11a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a8a51dfc-71ff-42f3-a6ac-57832b6e2cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59b56ee-e41d-47ed-8a14-fbe9e562c0b4",
        "cursor": {
          "ref": "1958e2f9-b146-4691-85b4-85f73253f9a5",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3384dd32-de64-4c64-9143-6251730af6a3"
        },
        "item": {
          "id": "b59b56ee-e41d-47ed-8a14-fbe9e562c0b4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a59819ec-acfa-4ca5-912e-60c28b6ab589",
          "status": "OK",
          "code": 200,
          "responseTime": 172,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "1af4614d-3a07-4de9-a304-5a6ccac80e11",
        "cursor": {
          "ref": "2f4419cc-3438-4ecf-988e-5e05e3e6e3d5",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5b4109b7-7087-4760-a234-7ca6227d65aa"
        },
        "item": {
          "id": "1af4614d-3a07-4de9-a304-5a6ccac80e11",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1264218f-73fa-4a08-ae66-f72261f79f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae407f36-a8fb-40c1-85f5-70bdbea6b145",
        "cursor": {
          "ref": "5ec6a693-8551-4fef-ac25-44d68d6c039e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "258399e3-2440-4498-a144-66fe00a3b01e"
        },
        "item": {
          "id": "ae407f36-a8fb-40c1-85f5-70bdbea6b145",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a4a57919-cd4c-4e7b-a205-4a3d00818baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a65af28-205b-4db4-824e-f7b0a26f4ff4",
        "cursor": {
          "ref": "ab419ade-1e4a-46e1-8d58-1d845add0495",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8bc5b194-dd0c-4327-ad82-8a6119224052"
        },
        "item": {
          "id": "8a65af28-205b-4db4-824e-f7b0a26f4ff4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "89ef9c4e-f528-4967-b49d-2edc59aed87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6735d51d-7886-4823-9326-301a17ba47ba",
        "cursor": {
          "ref": "2150858b-aeb9-4802-ba8e-38c436654bb5",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b8084d39-c45d-46a7-999d-a610fd08bec4"
        },
        "item": {
          "id": "6735d51d-7886-4823-9326-301a17ba47ba",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "eb371733-fa3e-4b99-817f-ac1beb3d4743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a765cf-f23f-4b43-9a69-f244807de0da",
        "cursor": {
          "ref": "73268b0b-4a99-4c3a-8c73-f125bc64da03",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f26cafba-235d-461f-aca0-944367847aab"
        },
        "item": {
          "id": "a7a765cf-f23f-4b43-9a69-f244807de0da",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5e46e081-a333-4d16-bb1f-c4eeabecdbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764bb0e6-3637-406a-b8b2-8615e5354817",
        "cursor": {
          "ref": "8813a56c-a0da-430d-9428-3aafc4539ad2",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "52510184-d240-4cfe-991f-c47bc80a917f"
        },
        "item": {
          "id": "764bb0e6-3637-406a-b8b2-8615e5354817",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "178d85ea-c64c-4799-b0f2-8801f12ad2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab322fc2-0e9d-470f-a80c-58977e157e6e",
        "cursor": {
          "ref": "73f88815-6e8a-4167-b928-fec14b2a705b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "126eeb4f-0623-4b84-bc8e-845ff90f57c9"
        },
        "item": {
          "id": "ab322fc2-0e9d-470f-a80c-58977e157e6e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "39dabf65-ef60-4e6f-a095-185ad107600a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469e2f5c-4de4-41fa-8315-60dbed565533",
        "cursor": {
          "ref": "eea7e662-357b-4cfa-9cd0-427247511379",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c099c142-863a-4af8-a3cd-49079429ab11"
        },
        "item": {
          "id": "469e2f5c-4de4-41fa-8315-60dbed565533",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1364ea00-45f0-4c9c-a035-73e643014c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2dfd79-4082-4e46-8e70-92000f790c36",
        "cursor": {
          "ref": "1ce35324-a1b2-454c-a00a-9aefe37dc2dd",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1be76c0d-0c5e-48c2-b83a-47511ff29222"
        },
        "item": {
          "id": "be2dfd79-4082-4e46-8e70-92000f790c36",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ab837042-1d18-4dce-8eda-de19f519c57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f14083c-1518-4b95-a005-ef96fbdd8d23",
        "cursor": {
          "ref": "b64aee33-c5b6-4457-86b6-9a2fa2af34e4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ae238c91-5631-4ae8-97f0-55a541771eb2"
        },
        "item": {
          "id": "2f14083c-1518-4b95-a005-ef96fbdd8d23",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "eb250a7e-aa17-446e-a396-3fff0095ae1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bdeb93-36e3-44f4-ba69-c6bb2b852d85",
        "cursor": {
          "ref": "84204e68-21f4-45a2-8ab4-361180ad9275",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3995ef00-c26c-48f9-8279-99531d1f46f0"
        },
        "item": {
          "id": "34bdeb93-36e3-44f4-ba69-c6bb2b852d85",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "75da43ae-9371-42df-929b-2eb872249d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69660f59-c612-489f-aa1a-162a37b8b348",
        "cursor": {
          "ref": "72569900-db8e-44be-82ed-bdb296eafdfc",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "76d725b5-4f46-4cae-b199-6a9237651ad3"
        },
        "item": {
          "id": "69660f59-c612-489f-aa1a-162a37b8b348",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d6d47046-7e0d-411b-9118-c43faefefa9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fda7e4-28f6-4df8-895e-74a7882985f9",
        "cursor": {
          "ref": "60000984-2593-4194-9db3-ca67d25cf44c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "91349a89-1c7b-4975-830d-8085588ae3f6"
        },
        "item": {
          "id": "e0fda7e4-28f6-4df8-895e-74a7882985f9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "de19a6a4-f303-43e3-8569-96b03ab2477e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7743a1b9-4d99-4ca8-80f2-107874236b42",
        "cursor": {
          "ref": "aa5b0832-4b29-4f16-b332-cbf157ed3e47",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d0727d51-b09c-4664-8143-c7c2a527d7f0"
        },
        "item": {
          "id": "7743a1b9-4d99-4ca8-80f2-107874236b42",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8a8e9ea1-2403-48bc-a49a-ee634254c10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a632853-9413-4aeb-af2c-25b86ff7903f",
        "cursor": {
          "ref": "c89c1100-eafd-4771-8f4a-76133db7701b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d86c5033-feaa-4abe-8160-3f7bb2160cc0"
        },
        "item": {
          "id": "6a632853-9413-4aeb-af2c-25b86ff7903f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "be460d5d-9600-4a12-91e2-64b780331ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04905ab2-3f2e-4240-8612-8d3c1259b468",
        "cursor": {
          "ref": "e902cbbc-6b36-4ac4-954c-b26e41acdd18",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4cdabda3-f8ef-4f8a-9f6e-4914b60bdc9e"
        },
        "item": {
          "id": "04905ab2-3f2e-4240-8612-8d3c1259b468",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "12566677-671f-41af-b010-a65300ab6960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59ea05c-9854-4ba2-af37-b68fe485728d",
        "cursor": {
          "ref": "72207f14-7b0f-4ede-bb23-05f75cfce125",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "af746e5d-b92d-4605-96d4-3a829110c71e"
        },
        "item": {
          "id": "f59ea05c-9854-4ba2-af37-b68fe485728d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ad67b73b-7dde-4d0b-95b0-68641f1ae33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdfe82c-5df5-48f4-9f8c-d601f11e4d85",
        "cursor": {
          "ref": "2699ef77-1ebf-416c-af9d-1e71475a05fe",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d83ce327-25ed-450d-98b7-2d427f795917"
        },
        "item": {
          "id": "4bdfe82c-5df5-48f4-9f8c-d601f11e4d85",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "83b04f3f-3dc8-4d28-bfc9-b5d6463b989d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac504668-12f7-4c51-a029-ddc322302177",
        "cursor": {
          "ref": "4327ee6e-910c-4252-92b3-7b6a01a74e9d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "92a330d2-8c73-414f-89a7-a8bdd0fd5b51"
        },
        "item": {
          "id": "ac504668-12f7-4c51-a029-ddc322302177",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "50bb14b3-9162-428c-89d9-3ad661278785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e25e5d-ba97-459b-92d7-54454b3e276a",
        "cursor": {
          "ref": "14914458-b7a0-44a0-8d08-428aa55170e2",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "eb20c155-7db1-4ad9-bd0a-64487fc6b445"
        },
        "item": {
          "id": "65e25e5d-ba97-459b-92d7-54454b3e276a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6a0a428b-f340-4802-b264-b4eb78b35348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af26cd2-7dd9-488f-972a-0837af821cc1",
        "cursor": {
          "ref": "769a94e0-09c0-4797-9d7f-3e4bbe872e3a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "803de478-9340-4cd3-973e-fa7c673a8866"
        },
        "item": {
          "id": "5af26cd2-7dd9-488f-972a-0837af821cc1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7e40aa93-fabe-4cef-9308-79b43de99228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a727d0-13c9-4d3b-97c0-744e980ba2fa",
        "cursor": {
          "ref": "5357048d-0465-4c16-b38e-1e0631e23c0a",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cbdd8c1f-5ffa-4e40-9f78-5c3596041ef3"
        },
        "item": {
          "id": "c3a727d0-13c9-4d3b-97c0-744e980ba2fa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bfd87586-ab80-4bd3-a22c-6022e0597cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e5c396-3906-440d-b55d-a5a46f1e7fba",
        "cursor": {
          "ref": "6b1217c1-0387-455a-8558-ad92f6f45067",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5a18feb2-dca1-4edb-a598-8afe990c5aec"
        },
        "item": {
          "id": "c1e5c396-3906-440d-b55d-a5a46f1e7fba",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "af2e8bf6-7430-42e6-8081-3bd9deb11787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3cdefe-d73b-4ea9-ae64-0e60ba0280fa",
        "cursor": {
          "ref": "dfd57d37-2a9f-42d8-bf11-1b1fccec7319",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "23b7608e-8195-43be-bdb6-bf4daf52eb0b"
        },
        "item": {
          "id": "0d3cdefe-d73b-4ea9-ae64-0e60ba0280fa",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "39711e4d-879d-414a-8944-86a0550e360d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7255ef19-2ca4-4ffb-b938-dd50bc9e09fc",
        "cursor": {
          "ref": "7e2ec8d8-49ed-4820-b488-707a9991b20c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "db5447fe-b880-45bb-9240-d1d1dd2dc304"
        },
        "item": {
          "id": "7255ef19-2ca4-4ffb-b938-dd50bc9e09fc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "454ff6bf-2310-478a-9928-8b864b3ec905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003d191c-9813-47dd-80f4-674951663233",
        "cursor": {
          "ref": "5b7b15e4-5fb1-4289-92b7-db2b0995644c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7c5fb9f5-3a96-455c-97ab-444284cb6614"
        },
        "item": {
          "id": "003d191c-9813-47dd-80f4-674951663233",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cd4677b9-7169-4863-a5fa-479cdd189402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8070e93-485b-41e3-9b93-fa95905b9102",
        "cursor": {
          "ref": "482afb7f-7684-45fe-af30-3cee1e894fb8",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "59340eaf-7cc0-4e3a-b520-c24524689583"
        },
        "item": {
          "id": "e8070e93-485b-41e3-9b93-fa95905b9102",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a7f3188e-2580-445e-93d5-2818eaf3ae11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5730de5f-78d6-4954-837b-7126fd346aa9",
        "cursor": {
          "ref": "bb15eb0e-ae3e-4311-9fd8-407d6db1eefd",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "73f16ed8-04ce-4352-8999-b20413a1fde5"
        },
        "item": {
          "id": "5730de5f-78d6-4954-837b-7126fd346aa9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ea6c2bc7-1dae-49e2-a4b0-599ab18656b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d78bd3-abce-44ff-889d-499f68009712",
        "cursor": {
          "ref": "919205bb-a1a8-4b16-b26c-e0d429672faf",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0de30ecd-4c79-46fb-9edf-fea93c3fa81b"
        },
        "item": {
          "id": "08d78bd3-abce-44ff-889d-499f68009712",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "64fc3c9c-5849-4873-bd47-943d90a637a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088fc2cf-b7de-4b0b-9902-4d087e958a8a",
        "cursor": {
          "ref": "48de70a7-5902-4cbf-a5a0-a4537b45c31e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a1fe60fe-8fc5-4c59-b81c-84e6e728a06e"
        },
        "item": {
          "id": "088fc2cf-b7de-4b0b-9902-4d087e958a8a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "23e7caaf-b3e0-46bc-9e0a-8a0db6dcf83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b779ce-ba65-4fdb-b686-ee58f7fb0aba",
        "cursor": {
          "ref": "970b3caa-0fce-4b4c-8270-1d1095fbbdb7",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cfddb013-2b52-465d-ab91-83a5b66dc3d0"
        },
        "item": {
          "id": "43b779ce-ba65-4fdb-b686-ee58f7fb0aba",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "54690a2c-72f5-45a9-ad07-bd12293a8bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126eae39-0246-4c9e-9d43-1d88a993a873",
        "cursor": {
          "ref": "f944d941-873b-413c-94d0-ec4cf00cab4f",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c3611346-39a1-46d3-b804-4826794ec555"
        },
        "item": {
          "id": "126eae39-0246-4c9e-9d43-1d88a993a873",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b227cf09-099f-41e9-9324-f600fd646c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2e2df5-7a48-45b9-938a-63ca3651330e",
        "cursor": {
          "ref": "c9d5eefb-ae55-4500-8783-509c1c85ff14",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0f681cf4-da33-4071-91f9-d3c6a02a3266"
        },
        "item": {
          "id": "2b2e2df5-7a48-45b9-938a-63ca3651330e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a81bd17b-88a9-4917-8bec-d7f57f298488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590ab072-5dff-4a01-875e-ebd73c1b1895",
        "cursor": {
          "ref": "071e5c7d-7fe7-4a4c-8e87-add0796c6566",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b2f95086-eba5-4bba-a762-b734cca0f7aa"
        },
        "item": {
          "id": "590ab072-5dff-4a01-875e-ebd73c1b1895",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cdb4662b-988f-45ef-b455-c52ce1c17ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5949cf0d-37a3-495e-8887-850fd48e4a49",
        "cursor": {
          "ref": "061bdeb5-fc93-4773-a1e6-98fc82b1e1f9",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3fcda28d-3b64-45c9-a085-48c5143850be"
        },
        "item": {
          "id": "5949cf0d-37a3-495e-8887-850fd48e4a49",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5e2ff930-fabc-47ee-883f-b4f3ff41c334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef033a7-d2c5-44e0-9fec-e5380a233bdf",
        "cursor": {
          "ref": "a56ab5d6-58ba-48c7-bee3-4fa101bc7c67",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bfcf6d07-91c9-4452-9f3c-469f36a6e7a6"
        },
        "item": {
          "id": "eef033a7-d2c5-44e0-9fec-e5380a233bdf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e665422a-d6b0-4a58-b392-6038c42cb164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5c91b9-5636-4ccf-9fb1-3c721b66f1ff",
        "cursor": {
          "ref": "d0772308-743f-4126-aea9-b2d53c1127c1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6fb15ed1-0bc8-4962-be85-8818d0308927"
        },
        "item": {
          "id": "ce5c91b9-5636-4ccf-9fb1-3c721b66f1ff",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1ea7aa7d-2c6f-4245-a4d7-34f6c6399a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ad4a50-3937-498e-b4e0-ced7ecc7aca8",
        "cursor": {
          "ref": "044c0fb9-e0b3-43eb-bff9-84b3edfd8c80",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "41070e56-daea-4a96-8b63-e16141ce078d"
        },
        "item": {
          "id": "d1ad4a50-3937-498e-b4e0-ced7ecc7aca8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e9c1a329-1f25-49ce-8746-264b0dee7972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56e6334-5096-469c-adc5-966c01af0e50",
        "cursor": {
          "ref": "3a20c754-3ec9-4cc0-bb20-cc212c392e03",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "51f80b1b-e30e-4fd4-ad67-113768b601ae"
        },
        "item": {
          "id": "e56e6334-5096-469c-adc5-966c01af0e50",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "aa4ebf8e-3fdb-45c2-9de6-6b1004cbce4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f075342c-dd63-4449-a7b7-512c56108be5",
        "cursor": {
          "ref": "f98d6195-b17f-4cd7-b915-ce6d78113ebb",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "42f22d91-7823-4aca-b739-3516dcf25f10"
        },
        "item": {
          "id": "f075342c-dd63-4449-a7b7-512c56108be5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b9a5c54c-c682-4ad4-a936-44702669fe84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd217747-63b2-4e78-93dd-49b986161f1d",
        "cursor": {
          "ref": "1058ba49-3070-43ef-8d49-d2ff91ee6782",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "616b6799-161b-4ffc-a5f7-a48eb2916f23"
        },
        "item": {
          "id": "fd217747-63b2-4e78-93dd-49b986161f1d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9649736f-f123-45a3-88d2-f0c1fab4d99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e681e8e-dab6-488f-8472-7907f0a92a29",
        "cursor": {
          "ref": "ae51da4f-8e0a-472c-8eae-85a786642b5c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6eac8df9-1751-49cf-acf2-4b942c8a3409"
        },
        "item": {
          "id": "2e681e8e-dab6-488f-8472-7907f0a92a29",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "537b9a62-49a4-4c5b-9f05-403b871ecf2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bde872e-6a87-45fe-8bb0-500c0ae02c4b",
        "cursor": {
          "ref": "be6ade8c-c811-4537-95c9-df8341113a31",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7e701273-f0d9-4c1d-a56b-a43df30d0156"
        },
        "item": {
          "id": "7bde872e-6a87-45fe-8bb0-500c0ae02c4b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f7c6e58e-fd17-405f-ae8f-e67619dd70aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43926fd-f37f-45e6-ba64-a3d0772a5807",
        "cursor": {
          "ref": "00ddc44c-919d-40cc-80e3-940e7afebe45",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0cd7a177-b26c-4f7d-92a2-0add173e1a4d"
        },
        "item": {
          "id": "e43926fd-f37f-45e6-ba64-a3d0772a5807",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ed7eeeed-dea3-47f4-b3fa-1a4a69d3a47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664d0299-0304-443f-ad3a-56378b27783d",
        "cursor": {
          "ref": "bf33d9c1-caa5-4d47-8951-471fbd9f616b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d9583d71-42fb-4229-a593-7bfcecce6710"
        },
        "item": {
          "id": "664d0299-0304-443f-ad3a-56378b27783d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "939afa8d-467c-4fe2-a6be-77bb34e72bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3558ae-e50a-422f-9b87-15e7d58a9ea1",
        "cursor": {
          "ref": "ea04cbed-b4d9-4444-989e-3590ce26df39",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3b7372e0-e097-4f8b-8881-12a84e42b7ec"
        },
        "item": {
          "id": "9c3558ae-e50a-422f-9b87-15e7d58a9ea1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "12c1ce7a-d416-469b-8ff9-b6a898868726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9c855c-f3d4-4ba9-bcd5-c82a427dac75",
        "cursor": {
          "ref": "9e1958e2-fb2c-4ede-bce8-d54057569e3c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f2ae1b1a-ef2f-4630-81b9-a956d0e2f524"
        },
        "item": {
          "id": "eb9c855c-f3d4-4ba9-bcd5-c82a427dac75",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c2b787b3-be7b-4ccc-a751-7eb97f27f95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2d4eb7-9421-4fa2-8a47-374f9a7fd8c3",
        "cursor": {
          "ref": "65dcac55-c001-453b-a220-f30ff70e60c8",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ae791469-2aa2-44fa-b14f-2909edd26750"
        },
        "item": {
          "id": "bd2d4eb7-9421-4fa2-8a47-374f9a7fd8c3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b3d63d45-2f66-4d0c-8fd9-752ced8d2232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa0ef66-9f13-419e-b1b5-d685f0f3c80e",
        "cursor": {
          "ref": "471a2eaf-b47b-47f3-97c0-f9285e619430",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "37561bb4-b62d-4167-aa1d-da25e7ed7c85"
        },
        "item": {
          "id": "2aa0ef66-9f13-419e-b1b5-d685f0f3c80e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f7583e73-e3e8-43c9-953b-f74b3d25e33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90871f7-2f87-467e-8557-58855f5ec8b3",
        "cursor": {
          "ref": "d5e59bfe-8c2a-4fdf-933f-9257a449c1f9",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5daccf9e-91d8-4207-8e92-bdbf6dc1a3b4"
        },
        "item": {
          "id": "c90871f7-2f87-467e-8557-58855f5ec8b3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cf94089c-55bc-4915-99a8-28d0925b0d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c061a7f6-5a58-403b-8373-62cdc299d6dd",
        "cursor": {
          "ref": "2ba92b4f-c2a0-47ae-8ce5-563c0be4b4ea",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "edeffe16-c7ff-421b-99e8-8a05793b712e"
        },
        "item": {
          "id": "c061a7f6-5a58-403b-8373-62cdc299d6dd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a9fda900-791b-42e5-b78a-dd92d95601b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed44078-091e-47f4-abe5-12c40fae9a10",
        "cursor": {
          "ref": "e67c2218-1d76-40e2-8703-a3e5da276067",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "36b3dfcf-bdca-432d-b5a1-c3bcde1872d9"
        },
        "item": {
          "id": "1ed44078-091e-47f4-abe5-12c40fae9a10",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b1bae0c6-4297-44c1-b6b5-ec0c4766a04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaac9199-7a99-44b0-b9f5-171c0c25f4f5",
        "cursor": {
          "ref": "38b55aec-d03d-43da-8ff3-bdc8a0341586",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a6a4a1e6-3591-4677-9eef-0d02e87301e1"
        },
        "item": {
          "id": "aaac9199-7a99-44b0-b9f5-171c0c25f4f5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "aac51e7f-5b60-4e07-9f8c-42b2e355c167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5976215f-81e5-4bba-8c29-e06733e003fe",
        "cursor": {
          "ref": "4cb42ca6-a2d1-4b4a-9bef-72526275aa68",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "138b9057-f560-4587-88b8-689556f6e555"
        },
        "item": {
          "id": "5976215f-81e5-4bba-8c29-e06733e003fe",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f764c489-c2df-4897-ada9-50153e4b7d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6925e02-c2df-472b-ae78-3998a37cfccc",
        "cursor": {
          "ref": "e65f2614-b9c5-4143-9a60-9d7fd25771a4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "89ff4146-5cf6-40b4-9403-becf96f892bf"
        },
        "item": {
          "id": "d6925e02-c2df-472b-ae78-3998a37cfccc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "77d7b77c-34c6-4579-8d25-45f1928c88c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68254d3-a7ee-422e-83b0-09019add0873",
        "cursor": {
          "ref": "50931fba-ed2f-4180-8441-863d5604f9db",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3d062699-e1b0-4e8a-877c-882d86fb09f7"
        },
        "item": {
          "id": "e68254d3-a7ee-422e-83b0-09019add0873",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "07b3c9b7-aef9-42a6-9b2d-0717af664d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2d065a-fe01-4d4f-b859-ba037a22de79",
        "cursor": {
          "ref": "a8d9eec0-b0ab-4da7-88cc-2fcd9efd5231",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f80202f7-4831-44af-8a8d-0c0c3c91e9bc"
        },
        "item": {
          "id": "5b2d065a-fe01-4d4f-b859-ba037a22de79",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ee4e9844-ae3b-47f1-8553-46ab71061c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486045f8-72a1-43b2-9fc0-b31ef7169ac2",
        "cursor": {
          "ref": "395132f5-a060-4c18-a3a0-69fd6895d910",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f9c5b249-ab09-439c-bd23-1d76d1c6325a"
        },
        "item": {
          "id": "486045f8-72a1-43b2-9fc0-b31ef7169ac2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7ed798e6-55ed-4d09-8d4c-51a13d854a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854c3ff6-b644-408f-8c2e-9fb1456bd8e9",
        "cursor": {
          "ref": "a184335a-fed7-495e-9b62-e6cad437c5ec",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e0212a45-a955-46c5-98fb-993b213aebdc"
        },
        "item": {
          "id": "854c3ff6-b644-408f-8c2e-9fb1456bd8e9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "99297cc4-9cfc-4f41-926a-515d79234630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbf65a3-d9df-4abb-a524-990f8bc1a396",
        "cursor": {
          "ref": "63e49475-235b-4072-940f-0c944088575c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "965a0bc9-c764-4cca-a94c-503ce6068af2"
        },
        "item": {
          "id": "dcbf65a3-d9df-4abb-a524-990f8bc1a396",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "351fd367-5da0-47a9-b7e9-01d990f98e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965d882d-c325-4b44-8ae7-561650cd8b11",
        "cursor": {
          "ref": "77e126fe-1401-4298-b091-beee5ab4d27a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "447015f9-0aed-4745-a9b2-08c3937405b3"
        },
        "item": {
          "id": "965d882d-c325-4b44-8ae7-561650cd8b11",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ad1c19ac-a473-4e41-958a-79a44326a47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5163f63-e57c-4103-93ff-8fc3bd1ac296",
        "cursor": {
          "ref": "4a99333a-0dd2-45d3-94ac-ea2dee3b62b9",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "113eb308-d679-481a-bcc9-4bfe5779b30a"
        },
        "item": {
          "id": "e5163f63-e57c-4103-93ff-8fc3bd1ac296",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fa46bfc3-e83e-44e5-a249-30e065153da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff00fd3-e91a-4557-a9f4-5d219a88deeb",
        "cursor": {
          "ref": "dda74bf1-bda3-4727-aebd-d48ca9b787f7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e35c8a6c-0a66-4929-bbd3-26777ef4b0d2"
        },
        "item": {
          "id": "aff00fd3-e91a-4557-a9f4-5d219a88deeb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "614b8a26-34e4-4e23-831b-1b2ff2040fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6997d9a-c6ac-49d0-8b9e-8034ae9ef4b6",
        "cursor": {
          "ref": "0514e9ef-6812-41c1-9866-5a8b6a37d13d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d781e9c1-4886-4fb3-a357-ebcd6a384633"
        },
        "item": {
          "id": "e6997d9a-c6ac-49d0-8b9e-8034ae9ef4b6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bc09af9c-537b-4601-b6b6-36a6e991e115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d3f8b5-b1f6-47c9-ac01-9407edc89484",
        "cursor": {
          "ref": "92346117-7c86-4161-96ff-97e25eee0451",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fd94946b-2358-4923-a901-34294d0fcfcd"
        },
        "item": {
          "id": "23d3f8b5-b1f6-47c9-ac01-9407edc89484",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a0e26ec0-f69b-426c-bc6f-52f5a954eff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6f739f-bf1f-4889-a171-c714699f120f",
        "cursor": {
          "ref": "65d7dbee-aa77-4c60-a235-773da32fdf8f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "10b95229-542a-464b-ba6f-2128feb48e36"
        },
        "item": {
          "id": "3b6f739f-bf1f-4889-a171-c714699f120f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8e427063-abb5-4340-b57b-d76041bfddc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec5fe7c-9fdd-4529-9269-77aa2b774d3b",
        "cursor": {
          "ref": "421a0f61-a0f2-44c8-adc6-30e2fda19f32",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cb6f82c8-153d-4e6c-9a9b-33184e1bcfff"
        },
        "item": {
          "id": "bec5fe7c-9fdd-4529-9269-77aa2b774d3b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "97807107-2698-4512-8408-cf0a315a94bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280caa44-2c4b-4697-b97e-d14ccc4a1521",
        "cursor": {
          "ref": "7c2aeb3f-bc8b-48ed-8ac4-5b78a1df58c3",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b4f0fa1d-2df5-4458-88b2-aa412a55d290"
        },
        "item": {
          "id": "280caa44-2c4b-4697-b97e-d14ccc4a1521",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a7a525c0-e61f-4bbe-852b-4018b5a7c6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f471edb-31f5-4282-8852-66e7103d5bec",
        "cursor": {
          "ref": "d8c73dc4-748a-41d3-8231-e8cb2fd134c7",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "aafdf2f1-bcdf-4bf8-99d9-390d5760b1e1"
        },
        "item": {
          "id": "9f471edb-31f5-4282-8852-66e7103d5bec",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "50de90ba-9989-42d3-b9bf-36b90ff61107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015e3c9a-254e-4b9a-a9b6-e9e881075e72",
        "cursor": {
          "ref": "c5aec89a-44b1-4950-a8c7-6f568007524b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7fa8766c-4481-4241-ae07-4e850698f209"
        },
        "item": {
          "id": "015e3c9a-254e-4b9a-a9b6-e9e881075e72",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "48c356e6-dc3b-4068-b654-52c032f031ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82765318-4dfc-46de-af72-d8d3ba70f903",
        "cursor": {
          "ref": "275bfd57-bdd8-4514-ace5-74eec869226e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fdc1fb7c-fe49-4ce9-8c0d-c9a7592cdc79"
        },
        "item": {
          "id": "82765318-4dfc-46de-af72-d8d3ba70f903",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fe3b33f4-0e9a-4d6c-81b6-45a9d3310429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79851c6-2d56-4fcb-99e5-e828a353861b",
        "cursor": {
          "ref": "4f00ab70-4400-4309-a147-ee2fdf95552d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "755f34b3-5edc-49ef-a76b-bdca4d15621d"
        },
        "item": {
          "id": "f79851c6-2d56-4fcb-99e5-e828a353861b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e4e11f27-3b7a-4c02-a9d9-b66f10b9d258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a7bc5c-0e32-4a96-993d-ca1084fee050",
        "cursor": {
          "ref": "1aea936d-fa50-472b-a842-d1362e53d5a7",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3dcc92d9-a081-4d2a-81cd-151e82943951"
        },
        "item": {
          "id": "51a7bc5c-0e32-4a96-993d-ca1084fee050",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fc80cbcc-fcda-46a2-8830-da9780bc3b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aca747a-8792-4bb4-b36c-1caec42cf0ae",
        "cursor": {
          "ref": "6c7fc1f3-9417-480e-b104-09929a242a4f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5aa22664-5d6c-4131-9099-38d3fd51056b"
        },
        "item": {
          "id": "9aca747a-8792-4bb4-b36c-1caec42cf0ae",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0306c3af-6c0a-4802-b169-bc576d65432d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63a50b0-b377-4762-8574-a881d5b9bb33",
        "cursor": {
          "ref": "a7bbedf6-cecc-44e7-863b-de9bbf9c12f4",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8c037c47-5d07-4564-a4d4-c8a1fc83b81f"
        },
        "item": {
          "id": "f63a50b0-b377-4762-8574-a881d5b9bb33",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "923d3652-f883-45fd-a37f-f1d0fe994aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e1e412-f011-4aca-9f3e-dcb930bbc325",
        "cursor": {
          "ref": "be05ba88-e353-4a75-8a9a-c72a1dd40e93",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8315c652-5f96-4c3c-b8a2-31575cd410cd"
        },
        "item": {
          "id": "34e1e412-f011-4aca-9f3e-dcb930bbc325",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "697ab5bb-0d7c-4470-b30e-798803f09e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830df580-a75a-4a26-9e5a-967b0386bd03",
        "cursor": {
          "ref": "ffb31709-68b6-428e-a52c-f577201dbdad",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "626a6adb-c8f3-43bb-a5d4-1010d019dde5"
        },
        "item": {
          "id": "830df580-a75a-4a26-9e5a-967b0386bd03",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b96f0940-4f0a-42d1-a441-cef61229a32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4b791e-d135-4e79-b901-3d9927fe3b92",
        "cursor": {
          "ref": "d5c1f80b-d12e-43d3-9d55-5afcd472bf12",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5c140a3f-2ffa-468e-be86-93ef4d4dffd7"
        },
        "item": {
          "id": "ae4b791e-d135-4e79-b901-3d9927fe3b92",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7505c81c-2998-4e6b-af61-cee57b158b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd68bb02-d97b-42e6-837a-6652ff546c08",
        "cursor": {
          "ref": "6bdb187b-d4a0-4253-b769-ac9da470db6c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3721f188-fe4d-47da-8cc4-3ceeb526fc06"
        },
        "item": {
          "id": "dd68bb02-d97b-42e6-837a-6652ff546c08",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "04c67744-f547-4709-a6cf-8505415cd84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62d4d46-2cfa-435e-9b99-b58aeaee3c1c",
        "cursor": {
          "ref": "1e8891d7-b82b-4c14-b7a5-988e9ffb4f2f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eca6ae57-efca-4e46-8f08-9003e5255456"
        },
        "item": {
          "id": "d62d4d46-2cfa-435e-9b99-b58aeaee3c1c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "21522480-02f6-4591-b678-7cca514e2d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34815312-689e-4462-ac60-3129fbce4381",
        "cursor": {
          "ref": "e8dde1a1-1cb4-4420-9f4e-8cb9d68421fb",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0b036df9-f9a6-40de-ac8e-202f478e7403"
        },
        "item": {
          "id": "34815312-689e-4462-ac60-3129fbce4381",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "25ac47d1-7940-4cb3-a629-d466f393ff36",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef7e757-800a-4b25-a9ef-ab6e59f2783d",
        "cursor": {
          "ref": "e9a67439-8d1a-46ff-ad01-6e24e3486492",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d9f300cd-9e94-47f4-8b8f-11d32e4695aa"
        },
        "item": {
          "id": "cef7e757-800a-4b25-a9ef-ab6e59f2783d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a6718fb2-0a88-4109-a5cf-e0c6d15bc29a",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f285718-54e3-44b9-aa55-f905f10fa2bd",
        "cursor": {
          "ref": "0ca0a652-aea0-4a6d-b3eb-ee659831c2ad",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ada7ca02-90b2-4b23-a753-a1fd03b9bc13"
        },
        "item": {
          "id": "4f285718-54e3-44b9-aa55-f905f10fa2bd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bc11736e-6f41-4073-8c29-4514db4988a4",
          "status": "OK",
          "code": 200,
          "responseTime": 3933,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8b6356-72d6-43b0-82f5-1c5f35cb8e0d",
        "cursor": {
          "ref": "4b426a92-7ef5-4d0e-be97-e19857b3ed99",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "87ae4b55-2951-4f2d-b89e-8ee4aa4fa721"
        },
        "item": {
          "id": "bf8b6356-72d6-43b0-82f5-1c5f35cb8e0d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "77d5dcbf-7138-48e6-88ed-637473285167",
          "status": "OK",
          "code": 200,
          "responseTime": 3618,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2c0515-d22f-4ef4-9c7a-d4de6bc94e86",
        "cursor": {
          "ref": "cba0bbef-4868-4449-8988-93ce47658010",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5e5ab113-3251-45be-833c-a0bfc3eac840"
        },
        "item": {
          "id": "df2c0515-d22f-4ef4-9c7a-d4de6bc94e86",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5ebc94d0-6c53-4de3-9a1f-2d69945fd398",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2c0515-d22f-4ef4-9c7a-d4de6bc94e86",
        "cursor": {
          "ref": "cba0bbef-4868-4449-8988-93ce47658010",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5e5ab113-3251-45be-833c-a0bfc3eac840"
        },
        "item": {
          "id": "df2c0515-d22f-4ef4-9c7a-d4de6bc94e86",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5ebc94d0-6c53-4de3-9a1f-2d69945fd398",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae4c742-b2c7-4075-91db-1f0f69556a48",
        "cursor": {
          "ref": "f29edf7d-f838-4b5e-b82e-25349ab35654",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "71065824-e1a6-4e96-a2e6-461fe9f9a52f"
        },
        "item": {
          "id": "eae4c742-b2c7-4075-91db-1f0f69556a48",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5ae4c852-da94-4889-bdfd-28709eec9c3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfff5e8-2d90-437d-8c42-c664aae839bb",
        "cursor": {
          "ref": "be5db215-3887-401f-bd09-09b13f5970c1",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "22799c5b-4b2e-43c6-bc52-1591cf43a429"
        },
        "item": {
          "id": "6dfff5e8-2d90-437d-8c42-c664aae839bb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bfe101d6-010f-49af-b99a-e1d526e3854f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}