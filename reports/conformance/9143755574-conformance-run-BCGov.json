{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fc8ba529-083d-472d-969e-9287ecbc41f0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6d7a28ab-c694-45c2-8e00-efc05d6f794e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "630f3de8-b368-40f2-bcd7-c96d4abc95f4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "193fe9ec-7cc1-45e5-a2f5-4409051fd500"
                }
              }
            ]
          },
          {
            "id": "d72599dc-092a-499f-a9dd-d2753c736b55",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5fd57b6-74c1-4f63-8fbc-ce16645723c0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "79680430-1408-4138-9aab-908f09a2ca0e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a6003225-e033-426f-8b94-8466c4eec78a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f916de04-5537-48c2-8905-fa6a7d40b1e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4cb2d847-6c60-4f85-9fbf-803d71f5d33c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38866c25-4535-4d84-8ce1-50b1b4c14406",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "703c5219-df40-4799-8ba8-f774cc254a16"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb4d8d22-c8ff-4dc1-851e-60f535f3ef49",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ce8b7c9-9fa5-4450-a7ba-120fe9347ba3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1050b168-6ef6-4856-8460-0ad20dacb65b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc01a051-0b5f-4608-af0e-faa05a40adf9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0f42292-d721-46a0-8f85-6673a467d5b2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c57fc579-babb-42bd-969b-8980e258cc36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7d5bce2-fde1-441a-9eb3-ce065959d8e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc58d7d2-b4f8-495d-a1ae-78f4fea6754a"
            }
          }
        ]
      },
      {
        "id": "bdd6eb78-3683-4916-a715-17726df94709",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fb5c4238-a326-4402-a911-d91d4870c2c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31ef3a50-8006-44ef-89ce-f91b4370683b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "996d486b-9228-430e-bde4-29f9b4bf7597",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc44f132-6900-4d42-9be7-89269b39b151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dabee309-03cf-4cc8-9629-f0dc0fde6f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e259f75-88a2-462a-8f47-d835c20778f3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9620182e-8b9f-4222-8f7c-cb59d2747c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfe7dbd1-6b31-406a-898a-30739b7ab672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66965a4-fdb9-4aa2-885d-d1873453473f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561a3a4f-3d94-450f-be2b-ca027ba09b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b015a01f-b2b0-47aa-a48b-7745b850085c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2535ab30-c76f-4c0b-a6f5-3341692cbe61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f9e5b42-c455-45d2-b2df-9e311c3adc4c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a68ccfe-8e0a-4a6f-b982-3a79f771ad59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db1c3c55-317d-46b4-b19d-42d91daf14a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986b9155-f4e3-4847-af07-41cc90cbf05c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c079366a-924f-44fa-abfe-84f8bbdfdab2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9fd5a911-81f3-4d3c-b58c-f7f65b02061e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e2307bd5-8151-4309-b0c2-345636d3eb46",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04b656c0-67c6-4dd7-b7ba-bdf925da86b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c723459f-e5cd-498d-9aab-4b0f57313161"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64a78754-0ecb-462d-b392-cc1fb2af4514",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c4f359ab-5f91-4c51-9a94-6f3f024bcf96"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "034ec7a5-325c-401b-a8a9-dfc818f8f3d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d3d7ef8-eced-4fb1-8f3d-d571d71a83ad"
            }
          }
        ]
      },
      {
        "id": "3b5ffde7-0e5c-4d6a-991a-0409ba1ee34e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b9cf8bd0-489c-4190-bcd2-d6a20b3c2bc5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f05dbf9-269f-476f-99f1-645a4ff98cda",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3983da68-8000-4a40-91e4-e968aa931dcb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf71645-8b0e-4a27-ab7e-6c8547331303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fc6607-71d5-4ef0-a546-787d353b03e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62241367-1dc7-46c4-b218-ee9b4bd3a66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56d240b1-5337-4f28-b900-f570cb2fa774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2292a7-9515-483e-b746-c55963d2e7d6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018abbeb-c026-4cc5-b204-cdd2dcd49952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0030ee01-dea7-4adc-9fda-27aaf9bb47c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2480b7d-4a06-4f01-8e15-1ed95c5aa1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed81426b-08c3-4b87-9be2-a104378f1123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c19fdd3-b555-42a1-81ef-ce78ad4bbde1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315cf103-a517-4c77-9371-e6909dc59149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e636bf7d-74d4-49b1-9cb0-769089cc9d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff49fca-e319-42ae-9a0a-c6b7555df56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "755c99b0-c589-4c3b-816b-55b8f18f87a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24b9729-32cc-4c94-85b9-17f40af463cb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e292b4c-6cee-46c4-a86b-56fecd868210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19535c53-b302-42f5-8cd1-826aa051c63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5baae7-b10c-4c60-80e4-d519ef059b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bd3f169-9dab-4863-bcc8-962e034034bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f443a0-e51b-4e27-bac4-94a67611123c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fb38b9-7f2b-47b6-bae7-6f0d78124c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7238170-f60f-4dfa-9957-1ca4126858a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5fc1e9-dc9e-41f0-8205-91735b35f08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dc8f563-a725-410f-839f-4d38eaabf753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2a1347-5d6d-4886-b250-5a16fa4a8c3f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c15b134-7052-4a6d-8139-e7c2a36a3b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a83f58-e378-42d2-bb83-e74d193e9a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39ea78c-adc7-4bdb-92aa-fa8337884779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0aeb0a65-9726-4a6c-a307-221373935955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9104bdfb-6de5-45c1-bbb9-346776f1a0f5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b6ceec-e7af-4f47-aa38-1e82ed1ec623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060690d6-8b0e-43ff-869b-300f96445fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d68d87-863a-4c9f-aff7-c0a00c8ff3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5723b9d-35b4-4e6c-ae76-b248e43a308b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e2696d-456b-4f9e-b869-1fcbf89224cc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcf064b-c5c5-40aa-876f-606cdc1b30f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7422e5-77e0-4922-b9a5-958de8dff4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d6cc85-4f12-4b70-a481-a573704acd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba0f2140-0af7-4976-8045-462935c38fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f837f5-afd1-4d5e-a803-380f0a764d91",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214ca916-b5ed-4c64-a44c-60bce2d57a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b56a22-ae7c-4d6c-a3da-6c9a1f43e888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828f03e7-3387-4240-921b-c14ff3abd510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d40fc907-5eb6-4706-b0be-ec2e1080501a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c13ca87-4b6d-49f1-b437-845d3e835feb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93525f0f-c40c-468a-be9b-a7d34f73f449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae997679-e036-4ec8-aaa4-e747ab5ff083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9cbed8-cf75-44f7-999a-120510fc3d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5482ff6d-9212-43de-bdf6-8bc856420a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8345e4f-6c41-4870-b976-9401c73fae67",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c7442a-805c-452e-a5a9-b51e113966db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c7e02b-ea74-447b-a0c1-7797064f32d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a331a3fc-139b-42d6-824f-6e3d9d45c4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87846e31-2680-4f05-9e34-3b0a1e9c9193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1219a718-23ee-482a-bab1-34fa91839235",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943c1cd5-b467-4922-a6bd-8c4631b2dac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07832e7-eea0-4b06-93b8-e2236f4dad5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cde59c4-bfe6-4a49-b14d-da72619a1538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b69617db-3eba-44ba-ab5a-80993f544d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8b8e7d-b05f-416a-a066-c68cc279eb7d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0971788f-4b98-4f58-80c4-06d664ca603a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934295d3-1dec-4bd0-b1da-99453fbe6805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd4abd9-ad2a-4928-809b-00bd970f15d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6078a681-cb1d-40b4-9c4a-095868b2e541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e24800-5f60-4901-8f59-01f60c665d6d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d28d5d0-45ad-4da1-bee3-7500f8cdaf8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6616d010-622a-403a-8493-8d89789d3cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10f80f7-93c8-46c9-8f24-9e62e4c0187d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d4c41f5-d9c2-4bc2-a698-9fedf82f84f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2544779-4439-42e0-ba33-7f14fb2d45c8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdd1c4f-d194-4f44-8299-caed17b75f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9717997-538d-458c-b230-0a3e36d1f5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee61d0c-ccf1-4e55-a585-bbb589fc4da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3469e25b-8554-4887-b198-7356cfbd2b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d66b94-26b0-4f76-a5a6-78b1ef8b3e8e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684d2188-6702-44c2-bbfa-426376545d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15d703b-cbc9-4165-b9dd-3cdd9520ec2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0ec73a-6ae2-4d05-9afb-0d949bb34114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0589a818-e421-4e8d-b16a-f257140f9e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca6f9a1-df62-4298-a6ab-f25cb86ab548",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c826c15-2a90-4ae1-a46e-f84aedf6eb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13269a85-2bfc-4f3e-8fa5-ef2a6050b5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa9b243-475f-4d9d-b045-5bf25267e90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9273bd2c-fbc9-41dc-b530-ca03f435f09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdea977e-b523-42e9-b4c5-efe871f67687",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cef7b19-2101-45f3-9ad5-f82f383cd822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e235c0bc-6a0c-478c-9ae8-f157b10bed32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289204d5-3523-44fa-bafc-079b5d2a774c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf25ed3-b0e9-4524-bb6b-1c1da46650e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f1161e-7560-4a35-ae62-da519d34478c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c83cfbf-964d-44d9-abb3-45f36ca865ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da14eb5-2343-4cec-933a-c3ef3f3fb1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad69a06e-1291-4a59-9f6d-8706aaee1675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9b8bc3-d185-48d7-b328-744a7686f641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588fd036-48f3-4b79-ab95-c26f00a18041",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349099c5-a3d4-41f4-b356-69488456345a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d95cb1e-1286-45b6-9fc0-d014ae27fbe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e4442f-c0f5-44aa-8122-d95798793cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ead06330-0b71-4ff2-80ba-d1b46418895f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87d0af7-d2ed-41d6-b6b3-32d0152930ca",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c9d276-9066-4209-aa6a-172ccc116a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765fca99-1b40-43d4-ad16-806530b15ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec4ed78-eda7-44a6-96a8-cda6cf09eeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "547baaa3-1ab4-44d9-a7f9-256ef7cdb1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4698db-eacc-4436-8b51-dc25bf3e3294",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cad4c50-cca9-469e-9225-9ab7f673fe57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97eef30-52e2-469f-a34f-61a80bc8ce85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d517e8b3-7ce5-42bd-bb0d-0c1a6edc87ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2be57eb5-8fe4-41bb-a6fb-e9d3fbb3fa47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e2c9c7-ff44-45e8-8551-08974f303c2b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030d4a19-0ef8-4023-99bb-64c35fc66b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cba2c91-00fa-4660-a411-8fb15d4f7eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ad06e0-4dee-4bfa-b25d-00c086377ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "036c67a3-e315-4d91-a600-f78cf8877c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc91cca-9b71-49a2-8d57-a13ce85f7ad3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b960bb66-bf20-48ea-8af5-5c907962fcf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35ba1fc-3e40-471f-b72e-9429b6cfda86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e43689-1d06-4970-b0be-80a478475428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb01ed77-9b44-4ef5-ae92-06f6a8f4f98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64187155-03dc-414b-a252-bdc8ddd8e21c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2633dc-e716-42e2-baa4-7e335794b644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7553777e-b9c5-432d-bd52-ac9df14ac2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb94e6a4-5d32-4347-9eae-0ee9ed489a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e21ae463-8b16-471f-90d0-d68780abd42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7b44ab-db60-4cdf-9cc1-a25c9a9d3b64",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b3529f-e3ed-48b2-a2b0-e3e2f8d7c130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd84adec-9640-457b-bb47-cf809f49628f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4ba851-85ed-4b80-a451-d5e3bc014641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd17008-994d-45d9-8c86-544c39a7efcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f33057-dc98-488e-ac98-dbcc1a268a1c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9967c2f1-77a2-4cfd-bf05-9e06d2f6e887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b442337-0705-4ce0-b509-635fb8f74f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bcdf9a-d560-4164-a926-a4bc2a9ae262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd387aa5-e643-4081-a4ae-d9765057bfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7554da88-eeb0-4d71-9cb2-3357b20ea6b7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ffff28-4f67-470f-af14-be59fbe7dcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d47c5d-5758-4660-b133-2e570594683b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb77cc8-8684-4b87-b335-f4c5f4e80634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0afc207e-d8f2-4d83-a11f-9a218670ad57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97567462-8ee0-4a5a-b72b-1dfd12d2f181",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dc78ca-14fb-4ef9-b6ee-5db867bfaf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df04b09a-c867-4428-bd32-47811d758bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88012ebb-cc15-4494-82e5-a203a04af1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f41fe06-8d7e-4b5a-afaa-fbec89bf53b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8e1030-01cd-4f54-bdb5-f85999e7e842",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e2dd50-1965-4910-a4fd-6d0b135d6e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3615a913-3c92-439d-bc3b-754a3dc39375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580ccc39-1fbe-428b-8666-825fffc9aaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5b9718-b7cd-4f22-8a8e-0f97d8cfc078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62e3530-f05c-4d3f-aaae-c131dd993037",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be90415-796a-4dcd-adfa-7e18552d3d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d112e2-198c-44d7-8887-5c35cb51ef85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd29b2c6-a89c-424d-958c-77bcf036d2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "581a2b6c-3115-4333-965b-7075c41679a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e25497-59c2-4795-93ae-d284b23c1a70",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a81a8fa-e153-4c1e-86d5-b04ef0fb8148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf5e3b0-23c8-4ad7-a6b4-8665f5ea6391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab221169-caab-449e-9ccb-bf47fdfd345d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31417c06-fd47-4159-9dc5-c53fb5df0340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c8f1df-1221-439d-aca8-c345238b06b4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b284790-bc95-4b0f-969f-fa67c223c84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47046ee-66b7-498f-9c27-1aaa2ee315c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06a9116-072e-4224-933d-dadfa16560a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1faa4ebf-e72e-4958-80a0-174fc25ba893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661f9660-edd3-4953-81ce-4ce31006bf66",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48585f53-21fc-47b7-b468-63c7d1b50d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610bd6b6-fabf-45c6-8140-10a883f0a6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf1460b-8f74-4d92-b8d6-f8f5e407711c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1390e62b-9fcf-45ca-ab52-285ba29815df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ececef-43d7-42d9-94a8-6c5c936732aa",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0396be96-b533-44bf-9f3a-435f52b2a560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0112c1-84d5-438f-a364-72aee31580a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbf6906-a2b8-48cb-84cc-f54216d758e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2311706b-2268-4729-990d-a45c13a2237d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d119052-cb84-460d-935e-478e5a24b480",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b5b414-2d2d-4224-8ebe-8566119da28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "326065d1-740d-4a9d-84a8-c258de97ba80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793769bf-1af8-4c10-8ac0-a3472d2d3b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc8b184-18c6-4917-9fe8-d52a09db7d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476109da-eed9-4e60-be15-89b174e5fefc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74eb77ea-8c02-4a4c-9819-da588b05d0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c666e36-c890-4103-b18e-5ad1e5dfcad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12e03fa-bf8e-4dc3-958a-58b33a94f771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fce4f3b-0a76-419a-b7da-cd0537d9d7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e73bde-427d-45bc-9e99-59afca0ba49c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69eea11b-2f25-4e5a-8c30-e7f5efb70da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71cf299d-abe4-4f77-bad5-a98678346246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4df0fbc-f918-42a8-897c-c89c4e4b1635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bea98039-48c6-4e48-9da1-02a78a62972b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca036867-b19d-44ab-8174-9bb19afd426c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd68ac6d-dc2e-40b9-a6c9-bc57b14657c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4927e4-325f-45aa-8669-2ee30ff11414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63d48de-280b-460d-9d6a-5e8c59749f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "32bb8e6e-626f-4fb3-8e91-fed945fb1f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49188a43-037e-491e-bc5b-53283cea6aa3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa30ecd-a94d-450d-84c4-a03113e2fc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2adbeafb-89b8-475c-832a-297849bc7193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9ee3d7-c5b2-441d-bfaf-7f0b03a37246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "82840406-38a9-4ffc-b55d-403cef21b79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e435a9a-c106-4297-a01b-1cca9f3fb8ad",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd48917-0694-41cc-bd3f-477606c3e692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a364b60-7339-46e5-b3e8-65ddb287a2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8630f326-fb6e-4d87-bd17-a471b595bc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "da377bce-cd5e-458f-b38a-c14612f8fe9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af974cc7-c9cd-42f7-a835-a4edf3fd5d5b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1753e8b0-044e-43f2-9c7d-baf787cdcfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577a7ad2-9019-47ff-a355-f65fcf2ad133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adcd1f0-8f1c-4b81-841b-83633a69e23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3bacc91c-e4ca-43c0-9f6d-633049016eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432ab56d-2e97-476e-8422-5763ccf64480",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cc0812-e974-4e45-af5f-2ff3592ca3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46339458-1cf9-4da2-952a-41d46e14e317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad0d09d-c238-471e-9ae4-16c92a76fa13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6196e2fc-5027-430a-b266-93127d3e2aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ba8327-f97c-4fce-aed4-8051fcac0a0a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed393f3-9d77-46ea-8589-1547119891d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c21122-9982-48f2-8087-2f65627a5eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504ff79b-2f59-463b-9a93-304cadbe86af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ea169b-55f1-4a4d-a960-ce3a383d7b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e872c2f-091b-4587-88c0-31447d4bbd66",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed5526d-d2d2-42de-8516-948a7ce3739b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69055a32-2811-446c-ae5a-30279825d5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d113c4-a037-481a-9cff-c379384bd0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe1b2af-dc4a-4414-935d-eb7748672513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99defd54-e4ae-4f6d-b791-6a72feb6cb67",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45906056-58cc-44c4-b56a-0d14c17104b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4f6b63-382e-47f9-b4fe-606a310d2871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578fb97f-0e02-46b7-b13f-2bbc8b9994b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3361c1b6-ab8b-4b7b-96f7-1117ade19007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79c88d5-ba5a-4fc0-9579-aa4562e3d72f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08f8018-0230-4c55-97db-407c6eb76806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fdabe76-faca-4158-906d-d330158cef70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38af12cb-fc19-46c0-b025-7df5daf5c401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0816f963-2a9e-408f-8131-60f20515b59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a781e873-64a6-45ca-b22d-08acea7e5e73",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66b5476-1bd7-4d4f-bf02-486f599a4b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf2958b-031d-428b-8982-34d04619c2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db284d42-5a61-4fce-8d61-86128107a186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32ecc599-82c9-4f6a-8808-d9e472cf6f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7272c8e5-4770-429b-8fd9-d8fd88f62ba1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635b4524-7966-4019-a442-2f9c1b8f994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9bf55c-1ef5-4d48-82b5-0ca35229b80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4fee8e-0f9a-44f2-9855-fe55286138f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c87dc84f-20c5-4368-b0ef-e3363ae5c6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f3d049-b4f2-4d7d-8824-5d343834bafd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b810dd-ee62-46d7-875a-3fb8e3846c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ec75a4-0e1a-47a8-8f84-8cc5cc088606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4de0b2-00b8-436a-aad9-a3a450352a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07b24dda-f401-41e6-88c2-4c411333ba50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0dfe740-dbad-4308-8830-6fb15fde8c35",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e99366d-6fee-4d23-b560-6a72f1f3c4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edbb497-41ee-438c-b39b-c44ae25912f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb63ba43-5df6-4fa5-b862-79e76099f05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4efd8334-fed8-40ad-8b83-8ad8251b3e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88cc52a-cb13-4849-ac8a-f7738b3b6f58",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea3ea84-da42-4653-a512-5f28bdc597bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da62fef-0265-4088-b970-79e56c4d3dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620c359e-27ef-4c44-a5ff-5126922d6efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a28d49-da1a-462e-b03c-3e5404839e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36b4f2a-1403-47a4-a120-c49e82105bf6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1e65bc-0a04-4b86-9205-c5e25a889864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5638d9f8-1db0-4624-a14e-024959170b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2f722a-0f36-4900-bd40-c5fc571f7366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90d582be-dcaf-4d66-9c3b-6944da138b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0d46dc-951a-4d15-a444-bfe99f03cf6d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948af52d-db14-4ed1-b58a-9d28610a98ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901258b4-d811-4b78-be5a-ef46016fd467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c1acd8-9e3f-4cab-a7f8-466d87ff5acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8152358a-a87b-4d60-a3fb-638ecf974c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533b85ed-c919-4171-abd6-86ad3fc428ef",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6e0182-8f08-4d29-b28e-d575003f1147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112a72bc-5cb5-4229-b643-04da03d38827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b2f1a0-eace-4cb9-9cc0-2a0adc646dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1531f042-46aa-4edd-862b-2428640e1ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbbb4a5-c49c-4f3d-bdea-187cf667ba31",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8450a2f9-1ced-4f7d-b80c-072a1a6164ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2154d39b-5209-4587-b81f-b29c02d970ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef3c287-9cf3-460c-97e5-5eeeb3080afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cd98a545-f58d-4801-8ed6-efe09fd4111c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cde959b-d6b2-4f62-8a9d-f054b535aa4d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1979658c-1f63-4e7b-9c5c-10cf181fbd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172cef11-eabe-422a-8c96-5e9710c1e3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22cafd0-68f6-4fdd-8a7f-87486cfd26e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "292ea2d6-a55d-4b9b-b425-06d196d0702e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c560cc-d317-4e80-8624-ac2da9af97c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0f6d85-d983-46e0-b3dd-b6274a063e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22676d24-a5ec-4a41-ac40-12927160bd03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973fbfd6-b736-4587-8ebf-393715253c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5f98c9-0831-4ee2-9508-30d8c5750df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9e20dc-de66-43c8-b53a-829d10bbbaae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ec50d2-6d19-4590-89c4-7315957d5de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a8149b-839f-4282-b821-0a376c3ec9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b128e9b-9a3a-4a56-925f-40fa31837b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0033e027-a207-4773-9759-0ad922b607e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed1c4d5-08f9-4c84-84d2-d542c455395f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b49594-7bde-4326-9879-08b5ecfd5f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621c2a68-aaef-4b7c-aba2-6c6d7b161ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1233ae-a1b5-497c-b695-0f28fee00e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "28086e05-231c-439a-8ba5-f5a72e3a4b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63564b4-f9d1-4d4a-b9c1-4cf5092a8a1b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbba11b-f826-48fe-8b75-bdbc3afad6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8cb20c-6084-43a1-a1aa-6c819db5d102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a465e83d-205d-4486-bdd0-e7bbd5a557c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b695633-1026-4c8c-bff1-28582f39bd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb003b0-b612-486b-b66f-d117778644f6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73645cf-2d4a-4a06-bcef-e370ab5d46e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260ad702-2a07-4361-b377-f86bd6ea8640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed2e71b-d2bb-4271-8d40-cfaac82a65b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5de941-5745-4b09-81f3-eb4b8445b450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defcd9dd-5aaa-4461-a38f-43209fd0380a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1bfa02-0477-45db-9a3f-a5e701430488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07518c5b-cc70-4079-9a85-bb563192af91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbf9c96-b13d-4504-8195-7c10c4660373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "326a166a-add4-4898-8d6e-a194918815dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9162a14-0cc3-4240-b3a1-b7b259b5abbb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605debea-55a5-4e67-a7be-7dd9aa70b4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f063336-55d5-4635-98b7-e798f58f1feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3de1824-bf53-4a46-9ca6-09c24177a82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e535ae7-8059-4632-b271-0b659ca1c950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e898d84b-b5fe-46a8-a1ad-66d9d8d252d6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c3d7ef-1891-4768-8e58-c3860697479f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe45cb5-770d-4e09-a0a3-83f85c9c9e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036befb4-984f-4c4c-bb1d-7e1b9f233c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3415601a-88a1-40be-a0f2-62b7f951c35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c15412a-6985-48ca-83f9-5f3616ca5fa2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8daa3ead-bdff-4386-86d3-a7e548a80a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737a64b1-067a-4f51-8180-5a7cbff7c01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064b52e4-56eb-4fa2-8730-2e9df08e01ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4bdc7f5-a738-4d27-a664-2c8d82ab1900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa1ccdd-abf8-4689-9601-f83dafb543d1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a418f681-7b72-4607-8502-39b3843e92a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f00aa1-f292-47a1-aaa2-1c112219aad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74b1ce5-d7a4-42cc-840f-c4da27d52f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cff18ba5-68b0-40ba-87be-b9cb499c2224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436e845d-6529-4960-9ad3-bf1372d66041",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2dc7e4-eef0-450e-bd3a-914c4972eee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ec557b-9414-4290-aed0-9750ae5a09aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9643c18-cd22-4305-830d-a4ede9d910bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a968f9bc-721c-487e-b954-9b331e30bac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de90205c-4b91-4bb0-9b32-c2bd96e0b1d0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d49b07b-2a5a-4b46-9673-9a897a333b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f296e2ed-adeb-4309-88b7-6695ccd623a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bfa268-2dd8-43db-bc0c-36e14fa9c1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "17ee9fb7-80f1-42fe-9983-a89a98a622ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be5512a-c58a-47a2-ae15-8cd5c35c1e84",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63e68bc-d223-4e78-9abb-83a06a74d022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1f7e88-e82a-4b40-96f0-fdde5ec70f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c7940d-6507-42b5-89ac-f53da167594e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c982f738-14e2-4994-9707-248aea56229e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ea6d81-2b16-4a7a-ac14-0269ec45a4ab",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc3651b-0476-4fea-9818-c19b16c43646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278ae002-8bcc-4367-b73f-124abd84930f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15981d0d-7189-49ed-822f-9c43253c1240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7958dcb3-6aa8-4dbe-acc0-0be54b78c0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847081fd-dda3-4ac9-9633-122801d9dad2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245e8e80-4df8-4f76-888a-6b9b66b44ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fc0c82-4b9e-42af-b435-1627ee11a8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970effa6-3e55-43a8-b200-35d2cb4d2ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcecc26-9886-40e8-be60-5bda0d172db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8799aaa2-d7a0-49d1-96c2-be848d1ef77c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b63e43-698b-473b-abc1-893c710360bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f5b166-436e-46a5-b829-579254e44f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0058455-cabc-49f7-b640-188a1bc3a19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed38ce6f-8910-408a-a033-62c1de780383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e99695-b9bf-4c22-93f2-d3888442ec19",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbc9036-f2ea-4ab8-b523-cb2f3c2ee4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211374e1-2c3f-4443-a29c-dd5c1dc4a793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66ede94-3a86-4bab-a611-264ec57c8cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "719b863e-b357-4cf3-bdfd-0a68cbd7e5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccc0575-5fb8-49c6-b822-2a665cfedbb6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84da481e-a6b6-44c5-926a-4a9310333669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b31d263-2490-443c-8740-ca31aa3c2f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10ef1bd-e384-4dea-8c9c-d04351385579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ec3a7b-328a-4fe1-b851-3e3211595c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475f62d7-b8bf-4a27-b15c-b5a08785aa2f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ee041d-08c3-45f6-bf68-7cfe8c90679e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2595ea4b-b283-4ad6-a730-f77bf3329a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbf2bfc-6484-4fe8-94c3-13e87e237a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a01a676-171d-4695-843c-37aad1bc4949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413e459c-fa4e-4af4-9df2-5c6e24fbbe35",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf87a95-fdd4-4de6-9a17-16d0dd57b333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6884917e-6ca4-477d-8bfc-af546face419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfdc7dc-8328-4674-9e8f-595ea9f034b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d461c3cf-22f7-4367-a9c6-8275ecdda87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205af8c3-a2ca-43ef-942f-a604ca1ed684",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334179dc-a9f2-4fe9-922a-61252be7be8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9406fa04-45b0-47d9-9855-3d58cf791f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd30fbb6-f0fe-410e-988a-e13fb29dd785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09a7bc5e-e929-4ebf-afd1-d8e4f02d6cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e992561-24cb-42ad-8607-2acc9eaa1181",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7781187a-eec3-4243-9614-f113a08aa2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4824f82f-6f56-418b-96a5-99f810096d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8691f271-54aa-4bcf-b22a-4d1452579d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08a65f1f-11b3-4a60-9510-ac58954fba1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b33fb7-7c7e-43a8-9f91-78f1f99e824a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563fc92c-bf13-4783-8615-6bf0a40b5a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6826a7-caf3-4b4e-aa79-e1026ec0aaf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d02c5a-0797-4496-b0a1-0723b5bd3041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b2c877-4c4b-4240-8bb5-3c3981224f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73462aa8-1b1f-47e8-8fa2-6ef04646058d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe75a0e-7b3e-4f9a-bcec-90c956db2765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ed2ed7-1e51-4c56-b6cf-3b342051bdb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea5b0bc-0adf-4a16-9afb-1a8927464521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "91a69502-8a37-4a75-a883-94a66569fcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707aff49-1294-413a-984f-9214557faac9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19910ca0-957f-4902-a180-799ab261f345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97eafbe1-9ca4-4028-9c7f-adc0cf1885c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5621ae8-58cc-4f4e-b5ca-6de99e4c24c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "771c0b7b-5421-4f3d-8e33-30ec4be7be23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c440f4-d1f2-40d8-afce-e01377739f2d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddc0d22-1c44-4987-955b-dbcf7e3cafe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f080da2-2bf1-4ab1-a133-1f2117fdafd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de62ea7e-86b3-4e50-af69-1ef819e1f49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1388dc-d914-4b27-a44c-75f262766a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f26e934-c9cb-4785-ae20-39ac9a3d8fb3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af05caea-b8be-4927-9f9a-2585af1ef150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecde8fac-427b-441d-be61-ad557e1f52f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0243f4-6119-49b7-aac6-b637555add7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cfede4-021e-4227-bfe1-d96095a2c182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc4f6b3-627f-4c04-a213-d4ba0deb08c8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8c98a3-44d2-4e9f-864a-3e250901d3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea89761-1171-4eef-aa87-713be9fb470c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c0b0a3-eff9-456d-bfb0-f95241a9ead8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f153102f-5e36-4a33-b769-c964f1594210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73331102-c492-4ebc-9f9d-15e0bf09fba4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4830d77d-d2e9-4e2c-9584-8a7bb0c8028e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8f4cb4-b11b-4a1b-a1db-9da8ea632a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012bc1f4-dd42-4a8a-bbbc-040ca088ff9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dca349a-0df2-4445-950a-92c2524afd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2cfa42-a27a-40a2-a3ff-d323e13e2685",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac310505-bc67-45e4-b64c-a3d9f61688b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c22789-c33f-43cf-9c0d-71fbafb0f0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7f7a69-2e38-48f5-aa17-a2fa2f46f974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "90fe2d0a-6c83-43de-a934-a64fc469e17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c965d35-1866-41d2-968f-9b97dd441c97",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa2eceb-ad97-41c0-aa17-aefd5ac9de2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d4ddf6-a199-48ea-b3e8-9dada3ef3308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242f95b0-18a2-4311-9bc5-9035cc9a30fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "005a0a7a-b0fb-42df-aac0-3fd08f412583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3f42c9-6b26-4852-b288-ce68502b41ad",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b397328-3476-4bc1-8760-debe5f1c5aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2389135-7152-4af7-ac1b-8f44217c07e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73bf6e3-c693-41d8-810f-85ec6ca23550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e78651e2-f0bf-4994-8c58-a0c18f01bdf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc62753-173b-4119-a173-77125f62a7d7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66761e1-381d-4809-a165-85c721e51c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbd0c13-7182-4045-9084-df65d4375ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afaa6f7-1c1d-4309-8f01-6a6f84494be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8177bb-c4e3-4420-ae83-4a32255316de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a99877f-1a3a-4942-8750-5f6b8a8b02dc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3348f48e-cfe1-48b8-9f9a-745434009383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90ef626-473f-4e6c-aa43-54a072fdffee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8bb53a-e5d4-4e81-9ec2-a82ebd55ad8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "181d9212-bc14-4c28-a281-0061a8a9f498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7380c6a-e765-4805-a525-907e00753b93",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cea70de-0597-4520-a8dc-612c60c7a3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fde688ba-81f9-4ae3-9f1c-5004c45d776f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41cfde6-f940-4eb0-95ba-6d5f51b1b48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "643fcb75-463c-4ebd-9307-109fd55a7f64"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25663cc9-0bd0-42a3-947d-f82f7354f3b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e3443b0-dcca-4a79-a58d-3c5f29749e53",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade099c4-bf92-481e-92af-384dc3dafa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10216112-2a7d-4b54-aa95-d3df16e31511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcffce51-3ba7-44c5-a262-b6756c0e5be1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a066c072-d31d-4d16-8cd5-bf2fbf9e60fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73305522-7df2-4fd5-88d1-d1a6d792ecd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6cbf97e-ffb2-42b5-b95e-b1d0b66d29cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47378187-0f81-4236-8d36-f3eec82b9477",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6eaf1db-92ec-489d-915b-19ac7b02146d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a375f83-746f-4ef4-8460-d986bbc93631",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c5762d7-ae8a-45d2-becb-80a825ac21a4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "371504c3-11c4-4f0c-93b9-7a8c3b4daa24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06630961-a217-4b45-98d2-922c6185f72b"
                }
              }
            ]
          },
          {
            "id": "532ff4f2-0e82-46dc-8be0-bb78d508062c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2def3813-022b-4248-bf00-207ab697e70a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7c425434-0f5c-438e-a84f-ec71bbc0c52a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2777fe-b051-414b-8478-a91ff7626baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "afc59dfd-26c9-4657-bb02-6dfff6c7efa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21cbe96-def7-454a-90bd-c555ee2a8753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cef5826-f2ce-49e1-b7ae-62bac1aaac52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "29a224ba-f692-4c26-b4e5-5317c9e88e59",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96d48d6d-5248-422e-99cc-1e0b19d9571e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd47e51b-8481-4bc6-8ae3-c57c1f410bc9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba33d181-9591-49f9-ade4-c6c91585ad91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fdded8f6-8799-4009-9a86-5d037f09fb82"
                    }
                  }
                ]
              },
              {
                "id": "ff86f672-bd4e-4384-8f3d-38db9c573fb4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "121dc851-56bb-4056-b109-c1f566a45411",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4bb38866-bd25-4073-8ed4-a4df3ee972a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "794221f4-2f2e-48bd-b492-c0a6239636dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35ccca43-fd89-43fb-b34a-32080f6433b4"
                    }
                  }
                ]
              },
              {
                "id": "b68babf6-139f-484a-a3c6-193f622a9c25",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "881ed93d-362f-4d48-8b8e-5abe12ae6a36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8f77a97-7136-45b6-8218-06fba1e290c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ca676e9-193b-42cb-b371-4200d1f19b25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ed7c797-d628-45ef-9ca1-06aa997e8260"
                    }
                  }
                ]
              },
              {
                "id": "dfce6283-c61c-4ebe-a386-bb030a988d56",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9f2bbcb-9caa-499a-98bf-67eeb5147229",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39d36340-489c-4269-92fa-1092e2b7da9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e13846cf-5b7b-4978-8b2d-b5d2f893da36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a0fea92b-ee8a-489b-b28f-88fcc55c0181"
                    }
                  }
                ]
              },
              {
                "id": "31057c89-ec1a-4858-8ecb-b8aa1c9be958",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b85e5c8-7726-4116-be2c-55c00fdc11ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2f9c53b-6a20-4339-8e6c-507bbecfdb00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "278b21bf-2752-4b69-9b58-9d6afcc67626",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8065823b-76f8-42c9-8628-40e6ea4605da"
                    }
                  }
                ]
              },
              {
                "id": "c2c796d8-8fb3-4e8d-b081-45db31442054",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e88c30ec-4076-4bea-a64e-fc497858c6db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e83ac7b1-33da-478a-80ef-c5ffce7bc6ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad0fd9de-b9c7-40e1-a04e-4b452c63e031",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1dde3eaf-dce5-4666-be5f-8143e6023661"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ffd21c82-8774-4403-be77-e858ea0b0058",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ff27d5d-f139-420b-9b2f-82c730adf059"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b15a64b-8ac1-49e1-8330-0a6df4310463",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8e26aed-d705-4cc3-af39-7003dc6dec10"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c7b73cb-9dad-4a58-8c15-7ae8346cbeb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f03016f6-5bd7-4aa1-80e9-a111cffa0b09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6825627c-4d32-4efb-8986-9e21504a9a0f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d71c200-965b-4d0e-aa0f-f3903185dded"
            }
          }
        ]
      },
      {
        "id": "01e3ed17-490b-4a26-92c1-270bacafe36e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "13b1b5dd-5aec-4f60-9505-94bdf6487247",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2003d736-fc6a-4ce8-bba2-c6f3f3ade3eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88783bce-b0ad-4ce6-a9fa-1b4a0a37c76e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a49e7cc-ded3-4e0f-8112-8b3dd777262f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bd8f7a-5cba-4d5a-b39a-e79ef8b5a8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015098e3-6290-4ace-a8be-6898c30bcba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6df43d85-d03e-4c7b-9ce5-4f33788369a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77ca3c7-6307-4443-8ae5-978c2b64d296",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2ce882-81b7-4078-afaf-5f7b172c6141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac69b2f-8bc0-492b-a79a-8fb676ddae3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d026da24-23c3-4205-b020-1e73db2cc6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48868a91-7ace-44f5-898e-53569b1fb5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663c0d18-cdb9-403c-8c24-a5da89f8391a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f447441f-916f-4543-bdf8-263c272f6067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b9b552-5451-427d-9d1c-acdbb720c03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1f5b2b-851e-462d-8cc6-9d21efb272bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b757987-7242-41c1-99a1-0b0cef25860d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4903bd-d687-4084-9291-eaea6bd7c5cb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6a0785-863c-41fa-a61b-ba2191672c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be55f2f2-6c01-41e5-8101-7ce717d5bd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9fc40c-bc3f-4797-ad54-6528b04c5233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa27d95-862e-47c7-8b38-72246c4ea437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2aba926-cc37-4dec-a8c7-d8ed3dc53df6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d8ec9e-564a-4c93-8d89-6b51e481903a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d91fe3-2d43-487d-ab87-3410be84f591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddbda33-ce87-4f41-b49a-866a18ba0a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e05bf9-eddf-41c2-81c2-34e0f652f026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b906fe7-1faa-4792-a63f-405f90a0375d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842ed7bf-2a31-436f-970e-e1e3845d225c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f380df8-a80e-4bfa-84b5-d6b76e48fe6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b52ee36-b36e-42e1-9dcb-e3ec29d371bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25a2281c-99a9-4a7c-b0f0-430e03fb2385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35635007-c0b4-4ab1-b3a4-a93a5d1d8960",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da07e28e-7893-4c3c-8e2e-ed204fff6878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736f9144-7927-44c5-8f4e-f63a33d85d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a32d70-679e-4248-9861-55117e6c71b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "83ab2cc1-8277-4aa4-b9be-0f3e8ae68253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadceac3-83f3-4651-b21e-e528181d111c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83813bcd-00ec-4427-9bb0-65cffcbfe4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7940c60f-3d7f-413f-8e77-842b534575e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56520f86-c275-4fc8-8275-be26e3b31d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b14d30c8-0763-4a9d-bae6-6385c4a2e6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aef9ef7-4f81-48c0-84f6-1bee890b1c0a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b22df8-ce45-42b1-8758-1da7072f02b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b965457-81ca-4a65-a552-f9fac7695c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35669cf0-1ae5-4ad3-8ed9-834b893c3871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b18304ce-7517-4a19-bfb4-c1836b4643de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d301819-8369-4932-921e-0bb38e917f44",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55eabb3-dc28-4937-adba-1bf9e20c27ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00ed4a0-18d5-4631-b9de-c992fd223a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5411aea1-b967-4820-98d9-794020d3912b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "040c5927-9a17-4dea-9feb-1ec02ddf0aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64daa928-a720-4b16-bdbb-b4c9b826157c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4b83cf-e51d-47f4-8456-7b29b938449e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360965f5-9f41-4349-81ac-eb591e921d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ba528c-9a51-4fcd-bd9a-83567da3b094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1b400399-baad-4436-98d7-8b9e0b5d7aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a852a2e0-b22b-4e0a-ba50-185f56c1fdc1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ec9d02-19ce-4953-8302-6154d9df7e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55869ac8-d804-4a24-9eb0-2edb2097635b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87c8a7b-c895-440f-abe0-25705782862b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "884d3961-9f63-4fde-ace8-1e692e3273c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48a759b-11a7-4048-8611-9e151fed61fe",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb539ad-8412-40df-861e-ffd0ddb94c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e9b090-78cc-4c08-b63b-06f8475aa584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f37b8cb-82a6-49ca-bd3a-bcf71cb8da89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b0a11a-1327-4493-8303-1b6c6c0369dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71544ff9-1dfd-400a-945a-a886fd082030",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f49818e-5ce9-4e5b-8254-94a2e3acd37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594c8698-b1ed-46e6-b521-5602df7cdb83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9e6257-fa24-4ea8-b33e-525563a08394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b47bb2fc-842b-4c1c-a694-6b4631fe3fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc1c9a2-de14-4db4-8b65-0c235b80a84a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deca913a-b001-434c-b3e0-9c71dc3b2438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dcad36a-32b4-48f0-8f74-a5acdf392b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d15469-d3a5-482e-a416-58eb5eca9477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "44f86f87-88f2-40ed-90c1-3ccf6327ed41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5866329c-f67b-453c-aed7-2cea037e96d0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418878bf-26e5-48b3-89af-bfb18fc12af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be69d432-19b7-4cb0-aad9-986f4c3a24c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d747fc-74c3-481a-a756-60af7afb365b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "01b4a15f-599f-497e-a6e9-29c9168757be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6759f82-e106-4ecd-a2be-fa147f084a44",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfba1cd-ede8-4fab-9a4f-7bd51690f02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367a9bb5-8498-41b4-8480-35350ecb0bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de763dd-607c-47de-a84c-f5cfbc5780d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a03f58-220a-425a-949f-1418cf929966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594e7343-011a-4a54-b1c9-5261cb393027",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d6b404-60e1-403d-9350-ca2e06979490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3613addb-e557-4193-8bda-6334d51fd2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf471e34-f4c8-4c0c-a1d4-4525aaf34889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0809a62-a095-43b4-ada3-e87764a81a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a1b41e-0a31-42b7-82ab-7bcab1493acd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b140ef3-563b-4c68-9f49-f1603e8d8157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53930dd-1d65-4811-b8f6-2b1e0914ea01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced04b43-bb67-47bc-9258-2f9543b0cd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78eaf4b8-0fac-4a8f-947d-7920627fe682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7e055e-1a70-4224-8865-eba53fc36de0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9afddb-b4eb-490b-be22-fae103a9dec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070a7d86-8fee-45e8-9282-b1f2122b348d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d03214-66ed-4a86-ab24-096ddbabe574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f20114-5767-4487-a599-a706061b4329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cca3598-9369-40f2-a8b7-24281a81ef62",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d7c8cf-f6cf-4119-bbac-11787477a66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00364da9-2906-4f5f-a4ff-c9a33da5627c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10322e42-9187-4cfe-a3e3-9e899ecd58be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "125fd4a5-b079-4570-b4bb-3225ba0c1b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f7e026-aca4-4d7b-8bba-21a5b759ad13",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1395e557-7d7d-4787-a9e3-b009a9ea64d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2934c1cc-7448-4b7f-b99d-f192084856bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ef9928-a675-4b1b-bd53-a33f4366faab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64105959-182b-4978-a2da-9b796644e086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfc08d9-4d87-4e9e-9f29-02940bd5ec80",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72667513-9162-4158-a1c7-2bfd9f8c1165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bab9aff-13d9-4441-8966-07f2fb91523d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ceb1e7-ac6e-4609-870b-575524b97b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0199ce-e682-4858-8c90-04d1f58eeeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d97a11-f756-47ff-a8e2-3d0ec99eb857",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909007e2-8b36-4591-b30b-8f7ffa6017b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30a84a4-4b74-4a3c-aa53-ee14ce00f0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14037b15-329c-4ed1-a796-1200d6da6b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a80bf5-31a8-4dda-9326-2bf49c8f043c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aceb8d95-db95-4f51-9e1d-de00e7e1ad2f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d85fde9-6a5f-467b-bc45-b5095fd2baff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a7ebe5-3ebb-4782-9668-bd5d34bf0771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08714343-0ca0-4a7a-be5c-fb573b7ded24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fdd3ed9-c95a-4a4c-ade9-6992301a0643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1e372f-0956-4dca-94df-dfa6ca7d024d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3868a239-49b8-4551-adbe-1e867252c8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f0b761-d79f-4a41-bb3f-ca2a7d60407e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c96a8c-3e59-4670-8dc3-da647490bc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c330834-4026-483e-96fa-0af082784583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ca8073-771a-41fb-98cd-98b515e83abc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf085613-74df-4e94-b4c5-347b38a8cd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278b8cb2-5a7c-42b2-81e4-884baec28953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1637d960-8879-4ef2-bd8a-a57149ea69c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "220f5664-acd8-4c60-810c-32ef04fa3f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d761615-e064-483c-8c65-f29a78db6c05",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1742050c-397c-4317-b594-bb2fa3e2e3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce98fb4-b018-4014-b77a-ba71f7378d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828430e2-0b95-44c4-b2e2-25c42c76f399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9899bef-966a-4bcf-91b2-7dfcaf87a758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb462c78-41fe-467a-8d07-51cd338d34a2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b09f34-b97d-4819-aa57-e6874699b7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab948310-2d2f-424a-9efe-1a2b8aaa6c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00541f76-5599-4339-bd15-6d81de67f676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d564ae-68c0-4ccb-8aa5-be60ffbe3477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8086b834-6711-4c8e-97ef-f0113df2fe05",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d3bf17-9817-4ec5-b9a1-9f9583538f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a42088-4bed-4f43-badb-0677f24fd872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab35396-e3d5-4bc9-be91-901b5fabd2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "707a863e-40fe-4075-98cb-e45817ca456b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c91752a-4c95-4be4-a7e6-6786a5c70b7c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f629a5af-b02b-446a-9a02-f216e411f756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41210f7c-6db5-4c9b-894d-8b294a88d12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef062b99-b080-46b8-837f-001ac0c3709d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe38bfa-42f5-4432-8418-75f757fc567f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac7dab4-2282-42e7-8c70-e0b6c2967357",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a18acd5-fdbb-4195-8f99-9a1fa90aadf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2aef8c-8d32-49c7-b092-e13084f45bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507bfc3c-b811-4a53-bc27-8e1ca4fd14d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71dfeceb-e05a-494d-a5ed-0fefdee3af19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce4f54c-fa97-49cf-be4c-88fe548b72ff",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe9ecc4-f646-4bfd-bef4-686a2a91a76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e19287-6d07-44d0-944a-a5d2000ecf82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b8d3c8-3e45-4b59-9412-4d9e42ea2a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a12c0931-fc55-4cef-ad5f-e7ffb13181f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd58d5b-18af-4bd9-b285-626ee2692c43",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179f00a1-4059-4ff5-a4d2-6ba29ed4d888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7cb1d8-adb6-4d38-8ec7-177b8e3ff0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec02828-3719-47dc-9da9-d9ad361e4d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9243c48-e7d9-4ef1-8b0a-f091b3406d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc46d93d-69c4-4270-babc-25a49276430c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c97caa-a16c-4c0c-a5a8-f9e22c1d72e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e960e7-eedc-46e4-a438-6a7bd5610d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22ca57e-2812-4356-b9cc-fd8213f1ba98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2bfe8a-ad6a-4709-9de5-74d40b673ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b4e44c-7585-4379-b108-c9b91f8b3fad",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a601e4-1019-4907-a61c-c54d3cf7efd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7c7bcf-8f50-4e5b-a077-62f28fca0566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc079e4-ab45-42e9-961d-35ffe736a33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b028c4-0cd9-463b-9a97-f6cd787e482f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee157da-ce3a-4a62-8bc6-40d232ebc9b9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c886a4ce-0c0f-4e71-9495-0d9f18a26d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9f6572-73f4-45bd-92e4-e4a7ad941538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b9aacc-5698-4e42-ba36-0a3bc1340701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f90a4ec-0d7b-43c4-ab37-f7a45cbdb70e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cd89c552-3de4-4aea-aef7-104d09ded661",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2aa92079-1e56-4077-816e-32e7a140dfaf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e77217f-c509-4990-83a1-405822e18bd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "06a649c4-7af5-488a-9dc3-46ee436b03cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc82004-e08f-41f0-a816-8549dd4a5a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c3a6417-cbe8-4190-99ea-7b458c42da54"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7b7350e-fae0-4fbe-8de6-5b8818763932",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8e57ad9-3258-4568-8c23-2dd75019f09d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19fb7484-c5b7-4fe7-91fa-5e24028845dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c14046e-3437-4b40-8e53-073ecedae715"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f195f170-f1c4-4246-857f-196818e02388",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a9274e6b-4d44-4e24-a0da-e98f5012c3a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "465d7a75-595d-4fcb-a9ce-cd3a403df442",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "443f6a3c-2082-45c3-85f2-1b140d8cc432"
            }
          }
        ]
      },
      {
        "id": "8079d1d4-dee0-485d-80ad-80846778916d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c9cb4de9-2971-4c71-8277-bf448fd16926",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47cf3617-cc3f-4772-8b14-5a68d8784f9e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "175c10f3-60fc-4811-8e39-05b4f6bc02cc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0285803-349e-4711-aeeb-60af0ee8e933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa08f3a-8a6f-4376-b69a-85750c9d4321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b678a789-9c78-4c71-b792-22f50c8fae34",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dad6dad-60f1-4d8b-a611-0ca4184a2a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9808e83d-e063-46e9-82c9-cdc025864ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93380830-8a38-4b1d-9019-6f22453e4d3c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805b4ff6-1693-4de9-981a-44406fed628e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a909994c-4086-4d37-913e-ba2857ea7c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fda85e4-a1b0-437b-8a24-61f6182592ef",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22742829-f78e-4028-aacd-18dbce57f6ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fffb9e-fc5b-4842-97b2-ce26999fc0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae881eb3-a529-4adf-9319-064b29c206f7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfd2e86-dfb0-4faf-bddf-8252b6d63c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261aa863-cbdc-438a-a91c-2f5d70b1bb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bf0b44-482d-4807-8e50-112ca9c9f0c8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e626b808-1708-4a92-89f0-5221faff6d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5a1865-eea1-4c9b-8d09-8b6b7c079d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79e6134-5a4a-4fc4-b122-2e9789fa072d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60915fc2-7c38-42d0-b824-7525c7b07c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68954de1-4477-461f-8fc4-5250a722b2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1725c95f-b645-492e-a81e-c0fbb23caf89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284ca563-6211-4586-a84b-9cde7dc886c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77ebf23-ba51-4338-929a-10e470bb9cc2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843901cd-a1ae-42fe-b53b-4ea165a074f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1122680c-23b0-4d90-b0f3-f5de30eb7355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53dd757-670b-4028-8491-d592b63191cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c407ea-9cbf-4e6a-8a81-cdfc528dfed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7829534b-35fe-4c6c-8c29-33254f96cdfe",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f68bdc-b7aa-4afc-972f-febce7160318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e7a443a-ebb0-4035-b756-bb92049187f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001548ec-d469-4ffa-85a5-065b512a1683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a33c71-9c24-4e6f-8c8a-121c271922c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f833d0d-e2ce-424e-887a-10ece715d9b0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf522c4-c539-44a6-b6e0-ade00b71d65e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e04576a-2532-4441-b145-d17be1044713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbadb2a-d3fa-4037-a3fd-76d67cf994eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a490251-1c43-43f1-b55d-577298064e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d68a972-4739-48ef-b874-4c5ae58dc28f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b979d32-5f42-415f-a04f-95b2a45fd0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8673f84-319a-4d54-86ec-cf9a9fff3efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16dda0e-000a-4dcb-9c01-5d2a3e3ec529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e83033-ada2-41ac-961d-0d642e6312ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5dd15d-6684-4d19-afb2-1577b852874c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb5759b-7a41-4f34-a01d-584069552304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df08a6bb-c312-4d90-a510-7ae0675f1e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac85be64-6cb5-45aa-844c-bccc2f337955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3754b612-33c5-4b12-8491-6b7bf8194458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3f851d-2bc8-4ff9-b04f-16cdc657f3d3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6cf9c3-254b-4093-9ce0-f6db9e343c57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "078cf32b-c834-4149-b5a9-982d63bdded2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "618d5e28-2b96-4ca2-b2e0-a5f540f08dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274c3030-3362-4edb-be77-917e02c26aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b8fcd6-e847-454e-9bf8-dc12fb870fba",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10241573-b23d-4f5f-a83d-b23d28295458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df75d2f2-5eb0-4c5a-8da4-4c2b3828cde1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8300c9-0c28-4a83-89e1-c333a777efd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c12895-4ee0-49bd-a061-9cb129c480cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc3aa74-7dec-42ef-a911-e475ebaee17c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6a5e49-5608-4aba-bb37-4f86581dd383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1d8638a-609b-409b-a161-c49cc60e6de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6ed07f-6ef1-446a-85ee-f16d6a2e99cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3c07e3-4794-417a-be66-a62a443c8086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120e8ba4-efdf-4cc6-8722-091e138a59fe",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe01a393-a4fd-4770-8d3f-eb83b1e1a4e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "804ad368-18e4-4920-9db0-206cb39bf23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9973ccb-d2f8-4417-bb36-775055580b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c330ad0-0b8a-4227-bd88-62791376a955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea97d524-167a-4bc7-a575-5b95987d8aed",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dc6242-87fb-4b97-a67a-3b69e15fdb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517b4ed5-0e02-4854-82c8-205ad234b4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90b3e08-3ea5-47eb-a87c-ab53f37a6e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f81b8d1-b201-4997-9707-3f166eb58fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5088cb76-26eb-4d92-9576-a05d8b2e5eea",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18182ee-1549-41f6-9822-4f9c0efed75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e541f9-3940-452c-a36c-106dd19dc992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672fb579-231f-4a4e-ac34-25723c5e4b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389aa2fa-1e0b-4071-be3e-e1208ac00c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fc7777-9764-49a8-a1be-137d68caf804",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cb49ed-850e-46b1-bb67-ba23bd96737a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a258c3a-f029-42fe-92d1-638b7326ac4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e608e47-3adf-4e6c-95de-9cd765e57d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ab1594-bf5d-4b3e-8394-6b1721e87e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed131ad4-0b8a-49be-87bd-a301eb309fe8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0af5f46-ee5c-43ee-b926-0492ea86f9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8c47d7-a046-495e-931f-9043c477b080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d7e2d1-a473-4276-b80d-39e20d5e7b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe80f796-c812-48b3-a8de-cf2cc7bb5f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aef635a-bf65-4da1-86d4-cfe4a95b23ac",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cf63ea-b82c-494f-9d96-c16421b8e71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca491b9f-4c6c-4529-8171-75766281d36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de1f0aa-be2b-4a61-a415-536b0112e950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21edbcb-11e5-412d-a78b-f2cced60e593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45656908-9b2d-48c8-952e-f7c462dfb554",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d402de-db28-41e0-ae08-b03d1fd5d2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41087d2a-6406-4add-908d-613403947adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f10eba-0c9a-459d-bec2-c1bd05a6fe22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cb626f-abd5-469e-bdeb-689cd6ffb4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a7a8cb-a981-44f5-8449-5394ec3a3c35",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800eb0f4-24c7-474b-a374-6bca5b700035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca78636b-057e-40dd-a8a0-a1acf6cb8469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1451f30d-2559-45ae-9cfa-19f00a449095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b28712-a573-42e2-aec2-11032d2787cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93550b55-6ee8-4841-ac79-c2746e73341f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c04eda0-c1c9-4da4-b582-ceebfcc206a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3852df21-811d-42b6-b0ec-7d9fec48880d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9e42e9-bcd2-440a-b078-f744dfe4e241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd2b214-36f0-4d6e-8988-ba387c02e241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695c33ff-7a1e-42c0-b4f1-b11fc780b158",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1c8924-b605-47de-a42e-e55b34b5356d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9bdd010-0c27-42f1-8596-3326dddea05c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b1e510-1c39-4b0b-bf12-d35bcfdf8061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54b3191-2048-49d5-a188-e176cf62df2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f8d0af-e6d0-4205-8ca2-c35ad6079924",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b82248a-07bb-4501-ade8-91b8ad07915c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab820103-52c1-4230-b2b2-8de8de4770d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7407b60-97c0-4b1c-9ee7-c410d8d39543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad50ae17-e284-4869-be93-d9ee66a9efb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096141fe-ff3c-41bd-a00c-e5836fd807b4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd84ac1-fbca-45c1-892a-47ee9793ca7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df6d1f90-6be1-43b8-ab58-c5624e3f22c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bccd6c-69bf-4ff3-9b39-72c919dbfa9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfaaf184-ef3d-49a4-ac16-140eeda022c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c56017-033a-4f67-a037-93f0e9b94632",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e093a8ca-b629-4393-a49c-c33cdd3218b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87c7e39-a5d0-4308-8f80-59c05838baae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faed45d-5246-456c-a69f-e20f0d93abbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93832525-947c-4c36-8a7b-c63e6065ba1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c2d99f-b994-4792-868d-7fbc23e37159",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d5c1b0-6acf-4ba2-be4b-811f4efc5285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca98916b-6573-4b6b-9a5d-336cb7170e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88555be0-3d58-4cb7-9224-3e8b88f87dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d70234-afd7-4b8e-9c36-1f4b603559da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda2376c-a8d8-445e-bb2f-b42403cf696a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fa9016-9bac-4805-bf0f-e81edbf264ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d22c14e-98ce-4d52-a9d3-248fbfaea04c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed6496d-d0a6-4bbf-b679-98b016030cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e599dd2-a503-4720-8373-0ffacfd79860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce955bf-11b6-48ea-bd8b-3b83d763ce2d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbac98b-6c26-4247-a498-b4cf0d1ba4de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da302fe3-d323-453b-b9b7-20530716a95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bc1d66-eb16-4b81-9dd3-4bfdce32cb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4cf5a36-0cdd-4459-84da-d47614582969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e606c39-93e6-4bd2-8e90-0cb3952878a6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae251af6-5bec-4939-92d5-4e023f1d38f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e989e470-28c7-43f2-bb94-59883347e788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1ff8ac-b209-4490-9691-45fcd9a89fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563101d5-37f2-4813-a6a7-9bb527a2646d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3bacbe-5768-495a-8e4f-93f94b293d00",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e18ec7a-4865-4392-9a97-ca4e2d02a07b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a00843e-2035-4ce3-8acc-5d99c709ad01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc4b0b2-8899-4e0f-93db-aa29dbb0daa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452bd481-f888-4d59-a126-be5f846115ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0eea95b-b2e0-4162-9ffc-765afccf7b60",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ae6812-1e01-46ee-ad77-5ded70ef3bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cd6c99e-937e-4631-86f4-8b77b4b24a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e70424-068e-4af4-bff4-ed4bf201b21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10540546-43b1-4be8-ade3-e2310039b427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfdd61e-0c05-457e-8687-e109d5e6f604",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c137c56-f633-4db4-8417-e587859ca766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35483f91-154c-4dec-aa7c-caec5cb758e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be671e8-73bb-4cd3-ab94-e417cd607952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9f5cbd-3f06-41e6-8088-52cf04d1a5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3bb131-b331-46d2-81ad-edfbe30adabf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88cd070-0e82-48cf-9400-37971fa28706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18da0c3a-0da2-4700-9326-94b705f0adf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6718fd51-34c8-44e9-9394-11c2a2e0afda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f6bd0e-a5c6-44b6-b60a-232f37372977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f962ba66-35ba-4095-b5c3-1fa0ba3b67b7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34742f9c-ac68-4696-b0c9-03fa032e9866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7c0a45-4ced-4f27-ae79-cc0a14850d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9689013-7f6a-4035-8c10-e0458ecae98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e64d2a9-9e18-437f-84f9-0539b83c1d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d110298a-3e53-4dd7-8571-45341bf5da9b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b07ee7-6e8b-46e1-8aad-eafef499eb18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca11b906-c27e-4dcd-8776-8f22d0f59536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1d7580-f6a6-4fb2-b7a1-763f0c6b740f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bc3cc9-2a8c-4fb0-833e-aacdfc795665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf404008-1603-4650-97e2-5e2dd734ce41",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e626736-160f-4837-83fe-a6b513b0c297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2b6848-99eb-4106-98d7-6f5532c1f902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7628a7-590a-48ca-9535-392ce1fa6f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0819f8-031c-488f-80b1-e07176f5fe91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dd2e1d-3441-49d0-a6ef-2d75a7d182e4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112028d4-dc43-491c-bd3c-7b604c2d5222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e48bf3-331e-4113-8596-3f2c225dd752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42500f35-f97a-40fc-b9a4-9365c803068b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acec693-6b43-45e4-8d7f-98c915c6285a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666a8016-9827-44ba-843d-4574b031f901",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89313d3a-ab41-4f45-a792-450d5d7cb316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8120e7bf-c883-4f7d-bd8b-fd0d369e23d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f17df7-e11e-43fe-a61d-9cc9b4d7e97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468873bd-a654-4572-807c-fb5deb23c6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e874125b-9895-410e-b619-4dd9918df895",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc28589-dc2a-489b-899c-d3856d31706d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f27438-023b-4254-85e1-ca617b9b8f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72afce3-8b7c-4870-ae14-e889a192a668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a69598-dbb0-4953-9b63-222874b1c49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58653577-18c1-4995-af1f-94403021b9b5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6523c6d5-c283-47fe-b835-ab1d3044668f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f161f3-46f5-421a-9f4b-c7a654782b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa587904-f0c3-4a4c-a282-ccf2d8e95aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d0a86d-aa10-44bd-92f6-a7a8314febfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98db5b25-e829-4815-87b6-f82b3b67711d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbe7443-05f7-48bd-9bc6-6443b9ed4f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15caf6bb-e2e8-4abb-b635-6afa90ca44aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcbcb33-feb2-4f46-844f-49c29d137b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f4c300-e663-4577-8839-b58f8911c848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25074719-a2ed-4144-8aca-6885030979cb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6b4c6f-f9d7-479c-84d9-892f5c7674ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0366759-1ef5-4b2b-9fb5-50efcfdca61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64268bd4-2e12-450e-8712-9db474241dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe442f27-f42d-4e2c-957a-7cfe9f1cee57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7125b3-687a-494e-a18b-d1b6c92b288a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5557802-e269-4dc1-8d26-ebcb4ac94e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf727e7-4041-4fb3-84bc-f5a802039e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48aabd3-e0cc-45b9-8ad7-cd7a035e916e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb7e476-72a8-4f5a-b100-23bc2389eaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5239da-afed-44ae-9364-b765c6045904",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc941d6-5608-4ff5-bb80-ee6f0febdf15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538ceb2c-4816-4cc8-a7e9-3abcd41be60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cf5266-46c5-4d7b-a481-46e6bd5f8784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2443f581-aa9a-42e2-b56e-91db1d6bc01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72010117-71fb-4ec9-927d-49efcf9fa286",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c475d30b-f784-4049-b6e8-d469ab3cba07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c01e120-885d-46a5-a801-512b9379aae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1a6906-f151-42f7-a63f-e1f8a50df182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e141fa-af35-4024-8135-6d502267ba67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1eab294-a791-4ae4-92e5-5a70cf47a1be",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d2af29-013f-471f-8cfc-57ba9f393d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d396fad-7927-4a7f-8555-73c1cc19e0c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8007f8d4-aa1d-478e-b7b4-ae890850a6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9765c1c-7a65-4d5b-952d-5818c8b9dce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1917486-daf5-42fa-b4f7-fb9d11391b4f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60655b24-68c0-4f75-8157-2f13af2420a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b3b5f2-29c8-4bed-b143-bddce5a35e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbeebfc8-1163-4bc2-9a46-4cfb78569cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32fb8fe-d51e-4359-b4f8-2008e3a5544a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d809bf3-9dd3-4abd-b897-8159ddec5260",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b33d5b-d624-4c4a-85cc-541f111397b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9726f6-f869-47c4-80bf-2bf66f169a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "895c6f84-ea84-41b1-9d51-ef303da8b93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb454dc-511b-4261-ab8a-5fc7fd4c1026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0abc6f1-4173-4c23-8327-27e00d5b0fa9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32fc2b5-347c-4168-97ae-fb70c6777b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c890b42-8b1c-46df-9e66-827a9e111ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d92ea9-a38c-42a1-9c3b-1f29f5d13107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927b0199-017f-4a1c-ab87-ccf00daf70bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248d0b7d-7ac8-4579-9308-e608cd7274f8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a781c19e-4d3d-45a3-8280-20bc512776ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4feecb8-046b-473f-8081-0db10b2f0c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dea489-c81c-4b30-b966-c417bed3ae2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2537017e-2b69-40db-8098-67bd14acc32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9688621f-be7f-4d2f-846a-cebc884e5417",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2482e9d6-ccd2-433c-bfb6-c1ba02eb9b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71af6b0-b017-49d3-924a-ff9cad5e025e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93a55b9-9197-4b5c-bb8b-593b97f2914d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde36228-6733-4898-827e-ef78ea2c8a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14689b5-7346-4b3a-84a4-f80cdb62f33e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f85ea7-dce0-42cd-97bd-08c2e04971f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd78af7-d2c1-45b0-85a0-175832d6daac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de6a3ae-db2a-4617-b923-e56e5f5cb38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e17c1d-e309-46c8-a60d-c57c02d87330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13254403-8ecb-4539-b8d9-b17a27b1d5c0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3cc091-d26f-443d-8b86-a581a70db4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b31a52-3cec-4bbc-b0d8-cab2c6cdb265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83143f9-97ce-42be-a2f7-fd1b3b31ad0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f39b62-3aca-4877-8f16-ddb4f99d9d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a074e2b-4dda-474b-b46d-f012496b7bc3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697a7f5f-37ef-4e8f-9cfa-83c96d8bcf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c6d152-d4a5-4644-8921-de3a1b5738f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a20d280-ee37-461c-801b-9e330fd014aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07564601-31fc-47a5-8afa-628e348b09a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ceafc5-fbb7-4359-bdcc-cd9d94cb9ce5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babeb4b2-8a0c-48b0-b9cc-6dbd7cd649f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbae7c29-a32f-434f-9036-b27f9a1cc8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ab53a2-a235-4858-b16d-8290fd3e4077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcec660-6f0d-4fc9-991f-6fd92edacf1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde56043-0306-43c1-9bfa-88e3467859ae",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4534d8-84f1-42a3-a4b7-736fc99d8d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89421ac8-0887-4a03-86d2-225bae4de7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99af9d7-6dfc-4271-aa7c-1dc2b5f64f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a90982-dd66-45d7-93d5-31b57c45c2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5aa85d3-dd07-45c2-94ea-fc74c31ee646",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f63a908-96f9-4116-ad21-95779868b56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d1285b-4d97-49de-94da-1a678fee9a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be0787f-9948-4b64-a196-f4ebf584c39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3fe351-b467-4126-b171-18a0472f4427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034f2723-0058-461b-a4f7-24cec459169c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8322af-0dbc-4013-8132-90a564ef5a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d960445b-c0df-4f35-82e0-f55c075560ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bdd072-4686-4aa6-9b0c-f84208065f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e142f04-8a18-497a-9624-13efb5647b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91873298-d2b4-4b48-a345-44cc7485185a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1a14aa-da69-4430-b634-71c6f2edcad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aaca7fb-b56c-4074-8718-616f5f084e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516a3d69-c9cd-49f7-af0c-36efb4820eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbe7448-806f-4b59-9ab4-ac7f78fb9770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2f05f0-b683-4686-9105-9bfa3cd956e2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd98204-f3b6-4542-a99f-2cddd4c60c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ea7077-3a40-4c42-b600-5ac275a0830d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3069545d-1540-4d6f-bddb-227aaac90fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c656ed-ce3a-4843-b5c4-9244c3896e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ac2f49-3330-49e2-a25d-c6c33a4961b5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6a0f03-636f-4d81-88cf-db51aeb003e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc290471-940e-4eb5-bf73-4a43ac7f8b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d2ebd8-b027-447e-83fc-5fb41759998e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b03a40c-a1b1-4306-b247-e4de5ff075ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef721ec9-1762-42b0-abfe-1a7bcd0f31c2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c51485f-3ada-410d-8d30-c1c3d76fb655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e157e241-103a-465e-8b19-143c7f93975e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e220ea-1d7f-4c5a-aa10-f9e3bf1dab05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83124160-81ba-4dc1-8057-fa201584c05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c56789-5732-4b5e-bcbe-1e8a14ecb4b7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac01c7a-9af1-4a59-bb6e-20e7450d2271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec251809-e24f-429a-83a5-c99423b406e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7485763d-9ce4-4bcf-953a-e5eae9c999d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2508824f-3c0c-4a98-890e-871c0ac24bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7da10ae-abca-474e-aea1-ce265564f56e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23422494-ecda-4560-b239-a133243d5a9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a2a2591-bf9e-4323-b407-df3729f95288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6256c0cd-fd17-4ffa-9839-d938ad4c0adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2526f368-d08a-4d97-b933-e6298d70bc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347413b6-f6e2-415f-9cce-b643bfec2e78",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3950f592-9853-43c5-bc83-9b89e212ddd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e72d22-19a8-46d9-8c0a-bd98bc48cee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff875705-4359-4c4e-8c76-20500d7cce73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032482a8-83df-42f1-a046-efa29dcb48e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7f80fb-e84b-4747-a5a5-0cc868b1eb4e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf8f5a4-b2aa-43f6-b930-cbdfe67b1b4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe4f112-7d54-4f9f-bf12-3571b23bbf27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f64cc2-b2f0-45ad-b82d-397345fb02ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf0ea57-cbba-4bc4-b2a8-ab19b18af35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae938ea8-fe3e-4e4f-a0c8-e7012930cda2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f06e71-97c7-4107-b331-17a39e9edf11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94855a61-4fdc-48cd-ada6-a458c5c9e6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f38e33-b89f-4c0d-9374-8f3e5e92bfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb08db87-2e21-4ca7-b4eb-f6b5ee918435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f9a32e-15ad-4e10-8322-2e7a1aee3012",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a2630f-652c-4c21-b0fe-0f616b171617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db49dd02-c0d2-491b-b8fa-73bac899e7d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22c0c82-921b-4842-a3f4-346b0132805f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56d4ffa-7e38-4a22-a931-bccab2465b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f613f5-921c-41f5-b88e-e549d28b97f0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ad157f-d31d-4fcc-a9d9-691fd0782217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47f2f7aa-81a3-4dce-9925-7ca8b45aa701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d69838c-4f5f-47af-b059-4eab1c891eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89dbdd21-054f-44c6-935c-e84f1b886eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4c7fd4-013c-48ed-bb58-95f1bc09d7e9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1103818e-9057-4f88-8eff-057f0dd6b34a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8cc46c-2461-42a9-ba42-84777df2b732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc737bf7-1df5-4e86-8a2b-65ba4df7f64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06973de-d7f6-4e95-a180-d195e6d7c831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c68c42-f6f2-4427-8e27-116f1af7ecb2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ecf3e2-81aa-40b7-a3a9-4522dcb66ac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df96e46-aee3-4de9-ab68-62bb2b9d6f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f785db4-a08e-4d02-9c34-33a2bb99bf85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be172cc-b88e-4571-bee8-f62b1c44ad8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a034e32e-f10f-422e-9bc2-e348acee517b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eceee2-199d-42cb-8fc6-42b7f4ffe214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56a77b6d-4d10-4c97-a398-561f23bc085b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b0bb8c-922f-47aa-aa0e-56abba53c049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd22795-e7d5-45b1-9f1c-07e9ad7b628b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e4c0d7-c508-4014-9fab-1dbfc086050d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f54b1a9-c11b-411c-92a8-ccda1ffa1a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecf0e2ee-56fb-4f3e-9165-5db8fcfcf3a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1735b0-ac04-499e-b162-98f7c1b13b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576ba77f-39f4-4524-a84a-b8a1e000d724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1801a53-5f11-407c-b379-dbb36d4c6e47",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3123caeb-7423-4ce3-911d-9afda108ac4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d78cf2-ea81-4bbb-879f-8ba1c1419614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19470ae-2bb5-4fa0-b8cd-bc72df35bb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c103634-18d8-45d6-9888-b90f4abdd215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968c21b9-2a95-459f-b843-6a7db4e4ae51",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c9ffd2-fda7-4723-a5e9-c7b2c3d1c8af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69da7035-c8f1-4768-af06-32658aed2912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd83c84-e1f1-44c6-aeec-568f15816adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257226da-8d20-440d-bb04-ece4d0a263de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d3be1a-7167-4fe8-897a-1935bd2aebfb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1632284b-2409-4e04-bec3-e81195d8edee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b977b02-7572-420f-9c10-e1f9870fa882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48be3bf8-1c47-4b58-829c-4ccc94dcadf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576f7054-2c2c-42a4-aaf5-cef3f6e094f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e739cb-2a44-45b4-9c7b-3c34ec5fa5ad",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3063a524-b3c9-436f-906e-a9f07377b44b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf222862-7def-47d5-b354-8662b4f131b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee863d6-3a49-4bb0-a735-ae1bd2f2764a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ffc4e2-5347-4c83-a6a4-39f528668ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37157a84-551b-424c-bef6-ef8cfaf470a1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d72fd7-229a-45be-90b3-b3b4579ee73c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd18eb71-97ae-4659-883c-278498fed654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b146d6-e749-415c-9ec9-23d2881fafc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdd8a7d-b562-44dd-9104-7ce5206a161a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97285db6-d58b-45ad-b7d8-acabd888804f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46ddabe-2254-476f-9c0e-7075e186c371",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "822f5187-b5f9-41c6-a896-2adf1d0b157f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6508d45e-f3e9-4285-9b7c-65f40026494c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00258ea-6fc1-4bbe-b9e6-83b2028f737a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba95b5c-b87a-4987-8bdb-60aec4cf0c59",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30190880-1b64-4663-839b-b2e1035818b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e0e5860-5464-43c2-b987-4919205b6b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48977ccf-1b77-4e62-aa9d-5d14d4f2fb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5635b6f-ba10-49e5-9588-49d1e2e60613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21c52ff-dfd9-4b67-bb27-572253bc4cbb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890a6a03-c683-41e5-a3b8-27b3c1d1da23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49bdf4c8-9314-42e0-9fe9-779c9ddf5c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a39fa79-bd71-4c0c-960b-85fb0f37ae2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255eeea7-f60a-433d-b645-ced385e565ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5578adfa-e489-4fc7-bbac-abbf78d6bd7a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d81b8b5-9c59-4ab9-8d19-458293d8b447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7434ddd-78a6-402b-838f-a33ee9bbfaea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cbc7d1-c467-4e84-98eb-5651cc382d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f90bdf-3723-4293-9c45-050fe81d6d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcacfbeb-6aee-4212-98fe-f594e4a89582",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42520625-39d4-49f9-bf1d-58d925abbb57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65828e9e-0657-4c15-bdf7-db0c04bd1053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5785bf7-2627-47a1-8c48-d61d6416f036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef1ea04-077c-438c-946d-a94c89de4681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4f4c33-dda5-4e0a-9047-4849f26dd055",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34812286-a5e3-4383-876c-2b906650304d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e7cab0-f965-4e9c-92fb-351a9adb6c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f28d78f-37dd-4683-846d-b2982034922f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da73f63f-3d1b-45f3-80d5-319fba53eb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3867326c-752d-46ae-89a8-7702eccd86a1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a5085b-56b6-482e-8cff-e374cb3bae79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a52068b8-d43e-492b-87f0-ff13fcf39987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eeca20-855d-4bf2-b209-fcfa8ebae2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c0d2f5-5c44-4305-9d09-5d79907f144d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa4e187-5566-4ee1-b73d-041a9f7a9b2c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b4fe8b-4b2e-448c-b620-1751866eed18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b3c663b-9b22-45b6-ae69-fbf7afeca695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa1dfd2-5085-47fb-a5ec-7fd1cc170de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42592aec-afa0-4adf-b685-fb5bcf4c238c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ececb590-c87e-4a8a-bfb2-edcba928d4e7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24327acb-6ccc-40a6-b62e-b3e1683a782e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11fff77b-ad52-40dd-9114-06817b95b649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c52d11b-3d79-4bfe-9b18-c63d1ac2d0b3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ce2d7f-8a70-4a0e-b829-7a645c88ce54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7cc90d-5341-46d1-80fe-dcfa0c7447d5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e0e093-972a-4f60-be7a-e15173ff4c69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "290ede38-2ccb-4851-a5e9-39024281f0ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b56b800-b2a4-4a44-bae6-3c1c7eb3d391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b27195a-87d4-406d-9d7f-731645064623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf545335-11e4-4798-bab9-ee77df11cbe4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e1ad05-21f0-47f9-a411-4747f97c30f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "480a5266-819e-4ff2-8b74-6b5cec720912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b552ccb-ed11-4ffe-b375-be976018bcda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd4fd27-520e-41c1-90c3-a3a5941582b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02830cfe-66d2-4e3b-b207-ad72448e5207",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f63259-0e2b-4e36-8cca-ee2d0deb77ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b059a53-a773-4445-8887-3f5268d572ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f810adea-3c59-4b34-a62c-1aba70be68f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63acff41-6743-416a-92f4-bcb725e0eea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6042d5b-e926-43f0-abf7-7225d490d514",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec6ffb8-e93b-4d6d-9f33-63e9de26db2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b626dd41-92de-460f-af54-7faadc285563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ec702d-9d62-4867-a103-1f2f36898621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fdb29d0-30ac-42ed-bed7-6bec2186ee15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6440beaf-cda5-4d6d-ba32-fea90c88aa13",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40ba0f3-973a-4d85-8822-b4c8cb533eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27fe9e24-8b13-4214-9466-642f4e62d54d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eca1f35-d1c0-4c3c-939f-ef9890014ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac703395-bac1-4f43-9837-293d391cf42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd44e5fe-6d14-4ed5-9688-90832a1fb903",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986ab411-ac13-4994-836c-40c20d47325d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d838d1f5-948c-467b-82ed-687136aaa9be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7505d301-abdf-462f-ad46-edb3adeaf2c6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25823021-66a0-4127-8946-48882cbd3b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ab3d2c-25c6-4d39-9a02-b48bd75c355f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54729e9-9379-4587-a575-811ee169f9d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60dbdaa4-b44b-4c6e-88e6-8f0e1c1af3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3486b16-3e65-4b47-b1bc-97d8df2934f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1f8203-48b1-4a9b-a53b-1ddef8497392"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dce9f18-7b63-42b4-b4ef-905e3c3ab6b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fdedc1b-c4c4-4ff7-b8ca-b3d17d6624e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ac9612a-16ff-48ed-92e6-836efd171972",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b871e58-6e74-4ad1-9b04-d94d363886e1"
                    }
                  }
                ]
              },
              {
                "id": "2eb6e013-967f-49a2-ac7f-97ac8ede6f65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e072a882-0264-4cd2-a6ff-4c87ef967cc3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d5a9fa-d948-421f-b92b-c66ee733ec12",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7f7e19c8-fbe9-420e-843e-a413feb90356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faeb9c09-db07-4b78-ab5a-e62bad8b2691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b29e54e0-5ae0-47bc-8640-270906689869"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8c8a8a8-7545-4aed-a4bb-21f3c64c1ce3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90a77c58-197b-4dae-99a0-b4a7ea5c28f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28f7b05a-58ff-4be8-a0e6-d01d81a70999",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "210db7ec-5ff7-490c-94ca-9116613135a6"
                    }
                  }
                ]
              },
              {
                "id": "0ae276d9-6c89-496e-8289-83d2c4e10c5a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "807d4e90-cb82-49d6-a688-ec79ade09b1c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ec0b42-2810-4928-92d0-8a30626da035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ce3388e5-fc64-4a53-a9d0-727e3830fec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75638d9f-21bf-4d7b-86b6-4197ba4cea67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed6b08f-3d7b-4d2e-ae45-f072cd582e54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2c28173f-671f-4d57-b952-503e34eb38ee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4015990d-fec6-4a03-be97-9cc1ddb46ae2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14197791-5c4d-4bd6-aaad-1027dbe42413",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1befd584-467e-4c20-ac51-4b3e25470b11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "354be062-d0b0-4aa1-8a5b-0401103ec455",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d21a7f6-e37b-4933-a915-86e050b23d71"
                    }
                  }
                ]
              },
              {
                "id": "ebd826b3-15bd-40d5-8b04-b032fee5f71e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f35b9945-9959-4122-b88c-7cf6be5761f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f3c359f8-040f-4b57-8102-cf0dbe4e0ed9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e7c26e2-0162-4f18-af5d-dc11a2addcda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f546572b-d503-4e21-9382-1243eef43d4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad0f60b0-aa7a-4fe4-b39a-562bbe765528",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5e8b7410-b725-4334-a7c4-f2dec3496dd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f46a4aa7-279a-44ef-9185-d65169c3b946",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36b8d7bd-bb62-4c63-8b26-12b7b3e6bbf9"
            }
          }
        ]
      },
      {
        "id": "d245fa87-77ff-450f-9ba5-ebf78328d3ea",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "566c177e-3e70-49ef-8e55-5679bc1f8e33",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c0f809e-2867-4254-8887-8db0696db649",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c52fe91c-5fc0-493f-b22e-753d30ca3566",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399b63b9-8a7c-40ea-a854-6e10b94fe576",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "05b36096-c9f1-4914-802d-5770131a39aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5325e6-cf17-46e0-b9c2-7729941fc2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4be00450-cd4b-4905-b5dd-1c2001420af4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b67c41b-606d-4c72-9573-5a43bb775353",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d123c256-7336-4af0-8d69-b3b2850dba2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8583536-a42d-4e2e-92ac-cdb13cda4eb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e856074-c58d-40da-88ad-4223ca1ea7fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9bb2f67-54d6-4bf3-9e85-85fb7fa68048",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c4568465-c633-4e1b-adbc-cb5e2ca36288"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "491ff9d0-4473-4a2a-b5e4-abf84040ed9e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "132d1acf-2e3a-497e-b464-34d65fb08edb"
            }
          }
        ]
      },
      {
        "id": "c8c645b1-d71c-4eae-8fb5-9bcea6996f88",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d6fe595a-7d77-4ee5-94f3-dfc077da7d60",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ae29316-33ef-4d2b-b7b0-7cfc3130e0f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "222dfcaa-a1bf-4869-8d11-55b06933fc3e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2eb1bb-6944-4a5a-8575-95009da65b3c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6716bc2-f7b3-417e-8912-901693788dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff8bb00-b73e-403e-beaf-4089a18315ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "801f0b33-32f0-4987-8d66-6c49c352ca58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4600ff5-bd76-4133-8927-ff5db90a86a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "131d3e8d-edf4-4f72-845d-d9f6575aabdc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab96260a-50f7-44b8-8c2f-49b7530bd0e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a7e6a3e-27ba-4237-bc73-4c687afb0bbd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77a0fb03-a094-4697-ada9-52d63c27bc66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "02c99aa4-5654-42ec-bc60-04013cfa3a9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a91f56c-7f28-4c80-b9ce-3a82675141d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cba1b475-0924-4301-82cd-96fc4353258b"
            }
          }
        ]
      },
      {
        "id": "3832565c-eca8-4652-b156-13b980dfb151",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "66877b7f-d5fc-42da-8b05-109320d57967",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dfb44c0-5ea1-46d5-b2a8-d6972a05ac51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82d6b6a7-13ff-4999-9b8e-2549cac18f58",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab284690-c5b9-4733-8007-8a69e2713efc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cb7e15c-6c62-4b77-b739-2ba0501401a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3f81e0-2881-4a1b-8825-6c548753d293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "716f0acd-7f69-49d2-b440-ca529e386c9e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88523350-08c7-4c64-b430-200f838d60c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2872eb0-8c34-465a-ad35-1bae3a088b77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "619cbab2-a2a5-4298-826d-bdb1dc69f216",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b092199-09b1-45b2-b803-4a7a656c1e78"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e934f859-3102-4883-80c8-63d61fc25de4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea7fa5ef-9591-4acf-b1c4-6108ddeaffd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e4de8af-7af3-4d3a-84d0-9b1d7d799dde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5016d7fd-e12d-4f4a-b159-b7f9e964b160"
            }
          }
        ]
      },
      {
        "id": "e23b1889-0557-43fc-8085-b6ea68f465b2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa266c16-b387-4e07-b042-e0e9d2dc41c2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06f05c9b-82d4-4155-bfeb-887b17008d9b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "782d2e57-ae73-480e-8630-e5eb96f9e424",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f1cd772-1887-415c-adb7-880ee0a38620",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7eb65629-eebf-4ddb-a72d-903b1d6f054d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 7
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 251,
        "pending": 0,
        "failed": 4
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 35
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 7
      }
    },
    "timings": {
      "responseAverage": 138.8951612903226,
      "responseMin": 10,
      "responseMax": 3492,
      "responseSd": 389.16522153708246,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716079187679,
      "completed": 1716079230373
    },
    "executions": [
      {
        "id": "6d7a28ab-c694-45c2-8e00-efc05d6f794e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a32bcd22-aea4-432f-a744-94dc1b860399",
          "httpRequestId": "f70c57f5-11be-4037-8c41-48ecca6219f2"
        },
        "item": {
          "id": "6d7a28ab-c694-45c2-8e00-efc05d6f794e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "39c8b059-d225-489e-9ce9-b2c15e3d9517",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "d72599dc-092a-499f-a9dd-d2753c736b55",
        "cursor": {
          "ref": "7c7f8283-6424-4dae-8f7e-09bdd786a5b2",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "76548913-466d-40b0-869c-5ef9fd847e95"
        },
        "item": {
          "id": "d72599dc-092a-499f-a9dd-d2753c736b55",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "37ba417d-e1d8-4bcd-97f2-55934dd54efc",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "4cb2d847-6c60-4f85-9fbf-803d71f5d33c",
        "cursor": {
          "ref": "a435effa-f523-44e5-9ba0-43e862ea9789",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e078dd2b-bb79-4b8e-a28d-adc20956b576"
        },
        "item": {
          "id": "4cb2d847-6c60-4f85-9fbf-803d71f5d33c",
          "name": "did_json"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:3)"
            }
          }
        ]
      },
      {
        "id": "996d486b-9228-430e-bde4-29f9b4bf7597",
        "cursor": {
          "ref": "ea139629-c605-4781-b6d6-af5b638d3d8b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ba303554-6337-4450-9e31-2e625eb03f64"
        },
        "item": {
          "id": "996d486b-9228-430e-bde4-29f9b4bf7597",
          "name": "did:invalid"
        },
        "response": {
          "id": "bb6d686a-5b0c-4dfc-8fea-62ee310baecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2385,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996d486b-9228-430e-bde4-29f9b4bf7597",
        "cursor": {
          "ref": "ea139629-c605-4781-b6d6-af5b638d3d8b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ba303554-6337-4450-9e31-2e625eb03f64"
        },
        "item": {
          "id": "996d486b-9228-430e-bde4-29f9b4bf7597",
          "name": "did:invalid"
        },
        "response": {
          "id": "bb6d686a-5b0c-4dfc-8fea-62ee310baecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2385,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e259f75-88a2-462a-8f47-d835c20778f3",
        "cursor": {
          "ref": "5c230b4d-9fbe-4af0-a0c3-c351d529df53",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5479a095-fd96-4e64-bfeb-e4004e2539c6"
        },
        "item": {
          "id": "8e259f75-88a2-462a-8f47-d835c20778f3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "317f9173-5dab-4b40-9e52-e6b93708730f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2648,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66965a4-fdb9-4aa2-885d-d1873453473f",
        "cursor": {
          "ref": "9c9c81e0-7a29-4b85-8b16-13321d360035",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bfb28952-dc96-4310-acf0-33be686a2486"
        },
        "item": {
          "id": "a66965a4-fdb9-4aa2-885d-d1873453473f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "263f61bb-7635-44ef-9747-7dc2808831cd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2347,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9e5b42-c455-45d2-b2df-9e311c3adc4c",
        "cursor": {
          "ref": "1f974950-2a0f-4c5f-96b8-61e7f7d46fe9",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b61805e1-13ec-4790-8300-c4a80a9b9726"
        },
        "item": {
          "id": "1f9e5b42-c455-45d2-b2df-9e311c3adc4c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "40b11f7f-1b9d-45d8-ba77-bda7acad3e0f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 77,
          "responseSize": 22
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 404",
              "stack": "AssertionError: expected response to have status code 401 but got 404\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "e2307bd5-8151-4309-b0c2-345636d3eb46",
        "cursor": {
          "ref": "f9f31fd0-70ab-4e8c-af23-d4b857136939",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "42e9d787-e78e-4300-a616-929b2689b5b0"
        },
        "item": {
          "id": "e2307bd5-8151-4309-b0c2-345636d3eb46",
          "name": "identifiers"
        },
        "response": {
          "id": "8e689597-8af7-4a64-847f-0b81834b5fe1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 22
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "id": "3983da68-8000-4a40-91e4-e968aa931dcb",
        "cursor": {
          "ref": "6e20dfc0-d2d3-480f-b587-00f2159e423f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3d21bf04-a5e3-44ae-84f8-eb1431728851"
        },
        "item": {
          "id": "3983da68-8000-4a40-91e4-e968aa931dcb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "388472d0-925c-4ee7-83a6-e4c54d93e499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2292a7-9515-483e-b746-c55963d2e7d6",
        "cursor": {
          "ref": "a36d7dca-7d99-4730-ad83-295c2b8b1c14",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9571cd92-102b-4b41-8c10-bb313338ef70"
        },
        "item": {
          "id": "bc2292a7-9515-483e-b746-c55963d2e7d6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1404cf37-37bb-47a1-a0f7-fbff84f69bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c19fdd3-b555-42a1-81ef-ce78ad4bbde1",
        "cursor": {
          "ref": "e2c1f70a-7224-4272-8707-17b165bc0eca",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "def25e72-36bb-429c-8fa6-25e38059c334"
        },
        "item": {
          "id": "9c19fdd3-b555-42a1-81ef-ce78ad4bbde1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3a91c327-51da-4e62-9633-a9ea23b08409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24b9729-32cc-4c94-85b9-17f40af463cb",
        "cursor": {
          "ref": "f042d16d-dff3-451b-9b42-a6e3f234ac7d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a64e0fdd-5e41-451d-855d-d16ac23b1a6e"
        },
        "item": {
          "id": "b24b9729-32cc-4c94-85b9-17f40af463cb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a8b30f56-2ece-46f4-8a51-18ed4763f8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f443a0-e51b-4e27-bac4-94a67611123c",
        "cursor": {
          "ref": "a5f7452e-c563-4a7e-ab48-ef98bffd0ce9",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "db3c3627-c5a9-4860-849b-6d2488bba17f"
        },
        "item": {
          "id": "01f443a0-e51b-4e27-bac4-94a67611123c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dd153048-a4ac-4500-8be8-241b28500eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2a1347-5d6d-4886-b250-5a16fa4a8c3f",
        "cursor": {
          "ref": "872b0865-acf9-4db9-906a-214bd5da65ae",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ff521449-d482-427d-a0c9-2bb2d76dd80e"
        },
        "item": {
          "id": "fe2a1347-5d6d-4886-b250-5a16fa4a8c3f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0bc61c8a-8d9e-4492-ac41-db55ea1b8584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9104bdfb-6de5-45c1-bbb9-346776f1a0f5",
        "cursor": {
          "ref": "ecffb9cf-ecde-49f0-924e-4abe6bf8c1f7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2bdfcf93-0d3e-49ff-8e8a-f0f6d7660c55"
        },
        "item": {
          "id": "9104bdfb-6de5-45c1-bbb9-346776f1a0f5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b9bb4653-abd5-4f21-aded-2dc5cac782ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e2696d-456b-4f9e-b869-1fcbf89224cc",
        "cursor": {
          "ref": "4cea1ac7-aa76-4041-ac26-a959a61edd3d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6df6907c-b2ca-4a98-ac70-ac0fcdd25e59"
        },
        "item": {
          "id": "21e2696d-456b-4f9e-b869-1fcbf89224cc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b0f010a4-e7bf-484a-b11b-131af01e2352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f837f5-afd1-4d5e-a803-380f0a764d91",
        "cursor": {
          "ref": "decac383-3047-4f19-99d2-335189a7edf4",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "39edaf17-3338-4131-9cdf-48a943927f3e"
        },
        "item": {
          "id": "b2f837f5-afd1-4d5e-a803-380f0a764d91",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d8367f6b-6801-42e9-ac31-bace4d5c3873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c13ca87-4b6d-49f1-b437-845d3e835feb",
        "cursor": {
          "ref": "9dfc7f28-d927-49ec-8d68-84b17baccfa6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0c199fad-b256-4b9e-bb6e-9cca6a48e6ab"
        },
        "item": {
          "id": "3c13ca87-4b6d-49f1-b437-845d3e835feb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0f392102-56e1-4472-915e-a62a6b51912c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8345e4f-6c41-4870-b976-9401c73fae67",
        "cursor": {
          "ref": "305a35e6-51ee-49b3-8eae-645371e15699",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2802df8b-b665-470e-9b73-8a915d866930"
        },
        "item": {
          "id": "b8345e4f-6c41-4870-b976-9401c73fae67",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ac58f277-b537-485a-9335-ceb2767cf649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1219a718-23ee-482a-bab1-34fa91839235",
        "cursor": {
          "ref": "bb6a6b7f-8746-4bac-8fbb-9f3caf9652b2",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a950935f-4cb7-4e62-b07d-23591bcb95f1"
        },
        "item": {
          "id": "1219a718-23ee-482a-bab1-34fa91839235",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0529bc8f-ce7e-468f-b879-57ea5a649c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8b8e7d-b05f-416a-a066-c68cc279eb7d",
        "cursor": {
          "ref": "290d63dc-774a-4bd1-97d6-1647ac037782",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bdf7a666-4e13-4841-946f-2ca78fcd04b5"
        },
        "item": {
          "id": "fd8b8e7d-b05f-416a-a066-c68cc279eb7d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "18cd2d3f-795b-4e39-a7e5-a3a01900e35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e24800-5f60-4901-8f59-01f60c665d6d",
        "cursor": {
          "ref": "c109dfa5-3b2a-4cff-b82a-6bb1cdcc4fd4",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7ae16d5f-5686-46a8-ac5c-cd3c489fa656"
        },
        "item": {
          "id": "30e24800-5f60-4901-8f59-01f60c665d6d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8fbd6818-70ea-41be-a7b3-1993226a0723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2544779-4439-42e0-ba33-7f14fb2d45c8",
        "cursor": {
          "ref": "9c92c05b-2dc9-4428-a96b-c0a7289961fc",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a09bbc2b-a0e5-40f4-bcd7-d4e845b1c2ed"
        },
        "item": {
          "id": "a2544779-4439-42e0-ba33-7f14fb2d45c8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d5aa5af9-dd8f-4e98-873d-4065ff6ca28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d66b94-26b0-4f76-a5a6-78b1ef8b3e8e",
        "cursor": {
          "ref": "beb010cb-29a9-4fa0-8c6e-a3a4d4e4fcd5",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e9f4ea56-4ea7-41b1-b8a6-ac5ff794de4f"
        },
        "item": {
          "id": "32d66b94-26b0-4f76-a5a6-78b1ef8b3e8e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ac3d8aa6-4c71-42a9-9f6a-ed9c45b3daa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca6f9a1-df62-4298-a6ab-f25cb86ab548",
        "cursor": {
          "ref": "ad5a9db0-376b-49d4-9bf0-7b9fb9f53138",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e3fc8f38-a7ec-41d8-ae09-d799bd60011b"
        },
        "item": {
          "id": "0ca6f9a1-df62-4298-a6ab-f25cb86ab548",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "139b8420-3020-4b20-b9cc-2affda1b618d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdea977e-b523-42e9-b4c5-efe871f67687",
        "cursor": {
          "ref": "5e03378f-bed5-4ade-af5a-48bc15884301",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4c71bbb7-551c-412b-bb80-1199988347ef"
        },
        "item": {
          "id": "cdea977e-b523-42e9-b4c5-efe871f67687",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0a43a8a2-8103-49ab-943b-df0b1789f2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f1161e-7560-4a35-ae62-da519d34478c",
        "cursor": {
          "ref": "e2118b76-e83e-408e-b144-a678a5080ee5",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "52c364f8-7286-488f-ad37-3ab5e2c56bca"
        },
        "item": {
          "id": "92f1161e-7560-4a35-ae62-da519d34478c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e6d1adeb-cf78-494b-b27f-f102d4869a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588fd036-48f3-4b79-ab95-c26f00a18041",
        "cursor": {
          "ref": "fe3b0d79-25ef-4bcf-ac52-582f34f9cc86",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "92ce1f15-a403-408c-95cb-66820752e28d"
        },
        "item": {
          "id": "588fd036-48f3-4b79-ab95-c26f00a18041",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "70c276ba-57cb-4ed5-9574-30e1e627f867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87d0af7-d2ed-41d6-b6b3-32d0152930ca",
        "cursor": {
          "ref": "72ea6cef-433a-4c39-b41d-eb4a83ffc31f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "adac2d65-ce5a-403e-8fab-80e3ea037bee"
        },
        "item": {
          "id": "a87d0af7-d2ed-41d6-b6b3-32d0152930ca",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8c35dd49-e18a-4c2a-82e7-e200d60f82af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4698db-eacc-4436-8b51-dc25bf3e3294",
        "cursor": {
          "ref": "985f2c2f-1969-42fc-a832-39509cd0697d",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "af5acd7f-31f0-496a-9df1-e98dabcc051e"
        },
        "item": {
          "id": "8b4698db-eacc-4436-8b51-dc25bf3e3294",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ae807b8a-c68f-441c-9070-334abc66016f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e2c9c7-ff44-45e8-8551-08974f303c2b",
        "cursor": {
          "ref": "c1be864a-ad55-4164-b3f8-f660bfdc6078",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "57a022d9-7b04-4b55-ac62-d66f3bc2da02"
        },
        "item": {
          "id": "78e2c9c7-ff44-45e8-8551-08974f303c2b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0bbe6e7b-475c-48e9-82e0-edbbb590b855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc91cca-9b71-49a2-8d57-a13ce85f7ad3",
        "cursor": {
          "ref": "22522e89-7652-4502-83d0-9d8871517698",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "779b7c20-5468-4635-b131-b9c155530e70"
        },
        "item": {
          "id": "fbc91cca-9b71-49a2-8d57-a13ce85f7ad3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7ef22a61-85ee-46ab-bb95-8c32bd650c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64187155-03dc-414b-a252-bdc8ddd8e21c",
        "cursor": {
          "ref": "bec6e044-de0f-4a9e-b727-f537861eed46",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d59a579a-18ac-42c5-8036-f5abbcd87b8e"
        },
        "item": {
          "id": "64187155-03dc-414b-a252-bdc8ddd8e21c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1f6b9bc4-6c8f-439b-a1b1-0ceb9a64403d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7b44ab-db60-4cdf-9cc1-a25c9a9d3b64",
        "cursor": {
          "ref": "66310ae6-e383-451c-aef8-97dc44140528",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2797c2a8-c311-44b1-b2b1-3e446e6cc703"
        },
        "item": {
          "id": "7e7b44ab-db60-4cdf-9cc1-a25c9a9d3b64",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "46f81499-bf35-4cc8-8a06-6b249a41d79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f33057-dc98-488e-ac98-dbcc1a268a1c",
        "cursor": {
          "ref": "d8026d64-7191-4de5-b75a-08c4425259bc",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d19b597b-945b-45e0-b711-341572ddf598"
        },
        "item": {
          "id": "30f33057-dc98-488e-ac98-dbcc1a268a1c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5445a91e-1cba-4ac3-95bb-3ebbf65ee154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7554da88-eeb0-4d71-9cb2-3357b20ea6b7",
        "cursor": {
          "ref": "b2b51601-f02d-4f92-b620-a05992356363",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5e755f89-6d17-4007-8605-e00baa507b82"
        },
        "item": {
          "id": "7554da88-eeb0-4d71-9cb2-3357b20ea6b7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e9c1586f-eb37-4269-94a2-2fc9c78b6589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97567462-8ee0-4a5a-b72b-1dfd12d2f181",
        "cursor": {
          "ref": "dfa63085-ad42-4e40-8dc9-325fdf2188ad",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e769c184-bdfc-4ee4-912a-7c4410595aa8"
        },
        "item": {
          "id": "97567462-8ee0-4a5a-b72b-1dfd12d2f181",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "10f623a6-ed9f-4691-b1bd-f8f2c0cacf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8e1030-01cd-4f54-bdb5-f85999e7e842",
        "cursor": {
          "ref": "af379a7e-2144-4566-a4cb-3cb0aa69d41b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4adfba12-2377-4224-a074-78d33f186cab"
        },
        "item": {
          "id": "ca8e1030-01cd-4f54-bdb5-f85999e7e842",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8e896828-9cd4-427b-aef1-f961f2150110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62e3530-f05c-4d3f-aaae-c131dd993037",
        "cursor": {
          "ref": "58b5a23c-71fd-437b-a9ee-a87d9b1c0e6d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5e3305e1-51ec-44f5-b27a-e2cebb82e9bf"
        },
        "item": {
          "id": "b62e3530-f05c-4d3f-aaae-c131dd993037",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f277ec2c-6cfe-442a-b0b6-1728360a7081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e25497-59c2-4795-93ae-d284b23c1a70",
        "cursor": {
          "ref": "d93365df-986a-4a22-ad41-8199d09a871d",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c2c9164d-f03a-4c8e-8669-fff9ec188040"
        },
        "item": {
          "id": "07e25497-59c2-4795-93ae-d284b23c1a70",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7a31160d-03ba-46dc-a36a-3dd2c6550504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c8f1df-1221-439d-aca8-c345238b06b4",
        "cursor": {
          "ref": "c2998456-1789-4680-bf4d-0e418cf63ef7",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1df0a68f-4e6c-4bd5-b53d-a0ea304d1d17"
        },
        "item": {
          "id": "b7c8f1df-1221-439d-aca8-c345238b06b4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "056be245-3234-44fe-bb16-f1af6ed27339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661f9660-edd3-4953-81ce-4ce31006bf66",
        "cursor": {
          "ref": "6529da25-d995-4bae-b3df-444931e01c3d",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7b575549-e609-470f-a976-7816d474b8f3"
        },
        "item": {
          "id": "661f9660-edd3-4953-81ce-4ce31006bf66",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fdabcdcc-519f-4f3b-a783-27ca0f9c8898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ececef-43d7-42d9-94a8-6c5c936732aa",
        "cursor": {
          "ref": "6bc41eeb-79ea-45cd-be12-2c8237754a2c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bb43cc36-d463-4d95-99d2-35d9305e7746"
        },
        "item": {
          "id": "e4ececef-43d7-42d9-94a8-6c5c936732aa",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d8f3ac5f-d41b-4ab6-92cb-18806f17bc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d119052-cb84-460d-935e-478e5a24b480",
        "cursor": {
          "ref": "a9c092d7-3746-4cca-9aec-9ebb4f0edb67",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f7dbb12d-e1d0-44b2-900e-abbab3a1027e"
        },
        "item": {
          "id": "2d119052-cb84-460d-935e-478e5a24b480",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6da62b48-9c5d-4541-a74f-6692255f9098",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476109da-eed9-4e60-be15-89b174e5fefc",
        "cursor": {
          "ref": "ca3d951f-2adc-41d4-80b1-6cbfa97b94a9",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4e301249-da4b-459f-9a09-5c0411fb2c56"
        },
        "item": {
          "id": "476109da-eed9-4e60-be15-89b174e5fefc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e5049e2b-3789-4d9f-bee8-a6f6048e5045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e73bde-427d-45bc-9e99-59afca0ba49c",
        "cursor": {
          "ref": "fff4591b-6665-4dcf-a41a-e7c9ad822574",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "719ce6a1-fc21-4c62-a3b6-6c94c3579fff"
        },
        "item": {
          "id": "a0e73bde-427d-45bc-9e99-59afca0ba49c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cee8c96d-b9eb-4faf-a521-fa6b25dc36cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca036867-b19d-44ab-8174-9bb19afd426c",
        "cursor": {
          "ref": "95a87e68-f657-4983-a4ab-54e59091ce4e",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "612eb521-3990-48dd-abce-53edeb3dab74"
        },
        "item": {
          "id": "ca036867-b19d-44ab-8174-9bb19afd426c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "578ef427-47a2-4db2-ad46-8412ec0871f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49188a43-037e-491e-bc5b-53283cea6aa3",
        "cursor": {
          "ref": "ff90330e-968f-491d-b8a6-c3b50fab76dd",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "af7a7afd-2748-4ada-88f0-81f50552c744"
        },
        "item": {
          "id": "49188a43-037e-491e-bc5b-53283cea6aa3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a696fa77-44a5-44d7-97fa-7c7de2bed45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e435a9a-c106-4297-a01b-1cca9f3fb8ad",
        "cursor": {
          "ref": "e6008981-fdfa-4416-b8ea-a28a43c2741b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9c70cce5-4f50-403c-b4ea-4958a61327a4"
        },
        "item": {
          "id": "6e435a9a-c106-4297-a01b-1cca9f3fb8ad",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f8cba6a5-754a-4eb3-92ce-b2858ee5b919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af974cc7-c9cd-42f7-a835-a4edf3fd5d5b",
        "cursor": {
          "ref": "e14c7af7-5869-4ca7-8f66-455f32575a36",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "23ce9e9b-dcf1-41bb-8822-228698bda66f"
        },
        "item": {
          "id": "af974cc7-c9cd-42f7-a835-a4edf3fd5d5b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1c73c020-980d-4623-b500-953ea1b683a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432ab56d-2e97-476e-8422-5763ccf64480",
        "cursor": {
          "ref": "12b4c3ea-1bfe-412f-89d1-0b3ca8cd7b5d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d644bda7-8062-47ae-8c5f-ade442a9b1f9"
        },
        "item": {
          "id": "432ab56d-2e97-476e-8422-5763ccf64480",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7dd234e3-f03c-4bc0-b357-88f11ca5e61a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ba8327-f97c-4fce-aed4-8051fcac0a0a",
        "cursor": {
          "ref": "a818f49c-73db-4548-b914-c9da0c054669",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f80bb8ca-1545-474d-8367-3f507e81e50f"
        },
        "item": {
          "id": "e9ba8327-f97c-4fce-aed4-8051fcac0a0a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "944486fc-44a7-4259-818a-d42cabf76a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e872c2f-091b-4587-88c0-31447d4bbd66",
        "cursor": {
          "ref": "59901592-cf84-41e0-bc33-bc3bd9d96d6e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d9dc240f-8a9b-405f-9c05-1ccc53cc3942"
        },
        "item": {
          "id": "3e872c2f-091b-4587-88c0-31447d4bbd66",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fa3e226f-cdf0-4fab-a057-b2c55bed982c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99defd54-e4ae-4f6d-b791-6a72feb6cb67",
        "cursor": {
          "ref": "ad9f6aab-1257-409a-a63d-9412ec8c1316",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d216e35f-e8ce-4724-b8f5-1f5bdd85eed0"
        },
        "item": {
          "id": "99defd54-e4ae-4f6d-b791-6a72feb6cb67",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "928374b4-43d0-4d7b-930d-d38d3054169a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79c88d5-ba5a-4fc0-9579-aa4562e3d72f",
        "cursor": {
          "ref": "937a21fc-492d-4d9c-88b1-e6675375b3a0",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "15ea5af1-e164-4c7f-87e2-c6eaff29ff75"
        },
        "item": {
          "id": "e79c88d5-ba5a-4fc0-9579-aa4562e3d72f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "91cdb3f4-ffcf-48da-9c6b-b8dab64c47ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a781e873-64a6-45ca-b22d-08acea7e5e73",
        "cursor": {
          "ref": "20b63566-81c7-4db7-a6bc-189db24dd435",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "71d181e0-5bf3-4400-a365-dbcd0961c146"
        },
        "item": {
          "id": "a781e873-64a6-45ca-b22d-08acea7e5e73",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b08dbfaa-7d88-4cca-9d32-2b17df6fef5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7272c8e5-4770-429b-8fd9-d8fd88f62ba1",
        "cursor": {
          "ref": "b8ce67fb-fdea-4687-9e3e-6d4aa217ff20",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1de0ea53-ac7c-496b-8bab-a05f0742cca5"
        },
        "item": {
          "id": "7272c8e5-4770-429b-8fd9-d8fd88f62ba1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e7d9eadc-12b2-4924-97f4-a80169638dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f3d049-b4f2-4d7d-8824-5d343834bafd",
        "cursor": {
          "ref": "771c02de-e849-412a-8d06-d611e3281a07",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9a1ae97b-f4f2-48f5-84ca-4081ee543b42"
        },
        "item": {
          "id": "20f3d049-b4f2-4d7d-8824-5d343834bafd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "40e8c9ea-05e0-40b5-b37d-1985993e2f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dfe740-dbad-4308-8830-6fb15fde8c35",
        "cursor": {
          "ref": "95edb196-a2b3-4ffc-a5e2-99c2365c7775",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "75f6393e-6e22-4ae4-bf82-7ab1455fff13"
        },
        "item": {
          "id": "a0dfe740-dbad-4308-8830-6fb15fde8c35",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "30c47e1d-dd83-4407-80c2-cf0607568efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88cc52a-cb13-4849-ac8a-f7738b3b6f58",
        "cursor": {
          "ref": "d9f67ca5-c2a7-462a-835b-e4da7ebac296",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8e36d629-dcba-4940-aaf5-ec7b42b6a25a"
        },
        "item": {
          "id": "a88cc52a-cb13-4849-ac8a-f7738b3b6f58",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3388d35f-e3c1-4a70-b54d-bc194d40fb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36b4f2a-1403-47a4-a120-c49e82105bf6",
        "cursor": {
          "ref": "153a643a-f605-4cd5-b084-6076b2eb648b",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "814277e5-8df9-49f6-a320-c71e58b0572e"
        },
        "item": {
          "id": "b36b4f2a-1403-47a4-a120-c49e82105bf6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7e598de4-d09a-44e6-b836-3f97b7e97656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0d46dc-951a-4d15-a444-bfe99f03cf6d",
        "cursor": {
          "ref": "af9f4016-4f83-4ff8-9a54-a9e913bf4cc4",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "92a7b025-3565-482f-b4cb-dc02b2fecdfa"
        },
        "item": {
          "id": "4a0d46dc-951a-4d15-a444-bfe99f03cf6d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "356b6286-62f3-40f8-8d2b-e16cbc384af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533b85ed-c919-4171-abd6-86ad3fc428ef",
        "cursor": {
          "ref": "5fe5da8a-0065-42be-a280-288c17f0c626",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "20e8252f-af8a-4a95-9418-17e0aa57b3b4"
        },
        "item": {
          "id": "533b85ed-c919-4171-abd6-86ad3fc428ef",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a0687a14-0f63-48fb-89be-0ea93def751c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbbb4a5-c49c-4f3d-bdea-187cf667ba31",
        "cursor": {
          "ref": "aa5737a7-bcb3-4c43-a392-2c37be47d1f3",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3b98b037-2e5d-4488-ab15-cc3ba8f1117d"
        },
        "item": {
          "id": "9bbbb4a5-c49c-4f3d-bdea-187cf667ba31",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b1530a13-191d-404f-bba1-f0762a62ff7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cde959b-d6b2-4f62-8a9d-f054b535aa4d",
        "cursor": {
          "ref": "2bd4291d-4cf1-426a-b965-da92f2f76659",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ea418fd6-5cc7-402c-ba21-60ce9551be34"
        },
        "item": {
          "id": "4cde959b-d6b2-4f62-8a9d-f054b535aa4d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7ca02482-74e4-47a9-aa64-c9072ed28fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c560cc-d317-4e80-8624-ac2da9af97c7",
        "cursor": {
          "ref": "f249495e-7c65-4834-9889-33337d549a49",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "58c3664c-5eaa-4ef1-be08-8b515c432509"
        },
        "item": {
          "id": "98c560cc-d317-4e80-8624-ac2da9af97c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "259db50d-97ae-43c7-9aec-6182bc01dabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9e20dc-de66-43c8-b53a-829d10bbbaae",
        "cursor": {
          "ref": "34151c9a-8778-4961-ac7a-aca56ae042e8",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bbba5d93-a74a-41f4-8f2a-d9f1adaa19c2"
        },
        "item": {
          "id": "df9e20dc-de66-43c8-b53a-829d10bbbaae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "580bbd01-6384-43a9-83f1-f22a842dd685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed1c4d5-08f9-4c84-84d2-d542c455395f",
        "cursor": {
          "ref": "7e2ec2ca-50d1-42e5-9fcc-5f0a4d607581",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "315ccd59-3b75-49db-890c-d20d25f620f1"
        },
        "item": {
          "id": "9ed1c4d5-08f9-4c84-84d2-d542c455395f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "02299b77-5c37-42b5-996c-6763129f9453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63564b4-f9d1-4d4a-b9c1-4cf5092a8a1b",
        "cursor": {
          "ref": "0d31a93f-536d-4e5d-8748-82364074e647",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "70b44401-5ceb-443a-b700-f2937233a30d"
        },
        "item": {
          "id": "f63564b4-f9d1-4d4a-b9c1-4cf5092a8a1b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "36a275fc-3a2f-4e08-8c26-87181e143757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb003b0-b612-486b-b66f-d117778644f6",
        "cursor": {
          "ref": "2a680d62-928a-42a8-9815-a74f3dee4fb9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5910ae20-3da5-4869-bd52-ffda19c3b14b"
        },
        "item": {
          "id": "3bb003b0-b612-486b-b66f-d117778644f6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b9dc0272-0297-4618-b6e6-531005742d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defcd9dd-5aaa-4461-a38f-43209fd0380a",
        "cursor": {
          "ref": "8eb7d22c-9d01-45b6-905d-59617cb7d6b4",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "371a3bcd-6ec6-4284-8e3b-6b6bfae3409b"
        },
        "item": {
          "id": "defcd9dd-5aaa-4461-a38f-43209fd0380a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "eea4c639-e1e4-43df-9ebd-7f4256ca3fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9162a14-0cc3-4240-b3a1-b7b259b5abbb",
        "cursor": {
          "ref": "49c13791-79c5-4fcc-b850-e9227d2248bc",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6a07a087-2307-4151-8e6a-fabd67d6a469"
        },
        "item": {
          "id": "d9162a14-0cc3-4240-b3a1-b7b259b5abbb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cb3fc989-88ba-4b61-b4d7-a1f050ceb16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e898d84b-b5fe-46a8-a1ad-66d9d8d252d6",
        "cursor": {
          "ref": "439b4163-244c-4e8f-a9d6-9674d704a228",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2bc40d0f-91f3-43dd-a9cf-283a946d295e"
        },
        "item": {
          "id": "e898d84b-b5fe-46a8-a1ad-66d9d8d252d6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "76438f95-5688-4fcf-a552-743b2c50ebde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c15412a-6985-48ca-83f9-5f3616ca5fa2",
        "cursor": {
          "ref": "94883683-dfda-4520-8f8e-2c5333d9d0f0",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4730c352-9876-44d2-bc84-b4b465824757"
        },
        "item": {
          "id": "2c15412a-6985-48ca-83f9-5f3616ca5fa2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e551e72b-b6d6-4611-942d-206ae4b4bef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa1ccdd-abf8-4689-9601-f83dafb543d1",
        "cursor": {
          "ref": "02bef706-2d49-4bd4-900c-dc84e4f3db19",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "87042118-7fb4-4a3b-8016-cb9c162590d8"
        },
        "item": {
          "id": "3fa1ccdd-abf8-4689-9601-f83dafb543d1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c0ac45f6-06e1-4209-9c3d-057193c538d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436e845d-6529-4960-9ad3-bf1372d66041",
        "cursor": {
          "ref": "77f0cc64-7001-4a6d-8a3a-670aaca08b1e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d791b220-cd0a-4d88-b8dc-6c6536422b1d"
        },
        "item": {
          "id": "436e845d-6529-4960-9ad3-bf1372d66041",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ac2229dc-593a-4a15-89dc-f022c6a37fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de90205c-4b91-4bb0-9b32-c2bd96e0b1d0",
        "cursor": {
          "ref": "76778ca3-7562-4ba2-9170-3d6dc1102126",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "30049acb-c4ad-4018-a89f-f58c44c44ed1"
        },
        "item": {
          "id": "de90205c-4b91-4bb0-9b32-c2bd96e0b1d0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "827ec26a-29c6-496f-9817-1bf867a58bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be5512a-c58a-47a2-ae15-8cd5c35c1e84",
        "cursor": {
          "ref": "4a703e4c-1543-4134-ab0c-79885d2812f0",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5d2bf1ac-b759-4f25-9872-d3912a8e316f"
        },
        "item": {
          "id": "2be5512a-c58a-47a2-ae15-8cd5c35c1e84",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f674c711-7650-43fb-b9f1-1c2a74dd53cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ea6d81-2b16-4a7a-ac14-0269ec45a4ab",
        "cursor": {
          "ref": "a1b96a67-6325-4ade-8b44-6de1c4ac40dd",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "831a2f1b-5daa-43c9-bc0c-d6ff2ec4f7d5"
        },
        "item": {
          "id": "28ea6d81-2b16-4a7a-ac14-0269ec45a4ab",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fdd636ff-04af-4d11-b592-3d48b6983761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847081fd-dda3-4ac9-9633-122801d9dad2",
        "cursor": {
          "ref": "d40dad18-05b8-4f4f-8728-ad75af8610da",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2a13ff1c-a067-45c8-a1df-7e6b8340b0fd"
        },
        "item": {
          "id": "847081fd-dda3-4ac9-9633-122801d9dad2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3638b345-81e6-400e-bc17-4ec202d30285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8799aaa2-d7a0-49d1-96c2-be848d1ef77c",
        "cursor": {
          "ref": "3348ff48-21d0-4fa7-a0d6-a232494bbf91",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ffa93d63-b27f-4c57-a7ab-9112ef998484"
        },
        "item": {
          "id": "8799aaa2-d7a0-49d1-96c2-be848d1ef77c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1a947e2d-d11e-4277-bd76-443c1e657ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e99695-b9bf-4c22-93f2-d3888442ec19",
        "cursor": {
          "ref": "1b13ba66-d76e-49f6-bcaf-b5e17090a755",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b7dec87d-0ed4-4a78-835f-c70b9a22a093"
        },
        "item": {
          "id": "68e99695-b9bf-4c22-93f2-d3888442ec19",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "27983c83-2950-43da-b869-58957756af4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccc0575-5fb8-49c6-b822-2a665cfedbb6",
        "cursor": {
          "ref": "bfedaa48-11e5-4c74-a749-342c31ccc907",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8237c216-0ec0-4a3f-b9cf-c70448009a34"
        },
        "item": {
          "id": "fccc0575-5fb8-49c6-b822-2a665cfedbb6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8d7ae52e-722e-4b57-a918-23b086913431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475f62d7-b8bf-4a27-b15c-b5a08785aa2f",
        "cursor": {
          "ref": "b9b7c9ae-11dd-43ca-ba75-169fefafe044",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8cb2a2bc-c378-4392-bc67-3ee4c50201ce"
        },
        "item": {
          "id": "475f62d7-b8bf-4a27-b15c-b5a08785aa2f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9b5288f3-50a4-4249-b5a5-066fdcd0efc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413e459c-fa4e-4af4-9df2-5c6e24fbbe35",
        "cursor": {
          "ref": "fa7ec2fc-c480-4382-951e-e6ede678386e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c2f815b7-e9af-4a38-b1ae-31a73a562436"
        },
        "item": {
          "id": "413e459c-fa4e-4af4-9df2-5c6e24fbbe35",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "83449212-7d5d-42d1-8b29-34177da24f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205af8c3-a2ca-43ef-942f-a604ca1ed684",
        "cursor": {
          "ref": "7ee83dee-2faa-4b6e-8f66-5dddf8564087",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "52385655-0492-4d4d-a625-302e407f4e4c"
        },
        "item": {
          "id": "205af8c3-a2ca-43ef-942f-a604ca1ed684",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e23a0a61-27c6-41f9-a269-e9a9da3eefae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e992561-24cb-42ad-8607-2acc9eaa1181",
        "cursor": {
          "ref": "4a25ac83-b09e-4585-a339-60cfe5097705",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fe7e2593-8ca2-40d5-8c5d-9243b3410cd1"
        },
        "item": {
          "id": "8e992561-24cb-42ad-8607-2acc9eaa1181",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e8fe4ce0-b5bc-49f1-bc9f-3de01173e2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b33fb7-7c7e-43a8-9f91-78f1f99e824a",
        "cursor": {
          "ref": "8723a3ab-73c2-45fc-b41e-95ac5851e772",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5020a636-11ef-4284-95d4-5b56c2524725"
        },
        "item": {
          "id": "48b33fb7-7c7e-43a8-9f91-78f1f99e824a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9fc17203-f94d-4c71-9f63-4148089314d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73462aa8-1b1f-47e8-8fa2-6ef04646058d",
        "cursor": {
          "ref": "feee46b1-ec0e-4996-afa9-eaf2af6433f9",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a46e1fec-b820-426c-9d29-49826b8d490c"
        },
        "item": {
          "id": "73462aa8-1b1f-47e8-8fa2-6ef04646058d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f6fb818c-cc81-470d-8fb9-51888ade33c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707aff49-1294-413a-984f-9214557faac9",
        "cursor": {
          "ref": "225a3251-b56d-4305-8e33-501ce6ec39df",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "03c77177-9de7-4f0b-b02e-be75ab969263"
        },
        "item": {
          "id": "707aff49-1294-413a-984f-9214557faac9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "94d85d03-9e63-48f2-b448-f181ecc1765b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c440f4-d1f2-40d8-afce-e01377739f2d",
        "cursor": {
          "ref": "8b6124f8-2897-4555-9a82-f9dc39508605",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e1358816-8efa-48f5-9d77-bdaa83752a62"
        },
        "item": {
          "id": "c8c440f4-d1f2-40d8-afce-e01377739f2d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bad89ecf-b98b-4b49-bcd5-e30ec443022a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f26e934-c9cb-4785-ae20-39ac9a3d8fb3",
        "cursor": {
          "ref": "60ab66a0-c403-4462-88cf-637b6de88b9c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ded686ef-f0d5-48ef-a5cc-f2041d29a746"
        },
        "item": {
          "id": "5f26e934-c9cb-4785-ae20-39ac9a3d8fb3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "193855b7-383c-464a-a00f-d2133f949386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc4f6b3-627f-4c04-a213-d4ba0deb08c8",
        "cursor": {
          "ref": "60fdcce0-7445-4f80-9b72-7cc28e1411c2",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "931f2053-d9a9-4077-8712-bde07e9d7bc8"
        },
        "item": {
          "id": "fdc4f6b3-627f-4c04-a213-d4ba0deb08c8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7ae20b04-b223-4659-803f-cf03148eded2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73331102-c492-4ebc-9f9d-15e0bf09fba4",
        "cursor": {
          "ref": "3b4eb6ff-b487-473c-97d6-009eab0c6198",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a09f7b1f-c415-4724-8924-e44a9f57c441"
        },
        "item": {
          "id": "73331102-c492-4ebc-9f9d-15e0bf09fba4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "961b44bb-993d-446a-9d83-48cb959586a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2cfa42-a27a-40a2-a3ff-d323e13e2685",
        "cursor": {
          "ref": "dafafbf7-adaa-409a-a0ba-d335cb774694",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "62471de0-72ac-44d8-9e51-5b6880809cec"
        },
        "item": {
          "id": "bb2cfa42-a27a-40a2-a3ff-d323e13e2685",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "396e77b9-4866-4675-b33c-bba8e3023aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c965d35-1866-41d2-968f-9b97dd441c97",
        "cursor": {
          "ref": "b57964ff-3c60-442d-9044-4fc2a6fb4616",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "949a91b0-e5f7-4721-a7f0-f80e5b85d101"
        },
        "item": {
          "id": "6c965d35-1866-41d2-968f-9b97dd441c97",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5175b9b6-8970-4d75-ac12-af22a171f7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3f42c9-6b26-4852-b288-ce68502b41ad",
        "cursor": {
          "ref": "dafeefc7-2c53-49d2-bc3f-e9be57ebd4c3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "85f64b52-c6d9-4e86-900c-7a5ea3cd4d5a"
        },
        "item": {
          "id": "5b3f42c9-6b26-4852-b288-ce68502b41ad",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f5131204-17f1-438f-a6e1-f4adccde4205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc62753-173b-4119-a173-77125f62a7d7",
        "cursor": {
          "ref": "5899d2bc-56b6-45b6-a726-69e0cc9428c1",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ef7b40e0-ea61-43f0-9f70-578e5038d0fb"
        },
        "item": {
          "id": "0dc62753-173b-4119-a173-77125f62a7d7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5cdcf851-4ad9-44d9-b693-8a10e986bb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a99877f-1a3a-4942-8750-5f6b8a8b02dc",
        "cursor": {
          "ref": "2398e2d5-6fdd-41c4-8b40-18242cce7a8e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a1842dfc-0e59-437f-9d1a-de33202803c5"
        },
        "item": {
          "id": "3a99877f-1a3a-4942-8750-5f6b8a8b02dc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "914b4ebf-0290-4bc2-ac3c-e0e65a1d922e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7380c6a-e765-4805-a525-907e00753b93",
        "cursor": {
          "ref": "879a0a0a-6eb8-42b8-9264-7e2b2924e6a7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "201a734c-1d85-448b-8b49-6efb87b81108"
        },
        "item": {
          "id": "d7380c6a-e765-4805-a525-907e00753b93",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b2aaed63-741c-4dbe-914c-177939d9f956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3443b0-dcca-4a79-a58d-3c5f29749e53",
        "cursor": {
          "ref": "cca452a4-9222-4712-a9e1-04047b6c6648",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1be84b34-1fc0-492c-a2b0-91bffa7a0277"
        },
        "item": {
          "id": "2e3443b0-dcca-4a79-a58d-3c5f29749e53",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ba6583c0-887f-4cd2-b0a2-9f0395ba9f8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c425434-0f5c-438e-a84f-ec71bbc0c52a",
        "cursor": {
          "ref": "c6a4fc1f-ed37-4967-b434-6e59e2574e6a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5ef603b5-440d-4418-b532-e50f000651da"
        },
        "item": {
          "id": "7c425434-0f5c-438e-a84f-ec71bbc0c52a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "fbe781eb-d6d7-4454-b71f-74f2b7549db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "29a224ba-f692-4c26-b4e5-5317c9e88e59",
        "cursor": {
          "ref": "078817ad-6f66-4f52-b4b5-a3f5cf376191",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e1504173-ce5a-47c3-9d76-16d38ca7f475"
        },
        "item": {
          "id": "29a224ba-f692-4c26-b4e5-5317c9e88e59",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a1f70cc9-332c-4982-ada6-d7ba51dd631a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ff86f672-bd4e-4384-8f3d-38db9c573fb4",
        "cursor": {
          "ref": "a5e0183e-27f3-4c99-9cf0-419499bc62b0",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c44ca655-0955-4eca-804a-dc3c7b23c384"
        },
        "item": {
          "id": "ff86f672-bd4e-4384-8f3d-38db9c573fb4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6db7919e-c852-43ff-b08e-e71bd605f1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b68babf6-139f-484a-a3c6-193f622a9c25",
        "cursor": {
          "ref": "6a133a02-1a14-472e-902d-ccb91e6ea540",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1c817a2a-54e0-4430-8ce9-cc04be39b4b7"
        },
        "item": {
          "id": "b68babf6-139f-484a-a3c6-193f622a9c25",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "427b2b9b-ee98-4cbc-a6a4-f339a1c77d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "dfce6283-c61c-4ebe-a386-bb030a988d56",
        "cursor": {
          "ref": "87158e90-cf3f-49f4-8268-a6c3d37a7e9d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a28a3034-6837-4bc3-8b5a-8937ca456dd4"
        },
        "item": {
          "id": "dfce6283-c61c-4ebe-a386-bb030a988d56",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c8aca595-bcd3-4795-b99d-9609d3d5bc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "31057c89-ec1a-4858-8ecb-b8aa1c9be958",
        "cursor": {
          "ref": "78d367f8-3265-4162-9175-8804056e3cc3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "617b9ade-eeb9-4d36-a8e9-2256cabcef25"
        },
        "item": {
          "id": "31057c89-ec1a-4858-8ecb-b8aa1c9be958",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3c71a655-8a27-41ee-8d4d-b81764a6846e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c2c796d8-8fb3-4e8d-b081-45db31442054",
        "cursor": {
          "ref": "c542ee9b-ac81-435a-888d-78e3a4517804",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ee135a29-79d3-4f97-b561-5b549e78b2c3"
        },
        "item": {
          "id": "c2c796d8-8fb3-4e8d-b081-45db31442054",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0893851b-3b37-43e4-b8a1-31935ee4c3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "88783bce-b0ad-4ce6-a9fa-1b4a0a37c76e",
        "cursor": {
          "ref": "235ed605-9d37-4dd1-93c1-0d0b4b83fb4a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5b480097-0b6a-4ba1-864f-64954d19da0c"
        },
        "item": {
          "id": "88783bce-b0ad-4ce6-a9fa-1b4a0a37c76e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1f0be076-8cfd-4268-a861-fcddff4e73db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77ca3c7-6307-4443-8ae5-978c2b64d296",
        "cursor": {
          "ref": "d670ec41-b5a6-48c2-ab0b-3a93d1c4f5ca",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "85b77d52-db60-4018-a913-d21bf664823c"
        },
        "item": {
          "id": "f77ca3c7-6307-4443-8ae5-978c2b64d296",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e3d572c4-87e2-4e02-b35c-f57a23bf1591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663c0d18-cdb9-403c-8c24-a5da89f8391a",
        "cursor": {
          "ref": "fc12f6d0-90b0-47a1-8797-f2917dfcfc5c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "01558aad-ed80-46c2-83e0-fd411929b5ec"
        },
        "item": {
          "id": "663c0d18-cdb9-403c-8c24-a5da89f8391a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "59a66646-6393-4461-944c-ce5f23cbe302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4903bd-d687-4084-9291-eaea6bd7c5cb",
        "cursor": {
          "ref": "56d91974-7efb-40dd-b24a-c24a70ece9d1",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c61e770e-10db-4e0f-b48d-85b16f448d0c"
        },
        "item": {
          "id": "df4903bd-d687-4084-9291-eaea6bd7c5cb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "709ba9a6-6d59-4ae0-8a65-3ee3fbc80de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2aba926-cc37-4dec-a8c7-d8ed3dc53df6",
        "cursor": {
          "ref": "67ffe1fd-7bc2-490b-bd42-da6bc0935478",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "181cd997-9181-4a91-b925-8de49d8692b1"
        },
        "item": {
          "id": "b2aba926-cc37-4dec-a8c7-d8ed3dc53df6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "74be3195-adc9-4bc4-bcc2-0a3fa4f3c922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b906fe7-1faa-4792-a63f-405f90a0375d",
        "cursor": {
          "ref": "a1f2932b-5e02-4533-9789-7e8a824fd07e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dddf96af-ab65-4c58-8fa9-cdaf14b780a4"
        },
        "item": {
          "id": "7b906fe7-1faa-4792-a63f-405f90a0375d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7172672e-4445-4fab-aff7-c30325648097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35635007-c0b4-4ab1-b3a4-a93a5d1d8960",
        "cursor": {
          "ref": "3de5b275-82dc-4901-b61f-f81f7f2de29c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "516eccda-12cc-4d11-9044-a8848ae7d1cc"
        },
        "item": {
          "id": "35635007-c0b4-4ab1-b3a4-a93a5d1d8960",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a7e09934-83a3-44b7-b9b1-f790c79ea2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadceac3-83f3-4651-b21e-e528181d111c",
        "cursor": {
          "ref": "0dd8fa1b-e723-4a2b-9216-d43278dc8d0c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b43dea09-9576-42fc-a395-0987ff39ad2a"
        },
        "item": {
          "id": "aadceac3-83f3-4651-b21e-e528181d111c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "08a3906f-1ed6-405b-be50-9a8aba3a7b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aef9ef7-4f81-48c0-84f6-1bee890b1c0a",
        "cursor": {
          "ref": "deea5866-434a-49c9-a216-87ad74c00201",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "794e8439-d754-41b7-b641-9daf3bb59ed8"
        },
        "item": {
          "id": "2aef9ef7-4f81-48c0-84f6-1bee890b1c0a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bc8792cf-3f5c-4a55-b657-aa3055c8ec52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d301819-8369-4932-921e-0bb38e917f44",
        "cursor": {
          "ref": "8cf6a1fc-1cd4-46c0-94d9-4d8624456a74",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "99363945-e0ad-442b-8d52-c319a0917d21"
        },
        "item": {
          "id": "8d301819-8369-4932-921e-0bb38e917f44",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "93529d3d-c183-4e79-b547-0e8cfbb56e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64daa928-a720-4b16-bdbb-b4c9b826157c",
        "cursor": {
          "ref": "52f77093-bd73-4148-8c82-f68e9309317e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5aea7dc8-ebfb-42a7-a8b3-fd3e58893741"
        },
        "item": {
          "id": "64daa928-a720-4b16-bdbb-b4c9b826157c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e0a5267d-47b6-4903-be88-6fe1e5505a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a852a2e0-b22b-4e0a-ba50-185f56c1fdc1",
        "cursor": {
          "ref": "625a5ffd-b1de-42f3-93fd-692b3d34c47b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fb977933-9de5-4b3c-a44a-9f6905df936d"
        },
        "item": {
          "id": "a852a2e0-b22b-4e0a-ba50-185f56c1fdc1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7b1f770a-ef04-4c3d-8996-facb1b1bba10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48a759b-11a7-4048-8611-9e151fed61fe",
        "cursor": {
          "ref": "14f55caf-4273-43a7-b6ab-1615de835959",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0817c0a9-7d22-4982-9171-8800f8288097"
        },
        "item": {
          "id": "c48a759b-11a7-4048-8611-9e151fed61fe",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "674b25a8-ef4e-461f-aec2-65bd03ea121b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71544ff9-1dfd-400a-945a-a886fd082030",
        "cursor": {
          "ref": "76bc30d1-e430-49ce-a109-78410ea736d3",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4b5165e3-8d65-40d2-a054-457e0859070d"
        },
        "item": {
          "id": "71544ff9-1dfd-400a-945a-a886fd082030",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7ca79c4b-a955-45cf-8c8e-ddd5a75e643f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc1c9a2-de14-4db4-8b65-0c235b80a84a",
        "cursor": {
          "ref": "7e7ec8a9-844b-4c7a-8683-81efefad18e6",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "997b64ff-cfba-4c90-96a0-0d00a0184860"
        },
        "item": {
          "id": "4dc1c9a2-de14-4db4-8b65-0c235b80a84a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "732979fd-9cbe-41e8-b1d8-20c74c4e856c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5866329c-f67b-453c-aed7-2cea037e96d0",
        "cursor": {
          "ref": "e6c35641-50e6-44f2-b097-7ff7973a3e9d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "24bedca4-10d0-4179-9a2c-19b83497540e"
        },
        "item": {
          "id": "5866329c-f67b-453c-aed7-2cea037e96d0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1a29eb08-7a5a-4ac7-9a3d-197f84fca5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6759f82-e106-4ecd-a2be-fa147f084a44",
        "cursor": {
          "ref": "7dc90d24-35da-4917-acce-3816c77900c3",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "95ca1ff4-bccb-426c-930e-e691dc8986dd"
        },
        "item": {
          "id": "e6759f82-e106-4ecd-a2be-fa147f084a44",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a51d43af-4fb8-4c77-9b7b-cab46498453f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594e7343-011a-4a54-b1c9-5261cb393027",
        "cursor": {
          "ref": "5c24f131-86c9-4fb5-910a-539a3b944975",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "471d2107-70b2-4fa3-bf3c-6c8fc43ccd7f"
        },
        "item": {
          "id": "594e7343-011a-4a54-b1c9-5261cb393027",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "01119818-ff8b-4138-8c97-f1ef3e9955d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a1b41e-0a31-42b7-82ab-7bcab1493acd",
        "cursor": {
          "ref": "c5310217-7e70-4623-9c46-75ede2ac995d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4df5e115-d2ce-467a-a3ea-3e8dc7e1bf92"
        },
        "item": {
          "id": "e8a1b41e-0a31-42b7-82ab-7bcab1493acd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c9d54320-fc11-4d60-b322-2c2367b6e533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7e055e-1a70-4224-8865-eba53fc36de0",
        "cursor": {
          "ref": "a6fd5047-32ee-47c2-859d-b79ee8dc0281",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f466df8a-037f-4270-95c0-06c497dfdbf2"
        },
        "item": {
          "id": "fe7e055e-1a70-4224-8865-eba53fc36de0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9cbbead3-d419-4a6b-b07f-848da9b2654d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cca3598-9369-40f2-a8b7-24281a81ef62",
        "cursor": {
          "ref": "294e59a6-c03e-4f3c-a911-0b20d9029098",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3a3f7dae-adf9-4140-bb25-ffcb37b8e70f"
        },
        "item": {
          "id": "6cca3598-9369-40f2-a8b7-24281a81ef62",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "32f3c4c5-953c-466e-8a4d-002953d74428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f7e026-aca4-4d7b-8bba-21a5b759ad13",
        "cursor": {
          "ref": "1bf74c61-6015-43ca-b1ce-a5cd2bad1c5b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "61817f8d-9b54-4e08-8ce3-2979b6d4d1ba"
        },
        "item": {
          "id": "77f7e026-aca4-4d7b-8bba-21a5b759ad13",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f4d715c0-48b1-493b-bcf1-3cf683bb2270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfc08d9-4d87-4e9e-9f29-02940bd5ec80",
        "cursor": {
          "ref": "c8dc7722-6e6b-408a-b3a7-138e74fbf46e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "db747550-a78d-4941-9112-d0a2826b9566"
        },
        "item": {
          "id": "5dfc08d9-4d87-4e9e-9f29-02940bd5ec80",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "71bcfa93-376d-4f21-b8c5-c472430a7c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d97a11-f756-47ff-a8e2-3d0ec99eb857",
        "cursor": {
          "ref": "bd2590e4-de09-4a12-9920-635396c0c0f3",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1857a4e9-0867-4011-9b8e-ed619527f57a"
        },
        "item": {
          "id": "37d97a11-f756-47ff-a8e2-3d0ec99eb857",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e686d394-3165-4ffc-bcce-7a55e29312ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aceb8d95-db95-4f51-9e1d-de00e7e1ad2f",
        "cursor": {
          "ref": "9c228dc7-1903-4328-82b3-07433e0ebbe8",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fe9be1ae-a6af-48c2-a769-86f3539d9b02"
        },
        "item": {
          "id": "aceb8d95-db95-4f51-9e1d-de00e7e1ad2f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cf1657de-eabe-44ea-8733-bd90ac7b00ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1e372f-0956-4dca-94df-dfa6ca7d024d",
        "cursor": {
          "ref": "9c28824a-4283-4e9c-b12f-59f3fe22684a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b9f0aa65-0524-4212-b0b0-6d026dda7fe9"
        },
        "item": {
          "id": "bc1e372f-0956-4dca-94df-dfa6ca7d024d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4bfb389e-a827-4d8a-82b6-ff586f936f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ca8073-771a-41fb-98cd-98b515e83abc",
        "cursor": {
          "ref": "ec87fe17-facb-4529-b5db-56d4dc0151cd",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "be0def4a-dc18-46f0-84d8-7d95cd7fe2f3"
        },
        "item": {
          "id": "a0ca8073-771a-41fb-98cd-98b515e83abc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cd41ae3d-57c3-4f00-93f3-3b48be9684b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d761615-e064-483c-8c65-f29a78db6c05",
        "cursor": {
          "ref": "880b3c65-90cb-4b64-8cfa-8d8a081109e1",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3985c2e7-8fbb-4ff1-a8cf-cdfe5a5e2184"
        },
        "item": {
          "id": "0d761615-e064-483c-8c65-f29a78db6c05",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a821516a-9162-4d63-9982-c39e317db246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb462c78-41fe-467a-8d07-51cd338d34a2",
        "cursor": {
          "ref": "cd5fa2db-ea2e-46eb-a2de-9d2c5ae06032",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bb9d6acd-55e0-430e-bba4-279878ff6c62"
        },
        "item": {
          "id": "fb462c78-41fe-467a-8d07-51cd338d34a2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "95e49037-bc78-4b94-b99e-8ecc53ad6131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8086b834-6711-4c8e-97ef-f0113df2fe05",
        "cursor": {
          "ref": "b53f98aa-23de-4fef-b435-0b4c87391c07",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e3d4f6fe-6c8f-421d-8e08-17f7bd5efb9e"
        },
        "item": {
          "id": "8086b834-6711-4c8e-97ef-f0113df2fe05",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5fb873a2-2118-4bfa-8570-22d1c28fcf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c91752a-4c95-4be4-a7e6-6786a5c70b7c",
        "cursor": {
          "ref": "2e026089-4e0a-4cb7-8562-479e6681e438",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4cf3a498-2571-473d-bd90-02bc5b69fba2"
        },
        "item": {
          "id": "3c91752a-4c95-4be4-a7e6-6786a5c70b7c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "72fb2b1b-d645-4b33-8f14-a1a0698b38c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac7dab4-2282-42e7-8c70-e0b6c2967357",
        "cursor": {
          "ref": "d6175c01-66bc-4497-bc96-792f0b2df9d8",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d3291afa-838b-4c5b-8c5e-c009b11e302b"
        },
        "item": {
          "id": "dac7dab4-2282-42e7-8c70-e0b6c2967357",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "73b4ebbd-2cd2-421f-b7fc-77b367c2f5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce4f54c-fa97-49cf-be4c-88fe548b72ff",
        "cursor": {
          "ref": "9d55fb54-2359-4a47-b3fd-ae39d2771582",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8923f7b2-412f-4e2b-a3c4-37024dcd2dc0"
        },
        "item": {
          "id": "4ce4f54c-fa97-49cf-be4c-88fe548b72ff",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "35f4a4fb-c7c6-40b5-82a4-911acd10d954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd58d5b-18af-4bd9-b285-626ee2692c43",
        "cursor": {
          "ref": "82e33d77-a17c-434f-a1f4-750fb8c8b7e1",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ee172e2a-2c43-41d8-8006-a025d4641a7c"
        },
        "item": {
          "id": "ebd58d5b-18af-4bd9-b285-626ee2692c43",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bcea55a8-3938-4bfe-ba51-fca3a25fa975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc46d93d-69c4-4270-babc-25a49276430c",
        "cursor": {
          "ref": "889cb7b2-6f36-4666-9574-a37d3fa66c3b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "80b596f6-401a-4827-b54a-e11b956768e8"
        },
        "item": {
          "id": "bc46d93d-69c4-4270-babc-25a49276430c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fd6c9e73-c830-472b-ac61-5f4380333e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b4e44c-7585-4379-b108-c9b91f8b3fad",
        "cursor": {
          "ref": "b5a772a9-6fc1-4b78-a42d-f2310303024d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "55aa6919-1a65-4473-bf3c-20f99f6518cd"
        },
        "item": {
          "id": "02b4e44c-7585-4379-b108-c9b91f8b3fad",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "226b8f2c-40c0-4033-b573-2e4de9f4342f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee157da-ce3a-4a62-8bc6-40d232ebc9b9",
        "cursor": {
          "ref": "26108ec3-117b-4b34-976d-8f46fbfc0a4c",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a6694e65-23fe-4400-82ff-14c8b14d7a38"
        },
        "item": {
          "id": "1ee157da-ce3a-4a62-8bc6-40d232ebc9b9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4ea71b76-feb8-41de-b895-94295b4d4fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa92079-1e56-4077-816e-32e7a140dfaf",
        "cursor": {
          "ref": "781c076b-7087-47e3-af7c-53dc0cefcbe5",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ba86f73b-92d8-4350-9cd2-b29d73d3996b"
        },
        "item": {
          "id": "2aa92079-1e56-4077-816e-32e7a140dfaf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b2bf3202-bba0-4d5c-a2f3-fdb9bf43cb0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175c10f3-60fc-4811-8e39-05b4f6bc02cc",
        "cursor": {
          "ref": "5d5b825b-3dda-4f20-8a34-7e91e5a76f60",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fcdabaa9-f431-41c8-ae7a-8617ad790944"
        },
        "item": {
          "id": "175c10f3-60fc-4811-8e39-05b4f6bc02cc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7dd97b81-4bda-4802-bb10-12b55c05d21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b678a789-9c78-4c71-b792-22f50c8fae34",
        "cursor": {
          "ref": "80afe25d-be24-4617-be28-427a458670e5",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d2c41418-1aa9-4619-9107-757eb0e04eb3"
        },
        "item": {
          "id": "b678a789-9c78-4c71-b792-22f50c8fae34",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "27060deb-9ba9-486e-8c56-170498a1fa44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93380830-8a38-4b1d-9019-6f22453e4d3c",
        "cursor": {
          "ref": "60b8c354-23d6-4626-946c-aed14911e1f5",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4c64df01-ef7e-47f5-8035-a31392603c56"
        },
        "item": {
          "id": "93380830-8a38-4b1d-9019-6f22453e4d3c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "aa57cba0-4a31-423a-8cd6-534401695f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fda85e4-a1b0-437b-8a24-61f6182592ef",
        "cursor": {
          "ref": "0b2fc994-1fca-499c-add6-31c51cf584a0",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fadf46eb-c99d-472e-9774-5b1763952ee5"
        },
        "item": {
          "id": "9fda85e4-a1b0-437b-8a24-61f6182592ef",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "82162926-6d56-41b9-8180-35aa9971f57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae881eb3-a529-4adf-9319-064b29c206f7",
        "cursor": {
          "ref": "3f1f23d1-857e-4bb0-94b3-74f909506b6c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e113db10-7c71-4a9a-a6b7-a1c8e2119e21"
        },
        "item": {
          "id": "ae881eb3-a529-4adf-9319-064b29c206f7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "99274901-459d-4024-9d30-f0fd33a69751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bf0b44-482d-4807-8e50-112ca9c9f0c8",
        "cursor": {
          "ref": "6e9fc15b-4708-49a8-866f-456e0bf50e58",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f9626610-469b-4bb9-bf0e-136f18e934a3"
        },
        "item": {
          "id": "d7bf0b44-482d-4807-8e50-112ca9c9f0c8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e9d4fb2e-a2e3-4254-a462-9dae10037318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79e6134-5a4a-4fc4-b122-2e9789fa072d",
        "cursor": {
          "ref": "816aa3be-0997-4eb4-992a-06afea956e06",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "585f3cb8-c9fa-4582-9eb8-36d5d5198354"
        },
        "item": {
          "id": "e79e6134-5a4a-4fc4-b122-2e9789fa072d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "936c1586-4892-43e4-bd36-980c76b1e20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77ebf23-ba51-4338-929a-10e470bb9cc2",
        "cursor": {
          "ref": "0826e9e1-03dd-4e74-97bb-f78219660837",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f3a23a44-ab20-407f-8cb2-64bc28144ffd"
        },
        "item": {
          "id": "b77ebf23-ba51-4338-929a-10e470bb9cc2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "11b19df8-afad-49eb-aa3d-533506c153a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7829534b-35fe-4c6c-8c29-33254f96cdfe",
        "cursor": {
          "ref": "6b008d15-b0fe-459b-b97e-069bbd1f6867",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a6a1701c-9aab-437f-b263-acc6969072b1"
        },
        "item": {
          "id": "7829534b-35fe-4c6c-8c29-33254f96cdfe",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6f555f67-4076-48bc-8dc6-7e02eabda854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f833d0d-e2ce-424e-887a-10ece715d9b0",
        "cursor": {
          "ref": "e3afa3e1-6ff8-4896-b2b9-a269946fba7c",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "72a2d37a-dd87-4760-9584-a2e259395dca"
        },
        "item": {
          "id": "3f833d0d-e2ce-424e-887a-10ece715d9b0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "df705840-5fa1-428d-acbb-51ec90253ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d68a972-4739-48ef-b874-4c5ae58dc28f",
        "cursor": {
          "ref": "36315635-613e-4a17-adb0-346c821edda1",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "803527fb-da7f-44c8-b19e-e560fe001d3d"
        },
        "item": {
          "id": "0d68a972-4739-48ef-b874-4c5ae58dc28f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a2394a77-7fc1-4542-9fbb-428b55f90fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5dd15d-6684-4d19-afb2-1577b852874c",
        "cursor": {
          "ref": "35c46ecd-555f-46c7-aca9-aee044912cc7",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "37c2ceff-3aa5-408d-afbb-43e25caa907b"
        },
        "item": {
          "id": "4c5dd15d-6684-4d19-afb2-1577b852874c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9b647fb2-3bf3-4fea-bf9d-64a0fc717ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3f851d-2bc8-4ff9-b04f-16cdc657f3d3",
        "cursor": {
          "ref": "aac41e8e-a790-4926-bccb-5dd1fe4ba19a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5865729b-5fcd-4c41-8512-2c2fd7a5a376"
        },
        "item": {
          "id": "bb3f851d-2bc8-4ff9-b04f-16cdc657f3d3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d57872c2-ebde-4868-9940-141656fadad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b8fcd6-e847-454e-9bf8-dc12fb870fba",
        "cursor": {
          "ref": "9598e9c7-b7bd-4bb9-8633-e020fc3d1cf4",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6931b2cc-744e-4cf7-a7e4-7800ad224bdc"
        },
        "item": {
          "id": "54b8fcd6-e847-454e-9bf8-dc12fb870fba",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5ec064a5-51f9-462b-ba3c-789b59330f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc3aa74-7dec-42ef-a911-e475ebaee17c",
        "cursor": {
          "ref": "0427dc57-e41f-420c-baa4-55cbe606bbbc",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "692fa41a-ae45-4537-98e6-ad518fa0e244"
        },
        "item": {
          "id": "8fc3aa74-7dec-42ef-a911-e475ebaee17c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7fd2e5af-7b5c-4e67-8990-cad029bd4f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120e8ba4-efdf-4cc6-8722-091e138a59fe",
        "cursor": {
          "ref": "d0182055-e39a-412e-a68c-d78b2848f5e8",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8ef755cc-35a6-4ff7-8df9-6412f86e436e"
        },
        "item": {
          "id": "120e8ba4-efdf-4cc6-8722-091e138a59fe",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "77d42ef0-18b5-4f2c-b40c-d26119aaf44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea97d524-167a-4bc7-a575-5b95987d8aed",
        "cursor": {
          "ref": "efc222f2-7a9f-4b91-9ae0-0b091f247d39",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "58bf6ab4-2a88-4a15-8c79-8831faa0cb84"
        },
        "item": {
          "id": "ea97d524-167a-4bc7-a575-5b95987d8aed",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a90d51a6-b8c9-42fb-9508-acb0b60e4170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5088cb76-26eb-4d92-9576-a05d8b2e5eea",
        "cursor": {
          "ref": "1c04f234-06b0-4ecb-8bef-c5f8a7102e35",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4e51562c-7060-47a1-a7da-9997a1feabad"
        },
        "item": {
          "id": "5088cb76-26eb-4d92-9576-a05d8b2e5eea",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "97c31203-3496-4474-84e0-a74c28704f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fc7777-9764-49a8-a1be-137d68caf804",
        "cursor": {
          "ref": "5bf105a9-0cc9-4455-b5bb-c662a1b8aeff",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f4ed43fb-8678-42bc-930f-f79d892c6b5b"
        },
        "item": {
          "id": "92fc7777-9764-49a8-a1be-137d68caf804",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ba638668-06a4-429a-98a6-19bcc644740f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed131ad4-0b8a-49be-87bd-a301eb309fe8",
        "cursor": {
          "ref": "57f68138-f04e-4b68-9b74-dbdcbbef4007",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e018f19f-d65b-4e2c-aa02-eea0c7a968db"
        },
        "item": {
          "id": "ed131ad4-0b8a-49be-87bd-a301eb309fe8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ba8242f3-6571-4e09-becc-4f17a706d5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aef635a-bf65-4da1-86d4-cfe4a95b23ac",
        "cursor": {
          "ref": "d91e9c73-e489-4bc7-9b06-500531054e64",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "df22bc2b-bb5b-4578-8188-41e399a7212c"
        },
        "item": {
          "id": "5aef635a-bf65-4da1-86d4-cfe4a95b23ac",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "98fd71d3-7340-4beb-9a6b-9755f42bc2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45656908-9b2d-48c8-952e-f7c462dfb554",
        "cursor": {
          "ref": "02ca3bb1-6e44-463e-b817-63eeb2870e31",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "11cfa903-abe1-4493-8cf9-b52566e998ff"
        },
        "item": {
          "id": "45656908-9b2d-48c8-952e-f7c462dfb554",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "41db8f5f-cba9-41d1-8a1d-68f459e70f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a7a8cb-a981-44f5-8449-5394ec3a3c35",
        "cursor": {
          "ref": "aa9bcd51-e7db-4325-891f-3580ed05f2de",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7a069253-f83b-48ee-bc8c-c68c5742b323"
        },
        "item": {
          "id": "45a7a8cb-a981-44f5-8449-5394ec3a3c35",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a2b215e0-17f1-4930-b64d-c7a311b81bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93550b55-6ee8-4841-ac79-c2746e73341f",
        "cursor": {
          "ref": "611f8bc6-0feb-4778-a000-e7f5ed1dcf8a",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "00b6a595-3db5-4131-a17c-4156eb306a5b"
        },
        "item": {
          "id": "93550b55-6ee8-4841-ac79-c2746e73341f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "12a7d15f-a68e-492e-91ab-02b9718babba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695c33ff-7a1e-42c0-b4f1-b11fc780b158",
        "cursor": {
          "ref": "8a2bf47a-1c2e-42ec-9737-d00a1c6491fc",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cc2fe26d-38da-4593-beb8-0093233fcd06"
        },
        "item": {
          "id": "695c33ff-7a1e-42c0-b4f1-b11fc780b158",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "66e22cd5-5b10-4f01-8e0d-c1a80a4a85e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f8d0af-e6d0-4205-8ca2-c35ad6079924",
        "cursor": {
          "ref": "159ae046-f61f-4c49-bf8f-e64bed36cc65",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0c691d99-1576-4a6f-b996-ba678acd32e4"
        },
        "item": {
          "id": "06f8d0af-e6d0-4205-8ca2-c35ad6079924",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4d951b44-64a3-4903-a402-7cd945a2e108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096141fe-ff3c-41bd-a00c-e5836fd807b4",
        "cursor": {
          "ref": "b3cd9474-4d1d-4455-a39a-f626404fc413",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c70d47b2-02b7-450e-8bec-dc9209abd828"
        },
        "item": {
          "id": "096141fe-ff3c-41bd-a00c-e5836fd807b4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2f43d238-7dc7-447e-aa90-436ae5f44890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c56017-033a-4f67-a037-93f0e9b94632",
        "cursor": {
          "ref": "de807455-dc05-4c41-9201-309cd6673078",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9fe57892-fcbf-41a0-8d05-96626f3f444f"
        },
        "item": {
          "id": "56c56017-033a-4f67-a037-93f0e9b94632",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b61af1f6-7197-4532-ae24-598e4debc01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c2d99f-b994-4792-868d-7fbc23e37159",
        "cursor": {
          "ref": "1ee321fb-8e33-418e-8307-95ebd6ade38a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "230d6daf-8f3e-4333-b191-290ad86b87db"
        },
        "item": {
          "id": "b4c2d99f-b994-4792-868d-7fbc23e37159",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "542eac6b-cdea-4087-ac99-cc7ee6c7394e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda2376c-a8d8-445e-bb2f-b42403cf696a",
        "cursor": {
          "ref": "e7ab5ae8-73af-46c6-a897-6c7703860c4e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "017ce5cb-d9ad-4484-b273-0d44040ed49d"
        },
        "item": {
          "id": "bda2376c-a8d8-445e-bb2f-b42403cf696a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "19291400-7173-4ff9-9942-bf9831e397e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce955bf-11b6-48ea-bd8b-3b83d763ce2d",
        "cursor": {
          "ref": "886c8d41-a11d-4776-add9-68d4fa464512",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7db2937d-438d-4df0-858b-e504a50750d8"
        },
        "item": {
          "id": "bce955bf-11b6-48ea-bd8b-3b83d763ce2d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "adfd2a48-2419-4d31-bcfb-da0177fd11da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e606c39-93e6-4bd2-8e90-0cb3952878a6",
        "cursor": {
          "ref": "ee33a13e-86c9-4a38-88c1-90fc684ad93e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7c8a1b8f-a4e6-4b12-9e0f-9093f49487b2"
        },
        "item": {
          "id": "8e606c39-93e6-4bd2-8e90-0cb3952878a6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fd7c4c83-e5fb-4c77-8fc9-4d00a629e4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3bacbe-5768-495a-8e4f-93f94b293d00",
        "cursor": {
          "ref": "08c2631a-79b9-4006-9f04-c63a6817ae59",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f09f645f-747c-4d03-9df8-48533cc29db2"
        },
        "item": {
          "id": "4d3bacbe-5768-495a-8e4f-93f94b293d00",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "be4c8953-2590-4dbd-a74c-fd844f2d60e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0eea95b-b2e0-4162-9ffc-765afccf7b60",
        "cursor": {
          "ref": "6b379d21-4155-4f0d-b4ed-ea2c04a313d6",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2b2f6db8-f394-47df-81b6-d79773c0615f"
        },
        "item": {
          "id": "c0eea95b-b2e0-4162-9ffc-765afccf7b60",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "17f82710-5fae-4863-8bb6-f8a78339f196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfdd61e-0c05-457e-8687-e109d5e6f604",
        "cursor": {
          "ref": "284c2b99-b301-4366-8d5d-d22f8c8d2a4f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0d7a2ec5-f69b-46a8-8a67-a9de9cf22524"
        },
        "item": {
          "id": "ccfdd61e-0c05-457e-8687-e109d5e6f604",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f3d16095-ef0d-496c-9f82-42b3d4a27189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3bb131-b331-46d2-81ad-edfbe30adabf",
        "cursor": {
          "ref": "377569d9-5821-48fa-951d-13a1f54b0be2",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "50e6d8f9-adf4-4540-b83e-2c66831fc04e"
        },
        "item": {
          "id": "8d3bb131-b331-46d2-81ad-edfbe30adabf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "58e32230-0ee3-464a-a309-9da598d48c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f962ba66-35ba-4095-b5c3-1fa0ba3b67b7",
        "cursor": {
          "ref": "a9eeb669-4088-4931-bfad-83b17c86a313",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7ea9057f-0786-4eaa-99e6-4a24318e59be"
        },
        "item": {
          "id": "f962ba66-35ba-4095-b5c3-1fa0ba3b67b7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bacf6ae8-5c81-4bdf-bbc5-9756f0c8e85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d110298a-3e53-4dd7-8571-45341bf5da9b",
        "cursor": {
          "ref": "a57c265a-2d7f-48c1-8094-737c577c23a0",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d754cef5-bb4c-4512-bd4e-e4b2c536381c"
        },
        "item": {
          "id": "d110298a-3e53-4dd7-8571-45341bf5da9b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "635ef8e7-eec4-41b7-bcaf-eb9d78ca09b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf404008-1603-4650-97e2-5e2dd734ce41",
        "cursor": {
          "ref": "ab2699cc-22e9-4f20-a31b-ddb325f86b30",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cbf745ec-6268-4a14-982f-13b077c289e3"
        },
        "item": {
          "id": "cf404008-1603-4650-97e2-5e2dd734ce41",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4b1a7c59-b015-4510-8e62-1f5d3e5ab001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dd2e1d-3441-49d0-a6ef-2d75a7d182e4",
        "cursor": {
          "ref": "6e98a1b9-afb8-47e9-8c78-b9ce7d01198b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ccaffc9b-876e-4eb6-8335-2ccaf779db4f"
        },
        "item": {
          "id": "c6dd2e1d-3441-49d0-a6ef-2d75a7d182e4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "67cbf50e-7445-4e53-8da6-646baaa5d4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666a8016-9827-44ba-843d-4574b031f901",
        "cursor": {
          "ref": "2aa5f2b1-8c7a-47c0-841d-a99718522996",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b4849016-df78-4780-bc16-2157c62cad68"
        },
        "item": {
          "id": "666a8016-9827-44ba-843d-4574b031f901",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "11f8b538-db0f-4557-b664-aed3b44cd6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e874125b-9895-410e-b619-4dd9918df895",
        "cursor": {
          "ref": "d7d8109b-8e13-496e-b0b8-4feeedfc4a83",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6a43b9ed-f997-4a78-bcea-06627d8aec88"
        },
        "item": {
          "id": "e874125b-9895-410e-b619-4dd9918df895",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e5e09b46-47c0-4b45-ba2c-9b63ef32dbed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58653577-18c1-4995-af1f-94403021b9b5",
        "cursor": {
          "ref": "c3ae5a0e-f3c2-4df4-b726-ff0717cb676b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3320cbc6-cc5e-47e5-a428-5bdae1a10237"
        },
        "item": {
          "id": "58653577-18c1-4995-af1f-94403021b9b5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "575b42bc-bbce-44b3-9bc8-ebd84c411c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98db5b25-e829-4815-87b6-f82b3b67711d",
        "cursor": {
          "ref": "558aeff3-fd1a-4b43-9d09-482337695d2e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "460580b1-67a1-4271-922e-52f6e1c95750"
        },
        "item": {
          "id": "98db5b25-e829-4815-87b6-f82b3b67711d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bce9e7e6-d9ef-4eef-8cd7-5d40597a3a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25074719-a2ed-4144-8aca-6885030979cb",
        "cursor": {
          "ref": "ce27fbe1-ef4d-4749-bfdf-cabb4d59d01f",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9c6a5b65-af8b-4430-a835-3308fc9a5c90"
        },
        "item": {
          "id": "25074719-a2ed-4144-8aca-6885030979cb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b1dfd957-b6b0-4a15-8426-6ef0dd5f793d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7125b3-687a-494e-a18b-d1b6c92b288a",
        "cursor": {
          "ref": "a9daf57a-af7e-4366-a8dd-e285fe70f35f",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6395d0a8-6cf3-43a1-9bfd-6d994b2ba893"
        },
        "item": {
          "id": "3a7125b3-687a-494e-a18b-d1b6c92b288a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "79a53b0e-0be6-42da-808f-5b9c812b0c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5239da-afed-44ae-9364-b765c6045904",
        "cursor": {
          "ref": "48d6d8b7-7ef7-4bd2-89ac-4461c7f4e402",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "abd426b1-1326-4d9c-abd0-473cd28afa15"
        },
        "item": {
          "id": "0b5239da-afed-44ae-9364-b765c6045904",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "84d9ce11-6b78-488f-8dfd-a76b5dd650ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72010117-71fb-4ec9-927d-49efcf9fa286",
        "cursor": {
          "ref": "3654ea1a-7b62-42e5-ab81-2b7a03598a70",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "90b54559-2be7-488c-b84d-4086b6ca9593"
        },
        "item": {
          "id": "72010117-71fb-4ec9-927d-49efcf9fa286",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b26be3ee-6548-4b41-82fe-da810f8e38f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1eab294-a791-4ae4-92e5-5a70cf47a1be",
        "cursor": {
          "ref": "d9381cd2-2d81-437f-b48f-c7fdfdc7d8b8",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fb8ed2f6-5c00-4086-9559-6272e7eaae7c"
        },
        "item": {
          "id": "a1eab294-a791-4ae4-92e5-5a70cf47a1be",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bd9718d0-ac6c-41dd-a48c-7c0e5825208a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1917486-daf5-42fa-b4f7-fb9d11391b4f",
        "cursor": {
          "ref": "41076483-a6f4-4272-a8b1-196705bb28b3",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cb294f1f-b1d3-478a-9b7e-e8751e701321"
        },
        "item": {
          "id": "f1917486-daf5-42fa-b4f7-fb9d11391b4f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4fd67a67-dc42-4e56-9919-88651e022cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d809bf3-9dd3-4abd-b897-8159ddec5260",
        "cursor": {
          "ref": "01c9296d-25b4-4a0e-95a6-82b12b2294d3",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c226c6bb-5f8d-4ed1-8420-4cf173458f30"
        },
        "item": {
          "id": "2d809bf3-9dd3-4abd-b897-8159ddec5260",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "68a77a36-cb27-4878-933b-27d10b9bbced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0abc6f1-4173-4c23-8327-27e00d5b0fa9",
        "cursor": {
          "ref": "bdd93574-1bef-45bf-b9ef-083ec8e243df",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d2d17558-3373-47e1-a92c-1d03bfbbd664"
        },
        "item": {
          "id": "f0abc6f1-4173-4c23-8327-27e00d5b0fa9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8d1949b3-a7fc-4088-ac2d-ce412d0c3392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248d0b7d-7ac8-4579-9308-e608cd7274f8",
        "cursor": {
          "ref": "a544add6-5a02-4020-8d74-d657d114f361",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "44a29eab-bdf6-4fdd-9c7a-5e550572ba7b"
        },
        "item": {
          "id": "248d0b7d-7ac8-4579-9308-e608cd7274f8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5afd7662-846c-4678-bca0-fa1fe74c879d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9688621f-be7f-4d2f-846a-cebc884e5417",
        "cursor": {
          "ref": "85288e48-c30c-4f8f-8207-edee5c6340d1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1229fabc-1aa8-45b4-ade4-85f3f71f66ac"
        },
        "item": {
          "id": "9688621f-be7f-4d2f-846a-cebc884e5417",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9955370c-2df9-43ce-b7b6-23752d7dc36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14689b5-7346-4b3a-84a4-f80cdb62f33e",
        "cursor": {
          "ref": "42c43c3c-5cd3-4e34-a9eb-c14e7e807d6c",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7a6bdade-a6a1-48b9-886c-6da6530834fb"
        },
        "item": {
          "id": "c14689b5-7346-4b3a-84a4-f80cdb62f33e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d5f71c11-8595-469e-8854-70f5098832b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13254403-8ecb-4539-b8d9-b17a27b1d5c0",
        "cursor": {
          "ref": "b3d01228-ed8c-4c9a-a235-640d2588f19d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "61bd626f-3ea0-4f7a-aa17-1222db00cb88"
        },
        "item": {
          "id": "13254403-8ecb-4539-b8d9-b17a27b1d5c0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8c442154-b79c-4ae4-a568-8815a969a0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a074e2b-4dda-474b-b46d-f012496b7bc3",
        "cursor": {
          "ref": "afad78ec-cd45-481e-96d4-09870cae1443",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9c977f2d-2e01-4d91-996e-ddb8881976c8"
        },
        "item": {
          "id": "0a074e2b-4dda-474b-b46d-f012496b7bc3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e19e1c57-5b6e-4938-8eeb-dcad6d485797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ceafc5-fbb7-4359-bdcc-cd9d94cb9ce5",
        "cursor": {
          "ref": "ab0dace9-bea6-4821-815b-fefc700c6ed8",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7a730219-97e8-4c46-b043-9fdceeb8d214"
        },
        "item": {
          "id": "c6ceafc5-fbb7-4359-bdcc-cd9d94cb9ce5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "32f39d54-6f70-4139-a265-3333a699f58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde56043-0306-43c1-9bfa-88e3467859ae",
        "cursor": {
          "ref": "b9fd9d19-ff7c-4bd6-b071-b3bac57541f3",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b01f62a2-9238-4138-b6ec-ded45709582a"
        },
        "item": {
          "id": "dde56043-0306-43c1-9bfa-88e3467859ae",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "001cda8e-ef32-4fe1-a08a-c17353251142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5aa85d3-dd07-45c2-94ea-fc74c31ee646",
        "cursor": {
          "ref": "3ac190bd-b90e-4ae6-8022-d4765600c9f4",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5c806c4a-adf8-4279-b1a4-21bb17e4cf9a"
        },
        "item": {
          "id": "f5aa85d3-dd07-45c2-94ea-fc74c31ee646",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1fffe17c-69ef-4147-a74e-fa79296e7086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034f2723-0058-461b-a4f7-24cec459169c",
        "cursor": {
          "ref": "2723502a-6ff6-4c97-b4ec-f04126753b32",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1e57bd17-f54c-4f49-b4f0-66d7572986bb"
        },
        "item": {
          "id": "034f2723-0058-461b-a4f7-24cec459169c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b07d28c6-9e31-47b1-8939-ed365977953e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91873298-d2b4-4b48-a345-44cc7485185a",
        "cursor": {
          "ref": "bf95d413-d31e-4c0d-8cdb-557d767d7668",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5ea0b17d-ee50-45e0-994f-5c8a3fac2f7b"
        },
        "item": {
          "id": "91873298-d2b4-4b48-a345-44cc7485185a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "29737714-f310-4d34-8620-11e1c8d0efb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2f05f0-b683-4686-9105-9bfa3cd956e2",
        "cursor": {
          "ref": "e8550436-7f55-4804-a4c8-8e226585c20e",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "dc912eb5-7b67-4264-9498-2d8794566bcf"
        },
        "item": {
          "id": "1d2f05f0-b683-4686-9105-9bfa3cd956e2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fbbe9d33-4aeb-4e93-83ea-69fc7538d9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ac2f49-3330-49e2-a25d-c6c33a4961b5",
        "cursor": {
          "ref": "6a6e1cef-0daf-4a10-9aa4-393d5ac4886a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3ae3860e-1ca1-4766-b07d-186a6e7e3bed"
        },
        "item": {
          "id": "f8ac2f49-3330-49e2-a25d-c6c33a4961b5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2a144595-4f4d-4e63-9863-5cb2c37d4dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef721ec9-1762-42b0-abfe-1a7bcd0f31c2",
        "cursor": {
          "ref": "6624eb2d-71ce-457d-879d-6bbee66e1536",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a63db2df-562f-49c8-9ceb-3e347467c33e"
        },
        "item": {
          "id": "ef721ec9-1762-42b0-abfe-1a7bcd0f31c2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "79d6e520-eeae-43c0-8030-5d4be354d578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c56789-5732-4b5e-bcbe-1e8a14ecb4b7",
        "cursor": {
          "ref": "64efcc44-d3bb-4714-88af-6ebb13daf3c9",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4f99c127-667c-4c3f-95e4-7bb473a37866"
        },
        "item": {
          "id": "d4c56789-5732-4b5e-bcbe-1e8a14ecb4b7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "becd8463-2caa-4546-8c14-870218a4988f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7da10ae-abca-474e-aea1-ce265564f56e",
        "cursor": {
          "ref": "11bf5565-bf3f-4df1-b03f-121d0587c0be",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9943b4de-2a35-4f3c-aab1-4e10b075b9eb"
        },
        "item": {
          "id": "f7da10ae-abca-474e-aea1-ce265564f56e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "05f0ac15-13a4-4114-814c-c2c41818c33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347413b6-f6e2-415f-9cce-b643bfec2e78",
        "cursor": {
          "ref": "579f572e-1420-493c-85d9-6da7b03fd756",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "20c6749a-ccb6-44f0-b827-df6fc02f46e6"
        },
        "item": {
          "id": "347413b6-f6e2-415f-9cce-b643bfec2e78",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0485bfeb-f274-4c96-b8cf-653b653cd6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7f80fb-e84b-4747-a5a5-0cc868b1eb4e",
        "cursor": {
          "ref": "2394f15e-2acc-4c54-a1b1-2b3b260b55aa",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ca63c113-cec3-41c8-8cc5-f7af0e8ea157"
        },
        "item": {
          "id": "2a7f80fb-e84b-4747-a5a5-0cc868b1eb4e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9f9b58b9-272e-40e3-b3be-6dbde5c73948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae938ea8-fe3e-4e4f-a0c8-e7012930cda2",
        "cursor": {
          "ref": "e59ef6a6-89f5-403f-b456-15588e1b9418",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "48c46807-e946-4ab4-a4b3-c89e8f7da314"
        },
        "item": {
          "id": "ae938ea8-fe3e-4e4f-a0c8-e7012930cda2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cf4d344c-0354-42ca-80b6-ab813bda9127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f9a32e-15ad-4e10-8322-2e7a1aee3012",
        "cursor": {
          "ref": "d3492595-a862-495d-aaf9-b99fdc96e995",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4f5005d1-6d10-4730-91a2-3e2aba6909e3"
        },
        "item": {
          "id": "98f9a32e-15ad-4e10-8322-2e7a1aee3012",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a57fb1f4-54db-4dd5-a796-c26a75842ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f613f5-921c-41f5-b88e-e549d28b97f0",
        "cursor": {
          "ref": "4ecc7ea5-3605-4317-9a05-b6b2a3a6dc16",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "94529555-5ba1-4dea-b833-e96b8a7e7aba"
        },
        "item": {
          "id": "f4f613f5-921c-41f5-b88e-e549d28b97f0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fcdc2071-df9e-43c9-ae94-e9c7963d9b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4c7fd4-013c-48ed-bb58-95f1bc09d7e9",
        "cursor": {
          "ref": "88dcf205-6210-4429-aec2-1aa09eebeac4",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "011d0d0b-3cd3-485f-8924-f98dca0fef15"
        },
        "item": {
          "id": "4a4c7fd4-013c-48ed-bb58-95f1bc09d7e9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a3e0bcdc-f4f1-49bc-87b4-2decc02be6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c68c42-f6f2-4427-8e27-116f1af7ecb2",
        "cursor": {
          "ref": "32f716a9-b2ae-49c7-9188-2a59ee9a10d2",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "670e1c21-4fdb-4f30-a645-18426870112a"
        },
        "item": {
          "id": "b8c68c42-f6f2-4427-8e27-116f1af7ecb2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d10307b0-ae68-4d0d-a97e-6d2a88b1aae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a034e32e-f10f-422e-9bc2-e348acee517b",
        "cursor": {
          "ref": "817f7aa4-5a4e-4c9a-b1aa-d5ef3d98c329",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7613aa6e-8a23-41eb-a35c-1e0752bf36df"
        },
        "item": {
          "id": "a034e32e-f10f-422e-9bc2-e348acee517b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c60f63aa-7548-454b-bd2b-19134b74d5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e4c0d7-c508-4014-9fab-1dbfc086050d",
        "cursor": {
          "ref": "e1fef5cb-2039-47b9-abfa-7c8a0d3c7d70",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a648ebac-a907-469e-a238-f970ae458daa"
        },
        "item": {
          "id": "c1e4c0d7-c508-4014-9fab-1dbfc086050d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "beb9c7e5-9007-49ae-b12f-f491075d0313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1801a53-5f11-407c-b379-dbb36d4c6e47",
        "cursor": {
          "ref": "98a25e65-b730-43fd-8cee-9752b2f58564",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "07fb898e-560d-43f7-9236-a2278cd1d341"
        },
        "item": {
          "id": "a1801a53-5f11-407c-b379-dbb36d4c6e47",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "eecafe21-b4be-4f7b-98ec-2c3be9916579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968c21b9-2a95-459f-b843-6a7db4e4ae51",
        "cursor": {
          "ref": "dc6bcc0e-30a4-4920-9853-a0511a26c6d8",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ab377a37-5927-4ecf-b860-ce1d400a8863"
        },
        "item": {
          "id": "968c21b9-2a95-459f-b843-6a7db4e4ae51",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8f3eb552-53a3-457d-b0f0-6e75c6da5b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d3be1a-7167-4fe8-897a-1935bd2aebfb",
        "cursor": {
          "ref": "f55da5b9-bf58-4976-b1d3-da02c76a7564",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f0a9dbc6-40ab-4f9e-bb1c-9e89695327e0"
        },
        "item": {
          "id": "83d3be1a-7167-4fe8-897a-1935bd2aebfb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8674afde-8e3f-4028-bc40-17261b52f16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e739cb-2a44-45b4-9c7b-3c34ec5fa5ad",
        "cursor": {
          "ref": "7d0c8b72-dac8-4f72-a00a-017a9968e689",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f6bf8563-f1a5-46f0-a1f2-d827b2785b80"
        },
        "item": {
          "id": "b2e739cb-2a44-45b4-9c7b-3c34ec5fa5ad",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d42fa0ee-5804-432b-a223-9d55953498f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37157a84-551b-424c-bef6-ef8cfaf470a1",
        "cursor": {
          "ref": "f1570cce-6fde-49c8-a3f8-43f8b4c02280",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4750b3ae-8c85-4437-a5b3-4c0bed3a1e35"
        },
        "item": {
          "id": "37157a84-551b-424c-bef6-ef8cfaf470a1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5c9c1fdb-5f32-4be7-9692-c069a2970fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97285db6-d58b-45ad-b7d8-acabd888804f",
        "cursor": {
          "ref": "60dff793-7391-4f78-a003-b1b35dd9b622",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0ed1037e-b383-48cc-88f5-c1d3546dc0ab"
        },
        "item": {
          "id": "97285db6-d58b-45ad-b7d8-acabd888804f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "003d9f8b-e1d3-41f5-aeb1-f623b0fc9448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba95b5c-b87a-4987-8bdb-60aec4cf0c59",
        "cursor": {
          "ref": "a179efe8-facd-4ba2-8024-2bd5fa42c108",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "431cc210-72d9-42ab-a631-842fac6b9d77"
        },
        "item": {
          "id": "dba95b5c-b87a-4987-8bdb-60aec4cf0c59",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3eb484b7-4046-4069-b796-ce57ca79fd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21c52ff-dfd9-4b67-bb27-572253bc4cbb",
        "cursor": {
          "ref": "3b91071c-e8cd-4d96-a395-4dcefb06e7be",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3aec1629-d5ca-4cb7-b9bd-ffa28ffe86fb"
        },
        "item": {
          "id": "a21c52ff-dfd9-4b67-bb27-572253bc4cbb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4b7a41b2-6820-4fc3-8e95-3ae5c7b126cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5578adfa-e489-4fc7-bbac-abbf78d6bd7a",
        "cursor": {
          "ref": "b9265832-9407-4166-b830-91725ee02737",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5e66920b-9e06-401f-9c43-5a1dac6e5f5a"
        },
        "item": {
          "id": "5578adfa-e489-4fc7-bbac-abbf78d6bd7a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8243f7f0-f860-4b01-8470-fd927747b172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcacfbeb-6aee-4212-98fe-f594e4a89582",
        "cursor": {
          "ref": "aa6452fc-78c8-4c51-9043-dd19d2cb3164",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "244747e9-131a-4325-984e-4bad6b8af767"
        },
        "item": {
          "id": "dcacfbeb-6aee-4212-98fe-f594e4a89582",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "91646a49-972b-4a91-bae3-ee1d47e6bc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4f4c33-dda5-4e0a-9047-4849f26dd055",
        "cursor": {
          "ref": "2035f04c-4827-47ee-97b7-7a3df7ef0c01",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c4aba7ee-139c-4ab3-8da8-f35c59fe0c51"
        },
        "item": {
          "id": "ea4f4c33-dda5-4e0a-9047-4849f26dd055",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9b80c569-88e6-4a8c-932e-6323182b4a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3867326c-752d-46ae-89a8-7702eccd86a1",
        "cursor": {
          "ref": "f5fb428e-09e2-4ab9-9ea3-bc850306ebde",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0432d23e-b3ef-4627-9720-c38e02706a17"
        },
        "item": {
          "id": "3867326c-752d-46ae-89a8-7702eccd86a1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "abd9f25c-beae-4a57-b5c0-67e574f57414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa4e187-5566-4ee1-b73d-041a9f7a9b2c",
        "cursor": {
          "ref": "bdf2cf3b-af63-4cd5-9857-b280aab7bedf",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3d23941e-3aca-477f-8699-ff63749bb1ce"
        },
        "item": {
          "id": "4aa4e187-5566-4ee1-b73d-041a9f7a9b2c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7497ced8-c67a-4112-a8d6-89ed2402e40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ececb590-c87e-4a8a-bfb2-edcba928d4e7",
        "cursor": {
          "ref": "6a63f3bc-133b-47be-89a3-f59ea5759700",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "16ec76d4-4214-441d-90eb-479b3a276844"
        },
        "item": {
          "id": "ececb590-c87e-4a8a-bfb2-edcba928d4e7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "748a59a5-8fb1-4ea2-8ceb-d46b7fdfc735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7cc90d-5341-46d1-80fe-dcfa0c7447d5",
        "cursor": {
          "ref": "1c46b1f6-35a4-4fcd-825f-f9e947735c66",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ba1f4be2-c8d3-4aee-8077-73531050a159"
        },
        "item": {
          "id": "ff7cc90d-5341-46d1-80fe-dcfa0c7447d5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6900dbaa-5664-4454-9043-a91fa4da2b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf545335-11e4-4798-bab9-ee77df11cbe4",
        "cursor": {
          "ref": "64407186-7bcf-415d-9f9a-3e2a6468d809",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f93271bd-de5c-4eb3-afb1-596a934f1956"
        },
        "item": {
          "id": "cf545335-11e4-4798-bab9-ee77df11cbe4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8290b31a-d58e-456b-8da0-c7fe8265a6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02830cfe-66d2-4e3b-b207-ad72448e5207",
        "cursor": {
          "ref": "5e9004ea-5e76-41c9-8e70-4a8377d9a350",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c8507157-83ce-4e03-a30c-663d708314cd"
        },
        "item": {
          "id": "02830cfe-66d2-4e3b-b207-ad72448e5207",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1589d4b1-4dee-4929-a8be-66ec4c25a03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6042d5b-e926-43f0-abf7-7225d490d514",
        "cursor": {
          "ref": "17680615-77f6-42f9-9c2b-d233e4621e3b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ecb4e1c0-7dc2-41bf-ba3e-f7f45b3c4e15"
        },
        "item": {
          "id": "d6042d5b-e926-43f0-abf7-7225d490d514",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5b85bd3f-cdb3-44f7-88d7-b07a1ad90a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6440beaf-cda5-4d6d-ba32-fea90c88aa13",
        "cursor": {
          "ref": "cea1a496-6268-4095-a3e6-d9723537c8d1",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6bde5cdb-5262-4d26-ad6e-cc837c2ff5a3"
        },
        "item": {
          "id": "6440beaf-cda5-4d6d-ba32-fea90c88aa13",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6b358775-5f4e-419b-ae8e-b9129eee1ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd44e5fe-6d14-4ed5-9688-90832a1fb903",
        "cursor": {
          "ref": "93d96699-64e0-4249-b226-36b348f28957",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "19db97fc-aef0-4166-8dc1-4e7442faeed6"
        },
        "item": {
          "id": "dd44e5fe-6d14-4ed5-9688-90832a1fb903",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ad3fd60c-961f-4de0-82d8-53491afce465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ab3d2c-25c6-4d39-9a02-b48bd75c355f",
        "cursor": {
          "ref": "31fb2cb1-c422-48a6-b916-835addbf2da4",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b4ec5f9b-08f2-4764-a405-4eeb5aae14de"
        },
        "item": {
          "id": "20ab3d2c-25c6-4d39-9a02-b48bd75c355f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0fa031e2-8d37-4966-8ffe-e22cc974276a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e072a882-0264-4cd2-a6ff-4c87ef967cc3",
        "cursor": {
          "ref": "b2448a9e-58f0-43c0-ae53-fcf8a8b95568",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "23ddeb82-f643-4516-930f-e253e712bde5"
        },
        "item": {
          "id": "e072a882-0264-4cd2-a6ff-4c87ef967cc3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d69c55a5-2340-4163-85fe-88a08e537ae8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807d4e90-cb82-49d6-a688-ec79ade09b1c",
        "cursor": {
          "ref": "42e7bc45-24ab-4a2e-99a9-9feb4f773e1a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "224a1e55-bf1f-4cad-8703-e31721574de3"
        },
        "item": {
          "id": "807d4e90-cb82-49d6-a688-ec79ade09b1c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b3b3b1e8-221d-4d94-b70d-0449cccf969c",
          "status": "OK",
          "code": 200,
          "responseTime": 2140,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4015990d-fec6-4a03-be97-9cc1ddb46ae2",
        "cursor": {
          "ref": "9c6b3e4f-86f5-4ef8-a9e4-3734052e8762",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b57ab515-ad93-4a82-8d62-17add95098a2"
        },
        "item": {
          "id": "4015990d-fec6-4a03-be97-9cc1ddb46ae2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "91442f15-98b2-4321-9781-c137d3d61dfd",
          "status": "OK",
          "code": 200,
          "responseTime": 3492,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd826b3-15bd-40d5-8b04-b032fee5f71e",
        "cursor": {
          "ref": "8380bd30-2d61-4333-9793-d94f150c8f0f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9f1f8299-b1ec-481d-943e-eaecaa16ed4d"
        },
        "item": {
          "id": "ebd826b3-15bd-40d5-8b04-b032fee5f71e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ba05d6b9-2e64-490e-bb75-3cb44eb9350f",
          "status": "OK",
          "code": 200,
          "responseTime": 2397,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52fe91c-5fc0-493f-b22e-753d30ca3566",
        "cursor": {
          "ref": "517d2cb8-b76a-48a0-a1d6-c7d26a3bbc6c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6014daa6-91f9-4411-bf14-b27a915fca04"
        },
        "item": {
          "id": "c52fe91c-5fc0-493f-b22e-753d30ca3566",
          "name": "presentations:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:248)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:248)"
            }
          }
        ]
      },
      {
        "id": "222dfcaa-a1bf-4869-8d11-55b06933fc3e",
        "cursor": {
          "ref": "495637a0-895f-4258-93e9-505704a0b359",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d8a8d6c4-da2e-4a0c-960e-5d56ed17ef6d"
        },
        "item": {
          "id": "222dfcaa-a1bf-4869-8d11-55b06933fc3e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:249)"
            }
          }
        ]
      },
      {
        "id": "82d6b6a7-13ff-4999-9b8e-2549cac18f58",
        "cursor": {
          "ref": "4720680f-8303-4bab-908d-812fad1c7aef",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a0207245-516f-42d9-857a-5384401accf3"
        },
        "item": {
          "id": "82d6b6a7-13ff-4999-9b8e-2549cac18f58",
          "name": "presentations_verify:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:250)"
            }
          }
        ]
      }
    ]
  }
}