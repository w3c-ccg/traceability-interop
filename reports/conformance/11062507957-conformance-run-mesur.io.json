{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "83cc2316-f01d-4049-aaf4-b5e35a641dbe",
        "name": "Clear Cache",
        "item": [
          {
            "id": "79a5809d-232c-4c31-a54c-1e1a845c8465",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dda214d5-f9a6-46fa-a078-c846e3da1653",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4fa286f5-c11f-4574-9e4b-2e760eb47555"
                }
              }
            ]
          },
          {
            "id": "516c16ad-d24e-4b52-bfe7-bafe7a564302",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0475210b-cb7d-4173-89b5-09080b6ccf32",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7616a825-2a68-451e-ba9d-39a855c35546"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c69e9f7b-ec1a-4c3d-a4c3-84329ebe2d5c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a386673d-6543-4a07-829a-bf03916006ad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "24df6667-5d36-4a64-b4d2-e17eb080665c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f212a429-ee68-49a3-a232-c840da9babb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce620162-8955-4b23-b4c1-8c62b982d508"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac86c741-7ae9-4a86-83c7-1208e5d733b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b1a8818-7783-4f84-b823-c2553418ac9a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fb3feda4-98a9-4ec9-8941-213f1925ad3a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7154c534-2ede-4607-b74a-f9add7012563"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80ba5d54-ba7a-4f73-b9ae-2d50a981654c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "33d440c3-27b0-42c0-b044-30f4661d06cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59e4fe99-dd8c-4ce1-b777-9f96a3260647",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60833f33-d50d-4922-88f4-45b199d02280"
            }
          }
        ]
      },
      {
        "id": "593c8b5b-b81d-499f-adbc-72043d5a158a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a39f5e45-f23b-4995-9fab-c9fb5e1f0067",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a8eb873-a466-4155-99ea-e7fc152ebb07",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8aa47267-3bc6-4534-b8d5-1ecd305ed6c9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c71384-9181-463b-993c-737ef79f24b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09bc3347-8f98-4a0f-9bce-89367d257992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f654afdf-9df2-45be-af7c-cfa281186063",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66fd811-0016-4c04-abc9-a1e3e90c4aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d01f8e34-cf22-4e9c-b01f-f62dd23efd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e766a5-3cbe-44c8-9ac5-cabf387002a1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acba6d84-372f-4169-97c5-9f6043b60eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "126669ff-4390-4d1c-a236-1d1e51012769"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ad32b89-938a-43be-ba2d-44a0e8411cf3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59bc24f8-128a-43d2-93c7-69469d99ea12",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf31302-3956-4900-8347-db2813b41394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a895b850-e084-479f-a5b1-7f0b72e59b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce202598-3d32-4a89-a3cf-243237a2fecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db1eee1-14c9-4c76-8aff-ccc1b3f4f436"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ef81a4fa-fc10-4c21-a0fd-c2dca02c7113",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a569c5a1-c251-4af8-a2d3-10dc4387969d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c86445ea-8b28-4da9-9afd-7fc865d99815",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e8516cd3-751d-4c9f-8e91-2de18229150c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7224a60d-3bdb-40bc-8723-222639f83edf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "84e9c350-9598-4173-8f25-24a1d0dfd3c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9592baf-0816-4788-83c2-53ff8f779fc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca0f0612-7768-4954-967d-f06d555ec608"
            }
          }
        ]
      },
      {
        "id": "929efa68-41a6-4e48-ae6f-cdf4c54590d8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ce029466-bba1-47e8-8f0e-ba744d8214ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f872c97c-a303-4067-bbf5-ddb8bbec5700",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "08402b07-7680-42a7-8fbc-ab01db4db325",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac34f84-276c-43c1-ac11-2b50b19ad038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03201b54-c700-4949-8f66-dec14946ab30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df47426-1fee-4b24-9040-749e6e6b689f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da4d835e-42e7-44f2-8af9-5c0718a81660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40e6aa7-cfcf-4c0d-8d15-e7649aa14272",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e767e08-b3d7-4459-bdaf-bc157d29f593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313ed1f7-8c47-45a7-9679-d41dacb2db28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d84462-ebfd-439b-a8fe-48d28d7520a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19f564af-e3fe-477a-a38d-f9c5f742887b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6bbbae-6e84-44fb-bcc8-ccba4add890c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93068cbd-e402-4228-8294-685f98fa9a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabb8820-953f-4f5f-991f-9b410fc5148b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69627c1e-64ca-45d1-b3e1-aed24ac53953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa23e95f-e89d-4e4e-add8-243ab23a574d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73fce95-3cd6-4ec9-98ca-ccb6b6583681",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb156fc-0058-44a5-bb3b-8efdb81dfc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e47269f-fb56-43c4-877a-376f2404c0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8289da9-be34-4fb1-bcf7-f64ba0453517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a41384a3-6de3-4fd8-8326-e8287c4e6dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103bbd07-2c0c-4fce-9fbd-2f9f98a395cb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2572d8c9-1499-4da7-ad4b-63e3d8715e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931d1a53-0910-4fb7-b9e2-132409c9309e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92910a63-f1be-47d8-9810-a2637be09bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0ee6930-fab1-40f4-9e33-bb7c6edd4d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d68c05-5cfe-4975-94bb-c63e8921c4a8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef5266e-3e0e-45fa-b6fd-71f0f8a855aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8380ec-9952-46d7-9aa2-33ef367c4a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a333a255-d289-4e4a-9216-679ec1e9794e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "140ce86c-c0fa-49eb-af28-3c6f5d64d409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c419259-4207-40aa-affe-d2b7b8ea2dd3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9b2a5f-8434-4e67-b0ca-f9f3510d82cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0571bff2-c37e-4630-8dac-d93a723b1646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e823c76-ea4a-490c-9cf1-f49d9fe548d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9737b4d-2bfb-4662-aae5-92333065d537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29431130-bcd9-43ec-b695-a5e5a739717e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a332a7-299e-4416-9344-a0e3b19cd5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c797522e-8e31-41c3-a477-aa6974ead24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e0eea7-8a99-4c51-b9df-91ce6ca59ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "728c96e5-bda1-4354-b5d0-447dac229d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790f0f44-dddf-4a46-a80f-c5f8a16de1bb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a8b41e-5b38-4eac-a195-15ebdccf2d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da066487-ecf5-43fa-98ee-4b6f55143820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3232d823-171a-4918-937f-b4c489e2bf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ff68109-ea18-46b8-9299-b1d8b7cd13b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1cc710-0146-4752-ae34-7cd2a6230cc8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23c4bf1-37f6-4461-82a7-212085c47235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc257241-69e2-4152-bd65-42b10b9f6f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b3f636-4204-4a82-89cb-46a4a9254917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d51af058-413d-48d2-bcc4-7ffb0e2ddb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4c167f-232e-43d7-a119-5a728477a88f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98ba635-04f4-4957-ba2f-3649da043470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a115e95-f3a3-4b7a-9980-9995d7d6f6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef4a7b6-0680-4aa4-943f-f3c3bbfc0584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d526b5d-a85c-4a42-8700-ac17a6dcfd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d8e3ce-f5ad-40f3-9c10-79a78d47f91e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f7d71f-5b78-420f-84d2-ccfa327b9f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819c146b-515f-4c96-8fbd-05eed4eea9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38a03ca-c8f4-4859-9e52-fa73795acd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e18b4e2d-0e42-4b13-bd23-094adb86a3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601b2f47-edc9-453f-8bc6-1f81d42ddb99",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d84aee-cac2-493b-8aec-0ed4351fbee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed77c8a-3f11-49fa-bdab-bc3964aa4d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c258ce6-7991-4925-8b13-57dc57660276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ea3d716-1440-484b-bf3c-108bbfcae984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed8abdd-8cd9-40f4-a037-38912f0a5070",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1798f6ff-000c-4e41-8348-0f80f7672914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b455953f-1d1f-4b27-9565-28cd98d9cd71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ddfa7a-ddaa-408a-82f8-dd8a4c1a9afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9314407-79f5-48e6-a39b-2aeae772ac4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4d3307-57ed-4155-a581-591488cca7df",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938c5745-89b3-4db1-b33e-6fdd7054ef9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d70b0f-49d7-4f29-bb7e-6d8ac563a3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b6aa78-35d5-44fb-ad25-c447044d4873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0841a707-9055-4deb-8d33-77b1235758f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb4f910-545f-45bb-acc7-8fc19ee145e1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8846377-9f91-493c-9647-0bacedfba09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b8d6e0-798d-4249-b3b6-96bb392f16b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afba0ed1-f81d-41cd-9a45-0a555be6c2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fbcacb7-0747-469d-b7e6-b3a84c7742a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292982b6-1d4b-41e3-8a96-4f1113195396",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fa5237-ce30-4cd5-9a7f-1e4f05cae83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356d49db-bee0-49b0-b708-8f3a892647ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7171bae2-1574-41aa-9758-5d73c961e2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2f0b027-5237-47a7-936c-f800ec0b31c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd149988-28e1-4296-91aa-39b9939c017e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7829df4-dd5e-4537-a34a-2a10e197622f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d21578a-76f6-4962-9a62-ef240226af9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6c0c5b-72a3-4f04-b6f7-88dd515381b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0478d45-6196-4ba1-8bda-8793adaf1271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbdba56-dc42-4734-b08b-2df342195342",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6906be92-0970-4364-b98b-14d851eb1cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd4c960-0451-4d2f-a068-d1097dcb18f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dcaf17-8d6d-43fd-b5bd-6b33815f44ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae0c7d3-5f08-4e68-a9c7-a1badd073c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254ba23f-b5ae-4794-bfb9-76ad567948c0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480a14fb-4839-486b-a5d8-8bf79919b0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f63e91d-1a7f-450c-b7b2-46b48c47eedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4578fb4-aa68-48de-b277-88388d5a2a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca386df-bcf8-4aec-a350-03741d95648b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd02d38d-8cdb-4a33-b98a-c19b1839e16f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d5cc47-4f34-4c01-b7f1-8765b24e7942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e380c9b-ee23-40b1-a5e1-3e09dbd0d3fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9dc620-279e-4c7c-a0d3-2d8b8a2c2227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b05061d-3f21-4909-861c-d01e097c6772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6d451c-450a-4fc6-8e24-573e6cba4900",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d86f99-644e-4ce6-8443-5dd7ff31aa34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13669ea3-7a0d-467f-aa22-a46b2fd50639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bd1999-c2d4-4a8d-bb23-f8adc0b330bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85cb2edf-b178-44ee-9d14-ca7945ddf671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f735000-d0b2-4b33-8634-6c975f62ec03",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25b4ddf-2e9b-4497-bce3-4d7daaf05434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c538ce4-fe46-4136-8170-25257edbf280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384fb0f2-647b-4845-a292-18d6448a0652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7e2ce1-4278-4216-a451-e117ef72e902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37651b69-eaf6-4d00-8156-ac092f6be52a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f38ba40-aeef-4f53-bce3-417a1e661980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df31e07d-e63d-4e8d-8667-127b8c64cf97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce9dd75-adac-4269-a33e-8e4489879237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb2fa15-570a-4ef7-92e4-21c8e58f968f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b754c1-5b24-4e6d-b2af-116071d5adb9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb66f1bb-ce08-4019-bfa6-741806c127c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9227fe9-39a8-4f6f-b9e2-3b3fdb7d45ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d6125a-6e62-4b28-86e4-5191b13a29a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2320b927-0b33-4115-916d-074cad1aab34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d44d1d-a0fe-4588-849f-07777baef5ee",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b47618-f3b9-4367-8654-c2113937d211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5537f4e5-4475-41b8-9e99-7503cbe90c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243b5f16-12e3-4d4f-8aa2-a79c1573d7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "22c59f2c-fb49-4eaa-8b2a-f6721cc6ffd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc2adf6-5a68-4332-ba7c-2362c19d01b4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6060bf83-d44a-4b86-82f2-e51aea9670f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6918560-354a-4092-a924-0a549b6d5b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac19552f-07d1-4939-950b-425654192e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b68f82b-018a-4520-b598-43d403e34220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02d0139-b835-4d4d-9288-ff9f9b472925",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69a86b1-280a-4c67-981f-d0179ce753e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cc36a1-6b70-4d5b-8ae6-6d251f80b58a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a3acd3-0dd2-47d3-b3a5-6cbf0fd93250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "934b793f-e26b-4e5e-964f-9667163bd426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd9a709-00c9-48f4-95b2-85e2659b46e7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae601bff-cdcc-47ad-b606-a4c182560854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8201bb5e-cf2d-4c04-b397-080078cbe282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82df7a4-1472-4e66-8338-0c6e058031e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eae0e72b-84f8-4a83-855c-0fca34d596c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49be3db8-319f-4e3e-8e7a-69cd93768c25",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5859b467-76c6-4196-afe8-5777984d1a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb8643e-15e4-4c3b-8507-605c99ea2e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a805f03c-3d59-4032-ab63-73fba9dcdf2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2994cd00-6597-4aeb-86db-d9ddfb1ade87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad95047c-0088-4ede-8b7b-69afc39830bb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb40437f-b9ed-4d91-84ce-dd45450ff620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340af40b-ba75-402c-8321-96d3ea825f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d017040-afe9-48fe-a3f4-2bf5c60814f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3279c1-3dfb-47d6-9af9-aa1f61f887ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8eaed98-4afb-4999-bdd2-1dc29e3c8f1b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d169f1-3c0d-4ad7-8ae1-00f3bcfe668e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa913bd-4d3e-41a6-8081-c6828dc4fb2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5b64b5-13e2-46f5-b7ca-943ced5df86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b19866-c62c-4545-87f5-898988ab1e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6853db47-4268-4018-9347-3d2cc8bee572",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abf62f4-528f-4fa4-a29c-3a0de8c21c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb648f8-8980-4f14-b6d7-85653c6cab47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131f06da-21ed-4936-8903-dece476fb523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e287a5b0-0c4a-4236-aeb1-3416d73638a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c405912-9aba-4b5a-90f4-f1fcea3f7d16",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd961850-f84a-4528-8dbf-12f740fd85fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbb8b49-0366-44b7-a5b5-693304344a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea4761a-1f3b-42f8-9511-ab38dd28e262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7c33f7-22d8-4fd9-8851-f99c5f921495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c81016-eef4-451f-b955-a82d397e5de2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebac69b-4180-4e4a-b763-5641f381e582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da9389b-f270-4bf9-a01f-e0fcb2544b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2754e14d-fe5a-4661-ac37-9e8a5935e7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3abb223d-eb50-4689-b7b4-25a11cfd64bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdd25c8-ed53-463c-89e8-bd37f1f1ab5b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97b5095-ca2c-4bd5-8719-cee48a6ce6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b9b968e-16f8-4a0b-b20f-848d26c8c540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babea787-17ce-4ca8-89d6-822b274963cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c475bea9-7d3e-4b2c-87d8-a120506c0e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6101de-d883-4121-b356-3df4cfe1d3b1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08e4952-d649-4f23-a0d1-6d96d64406d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e86573a-79ea-469d-b549-f78e8b681c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87556011-514f-4dbc-a032-60570f6b6a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6af055-2cd5-4246-8ce4-3e300de29c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3ebd84-ef71-4bdb-997d-815abafbe988",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c48d536-57c3-479e-a6e6-6eb5a69f16eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4c56aa-3124-4a7e-bef6-4be484f60bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884d5d7e-5999-417f-bed2-3b8dcdd0a69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "092ea651-fb21-4e4d-8a75-4e9ebf071ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e3ff6a-b6ac-412a-8145-f869a32df8a0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23751699-5562-4251-ac99-79d6f43d7d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cf99db-a70d-4009-8733-37c3e5aad51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6420cb0-0635-4b7e-91d3-df63d10ae39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b97fadda-5d78-411a-b97b-bcd9b428d4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5584876-8b87-4c8e-be00-24128e186e24",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b40637-003e-4458-a761-4f4a6bd594e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bac38a2-b827-4f4b-b233-e3c382db81d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b8fc0e-91dd-4c7e-a1db-824fa63dee2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "90a1eebb-f278-4268-bf3c-5aab067d63b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2b1d17-7989-4ffa-b724-6993e700ed71",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23833339-55d0-42c4-8d6e-99d0d1170e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80567eac-10d7-40a0-be34-8c65e016422c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e484ad32-014c-4229-ad8a-989e664882c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "00f128cb-7aae-4a81-a7e5-13fae52b3000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f874b3f-0c23-4e2a-9b37-03ae5db854ba",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a9f193-c23e-4b25-a1bc-4cd77cbad719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e96f7f9-9648-4f4e-ba0e-4646570699de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f6dc5c-1e95-4220-8c5b-8646068043cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "408decb5-c0a2-4c10-8e5d-cfe49093c5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0426807c-fcf8-48ca-915a-0bbbee88fc3b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf93066-343c-46dd-95b0-56ecc22490f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a2303c-1db7-4f2a-ba92-7176bae51950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3eb0402-c060-4b83-badd-2c55a3ba3488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8826ed0f-2edf-4473-ae8f-cb9a304282f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10de0a8d-6042-4a7d-9868-cd1896501f9b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfc537f-ed59-4644-bc70-3cac7aa99c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cfc4913-efba-46fe-8b7f-4eb82218d7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce3fef7-f7ff-4153-ad35-f7c00bd95544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "be4a21da-b764-4ee9-abcf-9f251cad5eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b6cb85-1605-4d00-9640-29fe85e61fc8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a75156-e704-4799-901b-0f9772cd44d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1eca616-1eaf-48ab-863c-d1d67f6b08d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47118a17-525e-4085-ae93-ec6e3b74bd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eccb4fb-9490-4246-add4-256cc5d6296e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21db9130-5e21-4b8a-9061-04648a7b3bc1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c955339f-57a6-4207-9995-24010fcaa4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e650b6-c6f4-4442-9843-73ab429e711a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329bda08-ea28-4d0d-8415-219dc44acaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc58d510-175f-4241-b852-2a2f2391ae18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772a1546-6933-474a-b322-a5e530e7e5bf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f27543-2265-4c3c-95a6-bef6c922f083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9fc6a6-75c3-4e09-a92d-94c091359546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2448399-5b4d-4ce8-9d7c-b5f0e44689ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b127c91d-be55-4683-8874-586c54208f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0e8448-9933-48fa-8d04-c50160793ae2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3063613e-8604-4c81-999e-e1aa03d02b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e50100-15ba-4531-a727-e9975526ceba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0afc14-76d7-4b80-a72d-c756ed0f3e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee4f558-1d93-40c3-b441-143c1ed652af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f763b5-1cce-470f-a4b4-f836d9ee3c9c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc91a4d5-642b-4f9a-9bc1-89e517f419f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe54648-1054-4ffb-992d-669d9711ca1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f43450d-9906-4b65-b985-5f5ce06aa110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9f8603-e6a4-4365-a84e-7e5c14e21aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0246a2f8-66e5-43ad-a891-e27dc249ae43",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a76b417-3cdc-4155-985b-3d065d110c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93029b8a-b8a9-4589-9ad7-58f39d653297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4e2586-0746-4b41-8b66-876b4f866505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb62ade2-fcb4-4cc2-8dbb-e861524b424e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ad097c-566b-4153-92ee-7185c0afb5f3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179ccd92-afd7-4ca2-b19b-1b0e6a31a486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866f6dbc-e55e-4ff6-a154-213953af2fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f662f3-3104-4ce2-97b4-0e8bb8165d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8663a15-0ccd-4723-b135-bbc08ebe7d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa96d6be-d04b-4a6f-ad2e-17923491c73b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f064725-7a25-4616-9926-ad9c8283f5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16a1826-74d6-42d1-bf57-75e4486ce772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef70bc02-d237-4bca-92fd-7acac83d87a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "538229b4-da30-4e93-8bbe-5d7928e96125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26c5986-8d4c-4137-b697-98ee61846ba7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfc585e-fb3d-4307-938f-86ab53a78ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6730f9a5-0260-4871-983d-dd21fbbb66f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f30e87-faff-422d-906a-dd9ffd54c6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9208e678-bc35-4731-96f7-ad1aad13a13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d57cb8-bd2a-46d5-a0e2-6cbcbba72d1c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c37cc51-6b0d-4812-8de6-325619b9bf6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32832d5-c093-4085-9d33-bd2d78a64080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46a7ec3-f0dc-49ac-a514-22cf9d0b88fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe338113-6dba-4587-8086-40ee8bb46038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a0d933-5c21-47ec-b0db-19c4b6823b02",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70060539-d73f-4592-a13b-ceda5a6e8913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f546f71b-054a-496a-bff2-5fea109d2a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee93d3c-9e56-4c4e-87dd-3f6f08cbb9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92367b7b-e695-426a-8aa1-5e09e28769e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e04a10d-c395-4a9e-8a72-b04bcf2ab7f5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba73b6b-b537-4c71-9876-611b680b58bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cdafd0-250c-4fcd-a114-7b46f6cbf558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66142fc-0035-47f7-a5c7-2c587e9d84b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "888afd74-2479-4a1a-bdc8-c9f85609eb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6132086a-fe7c-4ee9-9fb5-c0724763f6c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffafdb5-fabb-4762-93b9-b6bd3c69df7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4243a2-e3ae-4d57-99fb-6be03708c041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2baeefc7-22ff-4acb-9fe7-3ae0fe501d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "064d10af-6d02-4be1-a76a-bb3bc509a0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518928dc-e6e8-4b0b-ade4-e237db94d2b6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba74797-7a77-4cb0-a0e1-b120404cde4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca52f24-da20-439f-8912-67c68d40efd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886fc79c-3922-4586-9f85-d19093acc7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4ada84-d3b8-4656-918c-8e541b34c843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c516937-24db-47e7-8bcd-41c84804b076",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b8d449-cd72-4a43-8845-b4ced2e9a0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ffd30a1-6c9b-4122-8789-10a1f4fd1241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74b43a2-996f-4afd-ae14-7050a56f7c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f115b21-aac4-407e-95e6-b0fc37b6ab1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddea120c-fdbf-4876-bdfb-6fe0c5234512",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5390fd6f-b72a-4e9a-a866-d5b133eafd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b021a819-1070-4a9f-9778-78ca2c45eb37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690b795e-839f-4698-851a-c05fcd402ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0a3394-6654-42e5-a949-f4286d79dcc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4598e06-d4d0-4877-b69b-5febf92df1cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba0e1a6-f134-4087-91b0-da633c64f87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b84b31-ec92-45e3-9d58-a049489eb669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958ab1f8-1eec-4a2d-afab-345ece1c6a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a94e4d2-8aa5-4af2-8655-1ab6e0d0804c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc4b653-c537-4a7f-b7af-d17c34b6e950",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692f770b-2cb6-4e2e-a5cf-db33f493f7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ef7b3f-bff0-4851-bd91-f0aa1768a6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dca5334-4b8f-4e13-a0d2-3ae2eaa68b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f226166b-4924-4b24-aa0d-43abfb88afa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a927d9-7f55-4a14-9c47-b67dd1cbf705",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dacfdfe-9ae5-42bc-a8c1-aa968a67f892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1b8578-e39b-4593-bcfb-0d92c36c8153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0421ae-2b1a-48f3-90d8-1475746c1867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a205b13f-f60c-4538-ab66-7369a635c76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8771d2b-ff7a-42e4-ba29-b8274a0a6c3a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38acaba-a0bf-4b7c-b8ca-180c7ad32251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568c288c-826e-487f-a526-307554668463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b70f851-fc25-47f9-86d1-78e05dbdfa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad4480b-a0e9-4a37-90e4-f0a2d5a7de60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e76d11-45f0-4033-a6ac-efc9b4e02bfa",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23baaeb6-c784-4f15-98ae-37acfeafa61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea798481-b1f3-4de7-930a-66b2ee31ba34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4173dd84-9f0b-45e4-b6cc-98158eeae5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57a5ef1f-c689-4357-9bdd-126c83aed9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cef30a0-b4a3-496f-be5a-14096b7975f8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188b8220-69f1-4e03-a575-fd13a0804482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbff28a-d991-456f-88c9-0a80d1a8bfe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9eb1eb-1633-43db-b2f8-264a0867852b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5866ef-a160-4a65-9578-49732e3f70ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7972310f-7914-4ff9-851d-22132ba83989",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2da3963-a4ae-4d92-88bd-932423e3b1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc086d7-9af5-4041-97cc-4e62976e3409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d441fbb3-effc-41c4-a898-195b82a3ef2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "691c77f5-34ba-4dff-8ea1-a860705a7cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bdf037-6693-4b12-a2aa-f3a99dc6bf13",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5c0681-d96f-40fc-8bb7-c5ac1d8e73a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f9d146-fad6-4ed1-aff3-1f4c252fd206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40f28bc-519b-411a-9030-36310bf4889c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "609391b5-76ea-437e-8fed-7bb14e8c0751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcefd93-e4ad-4747-8f98-87f57990caea",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb06dec7-0703-4532-9081-4be4a687a5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe162360-3f16-43c9-960a-17cdda00f35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34928566-41b7-4a26-a65f-63cd240a52e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bac18dee-21d7-4b1d-8184-bf34cd1cf812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3856a1d6-a3b0-44fb-a9d5-a83edb037918",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d283b97-e8bd-423a-9be8-7f564144ef17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff381e55-e049-4562-819b-def949225611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3aa063a-1b98-4ecd-8105-3581c4285ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87948e8a-5edf-4d13-9317-82f6e73ed926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771eb355-27a8-4472-bf5a-c038cccfce65",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8c6872-df6b-4105-b842-907233bf4a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22d6050-166d-461e-9224-38efdd5f0ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d29bd23-71d0-45bb-935a-0aed209ae823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8976bcc2-3654-4153-bc0f-5fdbbb36a4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3847ba3a-5672-4f3e-9ce1-fb333d15663a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8960f5-39c2-4800-ad0b-a32e8b9de8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19226ee1-12b6-497e-b3e6-f21e3ddea6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf44548-61b8-47dc-b298-4d945abcd7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18d8883a-db7f-43b1-aab3-0314dfd4af27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045c0910-0771-423c-9d02-3a8589cf6768",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00707200-77ac-4f7f-9324-e45dfb2a2e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b30a3a-77ac-4492-8110-b2023f446a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46444f7c-6968-44b9-a143-8d7f2a26496b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dff4a131-59ea-499c-9403-361bcd162419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12196af4-a8a9-4890-83c3-f1ddcdf449b0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2854c8c1-24bb-4027-b01c-93b22e77f2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd51d294-c395-4bc7-88b2-be6118c73616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d28263-fe5b-42d2-beb1-41bdfcf19795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac8cd12-45ab-454e-b43d-12c525947762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54a8bba-2b51-4fb7-ad4f-808b3dcf0605",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab6ed3f-3256-410d-babc-9b682fff9144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2871592-e36d-4b69-beda-d0e3dfd4aebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b53d667-6ac4-4840-aab2-1b8408c2c1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "907e3965-48d4-44ed-96bc-57935b489cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9509615f-391c-403b-ade4-662c77b39ad9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eafd5bb-94b7-4f55-8ac3-8cd4011dc3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f88b79-8594-478f-97c9-70c541227d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c33669-f33c-4b0f-aebc-f3639c1caa43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec61e372-92ef-4dde-b874-ed75bc17a9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5572d0-fc1b-4a6b-a3ec-68af13a030a5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8819543d-8672-4d9b-a319-474c0e31b0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78296aee-ef6e-42e2-91ae-a208989b79b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a4a25e-9759-4a88-a8a6-30458c14564d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd840999-fb91-48b6-ba29-e6efcd642efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2290f49-2653-4da2-85df-8a299018dcdd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8fe954-7172-448e-bc0e-1c4ba51f4a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf142b9-47df-4b49-b57a-53b6b175c3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763b921f-57f5-4ad4-b8ed-98d81b4dde27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c06baf95-83cf-4a7e-832c-2dad3735adb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc9ce66-e6cf-4a31-855c-85057c14990e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3aaafc8-2f16-4f48-80ee-6fe631e45fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e74a90-e053-49ba-9c65-9147e9f52638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373bb46b-bdaa-487d-a0a1-50d6b2fa1d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e993391-6c1f-41a7-9cbd-1b4ee34f560e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08908630-fb3e-4a6f-932f-273dca932055",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bf30cd-e548-4726-8136-a48704d20de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b29ec0-214d-4c66-8af8-38d8b8a7a846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a916307c-7bee-412e-8f47-7f6d9a08cd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d352c9a9-8d7e-4aab-afc5-1e63ac649a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25478099-61e3-4881-a398-4f2754d24c2a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12118381-8300-460b-8ace-0d034b7d90f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83742631-60e5-4f6c-9d9f-2d6989b52192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11eca0e4-3d1d-458f-b360-7df7aaf33a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "653e0828-2a75-40ea-8a80-df7cb7861c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6665786d-74a8-465b-b6cd-a1ad8f049e8e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83573dd8-93e4-4293-883b-65e922941bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab90f295-7e4b-47a0-aa56-7e75f06146ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4cb746-d4e9-4862-b5a6-a69a3e09c73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ede4a5b-70d0-4a0b-a414-44e592de477d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdaebc8-bf01-4540-b1fe-4c5ae3c5b7c6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbdaa03-7306-4aed-b635-d86740543726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8914a34-c4b5-4788-89ff-386ac0c0d33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7975453f-2533-4ef5-8082-e0572d9b6da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfcd9c65-45ba-45e4-8e1f-9d50a46f3fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9560ded7-8805-486c-83f9-424eb3c4b984",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f118b53b-6e95-4569-ae19-fc2c87690ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01173177-b948-4c60-b4e4-3b3785463f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4cf020-66df-4886-852c-cd55d089aa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd128637-eac8-4337-b927-9a19f27035e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae2fe00-bdc1-450a-ac35-d8fc3643c0d8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28bf458-3bd5-43b8-ae09-18b2c44578c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754bf950-6031-4a5c-bce8-8fc4f6418e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2ea4e3-f533-454c-9940-acdbe29f0d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd037e7-1018-410d-80b3-80f104708e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f00fff-2be4-4e62-9f3e-7b7f1568beb3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba5c3f5-42f7-4acb-bc44-df288400efc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9915f1-fec9-48dc-bf36-6f002d727b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989c4b63-8ae0-41ac-9659-e349eec74703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "051dd69a-64ee-475a-aaf2-a7ff64c36381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b16130f-5035-4146-bea3-ed02c52178d8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0adda59-33c3-4b47-921d-d403ce1c5ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44700120-7887-40b5-94c5-3413a19a32c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa31d8a-b7be-48c5-b59c-aa07efba43a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fabf8aa-8eab-4ea5-a430-372048d08268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40da740c-71e9-4642-a959-6dca55ca511e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5613d2-a0a8-4061-94d6-64b70c1e4abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee3c5fe-2bdd-4b5f-a77f-28989ace9a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae8874f-e3f9-4b8b-a87d-32dce0ed2f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1d01e7-33ee-4980-9f9b-365c1ff78568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd06741a-7d28-4818-bb65-194aa99c57c6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a288946e-bca0-4805-88f0-11a00b1129f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6987d24b-7743-4909-b48a-c74547d9af27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db8cb74-aded-448f-b42c-b4fa4137e6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f49ff216-9d5f-4255-a6f7-e5edb854e984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc84116-4337-401a-b6c9-d9cbdc373374",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea761959-b0a8-48bc-bd00-e9bb7b4be59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce1623a-c117-420d-b66f-f8bd8f343f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371e8ecc-6804-4524-a0ab-0fdb94d49b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "51502fa4-93e6-4e3d-92dc-eaf2c4e93410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f541f6f-8c9d-4f86-8868-555e01fb9023",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9ca59d-26c7-4656-9e32-1e8e7dbca8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e341a10b-08e3-4d3a-9079-f625805665ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b3060d-b3c9-4105-8aad-92c99469c0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "df213f73-410b-44c5-87f9-909248bb52b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13cd751-89dc-47d9-8879-e57e7f5757ae",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796afed8-d1cf-4c29-81b6-a0d937a33250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b028a3c8-2416-495e-9940-68d5ada00f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5716575-98b1-4aa5-be7e-10913b5b1ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2340a991-e059-43bd-8945-a914dbc4fc35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3b2cff29-592a-46a9-b112-708671a59f46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e7075c6-4c0e-4222-a59a-e161ef90d326",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f04b669-214f-42fa-8d44-3937492beec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcb18c26-d726-4e3d-a875-a89d1479e920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a05412-e638-4d79-b0e7-18e38c8ae942",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28037f97-442c-4ee4-bc93-af3c8450201d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d810ab6-a40c-4300-8304-feaafeab8cbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a881de7-29a6-4e33-b24b-99284fe85b3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b1f81b9-58a0-4c03-b204-ddeaa87ab768",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bf91323-922e-46c8-a537-eff98b449308"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6be33292-b31f-4d17-8304-77e3959e6c49",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "261b5501-d6bb-486b-b4ea-d5cf03f1c8f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5c178c8a-13d7-4cec-88ba-3082233fba99",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a09772f9-df57-4697-92ce-fde3f4d2cd17"
                }
              }
            ]
          },
          {
            "id": "cc4dfb4c-a950-42ad-85c3-01d20eec4621",
            "name": "Positive Testing",
            "item": [
              {
                "id": "669fd3b2-e177-4bda-8510-2ea8600e428c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d943e57b-b1ff-4d1c-b103-ea97c3785fca",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcd1bc0-5b50-4b28-af49-aed6fc9c7142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ec2ee71e-944b-4710-8939-72b0b710e427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb02d67-5911-4334-8651-67dd1a28dd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fbc76b7-acca-4ffb-950d-4c195e58c53a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "621166be-e833-48dd-ad78-c4e5bb707609",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e702d33-1314-4086-a7fd-4fe0c8d1afab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b356f92-2942-4779-a402-13dc7207095d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bad9a56-5db7-45d1-b0d0-a415775ba4c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ea40b6ec-e250-4347-93fc-26c23722d7bd"
                    }
                  }
                ]
              },
              {
                "id": "d0423a9b-ab3c-47d3-86dd-f7cac4a661f4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e9f6c75-2e2e-4a82-93f9-6e1b542020b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65763ab0-9888-43ec-a16d-31d9689e148b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7734cd52-af99-40a3-80e0-d2f35d185cde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c0fbadf6-6208-4037-b5b2-8245b75d1528"
                    }
                  }
                ]
              },
              {
                "id": "36cce75d-3b8c-42fe-8438-e2ab2840a76a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91bfc5b2-4cd0-41c6-923d-9c592635c3e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "583653d7-a1ea-4815-826d-845e6120c40b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5bb1838-6a3f-4766-949e-a4f3f1eeae93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "01f69929-a45d-409c-8ff2-5ac15e704f39"
                    }
                  }
                ]
              },
              {
                "id": "e5a90ee6-7051-4cd0-958f-aecb01fd0070",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb067c3a-3ae0-4753-953a-7fdb10c19a76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "923ef0a8-16c7-4583-af77-6d3ce86e1780"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6c86eca-2c76-4c31-865f-5e8e0eccb6cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "72c0b8b1-ddb3-4839-9605-b091e5c2a885"
                    }
                  }
                ]
              },
              {
                "id": "8b4843a1-192d-457c-b7e4-79806352cddf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1b34d90-f2b6-4e95-b2b2-cad5ada9add0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ddc364a5-c074-4084-926b-217e496d4654"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "147a9e23-1445-4811-a1ce-c1b8e26c9324",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b42977ec-fc5d-4f7a-8feb-d83027a13def"
                    }
                  }
                ]
              },
              {
                "id": "333257d4-6e34-428b-8117-5f4630006698",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cae294b2-817e-4bb7-8d6d-c2b574e567c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "100b05e0-7fbf-458b-aa49-edf8629190bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e35b9a8a-a420-46cf-a261-6df09b6f305a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5bfd300e-d1e1-40c6-b053-5f30ab8a7fd2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9bd9b288-e8f5-4fb1-b947-1b717041e113",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d30695aa-4d71-438a-80a0-c0bf37daadfd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f7c74ed0-b25d-4a3a-bc19-ee95b55f1e6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c236695-b016-41a9-8205-4cbf021e1c1a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63773e7e-ecea-4203-819c-92c44dc11c2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c9d6bd9e-799f-423a-8583-4c824aa34ddf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5fc13ac-7178-445f-b3d7-a4f49b7c86b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6175cca1-0ada-42a0-b3b3-ef566dc7c8c9"
            }
          }
        ]
      },
      {
        "id": "167956fd-5331-469e-8dac-a443a0aad3c5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2d970f62-c141-460f-bbbb-8d44b09b7afc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "896d0ba0-6094-4889-8328-871148fce60d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5afbf1f5-5b7e-49c7-bf95-7a2b200acc94",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50486b1-c269-4254-acfa-b08609d1fd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f278d2c-985a-4832-b1d9-fac9bcd8635c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976f924e-1f9d-43bb-9a10-dac1acb21563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a029f7d8-c02c-47eb-bed4-9a65781bc88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116cdaa0-089c-45bb-8a15-0790bbdeb0bd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca980b7-d1cf-4c56-8ce1-eac8677340e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81759e18-c610-4edd-8931-4597f1b3504c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3eaac74-5a1d-43a7-8f45-0fd355e9dbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12adae7a-fc66-413d-8250-92537519918a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a81e5cd-7750-4d2d-80c7-77ed48afb063",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12180812-2d10-46bd-8097-1523df0018f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be00026b-552a-4a9d-9cf2-21355eac3e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94cd6bb-828a-4e5b-adb3-6c97589b14c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70705b91-69b3-4b92-acdf-3f8c3d87c2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bc6120-ade1-4f38-a2f6-15728d73b716",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc0abc4-7e0a-4e2e-b5ab-5a714245d1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9eb617c-7cf4-477a-9586-6cddeaed5748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b86df43-4ca3-443f-b029-d6dac1696f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d19daeb-76ee-4a46-98f8-13010570cdb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d4d233-75dd-4256-a671-5b919bc2e870",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b205726a-808d-4e0c-9a40-a20b41254108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4b435c-3a09-440f-bfa5-a16ae1839a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecee95c3-447b-4cad-aa95-ecf07412c5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79b27d4a-a393-46f0-968e-e0299a59098e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750c1a91-46e6-44c3-8aa5-e5b5f7f13ac4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23f6adc-776e-42d6-bbf4-6d9b84dd42b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d104636a-174e-4099-bc0d-b0e9318c84a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f33bdc-b8b4-477d-bdec-da3f389880df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bac30e-ca1d-4d78-8870-b09bac0fe8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c233d230-e85d-4555-abce-374bfb8062ff",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe21bb5-ad36-438c-9975-c82aeda3547a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb898460-3245-49fe-8081-cfbca96dda8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc769b6e-f1dc-4810-b37c-0248244f2a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a42e393-87fc-43a0-ab2b-e2e0c4a21121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd9c991-bc71-40e7-a23d-92634410fe33",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe676e15-2ffe-40a1-8af6-c9e4e2abd485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61410698-d788-4212-9124-727c00964f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c0b301-7e61-40ac-b2cc-eb3638b71260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d24f557f-dfc4-4b40-86d9-90e931acea85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b2e9b5-1069-4662-a093-2fd07d840bcc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc0d0b1-dd08-4b0b-8320-efd767abf805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5f30dd-6057-4569-821c-142175d88d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0e6c22-e2f0-44f4-9e52-8a2132f162b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42ddd764-81f0-4c7d-98d3-f3fad7cf8913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b67e5b-b328-4bed-b595-3fad32faf0cf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df756f2-9076-4324-a2a6-be7e33e68592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45b6d42-a53f-4817-b5e1-369719ae20a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8d60f9-0aa2-44b1-bb0e-c22a84a68d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b25b180-140a-4ad2-a13c-4f70e7f5a539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552f7538-b3a6-4f43-9ce1-7e91f59b5c84",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d7b7cf-9431-4667-b9f9-f141a2cd0280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f8993c-b32e-423a-a311-26d28b870594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62e75d0-e538-4779-976e-0e2ce39a6a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a35b8a56-dcd3-411b-aead-d690bdee854f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a518ca0-3a31-405c-ac6e-dfbb8ffdb859",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112e85f4-8a6e-4f7a-a5af-c0d08304f0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5cd8ad1-6353-4215-8726-4c28904cf100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0a08ad-19ef-4bde-9ac0-e69ff0f1686a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e67158-5073-427e-95bd-c65c00b67aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938f4c30-3e90-46b1-aa31-699e8923fd1c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fad0e7-ca51-4604-848a-717577104e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c06c762-82be-4195-bf2e-60c4db0f868c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15968a42-1ae1-4f83-963a-879fa421a447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eed491bc-8eaf-4574-bfe7-a7beeeceaf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba09fbe-f455-48e4-9453-9fd131f24463",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc990c9a-e23f-4828-b49e-3e953311a498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7294dcb-3df1-4870-b044-3b2d6bc19965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ee7e98-1545-400f-b2ba-36899e2aa15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac0fd23-2c3a-4792-a968-a3b5fe7887ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34106b3f-86d3-4864-9043-498cd5768600",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bef7d4-4942-44ff-806a-9f3ac8787f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77193665-77cf-44f6-bcdf-99fe4671cc39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cd1224-007b-4b2d-b534-b35b22c70070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd60010-aeed-47a1-b382-d39ff10e7d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9415c0e1-f060-4744-9b24-ca0ec9af657c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ef90da-0794-4d2a-8a5f-d0a0d718d0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f83229f-e72f-4678-ba71-f38dc63b49c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcb63ab-1acf-4ad5-abd0-0f0d0e61da2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "952486bd-3f7c-4b1d-8aab-1c65700d9481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb89b8a8-37c7-4247-a16a-26fe625cbddc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403b817a-178f-47c7-868a-cd59df4b0b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8195ef8d-af18-465a-b21c-02b2bf7396ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427503c4-b2ea-4795-ae43-8a0ab74e242f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b548eaea-2d9c-4dd0-b46f-4d7e1cc4b210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da220fe5-46aa-4208-8c87-7986b6385d50",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d999eae1-28d2-41e1-bd09-c1b70bf3768c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968fc85e-900b-45a4-adb8-2e62945bdc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb9b2c8-af92-466a-a4cc-9f867651358c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc08d626-372c-4b88-a2ce-fc4d8654125f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cb383b-0275-42eb-9fd7-5104dca69074",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f1ef0e-d3c5-4f4d-ac7d-61e36603fef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a855017f-51ea-401e-ad6e-50c142cf09e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee67fe0d-c848-4c54-8fae-853bde542df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a231e54-8355-4e4f-bb83-1e1a415e324d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4357ce2b-b358-44e1-93e2-99a43b0ecbcf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea02747a-ddb8-43f1-ab68-59926be126b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f766e50d-ed3a-4b9e-9397-7357a689c3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666db853-b404-46fc-8bbf-5e866ab4a25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2204b658-c5eb-48a9-ab5e-400d6fe316ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e05a9b2-6db7-4a02-926f-41cddbbe6c49",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8141d5ec-0fe1-469b-b968-d431e52299a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f50fa2-b4eb-425e-9fe7-aae72e7991f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ad0c6e-f7f7-4ed4-95fb-7e65746b5e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4587885c-1b67-4a7b-b40b-d13614764926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b5ac04-6b90-41f5-af98-0f72192a7040",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3629b7e-447c-4901-8dc8-b963c302563d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28aa276a-8b26-42a5-9851-a6c4cd94bf05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a32d46-e43f-4320-91cd-84163edde3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79a0c35b-2f40-4ae9-a6e0-f7bd2acd9091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5789a65-df03-4b50-854e-23cc06fc6c7f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b8b974-36ac-4673-9bd4-d819f34c9d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3253731e-cc02-4152-b55b-d3b3488dc208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f66f225-5443-445e-91c1-4a2da3bd5b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdba7ce1-8ec6-4dda-9e13-7d59d7928d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52db0301-876d-4471-a22f-246fc351e49e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c5f451-f4b7-4fd9-9c03-e07fe153e351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4977b7-7712-45c1-adb3-ca973e2e3948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c700156-038d-435e-8ec8-64b836d1275f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf315c1-4454-47fd-adc0-3e4caafd1bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d1a05a-cb1f-40fa-8da1-a55018543201",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6cd816-b560-4099-b564-74cb30d0e470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1071a1-38c1-4ac1-9c52-5255c35da7d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b86904-96de-42c9-91c5-22ca839b6511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6843b7f5-fc1d-488f-8f59-947a5a623328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df45750f-7c07-4455-a883-5edf9bc0b636",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e708975-9766-4392-b866-1eb5f44d9cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558dde4e-a965-4821-acf0-7db787434109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb5ae0b-b825-4ac9-a0a8-e71b62bcc184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5664673-c6b9-4613-aeb6-63f8dccbfbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82732e08-245f-4e1b-ad5c-d39b1fe2f154",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4095ceb4-7f87-434d-b14b-57c9b457c35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826342a1-ccf3-4a33-821c-ed3a6d17f72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c41827a-697f-4fb3-89bc-14d4bd58f130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b010b3b-88f6-4f0a-b180-7288df2fbc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de6cc36-4d13-4863-8930-bdf3fd12fac0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2db664-9307-4225-a07c-87a97deb2d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de5aa6b-ad2e-42a5-8ba3-cb79f27997ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55559411-a644-47bf-8f76-71b7955c6254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "823af8da-6183-46c7-9a91-1805266b405d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ccbb6e-c464-4fe1-a3ff-b1a6b97e8fa5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91018622-f5bb-464a-abf4-137dc6824c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d62278a-ac02-43df-8383-b6cdd3c3fcad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04240e98-9661-43c5-bb07-dd451dc75bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b044d47-a19f-414e-9676-a096f130771d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21412ca-0e5d-46f8-b7aa-cfc34844e475",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb0441d-7b6b-42f5-9e41-fd3770705788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aeaaf6d-118e-4946-9e11-94011f7c1353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff7504a-379d-4f7b-be1d-ac7ef8fb9cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88b4d3d2-3c96-4544-9c28-dda91374e63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4cbb3a-3221-4981-80e9-798a67228abc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f7bcda-2847-4089-b44a-db183db8cadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105476ac-d8dd-4056-bbe8-2a2f644f151a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bff4ba4-0e4d-459f-a47b-31f649ea1527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34838958-4409-43f2-bdbf-559d22d0b5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceeac6c8-761d-41a0-9b3c-3f9aa0e16719",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645dda38-028f-4dca-bead-c84ef27f205b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0df7a45-9bbe-4084-9ed9-8c402b6fe998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f1bcce-4df7-4948-a0de-1adb9fef7e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f28341e8-fb7d-444b-a14a-0b243b81e3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f41dfe-4cac-45aa-8c64-3a4edd9794c0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274eec71-77c7-4ff4-abf6-a791d7196861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e745a6b-8473-4847-b3c1-9d2200130206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a8a2df-44e6-439d-a041-241720509593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7a7fa6-91b6-48e5-8c96-1d9650b9146d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197198f2-e4bf-4d9c-97b9-cc510a83b4b7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea56fbaf-1d9b-467a-8f57-8ae332925d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f9fe12-dc60-4ebb-aa75-8baf7a85717e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70366a4-03fb-40bf-89bb-ef0e85baafc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4203aa4-2afd-4c2f-9c0b-b757a2d69c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ad36bb-2c0e-4957-9f5e-146e3b484c26",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f534040d-62f8-4213-a629-7c876060faa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db34288-d572-46c5-9ba9-73e36b46f2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea14bed1-c60d-4b42-876f-c25274a39d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7281c094-fde1-4ba7-a3bf-074e2ca9fcc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7729f397-5d6a-4047-a0c6-605ab4ce1a38",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e837ce-38f6-4e16-b746-88610151fa06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3bc501-c4cc-4cc3-bd05-dd7cf023068a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecd43d5-31ff-483b-9122-7507dd74361d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39062f26-bb0e-40df-973a-fa64a1eb8ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328e13c0-2739-4ed1-a462-1a4770c247be",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604d4cca-3b13-40ad-93c7-064a9874416f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa18d7d6-46e6-4f3f-ad47-ae2240d8b028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d10cc2-fe22-4d12-ab2c-8f6dd5ac3e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b716ed63-a3df-49af-a408-f36325f1a174"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d42281a1-34b2-400e-834f-ba07c2abf67d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6bbc785-f7ea-42f9-917b-a6989806c054",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7f6aa6-d1ae-4a4e-8a66-24a893bcccf5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e6dbb0b4-5e3c-41f7-80f6-131ac1572df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c902fa6-f8cd-430d-8373-f9cf27e9e313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1cc100e-b811-4929-8a16-cc498d1feb61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab8c59f4-e68a-4b6f-8908-eb5152f7dbab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2032dd8-6128-4327-a98c-a58b3606b626"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50f4f703-21ec-4a5b-9b89-32750ebc2081",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8821e8df-b953-4338-894a-5264e5c2aeb1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d40155fc-dc3f-4786-a0d3-21d998ccc0ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41a4da14-bb44-439b-82d4-974b2ea9ea61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a532f34-4dc0-4721-b2d6-a264bfd60169",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d56d0d1f-07bf-4685-b3ea-4b75b57a3eb6"
            }
          }
        ]
      },
      {
        "id": "95c594c2-c4fa-4370-9da3-1f309557a321",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3d6dc2e6-c490-4a05-8f9e-4d36484386f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00882327-a97e-4e18-a5be-01ddb10ebae2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "64884cc3-a504-40dc-99fb-9aaf93f25e28",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bf7640-187c-4bc7-8023-5a29b68c20bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7469dc7b-de24-415c-8042-572d688f559c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4f4baa-cfc2-41dd-9da5-c47e15a088b2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16696a2-226a-4406-a570-3f8b5ff6049b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cc679a-f6e6-4e60-b16e-13288042bad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdf4142-035a-468a-9528-16c43773e81d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7789773-89fb-4f8b-aa87-7cad272e8a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de20d6ab-8412-48b1-810a-e42429bb4df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553d9e1d-08d2-4282-a90c-06499661323b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dddecfd-6b49-40e5-b3a0-ee2128b9da5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012863bc-d922-46bd-81a5-3777e7d5a931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e39ab5-ab60-4ac4-bdf3-3e984f24f0e4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53f0afa-26a8-422d-8d7e-57d9abaf22ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f99839-cc02-4154-b582-193f3bc1d9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335c9681-6394-4dd7-9ce1-1d2f96fad77b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9589d1-ce14-4c68-8704-d1a37f6435ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60de577c-d9df-4577-a41c-7280b9195476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5395b4a-5507-4a90-a293-884a3458ef76",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de8030d-e155-4046-95ce-8d4584222c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df99589e-016f-4213-a4ce-fb2585285b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587f73f1-2385-4cc5-8cef-352d20fec70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e513ab69-482c-4c55-8669-0bacda7070ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde107f6-6d16-44f7-9d63-f18ff9d0daf7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506d2c32-6321-4f49-a3ef-99bc279a5554",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "383eb8ad-ba4b-49e6-9e66-9fc3bca470cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e079fc9e-c593-49cb-8794-6d407c6fea28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff43097a-4ec6-45bf-a5fc-cdc5705adf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d4bb64-91b4-4f95-a968-32eea1708a67",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a4b171-60a3-4845-8852-ed0dd17cb522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542d4d9b-7c55-436e-b983-c72eb77421ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25067e2-e2ff-43cd-a519-c34882087c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82391565-eaf2-43a4-8b08-7a9fd45fdd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2816d3-24b9-4ce0-83bd-8dce4f6cbbc3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14a4b5b-456d-42d3-aa2b-03bc68016086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7bcc642-aa59-4d67-bb6e-16fe96b952ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "668bb51d-ef0e-49d5-a968-72d888ddce09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6de57c-2992-4902-b95a-7ba6f0a2d1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879032ea-8d46-477f-8161-0a5369416cbe",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f249a061-181f-4908-8590-dc1b35eeec58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdaed56e-1bdf-4b3f-a443-f4e979e7be46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1801cc4b-5da0-443a-85f1-5dccc4d33dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ed5c53-2909-4d53-abce-e98fe186a30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dedc847-3d41-4d47-8cdf-9c91cab768d4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbeece2-82bc-4a0e-b442-48b210949f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c01b5aa-675c-490b-b4ae-25b3b0fc0d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce88709-de31-4be4-9ae7-c6ac6b16dee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bcd207-ac0c-4812-999b-e89cd2f8bd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d519b2d-355d-4c73-a0f3-888c29b38488",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721658e3-78f8-48cc-a42b-0a9a86b61ab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fd14563-9bb9-4c07-9c8d-f7c3f6f4b17c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bb16b1-86d4-45ba-bfbc-1e8a77f6fd41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812c1703-6f83-4acb-ae00-911dcc96cd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd77982-5626-4441-9d79-4d8dc0ce6f45",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c50e2df-3f90-46b9-813f-514ca5091bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "464aff29-9e05-4df1-b698-c6c3bff7dd67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b528fd1-abf1-455e-b00e-b4b695c7260b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebb2dd2-4dd8-4ba0-9184-09172782ad80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfeb24f8-2ad7-4390-a19e-c59fb881a740",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df77d1d6-4b97-4cec-8e69-c86e80e449e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f24ad45-6034-4bf7-8b59-b2a73da435cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64f36f5-74eb-4649-8274-5ea07265124e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9870b409-e462-47a6-a1c9-aef0c12513ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a908c63f-2c84-4ecc-8672-97e0d622ff20",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1ef80f-169d-4f85-a53d-b53bf34a4e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4765d0eb-a60f-415a-aa76-437fbca19b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503b3601-c672-4bdb-aa18-bf6bf1cd5411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977b71c1-63ff-4fb3-88a1-80f8af96e3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b23d12a-cf1b-4293-9c72-1557bd3953f9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4874b8f7-a351-49f6-bd45-d30026baac6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcc90db-13df-4a31-b360-e40d967b7365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c167097-80f7-4211-bfad-a9f6ad7f5ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4eabb9-b643-4870-a736-a08a9d03bbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92f2d51-16e1-4043-8d7a-675e78546463",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e308e443-8069-4d8d-b126-9bd225d4ecb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99eb51d2-a1b5-44bb-a406-f5f1f9093930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8068a757-50c8-403a-815b-3e2b18a725b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9a0160-d3fc-4b32-a189-2dd4defdde1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82477775-ad03-413d-a4d6-44e898179600",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0faf407-e289-488b-9446-4f87bc400431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad76181-63c1-430c-89c3-6d72fc0c22b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8aef6f-898c-41e3-8d5d-2efd20af1509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d4296d-7379-4d04-b404-bfc672386473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9774119e-b32e-4f7a-9c70-560a1cbb9531",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb4d70a-376f-4319-8f63-90dfda306d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889b7c06-e4d5-433d-b463-681c0d9af79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b4b307-6f50-42f6-b867-ea96e183ee31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6ee145-35a3-4a30-be0f-86054945bb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac40a714-c9a3-4556-b1fa-1f6449270c9d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e0a41b-96b4-4043-a30a-c0bed31ca7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e041c2b-9400-48c1-8b8d-f4913b308f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7191f3-4406-4361-8f5b-33bbc86c538a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca8f988-121b-4e23-891a-24dd5701e2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c956db8-aba0-43d2-8ecf-06093f87f365",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa528ae-d419-486a-b55b-249af76311d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d7b6cb-5f15-4e1e-9e69-cbcb711fa920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2e73c0-a7d3-486d-bf4b-35ae4b03c688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1665b3e-a8b1-45b2-be28-82d2b86e6552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca15aec6-c94e-4150-8ccc-174b71f36fdf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb22b6a-22dc-41bf-b171-6acea61b495c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bef54a-20c7-4120-b70d-f26c9bb60a63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f01cae1-564e-483d-bf44-6c5b0785a817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5842a3-f613-4719-9b48-1a8e836e6d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7046e11-8759-4492-8de6-b6647c415bfa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52250ea9-ff24-44c9-b0c4-cf78d183b068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85a61c68-4d10-4ff5-8142-c09611b30bed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4dad4d-c8d0-4b1c-a0ca-00f2259cc557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d04cecd-30d0-44cd-9dca-2eb8001fd0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c1e7de-60b5-4c01-8f9a-b1d2387add6d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883ab4ae-8f36-455a-99d7-196556b3ffa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d53033-dea6-47d4-8df9-d0c406d90a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643f2b73-6771-4720-bf58-c2eda6ee2478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846f951c-4288-46fa-8430-4892072ab6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37afa07-0873-4f35-b80a-5ee40640529f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb0efef-5988-4576-8e31-c5696b8f1df4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2fed98d-ccbd-46b5-ac56-87b58502efe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d00ec0c-f265-45d0-b3cf-92a0416a91a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e9d7ba-5aca-491d-9518-3e41e02e8cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c076fc-edd4-423a-b37c-907708cb2cfc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859bca13-b052-4d29-b71a-5391a0baa1e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d2c424f-1544-489f-9063-afbdacaac1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7d7e72-aaa1-4246-80b3-b68ab3c462f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2be9224-fd78-43ef-8862-9c0428eee833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9020a5b-e19a-4a8a-b77c-d3db8ef81e87",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73895b4-b784-4b16-9c11-3a3dbdc8a009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb819e5c-f21b-4d25-a9ac-27e1b70321ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43f678d-f2fe-4b24-84fe-fd46f509ddec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74a6e4c-5acb-4fb0-9d2d-b79ebe045d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8942e0-412d-4a16-aae4-bc2678c72fc3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14a657a-94ea-463d-b4c0-5ffb8146868f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eccbb138-84d4-492d-82c0-0f59361baf25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41d0d94-4373-437a-a0d1-4d3b036a575d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f2af01-83b2-471e-88db-30e353312258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655ef18d-2ff4-44ff-8028-7645dd09e6fa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad9265e-11ec-4bcc-b3ab-2c4d762a4530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45465cc0-e08b-4f8b-98db-074746a08f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "032ffb5c-03d0-4c71-8581-2f712200c039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b0f285-bda9-45c9-9a99-32d1e514a961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdf3e59-d220-470d-aa15-619680d4f690",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc2a70f-95ca-478b-82e7-cf3ca0e570a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31ddb69c-3d56-4571-88e3-3ac25e097197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99ea2c5-a135-4c2c-9260-b183a8f87d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d313348-08fc-42c1-ae62-c3d36864c8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530f5a03-28b2-4ae4-9ec1-f04f8e429dc6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe2fe1d-0ecc-49e7-b9b1-5c4d3af1a79f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec3cbd5-bc21-4d70-8738-f5aa79d3b7f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72019673-2ec6-4ff0-bcd6-f2890b6a7fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc866a77-c5f5-4d95-8c67-9674ccedc78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35737c9-7311-47ee-8308-7f3b28a54903",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a422e0e1-ca93-4fa3-a89a-51b326acfee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ddf4ed-db48-4140-b72c-78576ce82eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c303b533-e284-4fad-b0b2-6e206775e8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bc0f7c-4669-4c9e-963c-b9d3c7538abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadba105-f87d-45ec-972b-3f488532afb1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8841eb9-7ad0-4fc8-8b29-4e3cd78f0743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bb790e5-8225-468b-be9e-7f2f189321cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3bde7e-e5df-4915-9bd3-9ef787db6078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ea5f6a-1238-40e0-b178-d66cb589a4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e5f5f8-410d-457c-adf4-69775be65ab3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98879b3-c08d-4ae2-86cd-314585c5dc0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2071c1b-4bb0-4cd9-85b9-6873f5ee1583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80919878-1db2-4a4b-89ee-f9f0ccc5c3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc3afff-e58e-4b17-a825-5ca6dc7fb7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189f8bb6-367d-43f2-9d40-8b7ef7e00caf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff01078d-5d06-4746-9238-a5d9a6fa4f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b3e52c-7ef2-478e-81d5-8a14ff3a96c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e94f480-eed5-4651-aa5b-be7509dc6245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82eb415f-1cad-44c1-900b-813a4f3b2c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76342db9-2177-45d8-b886-752bb6ac1a0f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a72d45c-a258-4148-bc0a-55cb6f468baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b327bb-ba49-459c-a9a7-28e349d06ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52488e5-47f4-477d-bdca-ffadec9e66a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82abb22-d687-43c1-abc5-0bfc4275f741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5594b1-95e9-4fad-b23e-9bb9636492cc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f11c16-9309-4dae-b621-ce36fbbf7702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36807d3a-8f86-481f-a468-54c9d3b2bc5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123208c5-f274-45b6-81a2-71f26b131385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139db520-2d38-4198-a23d-2c5c7d41244a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad45df66-5c29-4896-ba43-d8b6cb440811",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885face8-1ef1-4340-95f2-4b263bf7cdfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf9b053-040f-4891-8a35-5dcd020f540e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c48395-9f73-4b84-acb6-febce622a2fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325af327-7787-4096-8bd6-937c1aa15d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae1b9af-1519-4bec-9597-8f2e050b0010",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c93e8ef-16ab-472d-beb0-ff00dbeb750f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6a7314-3359-48bf-8282-c14422c4a8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85fea33-8860-44a2-a512-7d79d73663aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce8c29b-df43-4073-a0c4-52ad1ead6916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db7175e-cf77-494e-b657-3addc52a6100",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571cd0da-ddea-45e7-9204-01d140b6e550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c490191-4ad9-48f3-bbb4-9ee64370676d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c51759-1e1d-4b47-8236-d9ccd3816dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb4124c-747d-48d6-a245-d5809c12b611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bba92cd-c8af-44a6-b3b9-1b1ce7a82fdd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe125db7-5e84-41db-bf65-993667a4108b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e57997-9ffc-4b23-8538-558a6e8459d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1baed65d-f631-4bee-acce-0af85f1b8fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9626c8-bfa9-421c-8a8e-23b6d320676a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbaef60-8d7b-4db9-9d01-17a4eebc4480",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67f14dd-4c9a-4b06-821e-5ba5fff62795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78881faf-838b-4fed-9783-c2d811a68adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b10686-0f15-4368-8e3f-bf8dfb1e6eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c68af776-abaf-429b-86f9-fc03623dc010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f81ceeb-7cdc-4181-a7f0-8c64d9b6e77b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ec2a60-f570-4635-83b1-2726c5eedd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc81196a-814b-46ba-a9c2-7522f8d3b433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7df0100-186b-4f8f-8f12-2c3c5fcba5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1401431-c017-4265-aa9b-aa6444193af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79926dc9-bc92-4812-8ed8-b66d1e317ce4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8e1195-5e53-4594-ab66-835910e78424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb37889-c20b-4566-9f7b-e37b690cda55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7839f63-1b42-45bc-8c20-d2734d873b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7cbe87-4fa9-4a83-9c76-23a52a44f412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e28293b-b743-4a48-bf63-3d30fbc6b556",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abee01ca-aea3-4e71-8984-660c545f7954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b0541a-49fd-4dd0-badb-203a823f5ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b30dad-e89d-4e83-b6cb-4e5ac581ec37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c91c2ce-a294-49ca-9712-2728931c7f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc95285f-a584-45f7-ae2e-7c98361f4fe2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a61a565-afd0-40f8-a779-d068bff410c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52106a3-00cb-4f53-bbbd-5af773c071f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "679a74a1-7acb-4c88-a999-110d87015d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d051a06-f7a2-4fc2-b2f7-6f79bed65d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b5a023-32f1-4c2e-8cb0-f78fb5d7fa09",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0488e68-c1f4-45ac-bcf9-879c09ca3573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97721a1-4442-432e-8c8b-023954702742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03360d4-0200-4ceb-a9e0-68869bdff4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651b76e2-3149-4407-bc57-f54f12950e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a64085-c019-4f64-be28-259e39772d4f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5af1fac-929a-407a-98b3-21dc4204f462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d90e026-28e0-4914-814f-ed731201f862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "594e78ed-e8a6-418e-b022-96f06ff37ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9bcd6f-0e83-452f-bcc9-88cb77d458a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5830f4-bdb8-4a49-9851-aeb991eb21ca",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8a8eff-599f-4576-922c-743a49b1fdf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548dff19-0540-4821-a642-eb7963479e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f4099e-80a5-4e57-a396-df3f79b1d460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb46fef5-f23e-4c07-b478-71dcb47d765c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b46db21-c9cf-480c-9df8-98768914ada2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da82726-ddd1-4c90-b077-aac051784f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b76ab03-ad4c-41bf-847f-2b8491e44738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63da547-3dc8-48de-ad47-d55706717540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff782b2-f47d-45ec-9c10-100090714079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3760b03b-368b-48ac-8f31-c1ce04d808a3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26cba8a-879a-4345-9c3a-d142b77cd36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c09dea-305d-4e5e-81b9-e1bddf27953e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed0236e-53e7-456d-9d4b-287ae724d6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59760a5e-bf14-47a8-bbee-55dc78a896d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5278be-bd66-44ab-94fb-b5dcfa567481",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6893e4-ef5d-4398-9cc8-63af4b0d81c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1370e3b8-5ed6-4cc8-be28-29b5d6b112f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fe2d56-24c5-455a-ab02-1ed375c0ce56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa759d03-5654-4844-8bae-c6c35f030464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57c3eb8-d434-48ee-89c0-c122ea850f02",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0709113f-354e-4ac0-8b32-cdd99506d054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbed948-38d2-4d7a-b4c0-4ad1f64bc131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a7e76a-6c8a-42aa-ad4f-01f7c05aa509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9aba6d2-3ed0-4645-a9e1-d80a13fff14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6321bfd-2779-47f4-8a15-eb04f45c12d4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2abefe-65b1-4fa6-b370-4c3b43d6d0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13c1fe4-d906-4305-a467-2473f57d4a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf582e62-ed45-4fa6-8340-0a34d9160190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ee8992-507c-4e04-97d7-9ffeb6c897d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175d1498-ea55-4887-98ee-0c0dafba9522",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e681ad0-a0ad-4957-a16e-2c1e95d81a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3217a8-051f-479b-9a65-c59cdb18940d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809fb330-fcf3-4b33-a809-52430a17bcac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68edb4cd-04ab-457e-ac54-97598c797488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62db5f5c-92ab-4b64-998b-54fa88421b5b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab97009-c777-4622-8692-63ca1b40b655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd862f68-86e6-4fe0-9559-b24439d50d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd150ce-6ae7-41ab-a531-1922f215f907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8217e2c9-4edc-4cc6-ac82-baa3b7fd1f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ab3a33-1aac-403c-85f2-59ac0a84f776",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311bb0a5-defa-43ae-b89f-eaeedc9df74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc9c943-09b1-49b7-ad39-e46339dd245b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea807eb1-8bb6-44f7-8b99-9701967565d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26a447c-5d0a-400e-b188-dc416e2be802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2125a087-c830-48d1-98c7-ac9dbc92ba09",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312c887a-9084-4ba1-89bf-e014985f191b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7d3824-7617-42ff-b5ec-d4a88fa45bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c087b4-3f70-4af3-a1aa-5755e1c7e8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a50e2f-44df-4d9c-815c-3aac4eb86c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c60cb92-92c4-4e4c-bea1-141b6720ecca",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edb4e19-2032-4e53-8409-a43529eccdac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8549171a-3e63-498f-a733-93fbaac0b781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac4fae1-7e23-4f74-b3a5-08c656b612dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe205b5b-cc99-4004-8328-85197d48bdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886db81f-b3ae-4ee8-86b1-141ed0575baf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cd6fad-b8a1-4cca-8043-097769461302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b029ca-2263-46b0-aecd-84ce01a4afea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd83c57-6ee5-4e67-8ea6-d194d67e091d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7c9de2-30c1-4069-b5f0-30437cf8b92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0d146d-4e4e-4f8c-8844-68a3ac37f42d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe763ce-2d30-49ee-a09a-cddd9347405a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859c627d-6ab8-42cb-91a0-010eb6ce626e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c06319-7fb6-4a86-8e92-3c41b6869e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812a13d4-3a47-4062-8474-5df2f578b089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6852c7-2047-43eb-82e8-61866ce92099",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d3bf60-aa52-4b0e-bfbd-a32f75ea81ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6312e4f-44f5-45af-adf2-cb6be070e2d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990e5bc2-7125-4c25-bf93-d80e064bd206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904d20a4-f321-4f7c-8a72-ca00b31fd221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78f463b-dc80-40ca-888e-7e4497eac0dd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8039f0b7-7e4e-48f3-a480-49e438331cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab55f8d5-1283-4b51-aebf-c00c4636ab33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae6396e-5452-4d2f-8698-5c656e0ab5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae9c6ca-f1f6-4427-8050-7ba6dd91bbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18afc2c8-605b-4634-946c-b7dba153a560",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1fd38c-2c83-44ca-b548-e6db14f1d084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea14ffa8-9ae6-45f7-af3c-511dbeca0db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8538e547-5221-4791-bc55-f44eaf3b4acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3da4a51-5677-4cda-aed4-43117044e2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09094512-aa37-4d5a-95d8-4e07554eaec4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce97e76-7330-4710-80a6-172774d2bd29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e16386-6fe5-4a11-a4bd-925527a66a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a522a144-e14a-40ac-8355-4f522aef5def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26592561-0ed9-4bee-9bea-5fe6bbf572cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6ba2cc-0476-4040-a69b-d132a9d5b07b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3b7142-51c9-482b-91e9-fca5409aed4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6567c24-4e76-40d2-9856-242a43459c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabfd178-c094-4be3-a5c7-4a5d9e11d68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1170dbf-2c8f-4111-8926-ff58dd07aa55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27e9cee-5741-4144-affd-2895f3339ecc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42cb621-72ab-4810-9e50-dfb96a5a79f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7152fd5-7746-4487-9092-b46e796324e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ce7cb8-4fc6-4ced-8de8-8bfbe4207680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0df7e82-5772-4e1c-abb1-b454d8a329f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddec7f0a-5db0-4871-b421-df346e429c11",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f4cb5b-8259-44a9-aa2f-b72534d6158a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5e53a3b-0b9c-450b-a797-bcdbc77b041f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21788568-7a55-4182-a666-cab160829d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea3912d-a2da-40d0-929c-797564d77a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f802f1-3121-4286-b7ff-ce811ee7eaaf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0b9900-dab3-4957-8bef-5f92523bd4a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a58d07c-739a-4728-b0a4-f7b5ec30dab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e03d3f8-8448-475c-a024-a9a9563010d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c65cd6-85f0-4794-98e0-ed94d55bcff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741abb2e-9082-4ebf-8eb7-8b05c9f43818",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd47ede-5e77-445d-9f18-bcecbc28103e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33796b86-b2d9-49bc-b953-ca989678b24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8384381-c89c-48be-bfb8-12b4d3115b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ac4355-8c1c-4d25-8d47-7b8dd01bcfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e44dd7-b83b-455c-bc1f-32dd61564c2e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10c2953-3c9c-45db-a573-d9e82f0dccf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c894da51-def1-4e3e-80bf-852a22996c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "887b1738-52f2-4508-a383-5ddcbb9bbdeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8934cdc4-d298-4ce8-8183-055882c259a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71742f59-094c-4691-a5d2-2504f597f520",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1151b037-d1a5-4135-91ca-ce0ba2f1da25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "185abf87-f289-44d4-b880-15f1fc5c9d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b90c8a3-616b-4023-b129-5928bd61ff9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2aa338-51fd-418f-9457-5aefa5a237a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69240c9-c1fe-4a6f-8542-8e0237ec0227",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349bf4c9-e07b-4122-858b-ee7973a3323d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8765c861-8ded-4716-9e5b-b206e95dcfcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a73dad-9cd4-4f33-b0c0-cf2ae9b39c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e39ee6-15f1-41f0-b762-346a972f42b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d8dd41-e216-4571-b4c5-ff4daebe9ac2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab603ce7-81a1-4946-9aa0-3815a91544a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8088c723-7e5f-46e8-921e-16d17d7d9335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e62fbfe-5639-4c91-89c5-834bb87155f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549e7904-13b0-436e-8791-081381c17352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58475899-d736-43e9-a93c-a811290a9873",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d09fcde-2895-4803-ac58-d11ef2c262ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96b0d6cd-2e22-440e-b78a-ccd37f4c9fba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b73b90-3f2a-4549-9466-faa088372fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553f6e67-58f9-421b-bda9-43bfc424d96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cea039d-31ba-4d34-83d0-e7423bbb4482",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd719f0b-3a22-4e01-9efb-94af1dad00c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b33dac6-0a4a-4763-b648-803361d9c50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b6f03b-331d-4c8e-b869-4d3ea698d8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65fa2d1-603e-47c4-88a6-b1cc83ee067e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d7f6b2-4ad1-4dd9-a246-8e873186d236",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673063aa-6540-4104-866e-5b66ae74a889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80aa7b2a-0260-4f55-a3ec-e145ac287483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3f690e-c0fd-4de4-91bb-70861740ce66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9aac18-6b0e-4be8-85ee-9240081dc5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71707430-bcca-427e-98c4-d4ae11d69e34",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a574e64-8cd2-4c2b-9677-aa6bda0e2bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ee193c-9de8-47d5-bf65-363b297dddef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af539f74-620c-4d24-96ef-a7df86cdbcb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b4bd2e-8632-48a0-bfaf-45f0300bb103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084f80da-7b7c-4671-aad5-3b8a2feff1d6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf445aa5-2ca6-4f7a-ba4d-e302d5264155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23624bde-0f33-4916-89af-ed48e7e12d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5a2481-ab81-4401-929d-8f4c90b4dd68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5df01d-0af4-4f87-85e7-28a4fa81d293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6358b07f-ba4f-417d-af9f-09aa292f6f77",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ba29d6-421b-4788-a750-d2538d9be445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7dec88f-5a7b-4750-a7bc-f92bcf27cec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868b4a03-57d2-42b6-9380-fc3889c7317d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebae241-ac1d-4833-806d-4e06dce9ed7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5c1b4a-cb64-40bd-b126-42af23c27da0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d825846-cb3a-48f6-b9e4-a3ac80c63846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c33791a-f015-41ec-91f3-e90d7e758da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76b9be1-2d97-4089-af59-5760f2a5e1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15f4afe-c6fb-4a3d-a015-d4aa2075df23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c30562-45c9-4e07-a6e7-aedf000871e3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51da9cfc-4913-4832-99d8-08228db18f92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dc5199f-7bf6-47ac-88d2-ac90c3e93c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdfaf40-60fe-42b7-a9dc-8370a004e3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f4c81d-2b41-41bc-b3b4-38be731dff7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c942803-dbc5-4c3e-bf91-dc3083a264ae",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ff9e84-1816-464b-9072-dec21ede5b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba0ae5c4-dce5-4a82-9a53-2bf1df8a0b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde11ab6-5adb-4b60-a28c-38b941cb89a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f7df0b-fe0c-406f-bfba-a1a3764346b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edac036a-6fb4-4e2b-a590-9ab2467db11d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e733fd0-f790-46bf-a0c9-ae8866c464d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47a2ee71-4d69-4291-bc48-9737a07a1b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b5098b-4dd0-426e-913e-597bc8d93ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e1c6e5-e3eb-404c-9d66-8a0fd6e930ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70ea3d7-0ed8-4ea7-9b2f-912c9ff0b4da",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3247c976-2693-4d16-97e5-fea79d2d0fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e1f00db-e98a-4644-b610-321473551549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036ec98f-c233-4e55-8ffa-f91806351115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee447db-cda5-4381-b28a-f6629ddd6b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c493b3-09bd-43a9-9ce7-ffc5a03f1b39",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5aa7301-b775-4e6e-99c6-27b087b7d02a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "709b81a8-8d91-408d-9003-f5157cb05449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690346f8-7fa6-4e69-82c7-adec83dd5ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806f52af-be38-43d3-981a-015085fd6571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab8148e-9af9-4334-a2e7-0a0b320e8e8e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0a4617-8078-4af9-bce2-e610edab42ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56c5ce9b-b502-4deb-8393-6b449462aab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56455198-6c08-4322-a805-b8809013ad19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adef0c3f-61bd-465c-8b13-0c1901ab57bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6888fa7f-a5b5-4fdb-b39b-12ec58ca38cd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bec5802-89cb-4163-98ff-cabe14ad659b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61771b52-5a05-4596-8fcc-dc636585d44e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3915e0b-97a7-4ea5-b5cd-efdf8c8a8806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13bbce4-bdc6-4f06-9d5b-9ac0d0bf5db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011c45cc-2779-461d-9463-3fb8bf0f2e5c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d525ed6-7e7c-436b-8bd7-deb5833859b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b60e33c1-8e13-4d52-ae81-e2eef4548ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b696f66-004b-4ce6-b626-ed22b0d738bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82411f44-7f9e-4bd3-af39-2720666b7ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a77a429-b718-4eed-811d-412f7f619b25",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1018644a-7925-4834-9a7b-4e07b9f5faf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9c82657-f009-4674-8e63-b2c0f0361477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf31c1d3-5db1-4bb8-8471-38c236f9c2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5707243-cf1a-4b08-af9c-f1c734f6e5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a352733d-594f-446c-95e7-78b64d9c2e25",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a941f922-8497-43ae-9856-d9d13e5e107b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cae86d8-8627-4145-8da7-d103cfd1d073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d586172-be01-4d3d-a9c9-85781d1a89a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1335973-f185-4bbd-8ea3-d0a5a5484ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5df975f-2ded-418a-a63f-d43f51031732",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5660320-466c-4463-b531-23b9076c10e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36cf6d1d-d8c4-44cb-a4c7-b42252fac0a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6b5ece-fc19-4b00-b9c2-1e29d6becddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc779ee-8764-41f2-b930-691bc37fde9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85930458-37da-4c31-a984-89d5912caaa1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd28a909-1b4d-4cb2-9946-bb30a3f9ca11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0449f599-a678-48db-bbdd-095a409e316a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fd87de-5381-4580-a1ce-6cf8932c6aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17368a0f-7b3a-481d-bcb1-fc5c90c43569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fce4f2-3b5c-4390-a5b3-babce3cf81f8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c153fb-39bd-4ef0-b2ac-b43d84aea606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ca16dd-6b2d-4385-ad8c-696c2438cd91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99c56df-ea79-4478-97bc-41f210c8c367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735149ad-d607-40a0-841f-3ffd6c3dec51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58f4012-e09a-4a02-b8cd-3d47ff7e9cd1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6290454e-3c35-416e-abaa-31866da4286f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495bd994-1c33-440d-8652-0da8a671310d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e18fad-ecf5-4ca6-be8d-3f14890b2e5b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d478ad5a-9ab6-4785-b281-335f1b73909a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235959dd-1a75-4873-a37e-c1669f2cbf7b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be10df42-d33d-4593-8c20-109ee1e3b399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b64f574-55a6-4ed4-8307-614ff0e62f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fc36f3-73f5-439a-b3c4-14716df01336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94e1ab9-1bf8-4e2e-a1e2-74eb0a9a05c8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98fc1372-6311-46f3-9352-a48976c20864",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30994ad0-689b-46dc-b010-16d9b035f09d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f5911b1-cb6f-43a9-8dde-890d9234aebe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "360da544-e7ab-4111-aee9-cff539514336"
                    }
                  }
                ]
              },
              {
                "id": "8de627a6-0757-486c-8401-873f0f916138",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "942d1b27-c297-4ef9-b9d2-afc18f4603eb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a4bb26-f4a7-419e-bcf9-90aa2be960b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "66e7ed3e-260c-4bcf-a558-ac2bca6ab72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae09489-5112-4b3a-868b-cb330bf82561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6d8e7d8-d6b2-4551-ac18-ed4c7e05d16e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ce7a639-a015-4cb1-9358-4d0c87769dca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b94eb8b-e92a-4f7a-b16e-87dd82c3c7cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bfaf83a-fcf6-4452-8952-d7a5b32dc963",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "444e7b78-318b-43d3-9034-4540e455524c"
                    }
                  }
                ]
              },
              {
                "id": "f74ecf5b-8713-42fb-b7fb-ef416e2278ba",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "661b2395-4340-4783-9e11-6b72713e52e8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa76f18-b473-4ed7-b426-4d88d33ca8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dd43c381-c56c-439f-b8fd-e9cbee33308a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c57a9fe-da65-48ca-b1be-cba90a64ef08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb29d34-f5e1-4d20-83a3-c3001ffee587"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e9416535-4496-47a5-96c5-c3121ea2a25c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "197dba16-85d8-4100-84a4-7e313bf8f80a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7216bc9c-f6d3-4199-91a7-58b98a00ee34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "464178e3-438e-4ac1-bd80-cc579bf93830"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3f08bb9-934f-47bc-be29-b148088f2dde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95590dc8-3835-40b7-8880-fd32a2543e0c"
                    }
                  }
                ]
              },
              {
                "id": "68d2f09a-7378-43df-b8cb-2e31e0c70ff6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5995cc82-70b9-42ab-946e-fb90ad20d2f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9144d9fc-cb2c-4197-b78a-34cbc67d6313"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f46d6bb8-d3a4-4d9f-9feb-a7651a5ec69b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6a5fbf2-cc7a-45ef-8ade-42bc260d2d07"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e242e8f-67d0-4f45-a4bb-eac9ceb199cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ee7881ae-d955-4d9b-b209-c651a71ef855"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a16fa328-0367-4e68-adee-926bd917b4dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17fcff9c-3d68-4cc9-bc7d-504772e20e2c"
            }
          }
        ]
      },
      {
        "id": "cc6a5d1a-1f4d-4a50-a697-6721c980fa04",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6ff74bb4-3c90-4811-8d62-726f8ef6a51c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b56d88ef-357f-4d03-91e3-852478ad0326",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14ac7204-a30f-4be4-a45f-fa922215187a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2c4750-200a-49fb-b473-8b2dbf00c5fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "674da94b-4686-4410-bb82-521f63f7228b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d5b7a8-f035-4659-b7c9-34032f37f9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00dd5873-d7d4-4bc1-92f2-22ecf9109e84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "430d0cf4-7f30-4c0d-a990-c9df469445a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d3537c8-5f92-4bb1-84da-3eb4ed1e3d98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1e0a12f-7ff2-4317-a486-c7cc41fb4f7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e1dc050-d6a7-488d-beca-d36106ce3e99"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "420871ee-f8f4-4560-9593-b40c2f367117",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "86867c5c-8511-4067-805c-054dfe6fcdc3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c30edbae-9ace-4473-8372-1412f918f25f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "914e57c0-2401-4413-b173-21062c849118"
            }
          }
        ]
      },
      {
        "id": "1b88df16-6a8a-42f8-9623-c3bbe7d91d29",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c535d3ef-89de-4eca-801c-22499b6b75f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34c7046b-622f-4f23-b5d3-9e24d3f01960",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23acb21d-bfcf-4495-9ca1-666a9eecef47",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c553437a-0ed6-49e4-94b3-86d5e7192aad",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "452aa618-7822-4671-9e8e-92c4221cff6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5d1bfb-e594-4081-904f-5c0f307794ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fae260ed-325f-47cd-9694-e48094a5d23c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bba90a59-f22f-4649-815e-3abba1b4b5f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe71291c-9dc9-4a9d-92a0-8b7b26fdfded"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e333917-0e70-41db-a1e5-ea550ee17604",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "763dce91-73d6-43dd-ae65-7dad747282fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5496b892-4d65-476c-990b-3b15b889256d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7aeecf8f-fd12-4a5c-85b9-b4ae60613a53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5366d68d-7d8b-40b1-8ce2-7c2e638519cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22e0221f-8788-4a33-918b-c9ba691f0b71"
            }
          }
        ]
      },
      {
        "id": "d9ac8761-752f-4ac5-a49d-d15957c271d9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "421d1c66-96fb-4fd8-ba77-a44c766cbf32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ad74425-b14f-4480-b758-edc34136f6c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "345817ac-272c-440b-a15f-7e685554fa52",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8397a03f-07ee-443f-94d5-e0b1411d083e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28b747be-fb76-474c-bb3d-7d7c56d908af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b93c058-b6f1-4257-8016-657899ae391a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9f289f5-0d9d-41c5-9aa1-abd9006d66e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eda9421b-df2d-4664-9d9a-fb918efe8704",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0219a3a-8430-4afc-9217-cf62838043be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d89c713b-aea8-46bd-9226-906175a00f42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d443adb-6ca2-4e47-bc8a-8900f40c90f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06a5ca6f-9571-4aa3-94cb-ffba8e781a26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ff66728f-6973-4f79-af89-2cc1e20c8cba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6cc1f1a-a074-41ed-b136-3a27038dc03d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00b6b5ba-7b99-46c7-a8a0-f5df1df03351"
            }
          }
        ]
      },
      {
        "id": "9367a68c-02ff-456b-a47e-57c02d100f84",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa512b7a-f23e-4369-8d4c-6243e06fcf4f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87bcdb10-dcba-4dde-8447-432d763ecd58",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "285e9f40-e3dc-4979-bad1-6bfc3c6cf06e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9069bb22-6606-43b6-bb52-c1e2fb9e6eea",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13ca2808-9e7d-4ca5-9f1c-149853228b9d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 32.66666666666669,
      "responseMin": 20,
      "responseMax": 935,
      "responseSd": 59.96354712762566,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727397923478,
      "completed": 1727397940062
    },
    "executions": [
      {
        "id": "79a5809d-232c-4c31-a54c-1e1a845c8465",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "88021037-cc5f-4e5f-8464-dd374c4245f9",
          "httpRequestId": "ad6fdbde-589d-4f49-92f0-52a35c7967e1"
        },
        "item": {
          "id": "79a5809d-232c-4c31-a54c-1e1a845c8465",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2376762f-8fa1-4ce3-89a8-710368cf77fb",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 0
        }
      },
      {
        "id": "516c16ad-d24e-4b52-bfe7-bafe7a564302",
        "cursor": {
          "ref": "711cbfd5-b9db-4944-b22e-fbe55965f6a3",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d3e71b37-60db-4cb4-9468-44a28c0d9caf"
        },
        "item": {
          "id": "516c16ad-d24e-4b52-bfe7-bafe7a564302",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "adc6f024-68ef-4f6e-8091-539ef76a77d3",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "24df6667-5d36-4a64-b4d2-e17eb080665c",
        "cursor": {
          "ref": "eb10369d-f6be-4708-a073-6fb40b1f5876",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4edfe8d3-5f33-4c51-aea5-8c603e9853af"
        },
        "item": {
          "id": "24df6667-5d36-4a64-b4d2-e17eb080665c",
          "name": "did_json"
        },
        "response": {
          "id": "9cb0bdfc-b16c-466a-8712-da3935fdabc2",
          "status": "OK",
          "code": 200,
          "responseTime": 232,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa47267-3bc6-4534-b8d5-1ecd305ed6c9",
        "cursor": {
          "ref": "861a135d-3159-4020-8a5a-b3237fdc5ed1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6673065f-ee44-41fe-a2bd-4f1d18edf293"
        },
        "item": {
          "id": "8aa47267-3bc6-4534-b8d5-1ecd305ed6c9",
          "name": "did:invalid"
        },
        "response": {
          "id": "0177ce22-015e-47c1-8004-3ac8ce1d456f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa47267-3bc6-4534-b8d5-1ecd305ed6c9",
        "cursor": {
          "ref": "861a135d-3159-4020-8a5a-b3237fdc5ed1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6673065f-ee44-41fe-a2bd-4f1d18edf293"
        },
        "item": {
          "id": "8aa47267-3bc6-4534-b8d5-1ecd305ed6c9",
          "name": "did:invalid"
        },
        "response": {
          "id": "0177ce22-015e-47c1-8004-3ac8ce1d456f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f654afdf-9df2-45be-af7c-cfa281186063",
        "cursor": {
          "ref": "d7399179-5a75-4da2-bbdc-4fe0123cc070",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "89e59247-512f-4f6d-9a72-411ea3efed75"
        },
        "item": {
          "id": "f654afdf-9df2-45be-af7c-cfa281186063",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "aa4f6dbc-a4bd-4c63-991c-64add27d9f41",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 152,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e766a5-3cbe-44c8-9ac5-cabf387002a1",
        "cursor": {
          "ref": "fdb1034d-0e5a-430d-8ed8-38f1dd1669c3",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1d348d30-fd42-473e-97b8-e5b23e56fb94"
        },
        "item": {
          "id": "17e766a5-3cbe-44c8-9ac5-cabf387002a1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f33e2f17-3ab7-4301-a2b1-328eb434158e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 28,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bc24f8-128a-43d2-93c7-69469d99ea12",
        "cursor": {
          "ref": "424a93d8-5e34-437b-9f09-7ad1c50ce3db",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0cb116c5-ab66-4dc6-9257-7aed3da2735c"
        },
        "item": {
          "id": "59bc24f8-128a-43d2-93c7-69469d99ea12",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5d31abbc-72c8-45bc-bfe6-5b81a9091558",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a569c5a1-c251-4af8-a2d3-10dc4387969d",
        "cursor": {
          "ref": "fcbd5a7d-1594-4fc4-99ea-775323de7a66",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "16f90389-6f19-4b12-9253-990f812f71bb"
        },
        "item": {
          "id": "a569c5a1-c251-4af8-a2d3-10dc4387969d",
          "name": "identifiers"
        },
        "response": {
          "id": "71ec0ba9-04d8-447e-84a3-338a5b0aa9d2",
          "status": "OK",
          "code": 200,
          "responseTime": 191,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08402b07-7680-42a7-8fbc-ab01db4db325",
        "cursor": {
          "ref": "4e282b38-d6ec-4a22-87c9-c42cfcd9b7bf",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c3076a66-5736-4f6f-b43e-829b388f94af"
        },
        "item": {
          "id": "08402b07-7680-42a7-8fbc-ab01db4db325",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7afcd1cf-5f88-4a32-a25f-9dfb5bb05e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40e6aa7-cfcf-4c0d-8d15-e7649aa14272",
        "cursor": {
          "ref": "13fa486d-9246-4902-855c-b00d02d3e50d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c42f9518-2f91-407f-8676-9cb1803bc03d"
        },
        "item": {
          "id": "e40e6aa7-cfcf-4c0d-8d15-e7649aa14272",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ce25a87a-d028-4baf-ae2d-a8da5e7ec771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6bbbae-6e84-44fb-bcc8-ccba4add890c",
        "cursor": {
          "ref": "5fe73061-cb45-42d5-bcbb-bc9c1b6be329",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ebd5db2d-d952-43fd-ae8f-30778770c772"
        },
        "item": {
          "id": "0f6bbbae-6e84-44fb-bcc8-ccba4add890c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dce918bc-88b5-49d1-b8d6-276dcd2209fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73fce95-3cd6-4ec9-98ca-ccb6b6583681",
        "cursor": {
          "ref": "e3fb339a-d8b9-4d77-a77b-43d986697f48",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a083a41c-f303-4718-a5ae-fcb3442bbcc5"
        },
        "item": {
          "id": "d73fce95-3cd6-4ec9-98ca-ccb6b6583681",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1f7c9168-e7bc-4d45-b5b8-49a855eba4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103bbd07-2c0c-4fce-9fbd-2f9f98a395cb",
        "cursor": {
          "ref": "e5728718-0561-4c10-b7e7-440f0e7cf7e4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b178fbcd-1289-4d11-b1d6-153efa9346d3"
        },
        "item": {
          "id": "103bbd07-2c0c-4fce-9fbd-2f9f98a395cb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8fdd5bbf-72a9-4a0f-809c-6a5c2175faa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d68c05-5cfe-4975-94bb-c63e8921c4a8",
        "cursor": {
          "ref": "b3a9795e-ae42-4495-a325-e4473ea0c4fe",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "af3e96e0-862d-4054-b6b1-396875328c42"
        },
        "item": {
          "id": "d2d68c05-5cfe-4975-94bb-c63e8921c4a8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f45c56f5-02da-4484-93a0-ef8ec5544e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c419259-4207-40aa-affe-d2b7b8ea2dd3",
        "cursor": {
          "ref": "4dce9b3c-16ca-4bd3-b605-5467464c302b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ea0eaa00-6960-41a5-bd5c-1c80051fec86"
        },
        "item": {
          "id": "4c419259-4207-40aa-affe-d2b7b8ea2dd3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f1b1ffd2-5586-49b1-9b82-d289a7f4f008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29431130-bcd9-43ec-b695-a5e5a739717e",
        "cursor": {
          "ref": "1887c27f-a345-428d-9110-b519cc5560db",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cb4b0847-bad1-45ed-b862-42520bce415e"
        },
        "item": {
          "id": "29431130-bcd9-43ec-b695-a5e5a739717e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d9e7c67d-8603-4238-a97a-a2a9ec76f74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790f0f44-dddf-4a46-a80f-c5f8a16de1bb",
        "cursor": {
          "ref": "41b856f9-13b0-424a-bf63-115905f569ea",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "62b05ee2-4087-49c3-811c-f3d93332e329"
        },
        "item": {
          "id": "790f0f44-dddf-4a46-a80f-c5f8a16de1bb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a9530867-c1d2-4aaa-a121-9ef899eb5529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1cc710-0146-4752-ae34-7cd2a6230cc8",
        "cursor": {
          "ref": "33f30a63-ec3a-4732-984c-2d33edb9a9e6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "96af02bf-fd6e-471b-ad4e-a3cc677464f8"
        },
        "item": {
          "id": "6b1cc710-0146-4752-ae34-7cd2a6230cc8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d640fede-047e-4a0c-8472-92257aa36396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4c167f-232e-43d7-a119-5a728477a88f",
        "cursor": {
          "ref": "4ee1ba2a-5b06-40a2-9379-9b0c19bec2e1",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c197767f-c05d-4f7c-9921-13d54b35312d"
        },
        "item": {
          "id": "4a4c167f-232e-43d7-a119-5a728477a88f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "30579841-7e27-4a61-90dd-3ec12458ff42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d8e3ce-f5ad-40f3-9c10-79a78d47f91e",
        "cursor": {
          "ref": "a5c1a0db-116d-4a8a-84ce-1498d197dfa7",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d9a739bd-13cd-41f8-b435-9614e8b9ca15"
        },
        "item": {
          "id": "c9d8e3ce-f5ad-40f3-9c10-79a78d47f91e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e3ea86e4-96ae-431d-8c10-06faeec4f355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601b2f47-edc9-453f-8bc6-1f81d42ddb99",
        "cursor": {
          "ref": "2305a3d5-8cab-4f1b-9327-a3baeda493e8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0f801484-dfd4-45cd-bfec-8b6a8caa6629"
        },
        "item": {
          "id": "601b2f47-edc9-453f-8bc6-1f81d42ddb99",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "631d9356-1b2a-42e5-b5af-6aed032a6078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed8abdd-8cd9-40f4-a037-38912f0a5070",
        "cursor": {
          "ref": "eb413ab2-08cc-4915-9948-149cd83d500c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e82f997b-9797-45d1-a407-4b46ba105afe"
        },
        "item": {
          "id": "6ed8abdd-8cd9-40f4-a037-38912f0a5070",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7c90d330-1e16-487e-9102-d259bea9e5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4d3307-57ed-4155-a581-591488cca7df",
        "cursor": {
          "ref": "85f13ec0-aad4-4fe5-a857-751a759f8568",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e1873dfe-eaa9-45de-8a53-0548c3845ebb"
        },
        "item": {
          "id": "2b4d3307-57ed-4155-a581-591488cca7df",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e2f6dabb-1421-47be-b069-1ce71155a0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb4f910-545f-45bb-acc7-8fc19ee145e1",
        "cursor": {
          "ref": "07f8a31e-8777-41d1-b336-ca3df41f5d6f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1dc582f7-4893-45af-8374-7906f0462949"
        },
        "item": {
          "id": "1eb4f910-545f-45bb-acc7-8fc19ee145e1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e0d71b4b-bdb9-4cdb-9014-1e9b48d506fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292982b6-1d4b-41e3-8a96-4f1113195396",
        "cursor": {
          "ref": "bac1483b-7d0b-4916-af47-fd52cdcbe9ba",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "78abbead-1683-4734-aee2-771577ed6151"
        },
        "item": {
          "id": "292982b6-1d4b-41e3-8a96-4f1113195396",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f01cca83-2b20-45ea-992f-485181537d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd149988-28e1-4296-91aa-39b9939c017e",
        "cursor": {
          "ref": "4837d5b7-d35a-430c-b87c-7ae59868d0ac",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "78789e61-233e-4cde-acf5-0b8892a580b2"
        },
        "item": {
          "id": "dd149988-28e1-4296-91aa-39b9939c017e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5c3c6f50-fc81-4784-987e-3e647d6b4718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbdba56-dc42-4734-b08b-2df342195342",
        "cursor": {
          "ref": "af39cf11-a5e1-4591-a398-77f59cb4a26f",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5b6ec6be-763e-4d16-bd62-c93f89188636"
        },
        "item": {
          "id": "edbdba56-dc42-4734-b08b-2df342195342",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ed3193d0-1359-4fa7-9b02-b199cbd8e80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254ba23f-b5ae-4794-bfb9-76ad567948c0",
        "cursor": {
          "ref": "65828748-c3e4-49a7-a9e1-937f50364bbc",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0fe4989e-a48f-40cd-9173-3199694f1b68"
        },
        "item": {
          "id": "254ba23f-b5ae-4794-bfb9-76ad567948c0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d3ef31d8-8679-43d6-bf29-640026cf623d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd02d38d-8cdb-4a33-b98a-c19b1839e16f",
        "cursor": {
          "ref": "ce081718-2843-4ae5-a359-b717defd830c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a38846be-4679-4a40-b97a-756ebf73bed7"
        },
        "item": {
          "id": "fd02d38d-8cdb-4a33-b98a-c19b1839e16f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f28997fb-bebf-46dc-adcc-c4c44c1e61a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6d451c-450a-4fc6-8e24-573e6cba4900",
        "cursor": {
          "ref": "c75287d9-b0d6-4e78-8571-876b68160606",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "19976fef-98f8-4832-8b3e-6d2be504af26"
        },
        "item": {
          "id": "5d6d451c-450a-4fc6-8e24-573e6cba4900",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f5572c82-e81c-4641-9b66-701871ee4a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f735000-d0b2-4b33-8634-6c975f62ec03",
        "cursor": {
          "ref": "a47ca7d0-6443-4b10-868d-8ed780bf9b3e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "22a0c073-0a50-4239-9279-11825600c49d"
        },
        "item": {
          "id": "7f735000-d0b2-4b33-8634-6c975f62ec03",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "83a9c7ad-6083-4a21-bf8d-32b7d726b095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37651b69-eaf6-4d00-8156-ac092f6be52a",
        "cursor": {
          "ref": "6f05cbf0-f1ba-4538-87e1-58ddb2f9198b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bf9b082d-843a-4e5a-8744-4b728a47bf4e"
        },
        "item": {
          "id": "37651b69-eaf6-4d00-8156-ac092f6be52a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4e0c3814-fa30-4935-a582-89051cc183ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b754c1-5b24-4e6d-b2af-116071d5adb9",
        "cursor": {
          "ref": "78f46977-c2ed-45fc-93f9-06c23f9add59",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f5e3965c-2e38-40d6-8bf8-11868586c3c5"
        },
        "item": {
          "id": "b0b754c1-5b24-4e6d-b2af-116071d5adb9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "718c17bb-b636-4a24-b322-83473585af61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d44d1d-a0fe-4588-849f-07777baef5ee",
        "cursor": {
          "ref": "daae88af-f4b0-4df5-ba2d-ac9cb5517f7c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4aafc3f6-bf6c-433d-a747-461f6e6b85c6"
        },
        "item": {
          "id": "c6d44d1d-a0fe-4588-849f-07777baef5ee",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c3e92691-c2d5-4514-a0d4-406993b114e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc2adf6-5a68-4332-ba7c-2362c19d01b4",
        "cursor": {
          "ref": "efbdd36a-87f9-4e30-8b3b-eddd1e794d1d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1dff1adb-d81d-413a-8b5a-52546a9f99d0"
        },
        "item": {
          "id": "1cc2adf6-5a68-4332-ba7c-2362c19d01b4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "eaa56f57-84a9-4c57-addb-2d6aa1e4ff03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02d0139-b835-4d4d-9288-ff9f9b472925",
        "cursor": {
          "ref": "c7bc8eda-1403-4c25-a58e-e380364a7c4e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "67ac68f6-802a-4013-92fd-1b24f9b423ef"
        },
        "item": {
          "id": "a02d0139-b835-4d4d-9288-ff9f9b472925",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c487cd92-503a-435c-9567-ddc13b168478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd9a709-00c9-48f4-95b2-85e2659b46e7",
        "cursor": {
          "ref": "627a4dc6-e96c-466a-8f1f-9a175a337e3f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b962112b-57d1-4129-a27a-4de6c9a04695"
        },
        "item": {
          "id": "9bd9a709-00c9-48f4-95b2-85e2659b46e7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "85d3c934-883d-4fc5-8e0c-0a3780425ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49be3db8-319f-4e3e-8e7a-69cd93768c25",
        "cursor": {
          "ref": "cb851bae-2a06-4431-9def-2e85ab7f0156",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4bbbe30c-d3d0-40a8-9d12-342e2cdb1df2"
        },
        "item": {
          "id": "49be3db8-319f-4e3e-8e7a-69cd93768c25",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "481619e1-cfdb-49b0-899e-5bda9664e5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad95047c-0088-4ede-8b7b-69afc39830bb",
        "cursor": {
          "ref": "3c660db4-fda4-4d05-9cac-af2053f5e39a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d9b0d4c7-db50-45e4-b163-af02167fa55d"
        },
        "item": {
          "id": "ad95047c-0088-4ede-8b7b-69afc39830bb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "81bf8de1-b3c4-4620-a7cb-31d9e469d1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8eaed98-4afb-4999-bdd2-1dc29e3c8f1b",
        "cursor": {
          "ref": "57d2ad45-59d2-44fc-9af0-d3b1d25a9c80",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3d830ab4-81f9-4668-a111-9ea607f91739"
        },
        "item": {
          "id": "b8eaed98-4afb-4999-bdd2-1dc29e3c8f1b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "879c8e8c-14f3-47ce-9986-81d35c5de395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6853db47-4268-4018-9347-3d2cc8bee572",
        "cursor": {
          "ref": "69000ec3-d5a4-4705-b1dd-31abd9896c7f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "179d92ab-a606-4472-b730-37a6c2d24772"
        },
        "item": {
          "id": "6853db47-4268-4018-9347-3d2cc8bee572",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6d6482b7-ff45-457d-a36c-ae83c9cb5da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c405912-9aba-4b5a-90f4-f1fcea3f7d16",
        "cursor": {
          "ref": "e4e56f88-37e1-4391-af7b-e772c9cade6c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6229738f-7545-41d8-bdc4-17180c925fc4"
        },
        "item": {
          "id": "8c405912-9aba-4b5a-90f4-f1fcea3f7d16",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bbdcb5ec-af4d-4d5b-b1b2-0bf545b04245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c81016-eef4-451f-b955-a82d397e5de2",
        "cursor": {
          "ref": "da42e4eb-76c6-439b-b38e-0f21a4964e0f",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bda01bdc-01f2-4b5e-82b4-3185738704ae"
        },
        "item": {
          "id": "95c81016-eef4-451f-b955-a82d397e5de2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "629085e9-d173-4a3c-982f-1e202e4bd76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdd25c8-ed53-463c-89e8-bd37f1f1ab5b",
        "cursor": {
          "ref": "ebdce2db-6cfb-47d7-871d-86fbca5b07be",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "94cd9304-4f9f-4762-bc36-76a3a6dd1581"
        },
        "item": {
          "id": "2fdd25c8-ed53-463c-89e8-bd37f1f1ab5b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a87ebca2-fe27-41fa-838a-579fab28e9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6101de-d883-4121-b356-3df4cfe1d3b1",
        "cursor": {
          "ref": "12810db5-e3f9-4cac-bb50-b771f3e4fc32",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "213a5a2d-546b-4433-9898-4367f3784ff7"
        },
        "item": {
          "id": "3c6101de-d883-4121-b356-3df4cfe1d3b1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "41568c46-e84d-4374-9328-c445a90f2ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3ebd84-ef71-4bdb-997d-815abafbe988",
        "cursor": {
          "ref": "dff517eb-3c82-4378-b908-d5c35ae4d30e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "61c2c524-2a6b-4993-a9e3-01637921cf99"
        },
        "item": {
          "id": "9b3ebd84-ef71-4bdb-997d-815abafbe988",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b74d5c4c-e779-4332-bb18-e69457afa1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e3ff6a-b6ac-412a-8145-f869a32df8a0",
        "cursor": {
          "ref": "2ed5f704-c945-4056-a840-ac34de4284ee",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "37249a02-0d10-46e8-a7f5-00dbed492742"
        },
        "item": {
          "id": "12e3ff6a-b6ac-412a-8145-f869a32df8a0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7ee8a0c4-d6df-4fcb-886d-ea9828335383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5584876-8b87-4c8e-be00-24128e186e24",
        "cursor": {
          "ref": "7a1b11e6-33d3-4fd6-ac53-1da35d98e66e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "803e35ba-b908-4508-bd0c-b61672188ae9"
        },
        "item": {
          "id": "e5584876-8b87-4c8e-be00-24128e186e24",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a93724a7-650e-4bde-a10b-77bf28d8b81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2b1d17-7989-4ffa-b724-6993e700ed71",
        "cursor": {
          "ref": "7bd8fada-2762-48b0-ac78-f73ed2741e9f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "139e1bf8-898d-4887-88ee-a466bd2d9a35"
        },
        "item": {
          "id": "fe2b1d17-7989-4ffa-b724-6993e700ed71",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6cdf8313-883b-4d78-9e19-1854ca9cc6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f874b3f-0c23-4e2a-9b37-03ae5db854ba",
        "cursor": {
          "ref": "216ee3a5-9929-49da-b1cb-278d86498305",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "33a5a2a6-fb37-433b-9a15-99c551c20bef"
        },
        "item": {
          "id": "9f874b3f-0c23-4e2a-9b37-03ae5db854ba",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8b39b319-5ca5-4d9e-986d-bbb6ba8b2a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0426807c-fcf8-48ca-915a-0bbbee88fc3b",
        "cursor": {
          "ref": "11f335fa-a59f-48eb-9cbd-4ad994cfdf2b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "56482415-7618-497d-9524-b3e51f7a4c86"
        },
        "item": {
          "id": "0426807c-fcf8-48ca-915a-0bbbee88fc3b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ff8563d2-7bdc-4265-9b3d-1fbb4cdc2eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10de0a8d-6042-4a7d-9868-cd1896501f9b",
        "cursor": {
          "ref": "d866c8a5-34c4-4532-a438-73e0e01f9546",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0193f895-fb10-4057-ae7a-54274cd23496"
        },
        "item": {
          "id": "10de0a8d-6042-4a7d-9868-cd1896501f9b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0f0cd62b-4899-4210-80da-6c514911c6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b6cb85-1605-4d00-9640-29fe85e61fc8",
        "cursor": {
          "ref": "e54dddeb-e71d-400e-8877-8730ff2459e2",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "41ea743b-1a51-4c35-a8fa-f57afaeac64f"
        },
        "item": {
          "id": "37b6cb85-1605-4d00-9640-29fe85e61fc8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9e4d96f8-8aa9-454c-850e-e4f57d78a1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21db9130-5e21-4b8a-9061-04648a7b3bc1",
        "cursor": {
          "ref": "0b4b3aba-0385-4ad1-812a-21342ac52a69",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "463cb169-dfa1-47ac-8275-bbb20db21702"
        },
        "item": {
          "id": "21db9130-5e21-4b8a-9061-04648a7b3bc1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2b350097-5fc7-4ba8-a175-262182238992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772a1546-6933-474a-b322-a5e530e7e5bf",
        "cursor": {
          "ref": "3488298b-163b-4ffc-9686-7893c78b034b",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1409d17f-1719-475f-b7f5-cbf8ae620819"
        },
        "item": {
          "id": "772a1546-6933-474a-b322-a5e530e7e5bf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "00c8c5f0-d338-4d07-a18a-17efa89d8c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0e8448-9933-48fa-8d04-c50160793ae2",
        "cursor": {
          "ref": "967db0f5-a45d-4e0c-9378-5fc1102954b7",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6268cea9-760c-4cbd-bdb2-39d08f0fdb76"
        },
        "item": {
          "id": "3a0e8448-9933-48fa-8d04-c50160793ae2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f712fe9d-8195-4a56-bc47-7f7fd6fee416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f763b5-1cce-470f-a4b4-f836d9ee3c9c",
        "cursor": {
          "ref": "380c8999-61d6-4c73-b47f-883145cd6fd7",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "66b8d2d9-d7f5-4a02-b7a1-b9c8e813e6ad"
        },
        "item": {
          "id": "d0f763b5-1cce-470f-a4b4-f836d9ee3c9c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "688c2c1d-338a-489f-a21e-edaf90dca21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0246a2f8-66e5-43ad-a891-e27dc249ae43",
        "cursor": {
          "ref": "91062e4a-7cd2-4ab4-ac0b-983303bf2f69",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b3688119-5206-44dd-b70d-b269fbffe843"
        },
        "item": {
          "id": "0246a2f8-66e5-43ad-a891-e27dc249ae43",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bea420d2-1ce7-481d-a831-77f130965100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ad097c-566b-4153-92ee-7185c0afb5f3",
        "cursor": {
          "ref": "3344fed9-6df5-40e9-a4a3-db1b51492250",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4888f044-ccff-4ebb-ac6a-c95c52755599"
        },
        "item": {
          "id": "08ad097c-566b-4153-92ee-7185c0afb5f3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "797b38cd-05a9-4434-b6d0-8311063ec4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa96d6be-d04b-4a6f-ad2e-17923491c73b",
        "cursor": {
          "ref": "21e0e3c5-22f7-469c-8d72-7ff97961d003",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0b38910c-b1e1-4838-9cdc-0aaa16a03e88"
        },
        "item": {
          "id": "aa96d6be-d04b-4a6f-ad2e-17923491c73b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "64084ea2-f54a-45b1-b495-eb3437c899f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26c5986-8d4c-4137-b697-98ee61846ba7",
        "cursor": {
          "ref": "25ff2d3b-e8b0-4c33-9eb4-666952fae023",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a2fb260a-18c8-4a71-9298-abbe5c42987d"
        },
        "item": {
          "id": "c26c5986-8d4c-4137-b697-98ee61846ba7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c03f1a17-7886-49d7-a545-76927ffd4a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d57cb8-bd2a-46d5-a0e2-6cbcbba72d1c",
        "cursor": {
          "ref": "5d8b035e-3e31-43ab-8074-dd8aaf153daf",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4a5f980d-3592-4c97-803f-67488ac7908d"
        },
        "item": {
          "id": "93d57cb8-bd2a-46d5-a0e2-6cbcbba72d1c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9a1b2d34-fa32-44dc-85da-b8445df98e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a0d933-5c21-47ec-b0db-19c4b6823b02",
        "cursor": {
          "ref": "56bf2489-21ed-44ab-983f-f15b32d7be8e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d47dd9e0-563d-49f9-b816-5b97d1b62eaa"
        },
        "item": {
          "id": "63a0d933-5c21-47ec-b0db-19c4b6823b02",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5f1cf7ee-c1d3-43bd-a391-b26804a0309e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e04a10d-c395-4a9e-8a72-b04bcf2ab7f5",
        "cursor": {
          "ref": "6d83fbaf-e282-49ab-9461-b1cc25aa6b1f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "af6be870-e979-4942-8afc-22b44ed71151"
        },
        "item": {
          "id": "9e04a10d-c395-4a9e-8a72-b04bcf2ab7f5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a55ecdee-0240-4cd0-976b-ad527fe15c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6132086a-fe7c-4ee9-9fb5-c0724763f6c1",
        "cursor": {
          "ref": "d55e9eef-4b0f-44e2-88a3-2ed202561d68",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a87d1ea8-c65c-48d6-a19d-4de9120495f8"
        },
        "item": {
          "id": "6132086a-fe7c-4ee9-9fb5-c0724763f6c1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f129fe7e-d1ca-4afe-833b-0b9346c946b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518928dc-e6e8-4b0b-ade4-e237db94d2b6",
        "cursor": {
          "ref": "16b83c4a-33b0-4cb4-960b-4adea4c42723",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9347a8ae-0e89-4844-9857-8f85fc601d4f"
        },
        "item": {
          "id": "518928dc-e6e8-4b0b-ade4-e237db94d2b6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "06067af4-5798-40aa-a925-1bc4e686d04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c516937-24db-47e7-8bcd-41c84804b076",
        "cursor": {
          "ref": "25f781cd-37e6-47b1-8619-4ac59ed56fbe",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ccb92807-c26d-47ef-ad4b-682e2dd92bb4"
        },
        "item": {
          "id": "1c516937-24db-47e7-8bcd-41c84804b076",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b9c94944-8c5b-4812-8e87-615fed9150e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddea120c-fdbf-4876-bdfb-6fe0c5234512",
        "cursor": {
          "ref": "b52e5557-c881-4d39-b452-e5be7bbd31dd",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "41fb860d-7575-4194-950a-2f0359c13273"
        },
        "item": {
          "id": "ddea120c-fdbf-4876-bdfb-6fe0c5234512",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a351e5e1-5c06-4e21-9d16-5215b8d54621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4598e06-d4d0-4877-b69b-5febf92df1cf",
        "cursor": {
          "ref": "4126be9c-202c-43cb-9d96-d565a7a6066f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6ef39a7e-c364-4c87-b599-ea6fd6d07b9d"
        },
        "item": {
          "id": "f4598e06-d4d0-4877-b69b-5febf92df1cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e2ce2895-a4e7-421a-9775-d4892ddbdc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc4b653-c537-4a7f-b7af-d17c34b6e950",
        "cursor": {
          "ref": "ef92de17-47ec-4a6c-a0fe-58ffdad48384",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ea0a3651-c1e2-483b-bef7-33a3f3b04b13"
        },
        "item": {
          "id": "bcc4b653-c537-4a7f-b7af-d17c34b6e950",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ead30a7f-05e0-4d16-981e-aa4fd5852e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a927d9-7f55-4a14-9c47-b67dd1cbf705",
        "cursor": {
          "ref": "e81adcc3-5321-4ad6-ba32-269c8707e494",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "83a69488-7714-4083-be41-a04d0ee61b85"
        },
        "item": {
          "id": "c3a927d9-7f55-4a14-9c47-b67dd1cbf705",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a80bb03b-76b6-4d97-a2e4-08e900ad7974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8771d2b-ff7a-42e4-ba29-b8274a0a6c3a",
        "cursor": {
          "ref": "7964bfe7-abfe-4187-bd52-583daf486c24",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1974191f-35ef-4c4c-9340-1eb1ce7c68ea"
        },
        "item": {
          "id": "e8771d2b-ff7a-42e4-ba29-b8274a0a6c3a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "aaf30a69-20dc-4ea1-8559-55bdc3a39d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e76d11-45f0-4033-a6ac-efc9b4e02bfa",
        "cursor": {
          "ref": "cddb7957-5038-4df4-95fc-41e40b744dc8",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "456a0d7a-2466-4361-9e9d-3de9a437950d"
        },
        "item": {
          "id": "22e76d11-45f0-4033-a6ac-efc9b4e02bfa",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6d485b36-7a89-435d-820c-ca91d5a25847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cef30a0-b4a3-496f-be5a-14096b7975f8",
        "cursor": {
          "ref": "0494a953-3232-40f6-9bd4-02b6c032998c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ea1db9a8-72b4-44f5-bdf0-861c3d3ecae8"
        },
        "item": {
          "id": "6cef30a0-b4a3-496f-be5a-14096b7975f8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cbc05dff-60a3-4b54-9ffc-f79a4b0ea4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7972310f-7914-4ff9-851d-22132ba83989",
        "cursor": {
          "ref": "94abbe37-387b-4610-84c3-913727e7bb29",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ab7942bb-5b85-4fdf-a61a-80690a0cb81a"
        },
        "item": {
          "id": "7972310f-7914-4ff9-851d-22132ba83989",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "63c4414f-56d7-4757-b84d-e29daefc3601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bdf037-6693-4b12-a2aa-f3a99dc6bf13",
        "cursor": {
          "ref": "0a34cf56-f473-4e79-9014-b3be41de2a03",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9e33fe44-18ee-4551-a3bc-fcd3121eb4cf"
        },
        "item": {
          "id": "b2bdf037-6693-4b12-a2aa-f3a99dc6bf13",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a8d99bfe-9230-4235-9813-b6a93ff5fb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcefd93-e4ad-4747-8f98-87f57990caea",
        "cursor": {
          "ref": "3a676a62-2719-48b9-9949-1156381b24e4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6e118eb3-59a9-472c-acd1-1c0832ef2f98"
        },
        "item": {
          "id": "adcefd93-e4ad-4747-8f98-87f57990caea",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e7de3c13-6146-4352-93ae-5c6cd57a2849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3856a1d6-a3b0-44fb-a9d5-a83edb037918",
        "cursor": {
          "ref": "975a99c6-30a3-4bbd-935f-b1c591c7f5fc",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "30a95d65-887d-477c-955a-5080ebfb66eb"
        },
        "item": {
          "id": "3856a1d6-a3b0-44fb-a9d5-a83edb037918",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "299915dd-88a4-42f8-9a89-ce02ca1d42a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771eb355-27a8-4472-bf5a-c038cccfce65",
        "cursor": {
          "ref": "8422ccaf-6982-40e1-9907-8be15f3f54a0",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8dac84f4-3093-49fa-97e4-357610ecf6ed"
        },
        "item": {
          "id": "771eb355-27a8-4472-bf5a-c038cccfce65",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9ecf11e2-1dab-4a68-b8a0-86fb6cc392ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3847ba3a-5672-4f3e-9ce1-fb333d15663a",
        "cursor": {
          "ref": "5f1c3913-1220-47f2-8989-2a13f4b73709",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d1b049e8-7838-4d6e-b310-8a0d1af65729"
        },
        "item": {
          "id": "3847ba3a-5672-4f3e-9ce1-fb333d15663a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c4b21778-e933-438c-a928-9793bf28ca2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045c0910-0771-423c-9d02-3a8589cf6768",
        "cursor": {
          "ref": "e546e7aa-4c65-4648-8d72-dbb62f2c6aff",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f40bd452-bed9-4766-99ca-7108fec6235c"
        },
        "item": {
          "id": "045c0910-0771-423c-9d02-3a8589cf6768",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c765216e-a055-400a-b0aa-628f22318bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12196af4-a8a9-4890-83c3-f1ddcdf449b0",
        "cursor": {
          "ref": "f7bcf85a-f676-485a-843b-36e711d72806",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a3325cd6-4e7a-41c0-9dec-e09ba9cf7d6d"
        },
        "item": {
          "id": "12196af4-a8a9-4890-83c3-f1ddcdf449b0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cda7340b-a40f-4d37-a55f-a535b9c523b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54a8bba-2b51-4fb7-ad4f-808b3dcf0605",
        "cursor": {
          "ref": "b9bbf12f-47fb-4f82-9665-f5763380c8e4",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c9f15fdb-a8b2-475f-aa1a-2d55d9c335c6"
        },
        "item": {
          "id": "a54a8bba-2b51-4fb7-ad4f-808b3dcf0605",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "30e87faa-2179-4831-ac98-08124e9b4212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9509615f-391c-403b-ade4-662c77b39ad9",
        "cursor": {
          "ref": "c324a0f6-0329-4cf7-93ff-0d5aff1856e3",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b2dbb768-373e-465e-81ff-c0a501a3c795"
        },
        "item": {
          "id": "9509615f-391c-403b-ade4-662c77b39ad9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ff724760-c7eb-4b64-93ad-230ff4009f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5572d0-fc1b-4a6b-a3ec-68af13a030a5",
        "cursor": {
          "ref": "b2acf213-0a95-4729-92c0-b3aa394f266f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "89f29e3e-34c1-4309-9d1c-454cac4b7858"
        },
        "item": {
          "id": "2d5572d0-fc1b-4a6b-a3ec-68af13a030a5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "779ed990-d7a9-4e49-bdf6-10bfd1aea9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2290f49-2653-4da2-85df-8a299018dcdd",
        "cursor": {
          "ref": "e226fad7-2fa3-491b-b4b9-f88b38f63c54",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0add5502-5f8a-47c0-aa2c-8923a61613d3"
        },
        "item": {
          "id": "b2290f49-2653-4da2-85df-8a299018dcdd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3f00c388-85a6-45f3-aefe-2373129aa50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc9ce66-e6cf-4a31-855c-85057c14990e",
        "cursor": {
          "ref": "5da2343b-2e71-4a11-82bb-42a09c9fb6cd",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2a3d6205-76c1-44f8-a90c-7c5c514093b0"
        },
        "item": {
          "id": "9dc9ce66-e6cf-4a31-855c-85057c14990e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6129c97b-5279-4729-8262-b331c4e814fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08908630-fb3e-4a6f-932f-273dca932055",
        "cursor": {
          "ref": "6975f98e-e223-4257-8530-52b002ee9dc4",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b2edd197-f0b3-480c-be9b-96dfa525be84"
        },
        "item": {
          "id": "08908630-fb3e-4a6f-932f-273dca932055",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a1e21551-48b6-4cf4-ae69-b052660fa90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25478099-61e3-4881-a398-4f2754d24c2a",
        "cursor": {
          "ref": "d5c28638-9b7d-4f58-bd01-283052074933",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "72d5bd9b-5c71-49e0-8ac2-c8a60f471d24"
        },
        "item": {
          "id": "25478099-61e3-4881-a398-4f2754d24c2a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fdce9cb3-f14f-4aac-94c1-db16f54a282d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6665786d-74a8-465b-b6cd-a1ad8f049e8e",
        "cursor": {
          "ref": "a7ec77b4-cd1f-4a47-8dc4-18c5b79536b5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "511568d7-1deb-4b5b-bbf7-c0abfba0895f"
        },
        "item": {
          "id": "6665786d-74a8-465b-b6cd-a1ad8f049e8e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b832fc94-ffc8-46c8-b6c0-d310b5da9d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdaebc8-bf01-4540-b1fe-4c5ae3c5b7c6",
        "cursor": {
          "ref": "3ec9214c-8209-4b50-a38b-9259b29e2fd6",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "75f85ede-767f-4ae2-af9a-3b318bbd0808"
        },
        "item": {
          "id": "ecdaebc8-bf01-4540-b1fe-4c5ae3c5b7c6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0266f516-0c58-4058-b66f-5b05bf783775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9560ded7-8805-486c-83f9-424eb3c4b984",
        "cursor": {
          "ref": "51ab4e2e-5d2f-477c-9ecf-d02f97158ce0",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "34009923-57aa-484e-99bc-6e7d7731ae7e"
        },
        "item": {
          "id": "9560ded7-8805-486c-83f9-424eb3c4b984",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "60cb94e3-f590-4368-8af5-b0a159da64b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae2fe00-bdc1-450a-ac35-d8fc3643c0d8",
        "cursor": {
          "ref": "e7599fc4-f694-40a6-8f5d-cb61490c5d3f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "92ab28c6-192f-4e58-bea6-086d1345f43f"
        },
        "item": {
          "id": "cae2fe00-bdc1-450a-ac35-d8fc3643c0d8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2cd747ae-614c-4ba9-92ee-809eb1071ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f00fff-2be4-4e62-9f3e-7b7f1568beb3",
        "cursor": {
          "ref": "ac5971a5-086c-4a87-9894-abd1ac84e92f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "413b4b8c-7f80-49e8-873b-ea50e4d447da"
        },
        "item": {
          "id": "f6f00fff-2be4-4e62-9f3e-7b7f1568beb3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e3117d30-5e75-465b-a788-7ec984eb7d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b16130f-5035-4146-bea3-ed02c52178d8",
        "cursor": {
          "ref": "a7c29ff3-494a-4c0b-9375-d1a2c169ef02",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8a40e5de-0fee-4eb1-b5cd-030d59c93074"
        },
        "item": {
          "id": "2b16130f-5035-4146-bea3-ed02c52178d8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e92b4332-e3c1-4973-b929-82ff5042fbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40da740c-71e9-4642-a959-6dca55ca511e",
        "cursor": {
          "ref": "a98a78fb-2c9f-4c9c-aafd-7c14c1c6afc6",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e72743e6-2114-434d-b524-057c2b19b5bd"
        },
        "item": {
          "id": "40da740c-71e9-4642-a959-6dca55ca511e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a2ab5b60-d9ba-4855-aecc-ce6912daf278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd06741a-7d28-4818-bb65-194aa99c57c6",
        "cursor": {
          "ref": "ecb5b07e-e105-4b97-89c1-8783f6d98fac",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5bcaca94-673b-4f5e-9a13-16bfbed4b547"
        },
        "item": {
          "id": "dd06741a-7d28-4818-bb65-194aa99c57c6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7d135f09-f823-4c7a-89fb-d19cc818c0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc84116-4337-401a-b6c9-d9cbdc373374",
        "cursor": {
          "ref": "2dcf26b1-c628-446f-b5e1-357dae989c0c",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "91acd9aa-ef9d-452c-929e-1f6d0230cada"
        },
        "item": {
          "id": "1bc84116-4337-401a-b6c9-d9cbdc373374",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bcba7041-e492-45b4-a04f-0bfe2803e821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f541f6f-8c9d-4f86-8868-555e01fb9023",
        "cursor": {
          "ref": "26d05c08-93a1-4f12-883e-0457c7a43dcc",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "163ef21a-085d-4581-be52-834389094aa2"
        },
        "item": {
          "id": "3f541f6f-8c9d-4f86-8868-555e01fb9023",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "34249d73-0645-4151-b4e7-ff41185f768e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13cd751-89dc-47d9-8879-e57e7f5757ae",
        "cursor": {
          "ref": "b9e2e2fb-a4dd-41a0-a97d-e3fe5bb05913",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "597b11f4-65af-4137-a411-14d51aa78f48"
        },
        "item": {
          "id": "c13cd751-89dc-47d9-8879-e57e7f5757ae",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "83cf3120-8461-4441-a302-86969d6b3621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7075c6-4c0e-4222-a59a-e161ef90d326",
        "cursor": {
          "ref": "61ca6d04-0f73-4f58-b165-1eda15f8d975",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1cb34922-39db-4e0a-a94d-05ebb5e701e1"
        },
        "item": {
          "id": "6e7075c6-4c0e-4222-a59a-e161ef90d326",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0c227f22-46ab-4a80-a18c-79ba7cae94a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d943e57b-b1ff-4d1c-b103-ea97c3785fca",
        "cursor": {
          "ref": "dd433f67-b599-46a9-869c-356291c77df1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "909a3159-609c-475d-acde-3bc996867716"
        },
        "item": {
          "id": "d943e57b-b1ff-4d1c-b103-ea97c3785fca",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2574aad6-493a-473a-921d-c762e2c47509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "621166be-e833-48dd-ad78-c4e5bb707609",
        "cursor": {
          "ref": "7f53a7db-be66-48f9-9ca3-8daea6f8d569",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3c8b3184-8787-4fb1-afc9-55d1ca97a271"
        },
        "item": {
          "id": "621166be-e833-48dd-ad78-c4e5bb707609",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d29a755e-478e-4fa5-8f1b-1a5cbdce1f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d0423a9b-ab3c-47d3-86dd-f7cac4a661f4",
        "cursor": {
          "ref": "1c9b60ce-dfca-478c-9e78-74bf016fe972",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "192b246b-c153-4a71-b6e9-8a576e907145"
        },
        "item": {
          "id": "d0423a9b-ab3c-47d3-86dd-f7cac4a661f4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "06f4e0e8-a529-49e5-a3e1-2679b3d59cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "36cce75d-3b8c-42fe-8438-e2ab2840a76a",
        "cursor": {
          "ref": "67136d84-e803-44e2-9451-483d861e0b7c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3a478487-5c97-46d0-8b8b-0311d29ad128"
        },
        "item": {
          "id": "36cce75d-3b8c-42fe-8438-e2ab2840a76a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "326fb688-d48a-4578-9547-ddbd8a4efa86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e5a90ee6-7051-4cd0-958f-aecb01fd0070",
        "cursor": {
          "ref": "47b14cd1-4ef9-4355-b6a4-e7970f7f6137",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d287131d-c1c7-4e7d-8db0-9fc407b7bb55"
        },
        "item": {
          "id": "e5a90ee6-7051-4cd0-958f-aecb01fd0070",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f4ff7724-edd9-4764-a330-64026ca1bd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "8b4843a1-192d-457c-b7e4-79806352cddf",
        "cursor": {
          "ref": "c3515a26-1656-458e-b9ef-3cc5e8fb5580",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "27f8bf94-4cab-40e4-b8ae-b455fd33d31c"
        },
        "item": {
          "id": "8b4843a1-192d-457c-b7e4-79806352cddf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7994615f-ed6e-4af3-a37d-f2004a8b4a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "333257d4-6e34-428b-8117-5f4630006698",
        "cursor": {
          "ref": "865cdbe1-0ac1-4743-83bb-5001fbef0c9f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8cf3c31a-3cd9-4ef7-bc9a-072a32f46843"
        },
        "item": {
          "id": "333257d4-6e34-428b-8117-5f4630006698",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ede2046a-471a-4de7-8ddd-4e8678d3df42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "5afbf1f5-5b7e-49c7-bf95-7a2b200acc94",
        "cursor": {
          "ref": "43a6723d-bc07-40a7-9457-db7f435a4c31",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e3766b91-e24d-49b9-b34d-d55c9c1a7a47"
        },
        "item": {
          "id": "5afbf1f5-5b7e-49c7-bf95-7a2b200acc94",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4837e333-0b86-4d5a-9622-6cddd518d00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116cdaa0-089c-45bb-8a15-0790bbdeb0bd",
        "cursor": {
          "ref": "b5c8a222-51e6-4696-aea1-64adc5baedec",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1821b972-b8ef-4906-bdaf-2644ea176374"
        },
        "item": {
          "id": "116cdaa0-089c-45bb-8a15-0790bbdeb0bd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "68c25256-31db-40f3-9495-d3d69bc71723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a81e5cd-7750-4d2d-80c7-77ed48afb063",
        "cursor": {
          "ref": "ab64445d-b357-4850-b6a8-bfda722c8e03",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f48906ef-f4cb-4cd8-afde-0755ce7b9c18"
        },
        "item": {
          "id": "5a81e5cd-7750-4d2d-80c7-77ed48afb063",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "eab5e1d0-7bb6-4250-8974-d278b2414c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bc6120-ade1-4f38-a2f6-15728d73b716",
        "cursor": {
          "ref": "5056248f-f729-4398-bf39-a6ffd1796065",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "af72a188-5867-4c6e-9b30-6f75acde59ec"
        },
        "item": {
          "id": "83bc6120-ade1-4f38-a2f6-15728d73b716",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a2bc3b14-f527-4ada-b107-c2b371d22824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d4d233-75dd-4256-a671-5b919bc2e870",
        "cursor": {
          "ref": "4bbb6f69-c07b-4454-b67c-5faed2731312",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "98e31c47-8365-4929-9218-524c11f937af"
        },
        "item": {
          "id": "97d4d233-75dd-4256-a671-5b919bc2e870",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e32daf17-0221-4b96-9ff0-91b32d56e878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750c1a91-46e6-44c3-8aa5-e5b5f7f13ac4",
        "cursor": {
          "ref": "2fd4bf2b-d60f-4f0f-9553-2d4b5c258fb6",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a45e8a31-2131-435c-8f3c-774098c2ca74"
        },
        "item": {
          "id": "750c1a91-46e6-44c3-8aa5-e5b5f7f13ac4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "42ecba2f-b68e-47c4-88a3-fa6410c7f35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c233d230-e85d-4555-abce-374bfb8062ff",
        "cursor": {
          "ref": "173241af-8dd8-49eb-81d8-5669b036b195",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "618383ba-53a3-4edc-b889-1811376865c6"
        },
        "item": {
          "id": "c233d230-e85d-4555-abce-374bfb8062ff",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a4facaf2-6bb7-4ecc-a967-4116481fec57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd9c991-bc71-40e7-a23d-92634410fe33",
        "cursor": {
          "ref": "4a0bd84b-a6e0-433f-b363-3bedeb52c38e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a20c7bdb-9441-4c00-8828-5eb882175fcd"
        },
        "item": {
          "id": "ebd9c991-bc71-40e7-a23d-92634410fe33",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8dad4829-da30-4f12-9d71-0506548e247e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b2e9b5-1069-4662-a093-2fd07d840bcc",
        "cursor": {
          "ref": "eaa1d2a6-792d-432d-a549-f7b66a8e990e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "46fed2b5-e043-4da1-a893-7209a9748684"
        },
        "item": {
          "id": "87b2e9b5-1069-4662-a093-2fd07d840bcc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "990785c7-6f66-4518-8c82-08c667f6bae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b67e5b-b328-4bed-b595-3fad32faf0cf",
        "cursor": {
          "ref": "ed1c3461-27c2-4286-8d05-096215b4254d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ef205e93-2d30-4619-a1cd-7b653b55f9b8"
        },
        "item": {
          "id": "65b67e5b-b328-4bed-b595-3fad32faf0cf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "524fe78c-f557-4611-ae2b-e0e8b49405f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552f7538-b3a6-4f43-9ce1-7e91f59b5c84",
        "cursor": {
          "ref": "69aa21b1-f44c-4a2c-9ce0-a0b55c803463",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "13a33aab-9d44-40f9-86b0-b2c5d508be5f"
        },
        "item": {
          "id": "552f7538-b3a6-4f43-9ce1-7e91f59b5c84",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a5bc0ed4-3218-4b94-9b2b-fce418128fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a518ca0-3a31-405c-ac6e-dfbb8ffdb859",
        "cursor": {
          "ref": "20cf0e3a-61fe-490c-86e1-17297b7312a5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d7e45417-3f23-43e2-a783-fb7925a0dbfd"
        },
        "item": {
          "id": "7a518ca0-3a31-405c-ac6e-dfbb8ffdb859",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9c78b70a-3f86-48b6-b350-ffcbfecee83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938f4c30-3e90-46b1-aa31-699e8923fd1c",
        "cursor": {
          "ref": "8497f0fe-f90b-4236-855f-33a84e88ddce",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ccad16b7-ed4b-47db-9b14-15d433be8c3e"
        },
        "item": {
          "id": "938f4c30-3e90-46b1-aa31-699e8923fd1c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "978c3d4c-8016-4452-97cf-c54807f934da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba09fbe-f455-48e4-9453-9fd131f24463",
        "cursor": {
          "ref": "fc632a96-ecf4-4dbb-a64f-d0911b0985aa",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3f01d667-c31c-4818-9ffc-7858181f1795"
        },
        "item": {
          "id": "2ba09fbe-f455-48e4-9453-9fd131f24463",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8cc01c1d-01ee-40cb-b64a-70d04be35f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34106b3f-86d3-4864-9043-498cd5768600",
        "cursor": {
          "ref": "edb50581-3d0c-4d1e-84ab-798ff032e37b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "139200c2-1b7c-4e30-bc5b-15884f48f545"
        },
        "item": {
          "id": "34106b3f-86d3-4864-9043-498cd5768600",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "58f06dc6-f8d2-4129-8766-c745c5777d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9415c0e1-f060-4744-9b24-ca0ec9af657c",
        "cursor": {
          "ref": "ee4f8b61-c6e3-425a-93a0-f12da4867c79",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0e5d7455-e401-4a67-923a-cb4604d9154f"
        },
        "item": {
          "id": "9415c0e1-f060-4744-9b24-ca0ec9af657c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "14bb818a-6b1e-46a5-8808-3792b891ff37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb89b8a8-37c7-4247-a16a-26fe625cbddc",
        "cursor": {
          "ref": "745c8913-4e48-447f-953d-2d8d4c4fc4e9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "db5c2f64-8035-4813-9e5c-2861be340330"
        },
        "item": {
          "id": "bb89b8a8-37c7-4247-a16a-26fe625cbddc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fdb193e8-944a-417c-871b-53ab6b4745d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da220fe5-46aa-4208-8c87-7986b6385d50",
        "cursor": {
          "ref": "ad6bed9c-70f6-4dce-b62c-5fe32067d530",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e2ec36de-5b7e-4f22-94b3-3f9cece07873"
        },
        "item": {
          "id": "da220fe5-46aa-4208-8c87-7986b6385d50",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "edd690d1-a644-46ab-b8a8-323bb31cca71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cb383b-0275-42eb-9fd7-5104dca69074",
        "cursor": {
          "ref": "5cad8d9a-7504-46b2-b30d-66eee53a0db9",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "72d975b2-2afe-46d1-b64e-10a7c3adfcc8"
        },
        "item": {
          "id": "c6cb383b-0275-42eb-9fd7-5104dca69074",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f0b7f9fd-d778-4f81-ae7b-30cc83d35a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4357ce2b-b358-44e1-93e2-99a43b0ecbcf",
        "cursor": {
          "ref": "a52ad4f5-47f4-4c5a-bd70-dd8dd4da851b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "311a19dd-5abd-47fd-9998-9baa1d2fad7d"
        },
        "item": {
          "id": "4357ce2b-b358-44e1-93e2-99a43b0ecbcf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cca49470-d29a-4ff0-aa19-22659a72bb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e05a9b2-6db7-4a02-926f-41cddbbe6c49",
        "cursor": {
          "ref": "846c4d6f-b528-46f3-9f7e-9ccd9c9dd3da",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "047f63ae-f466-4a81-b0eb-713c3a07342b"
        },
        "item": {
          "id": "8e05a9b2-6db7-4a02-926f-41cddbbe6c49",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c16e427e-29ec-40fb-80a2-d21e095fc803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b5ac04-6b90-41f5-af98-0f72192a7040",
        "cursor": {
          "ref": "4081ad9a-4d57-4553-85d0-82544c37ad04",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d23d25ee-0b0e-449d-855d-439041ab7886"
        },
        "item": {
          "id": "81b5ac04-6b90-41f5-af98-0f72192a7040",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8c74c974-98b9-44e5-852d-d740473bdee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5789a65-df03-4b50-854e-23cc06fc6c7f",
        "cursor": {
          "ref": "65b9fe57-0048-4302-8419-20074ffe9429",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bcb6076b-7caa-4f77-8a60-0d8c475045d9"
        },
        "item": {
          "id": "b5789a65-df03-4b50-854e-23cc06fc6c7f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f9379128-5107-425f-acea-e60b63e68e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52db0301-876d-4471-a22f-246fc351e49e",
        "cursor": {
          "ref": "9a5bfcd7-942c-4f89-bdd0-1ae1847aaf22",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2983a072-a198-4da8-8b81-000b71a2b1b1"
        },
        "item": {
          "id": "52db0301-876d-4471-a22f-246fc351e49e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c6ea9d16-4782-43f0-9195-3b90e2cc3d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d1a05a-cb1f-40fa-8da1-a55018543201",
        "cursor": {
          "ref": "a21aedde-135b-4d13-ae93-12e9b20019a5",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e4b582e8-4389-4e2f-9c6d-f066c3da5006"
        },
        "item": {
          "id": "49d1a05a-cb1f-40fa-8da1-a55018543201",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "954ea604-2556-4ce3-8990-9db04bcab790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df45750f-7c07-4455-a883-5edf9bc0b636",
        "cursor": {
          "ref": "4bbe3682-7453-4e59-8e6e-37a077a987c1",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cf21a07c-6e91-4d6e-bea0-1a3f8bae8bcb"
        },
        "item": {
          "id": "df45750f-7c07-4455-a883-5edf9bc0b636",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "feba1843-6b6a-4453-ac55-3bd71ee60bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82732e08-245f-4e1b-ad5c-d39b1fe2f154",
        "cursor": {
          "ref": "5a3342bc-67f4-4c01-8f42-27c29328b746",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0d459506-6174-40b1-a7ed-9a5791694de5"
        },
        "item": {
          "id": "82732e08-245f-4e1b-ad5c-d39b1fe2f154",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "79957ce4-5816-4ae9-9e23-3ccb5bff075e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de6cc36-4d13-4863-8930-bdf3fd12fac0",
        "cursor": {
          "ref": "d6654a01-abed-4e81-8bc4-2c08aa805ebf",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d077646a-2515-4343-b6da-edd8864a6793"
        },
        "item": {
          "id": "0de6cc36-4d13-4863-8930-bdf3fd12fac0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "17699c74-f44f-4ec8-b9a7-a5d4153d6c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ccbb6e-c464-4fe1-a3ff-b1a6b97e8fa5",
        "cursor": {
          "ref": "ef73d560-5caf-4370-929b-7bfb4bc0d6b1",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c8c3f288-c921-4d72-803c-edef1540e3b9"
        },
        "item": {
          "id": "d1ccbb6e-c464-4fe1-a3ff-b1a6b97e8fa5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dcb17951-7ad7-4b9c-916c-9a5058203915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21412ca-0e5d-46f8-b7aa-cfc34844e475",
        "cursor": {
          "ref": "8f703193-041e-4658-acae-c65fb037e755",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "69978174-b224-4a8c-af31-f1a2f3f4670d"
        },
        "item": {
          "id": "c21412ca-0e5d-46f8-b7aa-cfc34844e475",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "be7f9339-a017-41c8-ad2c-96f9dc5694bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4cbb3a-3221-4981-80e9-798a67228abc",
        "cursor": {
          "ref": "41c51d00-f3ce-4e7b-b4b4-2a5ae0a60ce9",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f73bf8c4-dfc5-40b6-bfb8-fd51c9f6f9e6"
        },
        "item": {
          "id": "6f4cbb3a-3221-4981-80e9-798a67228abc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5208001a-fece-4290-be69-8677200439a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceeac6c8-761d-41a0-9b3c-3f9aa0e16719",
        "cursor": {
          "ref": "50eb65f6-a851-47d3-baee-a04f0683ffb2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e14c8170-c0dd-429b-917a-854855890e42"
        },
        "item": {
          "id": "ceeac6c8-761d-41a0-9b3c-3f9aa0e16719",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "aaddf5e0-c589-44df-a0ce-c965df5cf3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f41dfe-4cac-45aa-8c64-3a4edd9794c0",
        "cursor": {
          "ref": "2fd08e66-1499-4a4b-9bed-7f95b2d0f722",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bc25ff3b-1f89-4c2b-bf43-a1b7b38cdcf0"
        },
        "item": {
          "id": "35f41dfe-4cac-45aa-8c64-3a4edd9794c0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6bca0cb7-d880-4db5-84fb-5dd2728aa583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197198f2-e4bf-4d9c-97b9-cc510a83b4b7",
        "cursor": {
          "ref": "c5d43205-7694-4ce3-bc62-e48578e927bf",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4cf84359-398c-4602-a5e0-be76dfaa90dc"
        },
        "item": {
          "id": "197198f2-e4bf-4d9c-97b9-cc510a83b4b7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e14a2634-10b0-40a9-982d-39d4250285ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ad36bb-2c0e-4957-9f5e-146e3b484c26",
        "cursor": {
          "ref": "2fe7fb3c-504d-40df-85e3-27ffe5cd7ba1",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8a374313-2142-4a83-b4a8-76a9739ee7af"
        },
        "item": {
          "id": "46ad36bb-2c0e-4957-9f5e-146e3b484c26",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "388e5d16-c1ae-4270-94dc-05b64c35e26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7729f397-5d6a-4047-a0c6-605ab4ce1a38",
        "cursor": {
          "ref": "9aa59ef2-e114-4cc8-a4e1-4483ea53e4fa",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4e4daea4-dcbe-4b06-aba1-d4e6c70e58db"
        },
        "item": {
          "id": "7729f397-5d6a-4047-a0c6-605ab4ce1a38",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cf8b6979-df18-4084-9bbe-4bdaa37600dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328e13c0-2739-4ed1-a462-1a4770c247be",
        "cursor": {
          "ref": "f1c0f795-237b-4034-a403-66eb378670b4",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "52aca73a-2800-43f3-aa6b-e1b444890897"
        },
        "item": {
          "id": "328e13c0-2739-4ed1-a462-1a4770c247be",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b4126ae2-c6d8-49f1-9ecd-286233611667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bbc785-f7ea-42f9-917b-a6989806c054",
        "cursor": {
          "ref": "cbb9b722-13e6-44da-a611-187160a11559",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "91ea2829-dcfa-49ab-9ea4-aa0dc10d6105"
        },
        "item": {
          "id": "f6bbc785-f7ea-42f9-917b-a6989806c054",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cef006a4-ade9-486c-a7b5-052342626a86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64884cc3-a504-40dc-99fb-9aaf93f25e28",
        "cursor": {
          "ref": "ec88b756-3e58-4f5f-bcb7-96f4f9bb000b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7cc506cd-06b2-45ed-a822-d1e087138aa5"
        },
        "item": {
          "id": "64884cc3-a504-40dc-99fb-9aaf93f25e28",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "74c96112-ed3a-4e13-94ad-85c396d2a3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4f4baa-cfc2-41dd-9da5-c47e15a088b2",
        "cursor": {
          "ref": "4f3e8692-a130-496b-85dc-4b6782d62c38",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2ffd8b9a-344d-44f5-813f-74463cec5c54"
        },
        "item": {
          "id": "ca4f4baa-cfc2-41dd-9da5-c47e15a088b2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e507ff8d-6a67-4ebb-aaf9-8019873c3d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdf4142-035a-468a-9528-16c43773e81d",
        "cursor": {
          "ref": "156ef696-74b5-4e8e-baa2-cf72ea4ff9eb",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "316ddf44-3d91-459f-a300-669d122286bc"
        },
        "item": {
          "id": "3fdf4142-035a-468a-9528-16c43773e81d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a17bbcfc-b41e-44e5-a414-2c89527d3a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553d9e1d-08d2-4282-a90c-06499661323b",
        "cursor": {
          "ref": "97cfd011-d6df-4b5e-adfa-8ad3783f5dbd",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "40dcd5ef-1e30-4ce9-9195-45d6afdba429"
        },
        "item": {
          "id": "553d9e1d-08d2-4282-a90c-06499661323b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5ecb0783-6dc2-4c1d-85e4-fe89d6e4a3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e39ab5-ab60-4ac4-bdf3-3e984f24f0e4",
        "cursor": {
          "ref": "b76f6f6a-5daa-400c-b896-354b8b39f60a",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d4175777-2dec-4086-a95f-6610cd9c409c"
        },
        "item": {
          "id": "f0e39ab5-ab60-4ac4-bdf3-3e984f24f0e4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8b9f68c9-6246-4962-9132-b0f5bed08b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335c9681-6394-4dd7-9ce1-1d2f96fad77b",
        "cursor": {
          "ref": "71c6ada0-6863-4042-883d-4660da672a23",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "eb1024f9-4aff-47ad-b2aa-e323ab8d22bd"
        },
        "item": {
          "id": "335c9681-6394-4dd7-9ce1-1d2f96fad77b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8cf8115d-76b5-4bc5-80aa-2a65d982b625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5395b4a-5507-4a90-a293-884a3458ef76",
        "cursor": {
          "ref": "e6033595-c485-4e60-896d-d731b3c84a4c",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f9ad02a5-0461-41aa-a3fb-c644625c5b58"
        },
        "item": {
          "id": "a5395b4a-5507-4a90-a293-884a3458ef76",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "59752dc4-cc46-4ea2-baf5-4316399ecc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde107f6-6d16-44f7-9d63-f18ff9d0daf7",
        "cursor": {
          "ref": "3203d885-8664-4fb2-a6cf-2c61d8516f51",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2604d5ca-b310-48fd-9244-32c76b3817c8"
        },
        "item": {
          "id": "cde107f6-6d16-44f7-9d63-f18ff9d0daf7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b5dd1a3a-7f15-488b-b124-94e04770f449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d4bb64-91b4-4f95-a968-32eea1708a67",
        "cursor": {
          "ref": "0f6c2b16-eedd-4c64-bd79-2bd430fd3714",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3087f849-8034-4ed3-a6c2-5634c34393d2"
        },
        "item": {
          "id": "52d4bb64-91b4-4f95-a968-32eea1708a67",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1ebcf00b-16f6-461e-b6e2-8bd8622b2997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2816d3-24b9-4ce0-83bd-8dce4f6cbbc3",
        "cursor": {
          "ref": "fb24d05b-4630-4cde-b579-5028884b9e24",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ec37c6de-632c-4227-b046-4eaf6f4e194d"
        },
        "item": {
          "id": "ef2816d3-24b9-4ce0-83bd-8dce4f6cbbc3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "daa74f21-4c45-4729-92a1-4b393f224e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879032ea-8d46-477f-8161-0a5369416cbe",
        "cursor": {
          "ref": "85983201-7e5d-4f7f-bc91-4c5dd06f6be9",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0b6cdef5-92e0-4849-8503-1023b10cc91a"
        },
        "item": {
          "id": "879032ea-8d46-477f-8161-0a5369416cbe",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1c4c3bca-88cf-4dbc-b870-d286a59d5fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dedc847-3d41-4d47-8cdf-9c91cab768d4",
        "cursor": {
          "ref": "254704db-18d9-4c4b-a78e-c336bd4bb7f9",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0305016a-d7f6-4a62-89d6-f315175a6b89"
        },
        "item": {
          "id": "8dedc847-3d41-4d47-8cdf-9c91cab768d4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f25ed912-329a-4c4f-910e-873973a7b3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d519b2d-355d-4c73-a0f3-888c29b38488",
        "cursor": {
          "ref": "76e56e99-ba11-452a-8cc4-2382eb9d3945",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1466771a-fd56-40bc-a9f8-fe0291b79f16"
        },
        "item": {
          "id": "6d519b2d-355d-4c73-a0f3-888c29b38488",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a71df965-ba27-4132-b8aa-fd86cd277b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd77982-5626-4441-9d79-4d8dc0ce6f45",
        "cursor": {
          "ref": "03b97931-afcc-4719-a952-07ab0728da5f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fa057ce9-df19-4712-8b34-2a969d5d1d8b"
        },
        "item": {
          "id": "2dd77982-5626-4441-9d79-4d8dc0ce6f45",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "830a8f7b-b43f-4d73-937c-6c0bd0db8f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfeb24f8-2ad7-4390-a19e-c59fb881a740",
        "cursor": {
          "ref": "d33293d2-b977-4654-837e-011d0fcbacdb",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "52896b17-9b08-4917-a374-bcfdf2e46fdb"
        },
        "item": {
          "id": "cfeb24f8-2ad7-4390-a19e-c59fb881a740",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f6569df7-81cb-4b1f-916a-efe8f67fbceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a908c63f-2c84-4ecc-8672-97e0d622ff20",
        "cursor": {
          "ref": "a68816cf-d870-42f2-94a4-63d9fdee9690",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1765a508-00da-426e-b910-865780e54772"
        },
        "item": {
          "id": "a908c63f-2c84-4ecc-8672-97e0d622ff20",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "84674129-60fe-419d-bb84-14f23d3c3b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b23d12a-cf1b-4293-9c72-1557bd3953f9",
        "cursor": {
          "ref": "f5959708-e476-48c2-a36c-11130d1879f5",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4e2270a6-c367-47f8-b315-4ef1c4dbace8"
        },
        "item": {
          "id": "4b23d12a-cf1b-4293-9c72-1557bd3953f9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f970ecd2-89be-429a-a017-7b98b7216956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92f2d51-16e1-4043-8d7a-675e78546463",
        "cursor": {
          "ref": "8d589575-3475-4547-94a9-3a8c978c7022",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4acdcb0f-b141-499d-871a-7811c93e7d33"
        },
        "item": {
          "id": "a92f2d51-16e1-4043-8d7a-675e78546463",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1c909398-1092-4e18-9e31-764b96d0b2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82477775-ad03-413d-a4d6-44e898179600",
        "cursor": {
          "ref": "ebc59d34-fcb1-4bfc-a1c5-79f8313f17d4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4fad0ebf-0b82-455e-bb79-9d070227e948"
        },
        "item": {
          "id": "82477775-ad03-413d-a4d6-44e898179600",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2fff5eec-315c-418e-af0e-e3bf82356716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9774119e-b32e-4f7a-9c70-560a1cbb9531",
        "cursor": {
          "ref": "04925633-d161-4c76-b3f0-04437685b5cf",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8531a5dc-387a-4656-9d1f-23f48983b755"
        },
        "item": {
          "id": "9774119e-b32e-4f7a-9c70-560a1cbb9531",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4146f88f-be6a-45f9-8322-9bfe16d7fa04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac40a714-c9a3-4556-b1fa-1f6449270c9d",
        "cursor": {
          "ref": "5414317d-55c7-4a36-ab76-da0161c7b9d9",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3a4accc6-da0a-4597-9c57-9ff59d2ac67c"
        },
        "item": {
          "id": "ac40a714-c9a3-4556-b1fa-1f6449270c9d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1d21b06d-2f3a-41bb-944e-c164233c1823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c956db8-aba0-43d2-8ecf-06093f87f365",
        "cursor": {
          "ref": "2533d45d-7805-4d3e-bc19-579d2297130e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "87bdb4e2-08d5-408a-96dd-3c3b31562e63"
        },
        "item": {
          "id": "8c956db8-aba0-43d2-8ecf-06093f87f365",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3d1d4b4f-dd1f-4f86-83d5-9f5e296a9a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca15aec6-c94e-4150-8ccc-174b71f36fdf",
        "cursor": {
          "ref": "e4ba0cdb-3729-4df2-b7b9-f4b45d01ff28",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ceef4499-e9de-4a91-8fac-9e6a2217fe2f"
        },
        "item": {
          "id": "ca15aec6-c94e-4150-8ccc-174b71f36fdf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e79095c9-9228-4f0b-83c7-f5f50be67a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7046e11-8759-4492-8de6-b6647c415bfa",
        "cursor": {
          "ref": "0d7bbeb6-ff2d-42eb-b842-2ee8ecd5ab5d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bf217d82-842e-46f6-8c73-0e357a8ebff7"
        },
        "item": {
          "id": "e7046e11-8759-4492-8de6-b6647c415bfa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e4d90bd8-4daf-4db4-ab24-fd7beb2088d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c1e7de-60b5-4c01-8f9a-b1d2387add6d",
        "cursor": {
          "ref": "5d4bd863-a5de-4627-a5cf-07cc68db37a0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1ae6a59f-2347-4b47-bf67-d25b06a6853f"
        },
        "item": {
          "id": "b7c1e7de-60b5-4c01-8f9a-b1d2387add6d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "473d2de7-1e8b-4b97-8358-4b09fd3536e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37afa07-0873-4f35-b80a-5ee40640529f",
        "cursor": {
          "ref": "35124ecf-9cf4-46e6-9854-10192a62d207",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "901a541e-c6ac-48a4-b534-7c62a540513f"
        },
        "item": {
          "id": "b37afa07-0873-4f35-b80a-5ee40640529f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5854ce09-4eb1-4aa3-9373-0d0904c70e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c076fc-edd4-423a-b37c-907708cb2cfc",
        "cursor": {
          "ref": "4b82b2f9-4d4f-4b51-9ab7-07ca185927db",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2309c00c-3df8-495e-8f5c-8f17ad0021c4"
        },
        "item": {
          "id": "93c076fc-edd4-423a-b37c-907708cb2cfc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5d3b502a-a5da-4860-8c81-7f354b1b464a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9020a5b-e19a-4a8a-b77c-d3db8ef81e87",
        "cursor": {
          "ref": "cd2bcf97-3ca4-44e3-b447-a926e8c1d50e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "942e5e9d-4b41-45bd-8c67-7d89e8018254"
        },
        "item": {
          "id": "b9020a5b-e19a-4a8a-b77c-d3db8ef81e87",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0a166d14-90ef-447c-bf59-e54a2a7c06c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8942e0-412d-4a16-aae4-bc2678c72fc3",
        "cursor": {
          "ref": "996b7b77-ae8d-4184-9d3c-c8ea34e71e2d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "77f41415-d93a-4062-9128-63192391b182"
        },
        "item": {
          "id": "1a8942e0-412d-4a16-aae4-bc2678c72fc3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6fa0ad61-886e-48f6-9bab-c48b655043ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655ef18d-2ff4-44ff-8028-7645dd09e6fa",
        "cursor": {
          "ref": "fbb78855-2a70-432c-bdcb-e0be424ef091",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "78143705-d30f-45dd-b571-8217c68be821"
        },
        "item": {
          "id": "655ef18d-2ff4-44ff-8028-7645dd09e6fa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7df0f8a0-e29c-4817-9315-a59f8bb6088f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdf3e59-d220-470d-aa15-619680d4f690",
        "cursor": {
          "ref": "8a8517be-c55b-4814-b58f-5cda8d1cbaf7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cf0d11ba-1efb-4eaf-af60-12e365cac165"
        },
        "item": {
          "id": "dcdf3e59-d220-470d-aa15-619680d4f690",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "47aea80a-a0b6-450f-b7eb-5ca3f9db6708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530f5a03-28b2-4ae4-9ec1-f04f8e429dc6",
        "cursor": {
          "ref": "ef74c534-13a9-4180-ab40-3c7f65d71f05",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8dd94b19-39c8-4338-b1b3-f4201e883850"
        },
        "item": {
          "id": "530f5a03-28b2-4ae4-9ec1-f04f8e429dc6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6081bbbc-4086-4720-af1b-c6cbfbdb5087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35737c9-7311-47ee-8308-7f3b28a54903",
        "cursor": {
          "ref": "12105562-38b5-4215-8b5c-550f9b6e322b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8aa9252a-2e63-4a85-9aa3-885fef97d381"
        },
        "item": {
          "id": "d35737c9-7311-47ee-8308-7f3b28a54903",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "648608a6-fc97-4ffe-b112-6b2d7d94813b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadba105-f87d-45ec-972b-3f488532afb1",
        "cursor": {
          "ref": "5f1a25b8-cc6b-452f-988b-074b8b1e9bac",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ce170a30-8c05-4ed9-b5fa-f582a56836e6"
        },
        "item": {
          "id": "aadba105-f87d-45ec-972b-3f488532afb1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c8f17595-8ae1-4099-95cd-613c684359c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e5f5f8-410d-457c-adf4-69775be65ab3",
        "cursor": {
          "ref": "bc114316-e6f7-44d0-b273-6ecc9c84f424",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "77cd2fb2-e2c4-4bde-a219-42996da7df8c"
        },
        "item": {
          "id": "11e5f5f8-410d-457c-adf4-69775be65ab3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "43d383e7-8e15-494e-b4e5-a351a6f4b654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189f8bb6-367d-43f2-9d40-8b7ef7e00caf",
        "cursor": {
          "ref": "8ddb0443-906f-4224-be7a-dd64af5c065a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6066b972-04fa-42a5-a61f-8136fe7c6aa2"
        },
        "item": {
          "id": "189f8bb6-367d-43f2-9d40-8b7ef7e00caf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0f986231-e3f3-4b52-a9a8-8158313c5292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76342db9-2177-45d8-b886-752bb6ac1a0f",
        "cursor": {
          "ref": "6725caf4-fc90-4062-b68d-f15bdd32b1e3",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "31d8bd97-76b0-4ea9-be84-84d9081b44e7"
        },
        "item": {
          "id": "76342db9-2177-45d8-b886-752bb6ac1a0f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "304e95ea-35b6-4542-8cfb-890896d7f141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5594b1-95e9-4fad-b23e-9bb9636492cc",
        "cursor": {
          "ref": "d7f64e5b-30db-464f-91ec-5fe1631548df",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2d0b9b64-2bbc-468c-a4e0-9a2e41ae8f01"
        },
        "item": {
          "id": "8c5594b1-95e9-4fad-b23e-9bb9636492cc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5eb37c44-eefd-41cc-932c-fff8e6d5face",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad45df66-5c29-4896-ba43-d8b6cb440811",
        "cursor": {
          "ref": "15a9eaf4-4a62-4865-91b6-94205a7e6c11",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "99420cef-07d7-420c-bc19-3b3afac776d2"
        },
        "item": {
          "id": "ad45df66-5c29-4896-ba43-d8b6cb440811",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2401d825-6daf-4f6f-9f4e-dd87019d6827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae1b9af-1519-4bec-9597-8f2e050b0010",
        "cursor": {
          "ref": "ed2f0b64-75ed-4c3d-80e3-b371f8cc29ff",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "17be2a13-71f6-44fc-a6f9-4e802d34d921"
        },
        "item": {
          "id": "dae1b9af-1519-4bec-9597-8f2e050b0010",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7a51bf59-6748-4872-a05d-852184ecfcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db7175e-cf77-494e-b657-3addc52a6100",
        "cursor": {
          "ref": "f3dba2e1-398f-4c97-95df-163f739c7fb8",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6f3a1590-6743-47f5-9f00-ab10ea99490b"
        },
        "item": {
          "id": "7db7175e-cf77-494e-b657-3addc52a6100",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "54191fc6-b813-4c55-967f-b2490bef0d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bba92cd-c8af-44a6-b3b9-1b1ce7a82fdd",
        "cursor": {
          "ref": "5fb47b81-9cd9-4f93-9242-d7f1887ad386",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "94dd94f9-7974-4069-9c8f-2e9df90b20bd"
        },
        "item": {
          "id": "8bba92cd-c8af-44a6-b3b9-1b1ce7a82fdd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8daacf5c-5bc8-4fce-a128-4d6162624562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbaef60-8d7b-4db9-9d01-17a4eebc4480",
        "cursor": {
          "ref": "8a587b68-2113-4613-8ba6-39d20aeca6e5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "655f374a-0ee5-47bc-8c52-fcb1f6057fb4"
        },
        "item": {
          "id": "efbaef60-8d7b-4db9-9d01-17a4eebc4480",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e397a752-5e49-4710-818f-399b81e86852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f81ceeb-7cdc-4181-a7f0-8c64d9b6e77b",
        "cursor": {
          "ref": "8fc82727-fc75-4a50-819b-8b91f1681a3c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "56e5d266-5f9c-490f-a0da-c719545cadd6"
        },
        "item": {
          "id": "8f81ceeb-7cdc-4181-a7f0-8c64d9b6e77b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "effe2e14-d585-4d2f-8fa0-89985ac68cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79926dc9-bc92-4812-8ed8-b66d1e317ce4",
        "cursor": {
          "ref": "03f028b4-0106-4622-9cd6-26f7ca48a84e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7f96659a-03e8-4503-82b5-f565036d4f54"
        },
        "item": {
          "id": "79926dc9-bc92-4812-8ed8-b66d1e317ce4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "92fc0384-052d-46d1-ab09-886b75e998d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e28293b-b743-4a48-bf63-3d30fbc6b556",
        "cursor": {
          "ref": "7161b471-b0e6-4414-b159-97cfd689da85",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c4e7281f-b8f2-4895-aedd-ad15b0cf5f93"
        },
        "item": {
          "id": "2e28293b-b743-4a48-bf63-3d30fbc6b556",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b4176b9c-b54a-415c-b5cd-c34b53bc6443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc95285f-a584-45f7-ae2e-7c98361f4fe2",
        "cursor": {
          "ref": "f78ae544-09ed-4699-b762-6a0a54a7f7f2",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "08f46d93-bc7c-41cc-8f7d-ec78124533ed"
        },
        "item": {
          "id": "cc95285f-a584-45f7-ae2e-7c98361f4fe2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a3dec60a-f254-477f-8f74-111776bad69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b5a023-32f1-4c2e-8cb0-f78fb5d7fa09",
        "cursor": {
          "ref": "19f1ad59-3bf3-4272-a350-7aafd05cb225",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e799c550-43fb-4f64-b8d4-220aee655dfd"
        },
        "item": {
          "id": "32b5a023-32f1-4c2e-8cb0-f78fb5d7fa09",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "abcc2a69-36e9-4157-95d0-0aae4340550c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a64085-c019-4f64-be28-259e39772d4f",
        "cursor": {
          "ref": "bf27e129-c076-41e3-a8d9-9a2eb42c4697",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "121dd02b-bf2d-48db-a417-7412cabf9cd9"
        },
        "item": {
          "id": "a1a64085-c019-4f64-be28-259e39772d4f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f7259b9a-c5d1-4699-a81a-f2fa487a4399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5830f4-bdb8-4a49-9851-aeb991eb21ca",
        "cursor": {
          "ref": "87541212-ccc1-43ff-97a6-a5b8c49178d3",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f528fa5d-f3ac-46ba-bfa2-ffc457d671d4"
        },
        "item": {
          "id": "6d5830f4-bdb8-4a49-9851-aeb991eb21ca",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "151914a7-c11f-458c-bd5c-eb4950e81df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b46db21-c9cf-480c-9df8-98768914ada2",
        "cursor": {
          "ref": "887864f1-a8f0-4fab-b2ad-e76efa683f01",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "92ac1430-b7ba-4068-aeac-05ad6d24b422"
        },
        "item": {
          "id": "4b46db21-c9cf-480c-9df8-98768914ada2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "06a2e79b-5a84-46b6-9b64-0b0d5acc75fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3760b03b-368b-48ac-8f31-c1ce04d808a3",
        "cursor": {
          "ref": "0baac74d-2112-46df-8c19-4985e3b031b6",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b4d408e4-5546-4747-ac99-f7f9695ed0f9"
        },
        "item": {
          "id": "3760b03b-368b-48ac-8f31-c1ce04d808a3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1a4bdc17-7053-46c3-8b8b-c0c9ee439921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5278be-bd66-44ab-94fb-b5dcfa567481",
        "cursor": {
          "ref": "a6376d05-6322-44d7-93fa-952e8d7519f3",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1df6e3de-2308-424d-84bd-abb828489480"
        },
        "item": {
          "id": "dc5278be-bd66-44ab-94fb-b5dcfa567481",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "897b83b0-b226-4731-88ca-0491c9c68377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57c3eb8-d434-48ee-89c0-c122ea850f02",
        "cursor": {
          "ref": "b7bcdd4c-9084-407f-9edb-3e864ea7c097",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c246585d-b226-44d2-9429-d74832c6d81d"
        },
        "item": {
          "id": "b57c3eb8-d434-48ee-89c0-c122ea850f02",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "30ca4cd8-ed2e-446c-a264-3ae57aabe448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6321bfd-2779-47f4-8a15-eb04f45c12d4",
        "cursor": {
          "ref": "1f442d8b-d8cb-4d60-9246-abd670716d96",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ca61f47a-883b-4c3c-9f82-a20eb9589dd2"
        },
        "item": {
          "id": "f6321bfd-2779-47f4-8a15-eb04f45c12d4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "95f48246-fd23-4132-a4be-824e69df762a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175d1498-ea55-4887-98ee-0c0dafba9522",
        "cursor": {
          "ref": "86bee637-1c1b-40a0-87cb-3bab9eca33d6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5ce9db85-b526-4efd-ae4b-0f949a8f0bdb"
        },
        "item": {
          "id": "175d1498-ea55-4887-98ee-0c0dafba9522",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d90dd938-33a7-49d6-ba38-963ee5a26816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62db5f5c-92ab-4b64-998b-54fa88421b5b",
        "cursor": {
          "ref": "c7bd809c-0c4b-469c-9c0b-431f727b0d28",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "58adca55-6ee4-44bd-b38f-f8fce1a293eb"
        },
        "item": {
          "id": "62db5f5c-92ab-4b64-998b-54fa88421b5b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6b1e6fb0-3d1a-40ca-923d-eef8fe4d708e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ab3a33-1aac-403c-85f2-59ac0a84f776",
        "cursor": {
          "ref": "b34d186c-2bca-429d-9099-e443570b4f92",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "874b75a0-9eed-4476-8fce-1630d762a9c8"
        },
        "item": {
          "id": "e7ab3a33-1aac-403c-85f2-59ac0a84f776",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e59becf2-c6b7-4717-9c99-6ab029cfa724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2125a087-c830-48d1-98c7-ac9dbc92ba09",
        "cursor": {
          "ref": "e5bb2da6-336f-46ad-876d-0b28dcffbe0f",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e2dc0b06-ae0a-475d-bc44-5fff9646a0a7"
        },
        "item": {
          "id": "2125a087-c830-48d1-98c7-ac9dbc92ba09",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c29c40db-c6dc-45e1-a32d-6cb308c3e40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c60cb92-92c4-4e4c-bea1-141b6720ecca",
        "cursor": {
          "ref": "d5132dd9-8766-4b04-8c18-f4923a2f3505",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "dc4bee67-e46d-4ec9-b444-f38288dc7ef2"
        },
        "item": {
          "id": "1c60cb92-92c4-4e4c-bea1-141b6720ecca",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "efa4c351-e31c-442e-a22e-f74b5f751f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886db81f-b3ae-4ee8-86b1-141ed0575baf",
        "cursor": {
          "ref": "94af2050-5d50-4d0b-be73-9b398613e6f5",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a652aa6f-782a-4d86-8e43-a2b36a96ef11"
        },
        "item": {
          "id": "886db81f-b3ae-4ee8-86b1-141ed0575baf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a1e0cc15-291a-4172-8f56-e35001b19549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0d146d-4e4e-4f8c-8844-68a3ac37f42d",
        "cursor": {
          "ref": "04bf57e3-dda4-4bae-9654-ec829aed0d90",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b7c01296-5787-4fc7-9c54-40bbf51f5e1a"
        },
        "item": {
          "id": "3d0d146d-4e4e-4f8c-8844-68a3ac37f42d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3189051d-6959-4c0e-b1dd-8aba2a9ff557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6852c7-2047-43eb-82e8-61866ce92099",
        "cursor": {
          "ref": "63f754f6-9783-40fb-a98d-0ce577c923d5",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4634b065-c381-4795-bfef-7c3a7e86c0db"
        },
        "item": {
          "id": "9f6852c7-2047-43eb-82e8-61866ce92099",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7030c6af-5fcd-4e65-95f8-bc06ea60049c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78f463b-dc80-40ca-888e-7e4497eac0dd",
        "cursor": {
          "ref": "600982d2-1a25-4d65-9392-41eb677644f5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1a9e5cf5-be2b-428a-892e-4b19011d74dd"
        },
        "item": {
          "id": "b78f463b-dc80-40ca-888e-7e4497eac0dd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "25115105-1f96-4b49-92bb-5a221d28bb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18afc2c8-605b-4634-946c-b7dba153a560",
        "cursor": {
          "ref": "22208aab-d0b9-4785-b258-74198534a81e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3ade774a-b447-4d1e-99ca-f4e000d9d7fd"
        },
        "item": {
          "id": "18afc2c8-605b-4634-946c-b7dba153a560",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "51253a10-3f4e-45cf-bbca-e64edab56407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09094512-aa37-4d5a-95d8-4e07554eaec4",
        "cursor": {
          "ref": "9239eb9f-0c26-4f6c-9e71-d5380a839931",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "29a2b616-2b56-4db1-8d93-4c805deb6066"
        },
        "item": {
          "id": "09094512-aa37-4d5a-95d8-4e07554eaec4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f1f3e1e4-9d5e-4bdf-95e0-19666e5129a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6ba2cc-0476-4040-a69b-d132a9d5b07b",
        "cursor": {
          "ref": "1098bcf6-ecc2-4fd8-a75c-d1624e9702f7",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c2157bc6-4d17-4659-a296-ff2352ad3ea4"
        },
        "item": {
          "id": "6d6ba2cc-0476-4040-a69b-d132a9d5b07b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1844cd8d-4dd0-428e-bfad-e108c737735e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27e9cee-5741-4144-affd-2895f3339ecc",
        "cursor": {
          "ref": "de66ae4f-92ce-402f-a223-44dc7ad956f8",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "838a6da6-f790-4a8a-918a-0c2d6253a0de"
        },
        "item": {
          "id": "f27e9cee-5741-4144-affd-2895f3339ecc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "620166be-93b4-4b16-b7bb-b2300950b7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddec7f0a-5db0-4871-b421-df346e429c11",
        "cursor": {
          "ref": "24f0f094-77af-4508-ae4f-f0dc19ff64b4",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "454c4f11-6ad6-443f-b3b7-787cf0be94c2"
        },
        "item": {
          "id": "ddec7f0a-5db0-4871-b421-df346e429c11",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "24b422e2-6335-43f3-8449-b1962e96725c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f802f1-3121-4286-b7ff-ce811ee7eaaf",
        "cursor": {
          "ref": "4f5c9f50-fe9a-45f8-a72d-4a4b4a6c44d5",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "af772a75-e565-45bc-8c33-fe99dc73f8d7"
        },
        "item": {
          "id": "43f802f1-3121-4286-b7ff-ce811ee7eaaf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f156583d-c23e-4199-b0dc-a259a3446f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741abb2e-9082-4ebf-8eb7-8b05c9f43818",
        "cursor": {
          "ref": "1966d291-9538-44b3-8561-d40a688dd8ba",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f56006f0-a99a-499a-bb19-cc6d967c98a3"
        },
        "item": {
          "id": "741abb2e-9082-4ebf-8eb7-8b05c9f43818",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "af1acb68-1dc8-4c33-88c4-9993a9bb2c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e44dd7-b83b-455c-bc1f-32dd61564c2e",
        "cursor": {
          "ref": "769c3a40-62e5-4cf3-8ba0-089943c116a8",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4b097c79-5dcd-4ad1-b177-0f525d9b3d77"
        },
        "item": {
          "id": "92e44dd7-b83b-455c-bc1f-32dd61564c2e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "10c2ce7f-aa4b-4412-9519-f7cbb03f0866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71742f59-094c-4691-a5d2-2504f597f520",
        "cursor": {
          "ref": "4d29125d-a296-4cab-ba3c-b8b7ad0c2f8a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "93bb65c3-aeb7-4abb-9de3-658ee47297f7"
        },
        "item": {
          "id": "71742f59-094c-4691-a5d2-2504f597f520",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ee95aa62-d651-438e-93df-143297419c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69240c9-c1fe-4a6f-8542-8e0237ec0227",
        "cursor": {
          "ref": "d1138457-ac34-42d9-8e35-575f043d4687",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "775fc883-da40-4ba6-8676-adb318ad3b15"
        },
        "item": {
          "id": "b69240c9-c1fe-4a6f-8542-8e0237ec0227",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b0c05666-3c92-4c1f-bee4-143e23be288b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d8dd41-e216-4571-b4c5-ff4daebe9ac2",
        "cursor": {
          "ref": "b6cb2004-5e90-4e66-b81f-6a7a9df8e209",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d92a8739-232d-4dfd-a0c9-df58146f2779"
        },
        "item": {
          "id": "34d8dd41-e216-4571-b4c5-ff4daebe9ac2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "90dde99a-6ba6-414a-b03d-c0d8f9c8fadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58475899-d736-43e9-a93c-a811290a9873",
        "cursor": {
          "ref": "84ac61de-1141-44ec-b5d7-3ff19475c494",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a73d06d5-d271-46f6-95b5-07e0901351fd"
        },
        "item": {
          "id": "58475899-d736-43e9-a93c-a811290a9873",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b320c09e-0b73-43e1-9820-15b123229998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cea039d-31ba-4d34-83d0-e7423bbb4482",
        "cursor": {
          "ref": "62bce53d-2354-4dfe-a240-feb7fac5b826",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "82832fcc-c3be-4eab-941c-f0dcbc81faf6"
        },
        "item": {
          "id": "6cea039d-31ba-4d34-83d0-e7423bbb4482",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7e751187-3391-480b-9a0d-4cf834927b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d7f6b2-4ad1-4dd9-a246-8e873186d236",
        "cursor": {
          "ref": "01a09a44-c899-49ab-ad14-a94df7c78677",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b89ccaa8-f9fe-409a-882d-5d3dc91b83c6"
        },
        "item": {
          "id": "07d7f6b2-4ad1-4dd9-a246-8e873186d236",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c069e2ef-0ad7-42d5-9114-8553045177b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71707430-bcca-427e-98c4-d4ae11d69e34",
        "cursor": {
          "ref": "09e42b0b-120a-4566-8bfd-b6917d1ba626",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2897e27e-f89e-4ea3-a90a-ca8eb8f55f6b"
        },
        "item": {
          "id": "71707430-bcca-427e-98c4-d4ae11d69e34",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0497d653-6f9f-4eed-9560-7fa78f14be4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084f80da-7b7c-4671-aad5-3b8a2feff1d6",
        "cursor": {
          "ref": "965a77a0-2209-4b54-9423-53dfa27664af",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c466e135-d7cb-4d8b-af8a-90377b66380e"
        },
        "item": {
          "id": "084f80da-7b7c-4671-aad5-3b8a2feff1d6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "244e7a7a-95d5-4221-9e1d-37b31b727064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6358b07f-ba4f-417d-af9f-09aa292f6f77",
        "cursor": {
          "ref": "87f4fba2-75f9-4367-a6b2-d67daa74f388",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cc0feaa4-1133-43c1-a6d3-f1552d05c715"
        },
        "item": {
          "id": "6358b07f-ba4f-417d-af9f-09aa292f6f77",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "caca38b3-c20b-44bc-9c60-a02a31537f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5c1b4a-cb64-40bd-b126-42af23c27da0",
        "cursor": {
          "ref": "27e932f8-06cf-4ae2-9831-e7d29dd27020",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e144d152-239b-4f3d-aa79-83d7683c69d9"
        },
        "item": {
          "id": "3f5c1b4a-cb64-40bd-b126-42af23c27da0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8e9d02c8-a74d-4fbe-8280-893b7133a880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c30562-45c9-4e07-a6e7-aedf000871e3",
        "cursor": {
          "ref": "531c7443-4764-4b6a-a124-e7211657f43c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "eff11d34-f033-40a8-9108-fbe29580c2a0"
        },
        "item": {
          "id": "80c30562-45c9-4e07-a6e7-aedf000871e3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "019e39d0-c39d-41d2-9aad-b87b0791dd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c942803-dbc5-4c3e-bf91-dc3083a264ae",
        "cursor": {
          "ref": "29a8c98a-3d22-4663-ad53-dcfb6fb30146",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "402ec22c-8f9c-42dc-8588-573c29d0cefc"
        },
        "item": {
          "id": "8c942803-dbc5-4c3e-bf91-dc3083a264ae",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bb422e69-2e8c-4ffe-8b18-bf14d25f6aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edac036a-6fb4-4e2b-a590-9ab2467db11d",
        "cursor": {
          "ref": "e3f266a7-0172-4e84-98dc-1c0b56c05a2a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "76d6e654-cc56-4d58-85bd-f863e5d33bf1"
        },
        "item": {
          "id": "edac036a-6fb4-4e2b-a590-9ab2467db11d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ce291d57-bc68-4be8-8917-44c2b313673e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70ea3d7-0ed8-4ea7-9b2f-912c9ff0b4da",
        "cursor": {
          "ref": "b0394a95-3da0-44cc-a086-244213018cf7",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2121c10e-2ad9-445d-9bfc-a6f4996a4858"
        },
        "item": {
          "id": "a70ea3d7-0ed8-4ea7-9b2f-912c9ff0b4da",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7daf6335-187b-4380-8b1f-0e980998d6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c493b3-09bd-43a9-9ce7-ffc5a03f1b39",
        "cursor": {
          "ref": "65927ed7-f5fd-49c2-809a-1d6fcfce8002",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f8d1ecb9-7447-452c-8a58-a21d0e0ab494"
        },
        "item": {
          "id": "26c493b3-09bd-43a9-9ce7-ffc5a03f1b39",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "30149800-1bcd-455d-85a5-513b5484e3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab8148e-9af9-4334-a2e7-0a0b320e8e8e",
        "cursor": {
          "ref": "f158a67c-c51b-4d8e-99c8-e3225e5ec58b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d844c41c-c7bf-4307-acf5-c69aa7181a0d"
        },
        "item": {
          "id": "1ab8148e-9af9-4334-a2e7-0a0b320e8e8e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6482e721-ac1c-4b5f-b6f5-0cbe682615ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6888fa7f-a5b5-4fdb-b39b-12ec58ca38cd",
        "cursor": {
          "ref": "bc69e595-7f31-47a5-a033-1cff96145794",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "79b55ce2-d8c0-4cd9-b73c-049741c9f521"
        },
        "item": {
          "id": "6888fa7f-a5b5-4fdb-b39b-12ec58ca38cd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7a65252a-9376-41ed-a86a-c6b1b7a869fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011c45cc-2779-461d-9463-3fb8bf0f2e5c",
        "cursor": {
          "ref": "8676ac28-0fdd-4455-a5f6-4de4f754cdd1",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "356ce8fd-1fd1-4878-8b6b-b184ebd9005e"
        },
        "item": {
          "id": "011c45cc-2779-461d-9463-3fb8bf0f2e5c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8c03b61c-b6fe-4f4b-b761-6455106d0dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a77a429-b718-4eed-811d-412f7f619b25",
        "cursor": {
          "ref": "a7a3face-0b73-461e-a1f2-b7cd28d6382e",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "07c26747-cf26-46f1-b1ce-29c7028ae5e6"
        },
        "item": {
          "id": "2a77a429-b718-4eed-811d-412f7f619b25",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1f35d90c-f96d-46c8-b802-0ccaef1d5c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a352733d-594f-446c-95e7-78b64d9c2e25",
        "cursor": {
          "ref": "2fcade0c-a644-4265-be8b-2f38d9bb68a3",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "53fe5b4f-c127-4f63-9eb4-cab11cf941f7"
        },
        "item": {
          "id": "a352733d-594f-446c-95e7-78b64d9c2e25",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "15a901b0-3caa-44c2-be73-a2bef1e6c42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5df975f-2ded-418a-a63f-d43f51031732",
        "cursor": {
          "ref": "16a913cc-44ec-4c18-b1f7-9f83a6a786e3",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7cd5ca34-c21b-4f66-971f-0b0f00defdaf"
        },
        "item": {
          "id": "a5df975f-2ded-418a-a63f-d43f51031732",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "627aa77b-6f8a-4963-ba57-97e09e3ec687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85930458-37da-4c31-a984-89d5912caaa1",
        "cursor": {
          "ref": "dfde7c60-1637-45f9-a9ff-536912f82c0d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4b6997b5-a0eb-42e8-8909-239795787863"
        },
        "item": {
          "id": "85930458-37da-4c31-a984-89d5912caaa1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1bd6db04-4e03-43c8-9025-9dde1ed12c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fce4f2-3b5c-4390-a5b3-babce3cf81f8",
        "cursor": {
          "ref": "11f096a4-04f8-4b20-ac4a-87cc49ae8f54",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2b29b6cf-292c-47d6-8112-6325bb27f94f"
        },
        "item": {
          "id": "f2fce4f2-3b5c-4390-a5b3-babce3cf81f8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "537f49fa-8299-4c21-9492-25909cc4fc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58f4012-e09a-4a02-b8cd-3d47ff7e9cd1",
        "cursor": {
          "ref": "9afebf8f-2f7f-4ee3-98ba-b4ed04b53c13",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "de1000c8-039b-4c27-afed-377e74d0c08a"
        },
        "item": {
          "id": "c58f4012-e09a-4a02-b8cd-3d47ff7e9cd1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "58f08f97-1d7b-4c3d-a0f3-dfea26731220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235959dd-1a75-4873-a37e-c1669f2cbf7b",
        "cursor": {
          "ref": "4a454d86-6ee2-4514-a11f-5e99c1251d3d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "08a93b8a-74c7-4e91-a111-7afe1e606320"
        },
        "item": {
          "id": "235959dd-1a75-4873-a37e-c1669f2cbf7b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d4dcdde1-65d5-4f22-8c42-66be302bcf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942d1b27-c297-4ef9-b9d2-afc18f4603eb",
        "cursor": {
          "ref": "d072e94d-51e7-417d-9a0c-c134f81f7507",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bebe8791-6675-4dbd-bf9b-7c9659bfad8a"
        },
        "item": {
          "id": "942d1b27-c297-4ef9-b9d2-afc18f4603eb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f06e96d9-c7a4-453a-b209-b2e9ef3c619d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661b2395-4340-4783-9e11-6b72713e52e8",
        "cursor": {
          "ref": "bf13e03b-8145-4358-98fe-e0d9a41fd04e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a820c639-e380-46c6-a614-5cc388e39540"
        },
        "item": {
          "id": "661b2395-4340-4783-9e11-6b72713e52e8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c5d4a7ba-7904-4f49-a1aa-c1c1b04de9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "197dba16-85d8-4100-84a4-7e313bf8f80a",
        "cursor": {
          "ref": "08e8ea70-0711-419a-a86f-b0c1ce137f31",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "163f377c-62d4-467f-b13c-ca17c36e2c91"
        },
        "item": {
          "id": "197dba16-85d8-4100-84a4-7e313bf8f80a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cc644507-f3c9-481b-a38d-a27a23dc2917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "68d2f09a-7378-43df-b8cb-2e31e0c70ff6",
        "cursor": {
          "ref": "1356d2c5-025a-4690-9849-8849c9744e0a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4a8b0cbb-d69c-46f0-a6a2-3e0f07c88d75"
        },
        "item": {
          "id": "68d2f09a-7378-43df-b8cb-2e31e0c70ff6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5b0a89e9-1da4-4be3-82af-eec25e1a0da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "14ac7204-a30f-4be4-a45f-fa922215187a",
        "cursor": {
          "ref": "da198e43-b6ac-474d-a262-d8087fbf7301",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1cd4864f-9feb-4fbe-95b9-42016a655328"
        },
        "item": {
          "id": "14ac7204-a30f-4be4-a45f-fa922215187a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "70f4798e-4b34-45de-8574-ddb8f5fe891f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ac7204-a30f-4be4-a45f-fa922215187a",
        "cursor": {
          "ref": "da198e43-b6ac-474d-a262-d8087fbf7301",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1cd4864f-9feb-4fbe-95b9-42016a655328"
        },
        "item": {
          "id": "14ac7204-a30f-4be4-a45f-fa922215187a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "70f4798e-4b34-45de-8574-ddb8f5fe891f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23acb21d-bfcf-4495-9ca1-666a9eecef47",
        "cursor": {
          "ref": "057d239b-f90a-439a-82ee-530a15c948d5",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f1ac6adb-16a5-40c5-a2ba-68ad6be60236"
        },
        "item": {
          "id": "23acb21d-bfcf-4495-9ca1-666a9eecef47",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f7ca6c45-cf95-4643-a6bb-71872e0b628f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345817ac-272c-440b-a15f-7e685554fa52",
        "cursor": {
          "ref": "4740522e-c11f-4e92-b191-59744bcc2a0b",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a919140b-2c05-49af-b930-7f9818804702"
        },
        "item": {
          "id": "345817ac-272c-440b-a15f-7e685554fa52",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "71b38cd2-eb61-47cd-9299-17ec8b2891ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}