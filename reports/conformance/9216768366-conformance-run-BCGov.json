{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "86d7bbbc-4dc2-4701-bf6e-1a2e0eadf763",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b8aca71e-4ee5-4fb6-b0d3-355570719c58",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c25ae527-c23f-41ff-9f1e-c83cdfb73ae0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5a1a8686-4347-4b85-8381-d6a193715e20"
                }
              }
            ]
          },
          {
            "id": "b8456e36-f43a-4a94-bdec-9290a4f5512a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e8fe062-de14-459c-b74c-dacfc39729d8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "69d604f0-d6ab-414f-b0b0-e0fc1d4ff9ab"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c8ec9292-a2b8-423d-b7f0-5f5ce1616437",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e80e41c0-2b1c-40be-bfa6-e155b0c9717b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8a138f9-6128-4bc4-bb26-ad85bb4636fa",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf2bc476-79e5-4503-8a69-45fd44958e94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d4cc3d2-1149-4ca7-ab31-34dfcc08d106"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0823364f-6ba2-4e49-91ee-6486be024b95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a7ca77d-036a-4857-aec8-02da0b186609"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8a136e3d-c20b-4810-818b-3fa6241ff75f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b746e186-c7df-4ccd-81c9-8e6f9808e83a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18a32614-afe0-423d-98dc-21d64b3f53ad",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "559c088c-c86e-42c1-90b5-6f49ddc4728e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e58045d-103c-4df4-958f-be0632b53e37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a80f8b0-883b-4dce-8df4-0d72dace58cc"
            }
          }
        ]
      },
      {
        "id": "bd699832-1ee0-4033-bf22-c6dfba3aeeca",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2b9d4d52-d91e-4c13-9d99-7db0f2b8c578",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8aef4bf-7f2d-4ca2-becc-5103cbefd695",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "900341ce-3c2e-4818-aca9-3f60e90d2100",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a90c3d-a96f-40e8-a911-c9b47ecb756f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36466f56-6f15-4302-a7f8-d22fe4405295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebd9a92-da28-4004-8332-4f7e4a2b2f94",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c026ea-8418-4c48-907c-72cfc3f97160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4def8b6e-9e2c-4b29-b8a3-8d3e81bdbac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a86ee5-7bc6-4a67-9c63-9452897196b2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b600a8-7608-4ed5-a226-4954192900f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c0ed14e-ccd7-4616-87ee-8691b0a4062c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d9fad8b6-c2bb-45b4-8a0d-a7a727157e66",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "815487f0-c63a-488f-a384-16c8ec269a2b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f6601f-188e-43c4-8215-a1a0e8b41dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b9583c2-828f-488b-8c30-edebeacc3d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896a08d7-2fca-44fa-978d-c2544e5efbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f337f04-c2d8-4b30-ae9f-8d8764accfb5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4fcba82a-713e-49f3-8bae-7399834978c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2583906e-4577-435c-8cf9-aee123f7256c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7efb607e-ba0e-4362-8e9f-2d10b665d4ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "780542e2-4a15-4fdd-87d0-0f03ee2ef607"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e401a0d7-d8b8-4b48-8570-6af6906de92e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "40046cf2-c07a-4447-bdbe-c7c435761806"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "768a7701-3304-4609-8bdb-8defaedca16c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e421f7e-fd19-4a7d-918a-582f652267a2"
            }
          }
        ]
      },
      {
        "id": "2ad9817e-64b9-4234-92cd-bd3d5889f09d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "464da6c7-1e7e-4488-a680-d89b84298e0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2863b9c-c08d-40d1-8d8d-85d1f2a2a086",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3ce62ed3-c234-4bb0-baba-82ba5541abed",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb14f103-455e-4e79-baa6-486244fdad13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30df6c1e-1869-46ec-a05e-c65ab808701f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ae30f7-d8fb-4ca1-9edc-5ca0c40bf506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad893c52-c186-4945-b912-45d683f55f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57804ade-6ebe-41d1-8b36-d49f425f205b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d696c67c-7e71-4ca7-8ae6-8829e03ee7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563b3da6-6dff-473f-b4fb-fdd50b8b0c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2243e3c3-849d-4971-8451-6f09944f23a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69d0f2fb-5510-4a9c-a6c5-9a5227d5bf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64ef8ee-66ce-40c9-9b28-c6559a87649e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c983e449-07be-4c0a-8318-c4cd08b9100d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf613b7-87ea-4f6b-a35b-cda98d507359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1285da-3a1b-408a-bf21-1e49ef551b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a7bae10-0a86-4440-b40c-2bc1b0f4e4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef0db56-9617-46be-8b48-86c594a3c7f3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b16d74-e8ed-433b-bcc9-9084adf006f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a28343-501d-43b1-acbb-33c6ac22937f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b388aa3c-2506-49b6-be7d-857f37907f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34199386-f4d8-431e-903b-32a2989d049a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a457279-5b24-4ecb-b7f1-64500c4637c4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b26eb0-0d42-4ef0-8aac-902024fa7f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0c0512-e2f5-4d01-bf97-42b7b9773d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a7b555-c399-4391-8dcc-451527dbdaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b826962-21e9-4a01-a4ef-556fdbf05659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7b9b6a-e6c7-407d-933e-e36b9af29add",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01de2ca-f1e4-426c-94b0-8ecd08de6c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f831d98c-50c1-44ba-a937-e8c526216577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2daab45-9e4d-4f77-beb9-b6542c875bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db1945ce-4476-4f31-b353-da57f5e4dddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd58229-cbef-47ad-8377-09f782cc11ea",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e35687-b13b-4e6a-ba50-f975337bbdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47654e47-3018-4876-aaae-1235b8024b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73bb6b7-3046-485a-bffa-6e3acb5beee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2c6a112-ac63-40b2-9f87-2bf5e1344795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69768ea8-0b17-49e2-8871-daa9e3fec334",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc100e01-a715-4457-9f67-790e282baaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f45db8e-1465-4c6d-9c47-422bf091bb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a9a0f0-b40e-4276-9bf5-4550b19eab69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08db9c62-c373-4460-8dd6-90403cebbd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7012fa6-af14-4d65-b9c2-0416c8b54439",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6efcde-02e0-4603-a75d-6941db0899ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5bfbf41-3df5-47df-baf4-fb8e3d63c1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f91c12-c7e4-44a1-a0a8-0e5fe90db351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "133ff67b-f075-48ed-9cd5-030f82674873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04fc175-842b-402e-87db-fcad9e9a4975",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520ee636-659e-475d-ba09-324a4df3f652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af17c69f-8a76-4189-87fb-fedef5a357f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb2db0c-4bf6-40d6-a6e2-38444f33a06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c73c4a04-c97e-42b3-94ec-a608e92a97c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c302e87-221f-4aef-9efb-edd7a523c155",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795d11d4-2ee0-4b60-af4e-05ec7210c220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae881c2-00ff-4ade-905e-8404095e9185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2910177a-9a3b-46a0-859e-1dd586800973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dca68236-bd1e-48a1-b3ef-35a691339a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ff5109-952a-461f-9ec5-3cbd34eb6ba6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d626a4c4-a43b-491a-ad02-7634dc2adfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea930eb7-f433-4997-ac7c-ad3e0af47110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493396b3-bee9-46f5-8957-e9ace2f1a50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a79c26c1-3649-4fab-9b5b-f26ef50161e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764f83aa-3370-4bdb-9f4f-96c4e6d5f5b8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b49913-a7f1-419a-ab5f-c03830e592a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896a4a7d-ca33-41c0-bb4b-77066e3b55ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae77232-1706-4c0b-ba33-9a88a19d0104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b5fea58-cc59-48dc-8a05-9ca33babeacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ce94ba-ec8f-4300-8ade-3bbf5c1ea964",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8481b14e-665b-4c8a-9c7e-5acb424b4020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b4a3d1-dc10-4ade-8cb2-27733463594d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6574fabe-fd7b-420a-989b-1dabbd21616c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13002155-c323-4828-b99c-d8f23b6aaeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92aa76a-72de-41c8-89ea-5aad359846d7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24400b5-bcd2-4fa2-9f2e-346d79b3f093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f6c9a8-364f-48c9-a6a6-341cea207e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2425322a-cdc1-4f7b-9f84-5d0e9a1101ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b0054af-a045-4e5f-b2f5-de34bf4efcbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72da2cf0-287b-478b-9e69-68535b8945d5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4c7923-caaa-4fd3-aacf-a133719170d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765cdba5-8847-4ee4-82eb-92aa46cba115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804a212a-b00d-492e-aadc-8f732c445e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cf53a0e-cd66-4d44-87f3-cf0b70389ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4078b000-76a4-48a9-81c6-0ad8e55dc734",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021f7b66-cb45-42ff-b02c-9c743c68eec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44e7d01-d3b4-4883-90c4-bf5cf34418a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f368777-a407-4eeb-a454-d1a1390f4b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17055923-d683-4d54-8536-5ab830f6303d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8fd3fe-5b46-4630-8af8-2a9ce6248e00",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a36c9f-4641-4ded-9872-166e309846fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a03fdd8-eac5-415f-aea1-282b77c33577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894d4929-407f-44c3-bd40-2ea019e13e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "20552515-1eb2-4155-81aa-b756c7937472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a77507-6cfe-4f33-b22d-ce601aac3ada",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ed42cc-754f-4b03-9e9b-3c7c766c910a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b2970f-d86f-49ea-9000-068f5e46a246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce4bb4b-e0d2-4293-b057-6c6c872c83f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8333cf9a-011b-43e0-ae7d-0b0ff7820fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b27e26-1b8f-44ca-b512-32d6e4676ffa",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f387621-c17f-461a-b88b-3b5a37a1b046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4013d5e5-4ddc-4b24-b015-f085aa8a9622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca45abd-db77-4409-aba9-7a87b7a20b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92fd9e57-0ac5-4426-8206-d295576d63f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49573814-e5fd-4e61-9d01-64fcfc1d2eae",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba5927f-9fe5-4190-8106-3c7bf722e382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c68e86c-038b-4294-9222-98d5cca3862c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0761505b-2599-4903-981f-4e71bec0816e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8876469-91ac-4f35-9245-61d83573d65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9f751c-10ad-4dad-8372-a65737b42570",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148f9dd3-377d-43a7-a008-d11b73012992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce10c77-5e2c-49ea-a109-56cf32075f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058cf33c-9c61-4578-b11a-54cd8d175b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "275d0645-2f42-4fa3-b5fa-e69337445129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e02d140-b4d2-4872-958e-9780dcb465d7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b284ed-17a4-45be-ba06-f3d19fb8d9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54ff7db-a5f6-4457-9509-897dda19030b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f679290f-34a0-479a-869b-6b3bdbf3e767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb366b7-b9aa-4c92-92f4-30673c83b9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9317d4dd-d594-49a8-aea2-52b8ab6a1856",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b20f406-925e-446a-88ea-0acb82218029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00bc4283-afb0-42a8-a6c1-a9929c2ad99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6c0f57-b691-4f15-b819-f272d53fef19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b976502-7060-4b35-a688-bc317bd042d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ed8c55-40c3-40a2-afe5-d6d92987f8c7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2d319c-4e41-48c2-b56a-c27315218834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea159b4-a9af-4eec-bb55-e992a4eda545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a493bc9-08ea-4a89-a8b5-1ddc09ea21cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8786ceb6-6f4d-415d-9a14-e4078182a18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05d5138-2881-46a0-ac38-33ead2787d36",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f18677c-79c8-4ab2-8cbc-7abd04cf054b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ed1952-6260-4480-a401-1e9cc710762b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857f5c62-5966-477c-98bb-2d96179686d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4934f433-f6ef-4e87-80f3-2adc99e25693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c09dde7-ff15-490f-b5c5-56a9c5271156",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ab1d05-6a8d-480b-8811-0e64f0797d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72109603-1e22-477d-99a5-053c93203a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff417e6e-2fb9-420b-8cd3-988f21548a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3712d4-629d-4950-b2dd-b20536e4cf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2925fe5-5c06-4c08-bda2-de96f65f5b39",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f2f9f9-07c6-46fb-bfe9-c3fe8660057a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276cfd82-cd9c-4702-87aa-9530ab39086e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f143abac-137e-41ae-a238-a47e3646e9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1133ecb-d8fa-4628-9183-6c147ab8b79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4595175c-1596-4a20-9957-82a726ddf2c9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafa3ca7-a6ab-4798-a150-b2c02d848588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067bd902-14d2-4180-a801-3adb5a53aa90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0821d3-6002-4afe-838c-27c92b615d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed00e532-42e8-4cf3-8516-ea810b30d8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc61f7e-71cf-484e-ac29-0dccdc24bfe3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658ecb0d-290b-4619-aa7c-80a8b9a2c094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4916c17-a5ae-4863-a223-5f7062bfa5fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f310a20c-906f-4fe7-a218-474640ed86e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c898bfb7-1659-46c8-87cb-ad706c6645a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceeb1cab-e0e1-4179-bfa5-3316d0420dcf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8ba7a4-cd9a-47f0-9e71-0077128970f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca532f1e-4f5c-4c45-88b3-c8505e888632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f5f2d3-8e70-4a80-ab99-a6e5eaac1f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41887bf7-ce4b-46ae-b0c4-7513817b2d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a6f7e7-d244-4a9a-9aed-1a91fdb46151",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc578fa-17b9-4906-bed0-0b17f9724455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d4200b-b645-4649-8c23-bb7633a9965d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f74752-0bfc-49ce-8800-0bfc3d4f7ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77dbd769-a4b8-46d0-954b-c051001c1db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a176b5f3-3541-4071-846e-0b4f2dca1f58",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943c7075-185e-442a-98cf-a0292894b457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2758987-e09b-4395-a52e-04a5d704691c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e17ccf1-14c2-425b-9ab4-46afab23bcf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa597078-ded7-4eb2-b4be-01c56452c5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a854f9-615a-475f-b100-aded3d24d4bf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dff9f85-4702-487d-8e13-2537461c0539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e52977-4ded-42db-a0f8-9ca0647a9dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b43917-2868-429f-a7c8-1ee67df403d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0672f052-ecda-4651-946c-7d55404d2c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b165802b-754d-4a77-9016-f443ce0862da",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e977e715-3aa1-4b4c-a080-9cecaf3b06be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b2c0c9-6432-4ce3-9504-517a46993d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecefbb53-82d5-4e7e-8940-e2b06e6d8893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c744a5-c2f4-4ec6-bba6-deadfb001a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad3426b-7c1b-4185-a947-191d267bdfd9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8f80bd-6d20-4bbd-9f65-717c5e80685e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f49b7e6f-3087-4d12-97e7-ccb844f77c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d54f5c4-6b0c-4888-9bf3-9e7917cd36ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cffe34-a389-425d-9223-db6c28ff1874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ed1dbc-a06f-483d-8bfb-6b80717b4678",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7d60be-6dff-4413-bac6-e4c739f131fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9421e1f9-0a3f-4b9b-a337-97aa2ab6ecc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92df795e-f203-405c-9cfb-3447ef49dc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "716a3898-468a-421c-8ba2-4b3357d4e1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d918f7-54fa-49f4-b7c3-faa4a4222820",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37105723-ecc3-410b-9d2c-6490f0682a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69591a3c-047a-4001-ad1c-f26a753f3992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fd96cf-787f-4349-bbb7-3445267b40ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe4825c-ee68-4ac8-b0be-d9f87011f297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffec46d8-c7c1-4855-a633-104992e10f26",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c96f58b-0d86-470a-aed1-94251352e757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a27c60a-86b0-4d3f-9a63-f1ead84b2fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dcfe3d-827f-46f7-9e17-2e87d85c629f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "76a0a915-15ff-4fed-8440-ee9e7911a62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192d002d-07c4-449c-9039-14af72640e50",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97af84b-3a63-4628-8af7-e5e3679610bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01293f90-7367-4560-a642-8e2a8df4b342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffb7bdd-5bf7-43c7-af36-99b894f23432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c37f572f-0e1a-4cac-8514-5bed62495cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5fc098-b279-4774-96e6-766f4d737fb1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a309e7-f9c5-4f50-b204-6e468108d610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c837e30e-88f0-4d09-b023-b8bc38a039c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1732fb4-f332-41e3-b3cd-59ed4c6eaeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d431370-34b5-4053-9299-9ce65c6de7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33de0629-b352-49db-9e17-2608b5ea1e1f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fe628b-c1c5-4955-9125-1ac952729833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64f1e7a-025d-49f3-b12e-a0e33de77c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2179e93-8eb0-4c8a-9d20-1cbcd2091130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe35f7e-6980-44cf-85e7-ea6fa2d688e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f7daa9-a782-415d-93d2-e11c416a5e92",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2cc137-7ddd-4749-ae55-e3a9bd28e501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbe0d17-afa0-4494-96b7-a353491a58be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1507219-427d-4463-9011-5d1352be0882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d712a0f-5d97-40fd-a96c-09bcd1cfd745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4957ba0b-798a-4889-8f35-4b55557cb052",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0a8dba-2544-4678-a881-4d158fe42b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a2e600-4cd8-44f7-bd7f-1589ae139d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aac289f-2755-4c14-8720-f8c8e859a59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce70c830-f9fc-466b-82fe-cbe2daada85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30825cb0-0994-4254-b19a-a13bbf7ee66e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19082c11-9f65-497e-9848-c812f61fa34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0419f4b9-bf99-4051-b360-5be7c5fac482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a604e7-2b84-4db8-b387-4d02425328ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f6e1e9-8960-4685-b5f5-30d710a132cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9270d5-4f27-4846-974c-437acc2db261",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fd990b-5722-424b-9be0-7d3bd741f375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fd052b-d6c7-43eb-89f5-15b2b99497cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ef5e80-c7b8-4866-9e9f-a428712d46b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b583b0b9-7bcf-452c-bd0c-39f1b4b5836e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8c56dc-88e5-46fa-8783-20f77b23752e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07232797-92ae-453d-b60c-fe1f8c9a95b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae903335-88c9-490f-a81c-e364939f103d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a143d87-5f70-4c39-ab16-b4e1524d6998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8803486f-a236-41a6-a57d-d27582b230ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d73e200-2fcf-49fc-a191-4fc1b37cbd23",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844fb558-0483-4bf0-827e-c07b2ba07d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22cb9d8-cbbc-4038-8a94-65d8ab38b8fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5099084a-6b48-4fe2-9f07-61789a2f1746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "484bd146-ffad-4d47-b24e-afa1d54d088a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85cbd8e-05fd-4a61-9194-43d8c23d3719",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0439a47e-51aa-43cb-bb5a-cda390e492a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3910eb2-eff9-4bb7-9a21-5998dc38a3b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8e2dbe-0544-4f7a-b0a3-2376a3770797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d54a9a-c35f-4cf4-b927-409708800f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b6a50f-99c1-437e-80d1-965aed36d6a6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9148eb0a-787f-4fd5-976a-2c2719ab367a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a8b606-6960-443e-b027-cea6b75fa7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68a9840-0c49-4eab-ae23-0827ec5a9f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdb9c1c-6977-46ac-b768-d37b145a3b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ddf6b7-1ef2-46ec-a1f9-0bee67f9f954",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73177694-2fde-4466-be43-4a14a07f455f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbbba95-0485-443c-acae-82e09148f90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1a7be9-0b83-4963-a679-8ff1775b1039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0457dfb-bec3-4470-9c6a-09746b756354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d3d4fd-1aec-49de-b2cf-35c8390221dd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa9157c-f069-4a1d-b972-e8721b3501fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ff2bc4-07b2-425a-a826-03305b05e086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0595880a-e302-483f-bfb4-9703696152c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26da301e-3502-48e0-a12e-c37deb82f183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92e1f5a-0f85-45a7-b7a8-49603ba663c8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022b29dd-24b6-4bd7-9d22-b277ac5f4022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4e27d4-4365-4b59-b4f3-a290f3077cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20a4b2e-4c72-4939-8a8f-b8d1274c79a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32ca7a57-5a65-486c-9979-edccf415adb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b396def7-eb2f-459b-b7cc-a78595040f84",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3169d2-f127-4bc0-b47c-fdae134d54ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61822b2c-61e0-4e13-b066-b3fdb90c4b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8431b607-0c37-4bc5-8610-3e47a0032e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8b3e2b-e9f4-47d9-9cef-22a5177a9c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49811916-3ec0-498f-80e4-fa6b57d24171",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76147a1b-ad5b-40b0-a783-e6cf85141a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a82b29-578e-4d37-bd89-8ed49600700f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3eef9cc-06d6-4f31-9918-7fee8f8f7e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b965b06-e7ee-41a1-9587-ef8dcfbdb594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04efe68-ad5f-455c-ab2f-7b1cc6f3edc4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cfc1aa-8c14-4156-addd-0dd1f929a8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1c2460-17bd-4ee0-a047-22ac70b52be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f270c2-2061-4dfe-b7fb-d4360b3cfe6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "49c2a003-e1f4-49d0-9d26-5859359385ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de985a2c-a618-4b9a-92c9-559f0c786d9b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783fad36-44a5-4ceb-9f30-a19b9ef1e88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416548df-5fab-4994-8d70-188932e6bbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7ea66e-d58d-420a-afba-11821243dfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c391d8-2318-4aaa-ad97-1ce1c63dbfeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3c2f62-2bee-4ec6-9258-7fff0027454a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1632078e-14bb-46e9-881b-b81ab911fd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa93580f-c912-4a9c-8cd1-591a39f297a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc55832-41a7-4a97-9e72-f6c97157290f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "94763608-943b-46c8-8a1d-dcc7181212b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644977d3-cc99-494e-990d-35385411e392",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0244e24d-0efb-4824-ab25-7e5e1b9d9a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850acfca-3181-4271-9867-4568d09cd864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4fc7c6-6191-4bc4-aa0e-7d1abd116168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "97ad2a52-a0bb-4236-b32a-8fa1302aed1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f588e25-dc0b-44a1-bb10-d5f4ce93187a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3fbf7c-619e-421e-afa3-601a9b29567e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62543332-9ce7-43a7-b837-674075b2fe48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd87a658-8ef0-49d7-a8f6-2679cb403bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "374b779f-9bff-4296-8fc9-9b52c1375ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a3da78-15f2-489e-8898-46ea70a935a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8f9bf2-aaf1-455b-9df0-91f90324a4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ae39fe-bf1b-4784-8f5b-9ae1d2be75ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069f3ecb-e83a-4ea3-a723-c5d42c52adf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "009608c6-f01b-4282-8699-e9cf47f3d728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b60515-017f-45b2-8ea1-f5114b3ddb2f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0e29e4-9121-4723-b13f-77c0332fa4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a697b14-1089-47d1-8ac3-87fd8fdd4886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f989a531-ef61-4d4e-acb9-d8900ce23a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd58addc-9439-455c-a410-a7ff6f58296c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c97811-64aa-4d0c-be00-07a19d360349",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce54e696-9a06-48ce-8a59-ffb471e41b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e228a81-5ffb-49eb-b8f9-1d5b9770fcab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bb0fd1-9e33-416e-bdc7-1573023fa4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9c2444-13e0-4816-8271-fca258dfd16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b78315-f7a0-4802-9e94-6bd70b788e1f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24db48d7-b6d7-4576-ba5a-a241fd939321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d333696b-de2a-4838-adb3-0fb995d2e1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6c2b3b-7610-4ccd-b204-83a9100b7632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "090871fd-0ad1-4cba-ac2b-73bcf93cfc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25088d65-579a-4e71-9090-6eabeb6ab314",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279b3b96-617f-4b59-91ea-24268c0dc154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de18feb9-dff0-43a4-8582-1ff5a0dfca11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f060b9af-55de-44dc-b0a2-ab085adfa60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff964449-77d2-4813-ae91-1694fc4e67e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cecc3a4-92c2-4a17-9d07-82829181ded0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffc55e2-25b1-4f0a-9e30-492bc39f7d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f7d16f-269d-449d-a468-816b0e3ab955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480eb10b-a064-4a19-a714-bad3fd126dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38f5ec14-3a8c-444d-a00d-03054cb9db0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967b5d93-597e-42fa-880c-a0f31ded3bf9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6a722c-eeeb-4b58-a750-a453894b84da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28b8673-b39c-40f6-89ef-176a67f427dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85f1416-93ab-4c5b-aba1-58e2e9557de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12286f59-6e83-4e51-8309-989e45c01f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41bce5a-7b38-4cf6-b7b1-247a2efb785b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2365463e-1de0-4967-8bd4-09297b5bffdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebac5351-ce54-4e39-b4e4-0995ae355ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a978732-865b-4b32-87f2-b2750dcb6c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c04e7c2-fea7-46aa-878a-592011d49ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7db94f9-614e-4aba-b1f9-273571677459",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b49fdd-b131-4b5f-b7c4-961c14e56cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a6b2d8-28d9-49bf-be01-3695dbe45cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b609a8-e8ab-4e44-92f9-a3ebee756906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8190a8b6-44da-4cc9-914f-18600b4ef497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7c49a5-efdb-4f6d-a213-f8eaf2c0a4d6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405353f7-06c3-45cd-b745-100c0b769618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd334c84-9a6f-408c-a454-939adaaab0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2016bd-2705-46ea-89c9-dd36ad442538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03472364-fd76-46a2-a8db-77c0349408bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9623770-389b-47b1-94c3-80efa32dfa5c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7218b187-5c38-47cc-91cb-c4136f5d2276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fed278b-cecf-403d-b398-1daabc397c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fcd873-a801-4149-89f4-59cd44dd46af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2900e303-70d1-49e8-b1d6-d3e5af4364ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e59eac5-1e98-4b46-b08f-354726d76dd3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf861b9-bccf-46ec-a391-d05cc2f63ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead8effa-b12d-46c6-a539-e042bdcc133b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c34aff5-52c6-438b-abae-1e58c0eeeefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6cd69be-c4b3-467b-8466-8aa65866bc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed83a9c4-8b2d-4e66-aa02-fd440ce3ebb4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3fade1-14fb-4a5f-9c3f-936150462cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274f3c27-8b38-4ade-a0d1-17b2ccc756d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaa3314-21f0-4003-ace5-e78676f7eefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d359a691-7acb-4899-acae-253ffb420286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f2d3b5-573d-4065-9b0c-fb93fb2267ad",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0945ad1-6067-4cb0-b348-a75fdca82387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d524298-ca12-4263-885d-01e3b17f2f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ffc28d-71e3-42ab-b0e5-a069302e71d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc5b820-0b5c-4400-9ad0-3c25eb9224b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d81bfbe-ced5-4fd8-b73e-3bc406653ab1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096b1c88-d6c4-4808-ab1a-946259b7d584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29fef6b-497d-44c9-8263-86f590b69aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd15cab-d323-49f8-90f8-c3072073a39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a7495f-48df-49a7-b82c-29940608fdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43aa7f4d-e926-473e-8c21-e2428e707db6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf17d82d-e73e-4287-b952-75faa11a21a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb59bb6f-1e51-49f8-be61-2edee98058ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a68073b-71e9-4f58-9798-19a94da279db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb39b39-9576-4c15-a640-0bedc3f1d4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdb7fd3-1638-483c-a6b4-f82e27a473ff",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ced4eb0-2538-443f-ae3d-b19c3a450264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b0b877-da93-42df-810c-e6fb76eab964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018bc3c9-55a0-402b-b6a4-54cd40636d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9286151d-9eb8-415e-84fd-2cdd1f9e923d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ae4795-b023-425d-acf4-04ba25a508fa",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995a5ac2-2796-450d-8b3c-0f13bf83db5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1330fd-64b2-448b-8f91-54b83ba66ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e6b7ad-3a57-48d7-a2db-92503cb8a0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0de797-a198-41cf-9b4c-ed6a50fe3887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4dad8da-ab7a-45f1-ba38-fa4c33fc6f2e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fe9b50-526d-4828-88ed-5ec5997156ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e8d8e5-e88f-4a2c-b91c-27113ea1e105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2982a8-99a3-4c15-a4bf-eddb0dc28cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12190b6c-889b-4b9a-83e5-89611f9cfa95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83a96be-f26d-48ae-98d2-a306a38c1112",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eaca5f8-e407-4d73-a863-e859003c99ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50c42f6-09ec-4631-a94a-a7b300233ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2770154d-5bd6-4825-8017-f8772b896ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcc76d2-4496-4fce-8167-721c3d108c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9a281d-67fc-4df0-8269-5e947c5a5a3c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553e35e6-e61d-4c4d-8730-285ef75ae302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c68988-4dd2-4faf-9d2a-e59213d2da05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc01759-6114-4331-91a4-0a500c67a2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2214d39b-0be6-47ef-9109-29d5c33e122b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e642ef17-efa2-4b41-b781-52297f11fbdb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad313a2e-6598-4113-92ce-3c5a91bd265a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c35c55-88c1-4a73-8fae-8d8624c06d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dca44a-84d8-44eb-9e6b-696efc95a064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22e21fca-d804-4902-b392-3f600d075331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18f5a3d-05f5-45d9-8ebb-d3141d663f28",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c90b7db-1376-4b63-b5d2-94412ec8bd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76d4eae-2dd8-485e-b385-a7b4359f560e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119bdb00-cef0-4912-9a26-17ddcc41fb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9a4f82-d1a4-45a1-b652-179f85cc1be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac835c7-41b4-40b3-9e3f-8ddbca7c0adf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cae8ad-4500-4724-8ed4-379ca4dd51b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27037562-993c-4ecc-81a2-05e01c1859df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f01ba5-3dc2-41dc-8e0f-575e0f100118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89789014-eb45-421f-83cb-8ce7a2237c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bbba84-a8ed-49ca-970b-9116d2b8bdd1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d0f527-3aed-4e96-9d6d-6673c910764a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1926d1-8a90-4123-8266-e41c0d6ffb59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0738f29d-c600-41f3-8346-cb86b96f2f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd125df9-1076-40aa-abd2-790533c071be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a8d38a-15bf-479f-b548-fa31bd4efaa6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6169b2e-2b9c-4877-aff8-19c74e25640f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a30187-23e5-44c9-89e4-ebee505a754e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1e623a-5bf0-41b6-8608-d02ed2764978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "166a9448-92c8-4290-84c8-23d9742a1a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88807cd9-f6d6-4542-89ec-7a31023607a2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d370c92a-f3e4-4fef-b334-189740aad8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26666ce-2a55-49ee-a878-bf0476ae966a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b273bd-4427-433d-ab96-f30385b772f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "08395cde-ce0b-46f2-9b88-fe1c84533c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e411e20-82fb-41de-a3ee-56c037734efc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199cc251-f89a-4999-90ce-5d69ba32841e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb0e0cf-fab1-4a62-a717-0f47b4704ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8402cc3a-e7ce-469d-9ab8-7f17e4aa5901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "49f03671-8ef9-4a59-9419-58221333b767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8089838-33d5-48b6-8166-c33f913d2753",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935b189b-249e-43f3-8f97-bf52b5585da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d33a4b4-12bf-496e-8219-f28235e14c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb41698-94a2-46ed-9872-f5b65d9224ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "03abe365-54f7-440d-8728-ea478ab694cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803d2d44-70cc-4d1e-bdfa-6679a70d2ee5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5431f406-7ff0-4845-aa95-3538cbe70d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf00d452-0c68-40a3-81e8-f11f9896efca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd72d0c-11b8-48da-83b8-3b457636bc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b28650d-e35c-432c-ab4e-a80d90624c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d66e40a-3c3f-4071-9d77-19c628ab2eae",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0e1590-a40b-4d04-894b-d8960a56cd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae7b10f-c0f4-42cd-8716-d50165274abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6761839c-d0fb-4521-9248-efae803d0a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "188af783-0d4a-4fc6-a1ab-8fe18d6da3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca57b229-30a2-4a12-a8b2-4f9c69d3de47",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19e9165-2771-451f-9152-10c28993f531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b1b6146c-ef7b-4103-909a-f132312cf9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f607c1-8080-4f80-85f6-070c5d6418c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "132714b1-9232-4770-bdcf-0101a4b5fcae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "00a596ef-55fc-433d-994c-4afdb7e59667",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f06fa856-4559-4106-8b3d-5ae5bce5b036",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3e52df-db4f-4ebd-bcb1-72f19c1a32f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ff8f4e3-bd7a-42cf-bf1e-631d502b750b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cebb355-eab4-4b71-bf41-1115bfb782fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9d09ff5-4750-4f8d-9d0c-6c7e4b8f4b80"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71dce5ef-2189-42e9-8ce2-4c0c1b770c86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "624aa63e-4ddd-4ebd-ba9c-65663b097a5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d319683c-8659-4ff4-b0c7-7661e45cfaeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c408a6b-346b-43f7-972c-68312289b913"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0fcfd8d2-6355-421d-b739-611216495606",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd945efb-dd49-46db-b3d3-b024793528de"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "39c26188-a420-47fe-a394-5fbf3d8303fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "017a2367-8e62-4d50-a3c0-e81f9211ae7c"
                }
              }
            ]
          },
          {
            "id": "4865758f-bf34-4c34-b7e2-b811e001cbd3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5244264c-9a8d-468c-8b4d-8ffb6ff183a2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a7bea940-b42a-437d-8e57-ef46a86b157c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d458d28d-0f3e-4209-b409-5ef9bcdc59ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ef5dfcc1-7016-4996-aedd-ad9b1d96d98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be0a440-54aa-408c-b4e8-6c8893ee9051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b582924a-da02-4bcc-a6e8-7e0e6ee5bad9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bbc9b888-8d25-4627-9d65-74731b3dce3f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f719fead-853d-4af7-aa58-e2575e47e9ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b29a38c-08c3-422a-a91f-41ec32fe63b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6291e51d-a2f5-4c11-85f8-0b87676f8229",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b918e9d0-31a3-490d-a43f-d860f3ea7e8d"
                    }
                  }
                ]
              },
              {
                "id": "7fde5953-ddcf-4c51-8e0b-16978679fa73",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47998417-5552-408c-a82e-4e51ed669e9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06a29cb3-720e-4b4d-8598-a312a8deb0f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e5d73e1-1663-43cd-a48c-b1cbf419a4f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3cf468a8-e72f-468a-8980-f9453702523c"
                    }
                  }
                ]
              },
              {
                "id": "b854a276-0abb-4162-929a-e3ca9faaab1e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1e9ea4a-8661-4131-b326-0b3b9d5c48ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40ef0dfe-f6f7-4f4b-ae3a-53044410820c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fb6ba41-d35e-47eb-a3b9-560de5010cc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e24e4015-c041-4a5e-82e3-5d558d3c4f51"
                    }
                  }
                ]
              },
              {
                "id": "9d82bb2a-e28c-41ea-89c0-4505a3327f42",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1b19a71-2fae-4ab1-a2e0-e200640a89fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c88aa2f0-7ac6-4f6f-976c-4ebb63de5ac1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebf3e621-7037-461c-b696-fcc41f37f588",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "427b44d9-b8ac-405d-8414-ba43b54fe8cb"
                    }
                  }
                ]
              },
              {
                "id": "3909bce1-b6d0-4f2e-b432-ec49388ab219",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "294ed3be-477a-4709-9054-9d669e0c2e85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4bd6447b-d342-4ce7-9526-d574f16df555"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3254a23c-006f-4c09-bbe8-8238b6cdbd30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6207403b-a225-404b-a7b5-fd9326ff9ea2"
                    }
                  }
                ]
              },
              {
                "id": "94e9c31d-e8c9-46fb-817a-150200b5fb1a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97bd9fbe-5195-412f-9bf0-875f4b493d57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c1e3b12-0341-437b-862d-200aeed4992e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25b4f417-d747-482a-83f2-3f805881a4f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "29b92a67-7e01-4d50-afdc-befc65f81901"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f95c61a3-0861-4203-bd34-7702fec0c393",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e6c006c5-d756-4b7c-9eb0-8e0f5c969cd2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dfe3cc5d-2085-4a49-867f-11deffcc0ccb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f172668-107a-424a-9476-635c00d44477"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "041b0822-9547-4261-b5dd-3bca7c09caee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "45f5057c-6400-47ad-ad0c-08b798de4715"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "598b419c-2810-4656-9a37-2f54da3cfec5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7813657-f0c2-40f9-97d5-36d74d1cf31b"
            }
          }
        ]
      },
      {
        "id": "c19e9fdd-da69-4d77-a780-10f5b95753e3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2b50f0d9-42a3-4e05-96c0-ab3dfaef77e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "946afa92-3c89-4a58-9e9d-0e3367a8e20e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "98beeec1-23ab-4af7-9487-19f8f70869b2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0717a3a-8660-4362-b959-e8c835338bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94895264-654d-43d2-8a8b-f8dde176208c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3691e7af-af14-4d9c-88c0-f786f9899673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e1e2f8-e990-4f10-9407-2f674ea77e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30abb16b-e834-439f-9026-91ab91abe02d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0d60aa-40a4-4105-82e7-49f8c55baea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f6a04a-da3b-42c5-8d4f-0c831b30e329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b61268-e2ec-4d66-b17c-69509cc33e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a491a49-6197-4c0b-85b0-d0838a0abdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a8bede-f17e-4305-8aa2-dea9f39ef16b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80e67a5-6fd5-464f-9f3c-ddc224e98e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d0c5d2-5c83-4995-a7ef-536d656b4220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5daf2f-9bbe-4b26-b594-cf15362f0632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5260a03-78c7-4c7c-8302-7f2672f7eafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94bcc9a-ade7-449a-a4f9-a2fb05999a2b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbc2760-0230-48ae-a371-54e8109c8ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b471aac3-689f-407b-95c5-fd971c4ca6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b7827e-e19e-49d1-91d3-13c33654db72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48f64c90-4b80-49ee-a2a8-8bebccf7d0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15882599-08c5-4515-a8a3-9defb5eede60",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fecaa4-03d8-4ace-b349-f984fc0abfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d32de2b-3b0b-46f4-b092-1de964ea9074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8d7e40-b7ae-4a55-8f8f-3ceec42742c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4fe3973-17bd-4119-b16c-3928490c6fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907f3c03-d3ee-43ae-9822-cb142760b80d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d234e36-4bb3-4db6-b15e-776c7627e7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95de9d2-917a-4795-bf2a-416be4873e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9beb04ec-ae7d-40d8-863b-88e03037da9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4ee098-be9d-4b73-b160-42fdf282c37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decb022f-82a6-4b81-8d55-ca840e671a6b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7750ecd8-5f96-4fe5-900e-6f24febb3459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9a6377-b137-4581-89c3-7d53403cdd0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c40018b-ba77-4523-b644-b0496174044f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac15de4f-fbe1-4398-afed-07d203aa9ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba34b5f-4779-4197-afe3-467033b7c47b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2ab6fc-be2a-487f-a706-f60b33b8025d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab444a29-4afb-4b2a-9c86-860d999d644f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d6bcc3-0cee-4ad4-9b5a-1f736ae417fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51fd1dd0-3145-4123-a1c5-ed75594748d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18998116-f537-4f4b-b13d-d71929c016c5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2686369-1265-474b-998b-7b3ca8bfb45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7532d6e7-0e71-4168-a16f-ab9f13ac6f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57130be9-6354-4a2a-a3d8-e091800e635c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "457de298-32b6-4117-b9e6-d1c532c98080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0633eaab-a7b8-47f0-bea7-3873991b1ce4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0151baa-c5ca-4ec6-8763-c4efe3d1b7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d0282a-1c0c-4340-95dd-54266aa520af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e834608-cb00-43ee-b1bb-3bcca280b2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c662ead-5a1a-4609-81f6-69e6f416b6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dc97a5-3f33-4d4f-acb3-2aa91f5e5663",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c77cb2-ea56-4488-9ca3-bbf0a68fe41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4ec7f4-fa47-4f92-8f2d-501e92658a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b7f482-aa4d-42e5-b5f9-1c0b965a6c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5be52c01-d060-4cdc-b68e-7583ad13f2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035f98f1-cb4d-4120-bf05-cdd35af9974d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e89370-267a-4845-b3d4-0b7ee5906ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d6653e-c1a8-414e-a48c-849fd2d85629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675fb60a-1500-41f1-8cea-495428d9da21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da9d41e9-6cde-40b1-bc35-667bbcf8a018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ccfb40-2383-413d-9363-408003ee10c1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0921182e-884a-440c-a3b7-2930a51bf5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2b625f-a1b2-4a48-8ad1-4b91d0e0e9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2066faa9-e010-4a0d-a733-f71a7d499b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc1a806-1298-43e5-95f0-5dec61bb14fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6a4501-fff1-4678-bb5a-0777ec7e9317",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd3e184-17a7-469a-9781-85c07025bd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa5e30d-937d-40a7-989e-5e2a2b231417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb808a1-a1c5-412b-9119-c442acd898ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "142768c3-eff0-4436-8bc0-36ea7730e786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152889f6-97b7-4864-b1e1-f4ab0707a7d0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d06addb-cf09-474c-aa94-99eb0ebefcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0e52ab-8e5d-4d0d-810a-4300bc8d4590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98773c53-c166-4135-bba4-287db39b0484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a5de81-866d-4e01-89ed-51435d932019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a6327e-112b-4716-a3cf-d63c1c086ac5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c34c95d-ae7a-407b-9b9d-670bf2c9d371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b291205d-585e-452c-be99-1ec4aa4fd53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d9a664-8419-4116-9182-12a36e818bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "230a6903-4b96-4576-8675-76ce91ff5afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8cd218-c30f-47ae-bc22-b5272d75a8d9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b061f319-db49-4d02-933e-a52ab4ac9ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd38d86b-95ae-49d5-ac68-3a6c68da6c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5babf0-0ff3-4d59-ad20-c31e25425def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d71f542-42c7-49db-9bd7-9cd08b6d0d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1810e236-1f29-4915-8353-ecb1db48bd5a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a523acb-9f81-49aa-9e1a-7ee4c6b09d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeedc931-cd14-40dd-a4b8-d195feef6661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff748ab-b703-4e0a-a874-97bc11cc7ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb6e7b9-f2c0-4d89-b1f3-903387dc356c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9238972-b087-4322-92dc-ca376e7fad56",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78a0a9d-bd1d-4dcb-b4e0-06228b17540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b4432f-455e-4fcb-9d37-9fd109c6ddbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92337509-4c6f-4077-8f3c-91f74a96c870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a46f784d-2dac-4ad2-971f-72407cf3469c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01daa3b0-6024-4f86-acb2-89a197999250",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d3b022-77bb-42d4-9cba-96bca65bf4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476b70e8-1218-4c91-94f1-dfaf7c19d224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ccbd34-8344-494e-a81a-153aa3934c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "584d107d-09d3-4a34-95e1-79b2f0abf982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d9c582-d7dc-43c8-ab2e-90aa7a1ed23b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa5613a-820c-4936-bfe3-1a3a95e1896e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93edfc6-37a5-4eb2-b6bd-aec568297701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40183c29-53a5-401f-ae2e-5c24364eebf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b27f366-ec81-4e08-b45e-b50b3b26a411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b70edb-4357-4054-b73a-64a0d7cf1bfa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87208b4d-4d85-4b17-adb6-4ba0d1afb0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5fb901-e43d-4f78-9dad-d0a7cd0a291c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d870f7ad-4db8-422d-9072-227c64abc0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b3eab4-8814-4f89-b6f8-08f266be1327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231a881c-fa98-4c39-99a9-534f1e945006",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8462e772-ae2a-4441-9153-53f880866d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9acdf2-67a8-472c-a01b-d5842541f2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959b185f-5f3a-4e05-9483-9d7c3c4f9f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09969309-dbbc-414d-9dfd-cd13eeef9e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab2d683-002e-432a-bdd4-c6dc743fe9b1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da6f023-5c3b-42e3-aee1-182460f52329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16c3e3c-505b-4878-b131-6601e3d2166d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76f8625-040d-47e6-81eb-e1e130d75d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6244f64b-df40-4872-99ad-c3e7a3cb8fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d54964-d982-4ee2-9351-4b2b823e1444",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70e49d5-8d82-45d6-8587-f4885e0ff966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedefdda-68c0-401b-9703-f301d9edecfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdd35b2-2b00-4976-b632-b4c8b272c997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1bea02-f359-4e35-a8ba-21cc12e4e0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef80ea51-a02a-4b9d-b298-1762d0266571",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2244b690-59d0-48dc-a6c1-b0caa9bf99de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4887249a-3dd6-40ea-aee7-dc3679c8b6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f60813-9ffc-4a81-a8c0-83e3552a1280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4dcb43a-4253-4f5f-80ad-1079b9d67920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1937c8a3-6db1-4367-9eca-24c2e93a6080",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6fa3bc-5fbb-415d-89ab-01b96f71226b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c3145f-3687-4ac7-9cb8-6fc14db6ad4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f0499b-f98a-4d04-b088-ed7d1cbc3136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8eb2477-5dfe-4a6b-86e9-28f96ee2eca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a259133-8f8a-4c38-8792-401084817033",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e023b54c-4ffe-4986-a3e0-f9136ec43e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ee0b54-c087-4862-a018-ec7ff5d74ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958f6b3a-454e-4600-b312-efad158afcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f07e83e1-b62e-4521-9a3e-83529e45c823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105d78f2-f267-4074-8d45-67d20258ff49",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47767b42-5659-4b88-b176-a9b06e4d5dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f5104a-174e-477d-846d-16acd0bcda1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c59e171-2744-420d-990d-312e84885d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "390a0862-8dbf-4612-92ec-1949e683db20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598aeabe-ab0d-4122-b41e-9d0756c6834e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f81f369-03f9-49b0-bd47-bf358af4dff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6e3f2b-0858-411b-83a0-5f748baecddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbe0576-27b0-4c2a-b6b1-3679e48d1cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4346145-978d-4c8c-a495-f59f992b467c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6da9c1b-45f2-4ff5-9308-464cd3facafc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286f3bd1-a605-4412-b74f-1df77e0b0019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28f8829-1f45-4d10-8562-bb11e3d47bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc941e0b-1465-4572-baba-bd5857eb5734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14f3e1c-7fbb-4e0d-9e19-a5a462313ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b63817-7dd8-4bd5-8555-3c8b82b24cb6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3f937b-4cb9-44be-911f-6e9808be9d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0ee639-2c30-4c0c-8ef4-0a02d335fa5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d75082-c589-4513-981e-0360ab87affe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7d6a44-e59c-4231-ad9e-bd1727ee7f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7056dd7-7688-4098-99f0-eec82a276c65",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f37f9a-7e26-4fb5-ae2c-bd9abe7c4344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df76009-30e2-49bf-b4b4-696aa8a48335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b567077-4592-4045-8832-38a121f98b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "656e84c3-aba0-4864-b4b9-53cd96709e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ca8a5e-4bc1-40cc-b92c-9deb17be1150",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440c62de-05d4-446c-b34f-3fe4eb5c55e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b3fa18-2409-43a9-9e8a-14526e3ed81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df29dcd-10a6-4e82-a4fe-85c92a43e318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "045965f6-ddcd-4ce3-8039-2a6b67fcd584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041aa627-c97b-4b45-b07e-2db3b4ad0082",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001b316f-12f3-42b4-bc54-d529999f740c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d02b6a-c840-4621-ac08-8a58ca6f5614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cc3d10-02c2-4ead-b6bb-1d0687e1c2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "908fdf8a-8937-446c-a255-e3e3f6332262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e51465-457d-417b-be61-27ac52120cfb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2aaf1e8-fe6a-4d0c-b37a-58160b321643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa0cf2e-195f-453b-a436-853eb4afb23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb0e3e4-af2a-4a26-81c8-642ca122ad4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b8a708-a6b6-4bf6-98c7-114627b35d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6720a9f1-6fa7-4d1b-b77a-354045b986eb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36155d76-1426-430f-8abd-60c694aea778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094ba5be-8800-40a8-bf0f-087a6fd808c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562b1edd-7242-462b-9752-f68fd4a92de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9b3693-6dc3-4d3a-b378-143d5e1175f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2e21ec4-04b2-4d14-a2f5-3aa48b52783c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c82e7be7-d2f2-41dd-95f6-3db06f1fe71c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3638fd76-000a-4886-bbd3-dd0749f54859",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5f1aa4-a517-46a2-9986-031222dd29a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee184553-778d-4205-baa2-4d4869fc0177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d793394-f264-4dbe-b455-ec1e8270577d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1608be72-c3e3-4a1c-8f2c-99d865a95159",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdf9b6b1-2dbf-4b9c-b356-0f96eb8a5325"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5dc37ac0-a890-47c3-969e-f73e688f0cdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fdbf4e5-3393-4383-acad-79b5f24fd4cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56e09198-58a2-4c71-b550-bcd4ac5fce6d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6056876a-c386-47cc-91d6-68884210792e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8a554fa-5633-4a4f-9cc7-56a52e0478e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "179d7b53-e6cd-4b02-af9f-1fef51ecb5d8"
            }
          }
        ]
      },
      {
        "id": "72109a88-a563-4c1d-a18d-639c4e73334e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "eea2390d-13b9-425e-b119-d1656b67f546",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d799e3df-7a64-48c4-b437-43977ae73037",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "52f86bbb-3401-430b-a02e-3d26d65bb423",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f94b499-efa0-4f7e-ad45-34cf8d796b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13443873-63ec-4e94-b28f-10799a0024be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a69be82-7575-4976-a496-e231d3f35a67",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae59e7c-009f-4ea7-b6b8-90012f1b40da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638f2769-2fb9-401c-bef2-d62a26807080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c658e3-4562-4e61-9ffd-8b2434d0a619",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b4d4e2-b703-483a-bb3b-1e0f06e67748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f30b3a8-0b96-47f6-853f-f90c095da244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421c4a89-759b-4ea3-95cd-b46d10dfbb5e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ba6204-3897-4a56-86f1-fdfc4bf15768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213544ed-ca74-4da9-96d0-321aacc423f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f875b97-6178-4f73-8136-135f1bed8343",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddd7206-c494-4049-8fed-963056faa5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f86bda7-3da8-4822-b33c-6bdd6984d22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44105294-9c59-4a7a-be62-e377e5a22cea",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e364ae-cd8f-4893-a9d5-6fa75a821305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7734988-542f-4f38-9d0f-340a386d5a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd585944-0322-449c-bd96-5688b0e48358",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf14f00-3eea-4733-9dbd-a455c0a393ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f144eb8-3960-4061-8b7d-e27f13932f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753520c7-a3ff-4465-9df9-e266e6d59f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ad7940-a668-451e-b766-ac231b5a4c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a18498-3d29-498e-8589-8c6c21918fb0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b13e837-16eb-40cf-aa88-d60675953bb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9982a2c9-a23c-4ce4-b402-39e53137723b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d324635-87f5-4e26-9efd-8aa8d352c797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6e32ae-54c4-4432-b429-1ec60c2cfb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341fd08e-05a4-44c7-bc1c-ba9a4c493c4f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0401fec-4e96-4a44-803d-4816fd2f7a7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd8b48e1-86e3-411d-80eb-301e7e601ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a7aa96-741b-455a-af82-8cbb713d4e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8013235b-9b40-43d0-8227-6e1b36533bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa928ed-cd88-4284-937f-bb481deb6bb3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021f4850-ccf9-4f21-86a9-2b928986b94c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e6faba-8e29-4e59-99a6-fee137660bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae834c3-aba8-42ae-8ca4-034410f475cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8cb63f4-e270-4c56-aabe-615b0cbf1d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076164a0-61e4-4146-aa77-9b2b0c0a3522",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e76ded1-7670-43ef-af79-b4344dbc0e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16afc021-37de-45da-b66a-f255ad4366fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a613ab-8f26-4e3b-8022-c4c3998dfbcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eac30d2-0bca-492d-b048-443805656ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac945fee-7144-42bb-8c0b-1eafd6be4b95",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9bae2f-ae6f-4d5e-9f08-420ad8af48de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3da829-7fe3-4b66-95b2-a9f2f5d0f438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c678e2c8-eb95-4009-8f71-f9e930125cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19e5040-f188-49da-8ac4-914f64a2c650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46373b7-bd12-4923-a4c2-5702b00b7459",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0365ac5b-a9c9-4acd-a0f3-deff0e7dfe51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e9eeb8d-9c32-4d5e-82f9-e28b1f8a2a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2eb708b-377a-4501-b0da-38edd32ad039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41bc591d-492b-4178-a09f-4725e31202d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd64517-adc7-4365-b7e2-244caf249db7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58651763-514a-49fe-99aa-2d281ca1100a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a98ecc-34a1-467f-8bfd-1ac0a65a9382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903d274e-4589-4617-9618-0af7e3727e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b147d92-2576-43ef-927b-cdc03f40417d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c237310-dd94-4833-b232-d29727b04554",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ecfbaa-5632-4d09-93a5-01d77736c9d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77b02448-5dcd-41a1-a038-001878d1d132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c094ea-5f41-4343-a7b6-3d6756aeaf4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5d0fa0-395d-405d-83fb-d499d6381619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eae8cdb-8f1a-4e2d-883c-0cf8336c6721",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ace0d4d-2085-4c05-8a89-b75d2fec6322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d9be376-de53-4980-a950-2dd66e66d3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ab0302-aee9-4e45-b054-e8d67b599998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e26025d-2e52-4246-9eb5-8eb004708b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07433b70-a5fc-4062-bc8f-ca3d6fa3b48e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428a3660-7f16-46ac-8170-5a597e12249a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5439f61-c25b-4cc2-9cca-1d8533f07730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cfe661-7283-4532-8e69-71fe2bf318e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec73474-87ac-4e75-9b00-e6ec3bb4b770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfb80d4-c035-4658-8d32-75ce66f6c334",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf878d3-1445-4a3d-8c10-d96badf39824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a70cd8e-896f-4f85-9348-7c6f883f17ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13681cd9-4d97-4ddb-8db0-6d06305d12da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65f7878-571d-48da-8511-4c92c18563d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134f6f64-4b6f-44e3-b8c6-81bdee0ec550",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a68bf60-5faa-4e12-8bb3-200abd415ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172a4e70-9eef-44e0-a146-5d90642ec07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bbcd22-5e11-4cd6-b1cd-c9d331d25f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad413a6-0224-428a-bc18-cece57476719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087d72a6-a1ec-4918-a7c1-82a954b08841",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9411675c-0742-46e7-99ed-3f2119cd8406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c6e0eb-750f-4ef4-9cf6-455c37091ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29c8bd3-8be2-48d5-ada2-07988a5d2423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60efbeb-12ae-4b1c-a560-c8b62fbe4593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae5d0b6-be92-4c38-8ba2-c6da4944d2d1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3578cb8-fb69-46bf-951d-a56c64143377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61eed58b-8283-4c21-bd9c-fb3525ada484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac9d247-56e9-4f8c-8d41-85908c0ab652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45af4c12-0d00-43bb-b439-b11503bb3963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c34d75-0d79-4cb9-a48e-c5e71218b8d3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e58d7f4-59e4-4084-ab0c-c59f1614d003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203e5fff-54e1-4f65-87d6-473663f6709b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a586bd0f-bfbd-4d31-8c57-4667f751c79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2d29b2-0e12-4a0a-b786-51f794ad5053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fe2635-344a-4b77-b43a-085132af470a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bc94b4-4300-4d0b-8964-47687e0123e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac12710-4eff-413a-9160-d2bceaef98a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "918dc96b-9851-4f72-b33f-2207114ea89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411f9b71-b493-4a09-892e-9ff79b747532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18568859-382d-4b1f-bf29-c73b4068784e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83a5e43-68b2-4532-a497-d0235cbbc875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c06aa3-b25b-409e-9e71-39c5dc87c8e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cf97aa-ad8b-4e9a-9c7a-615dacebfe6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc65b11d-c8c2-4a26-8bce-3511f256d118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bca8ce-563b-46fd-910e-ff7716bb432e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d5ead1-571d-48f0-b04f-079557d4390e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f976c54-a4ac-429f-9874-71d4135eb2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104a4fb8-507b-480c-9cc7-b1559d5a4180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89873d1-1975-40db-925e-f03a4f1a53c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c43557-6166-450d-bc94-e86e3efc5e7c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483c5700-302e-4723-bd49-658435fa637c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6bb89f3-1a35-45cf-a26d-24209bc5fb24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95255c6f-7327-4955-a117-6f5abd788fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59143d9-4cf0-4d9f-847f-a1e89d5d0196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7281345c-d729-4c7e-806d-6e98234bb891",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae1981a-5216-4546-aa00-fea90be9e836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31cdc3c4-2205-4dc4-85b0-6b45c7a75f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fdbfab-0dfd-4e7d-a6cc-82b2e1d0996d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f033d9-d733-45f1-aaa9-8956570de9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5b0aed-8711-4980-85ae-d6f87e6f1d34",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e188451-38d1-435a-bc5a-d0ed1fd2d2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56c1dff-3c3b-496f-a142-5eb84e82948b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fd0113-e605-4c72-ad30-66fa047c4d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faead737-8cb2-4352-9ea6-21ba01b5e42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ae5f64-9b44-44e1-af13-9ca17465c9a0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a9afa0-c64f-4e7b-a6b2-a232a4692305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed419ebc-69b2-4dc1-b39c-6af9ab6d73e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c594d18c-49e8-487c-9545-c14cbc625e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7c3580-163d-4b1f-8f8e-9b8ca6ae0fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280d135a-713c-43fa-a332-493c34ebdb7e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8c9c82-7271-4ca5-9a82-f857277e9055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a2a97a6-9e31-4a2c-a80e-e65ac8c7012a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44226cc-5ad9-4b00-b728-ca925f593241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a22c88-a6da-4938-a918-8d42963ba17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9700e1d5-4d11-4d3a-a24a-10422b525023",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e11d014-9cce-4196-86ba-874dfcc0f5c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "569eb7d9-f36c-462e-b43f-a06e26082aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83b06b2-aae7-4fb7-88a5-fa9b615fba88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a0a6cf-0e79-4abd-9e0a-6b579c6440aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9ce6ff-db38-43f2-ac49-4d9b8388b1b3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a876341-48e2-4cab-90c4-473915bf78d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "115d44b7-cb00-40eb-9bb5-76c3375761c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88badb0a-93c0-4fde-8a12-2ffba86d3631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf16e82-5dff-499d-b8a3-d871a741cd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e707af4d-4084-45c1-ae0f-9cb02c2fba77",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b59f9cd-88a7-4db1-a181-eac1490f80b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56a191bc-f583-4291-bbdc-45c86c883f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1aef529-35f2-487e-a015-c0902837e1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bf910a-086e-4605-853a-4421cd721b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93033dfd-bd9d-415d-98b1-d31818ce6f2d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1d3592-0c29-41b0-9424-668f0ca24bbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0e71112-7d37-4ed9-8883-028eaf02b139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4c6d6a-d686-4b4a-b638-88d5e47b3a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ecb4e7-0a43-4d5d-ad8c-814568899c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1153a6a-0acd-4d18-8bc6-2be9c72733d5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8deefcbb-2224-46ba-bfbc-d3f960a26d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac3c34a-ee80-4112-81d7-a19d812b38cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1fc616-2ce0-4117-9f4b-38055f857937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37d80c2-713e-4aec-9203-c9671ab521e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aceda8f6-3ec1-47a4-9710-50a14b0aee92",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06081ed3-1c82-4dd6-b7c1-fd2847e1cda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2943d8a4-9502-404e-a537-9a9b0e588344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87318b0-9d6e-4bcb-a19d-5845be5fd15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1f0aef-74e7-4e7b-ad45-29d2240397b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d97bbd5-bbb5-42c8-9953-2ff274b5bb3b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ed577f-a0a3-405a-a799-aedfde72465e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b4a2cd-84a9-4264-9105-b0580664292e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8844ed2f-f716-455d-8d2b-0411f3c090d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c1629e-a9ed-4f24-ac33-11905d032b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e6fc77-9296-4fab-a43c-d6ab825708c6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b983520-18f0-4621-b5b8-f76a0e678e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4f3a28-7210-4179-a801-d82d15b44071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c441043-5d5d-40f8-a7f5-8a06caf2934a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b2f0fb-4036-43b0-8638-72f5b2265f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcf615e-33e5-45d9-b818-e56dcd17f4e9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3271245-7940-4fef-80ea-df39be64cb25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf2fb1e-315e-4fb8-b567-ae259d9afeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60257ed3-5769-46f5-8911-c56ace279f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1f545b-20d4-410f-9608-dcd0035f1ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41590c41-7318-43b6-bc54-5773e3b0cd18",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4cfbf7-6923-46c9-bb43-13839a149934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4308a46-0f84-40fd-b742-a78482dd89e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b72df87-0112-450f-b5e3-99c77b7a22ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135ecfc8-9354-4841-8f6f-c599dbf17e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dace06fb-48b5-4f98-9dbb-9bc47027b753",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776a634f-3b3d-4ad0-a22a-321c40f7af33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19362dff-5cee-4bb5-91c5-2ff5a00371c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d929c523-87a7-45cf-9285-610da9a1aff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30d1ed2-5efd-4f3e-9114-d189ef177751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acd4c60-ff53-4b28-8eed-b8d64a2e30b1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df56d75a-cd44-4f05-a9f4-bcb77eef8ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496d0afa-8c0a-4880-81ed-ca0545dcc4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426a081d-ac8a-4557-bc7f-2d7dd8bfe02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6992b9ec-f4c5-49a0-b89d-9cd69b6fcbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d0185c-3bbe-4aab-8668-08ff49da8b56",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e0e585-9eb8-4c35-a0f0-1ea879514431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfae881-f346-4c65-b661-27067eb67e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6569a7c-85c6-4763-b393-efb0b9dfb25e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad066c6-1c94-453b-a3c4-30a7ac33946c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11a1aa8-1781-407b-8e07-ff482d0c78e3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085c1afb-b421-4e59-8eab-a2577b22febf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964c3985-f18c-45ee-9668-d80e13eaf834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3da6d5e-7089-4c1c-9e74-1fa313c16209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5be0aaa-4f53-43f8-b85e-038de6430025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d3d2b8-732c-4737-bc2f-1076648d2fb6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e8a6a7-b905-44a2-bc60-948f6ae3654f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36910876-4aba-4e8c-b846-48365bc384e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5daaf28-f586-48e0-a2ef-5ac6b6a17953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f09f6e-356a-42f4-8887-e88a0e1815e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c29b057-f10c-45eb-8db5-19a7a2b62a2e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2545a2e5-02ca-4335-976a-be152716b889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b572734c-cae4-49ab-96ba-c02d76cd709b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fb2f20-20dd-44f7-932b-8fd06c0d41e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a16f4dc-99a1-4371-b8ed-af44daaba13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1e1077-c71f-445e-9deb-f4939aba0a63",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c76ec3-89fa-4f04-a07c-9c83fb73992b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace88a06-a1c1-426f-a0e5-2edeea605a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db9c5b5-fc48-45b7-b850-7f020d3bcee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e279c55-8345-4e61-890c-fbf836ffd3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128b5c3c-ebad-4db8-9da8-4313e1a0d39b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f58ac8-79d1-436b-ac43-ee88cad3e0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e2d26b-83d5-45c2-83cc-9300663725e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b382a3b2-f13b-457a-9ebc-cb7d5c59dd59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e127d726-e9fe-4c3b-83e3-00445ab1c9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70092935-af3c-42e0-840b-f14714fdae14",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143a6dcd-013f-47df-91e5-75f8ddd76230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a350d3e-c34b-45c4-8a54-da579b18cdd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b41d68-c7ef-40b6-87c8-3d46c46e534d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e69ac32-3b96-4705-89de-7ab31caeabef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607157f7-9fe5-4be6-8c13-c3d1f58de583",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2654fcfa-d500-414e-ae0c-4c7e9c557555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2407c2-f62a-4c5c-89da-e386df2ae245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7532aa-c500-4a1a-9896-1d3f5554680c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae73918e-1605-4d10-be49-618e90fd94fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8a989e-9abf-46f9-8f2e-8bb7e7a85bd6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3382458-1ac7-4853-a151-d4a3fd84f053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d6015a-203e-4d9a-952a-5afa8a93252e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8f465c-d9a4-4046-ada7-99f060820fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083225eb-da18-4613-9d78-9f2cfdeefbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2533496b-f7be-44c6-8dcb-808beb7a7027",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb80f20c-e5e0-47cb-94fb-394f0d70f270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9364dd2-3a73-4bdf-adb0-bb8f0f7e07b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b662e0a-97ae-451b-b1b3-745650017491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c262eae-1197-401f-9e07-1ab48775912d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c719992-cb66-4488-9f8a-8412e8af2717",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7011fddc-505e-40c0-8894-bcf7ce279e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f41b704-b22a-4321-aa20-34f97134114e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f324ff5-e968-43c8-bcf8-88dd6b4ba0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc12f2b-14b0-4a46-ba00-e3b036c4ebc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c727733-d14c-49f1-9414-1b8c90c98f86",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1979d80-272a-498b-9496-aef3352b50e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66f1d63-c871-4ca5-959c-aeaabafc9f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6e0a8e-62f4-4156-a7a8-2cc883265531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0e7620-c58e-467e-86d3-67471e7a2d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e764f72a-0d4b-4734-a585-4cc335eed85b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50eb5ac1-db4b-4fcc-adb3-2d0e431d5cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f177506e-6a3a-4531-9696-22c75eca29f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55dab7b3-4db7-46a0-baac-f2f1f4d2d12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac78f1c6-13cc-48f7-ad0e-10627cb00a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ba7dd8-c523-446e-8926-cb00ed482a13",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da2e33c-891f-4ef1-ac28-a01e50fa8cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb885e78-860c-4978-bb05-5fd440d82d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc4adca-b8cf-483f-9511-757708cd7628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c03af60-4045-49d9-ad66-553fada30ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886de21f-0a83-4d1a-b809-f5859c502dcb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86023a54-a791-4731-ae82-42f6c42a414a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0723bcc4-e65b-4c09-8177-0b3a5aa5e1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "854b42db-afcc-4de9-b99e-763f5e222915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d00ffd-d5d1-451d-be64-60325c73bb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402bed5e-b244-4698-9051-2858697a34d0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fcc202-e284-47f4-bff1-42388a8fc3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9f4e4b-c5c4-4f52-94bd-ee2d899db088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30334a66-de5d-4591-9c59-e6fd1650b796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc6d546-5101-40f7-975b-acb95c69a2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d99a81b-2b5e-4854-ac29-7b9c8412c968",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e9ee39-cbe2-4127-81a5-8da55456a941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc3507d-4695-4598-a708-27c66bf852f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60178e13-2d11-4416-a3b5-c35d46f1ad9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2bec1c-7064-4c60-b769-31eee13daa34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef7b377-5545-414d-94fd-6583be2f903e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05ef8fb-c4c7-4216-ad31-73856ec014b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baeae1b0-c2d4-4c16-ba39-876cbc3cef9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeaa2ba6-eb99-4bc0-810e-689840252570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88409d35-d0ca-4cc1-b06c-484e83489ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc39605-2fc1-4c89-9f97-e1597fdbd53b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b824301-e3f6-4fb9-9e69-77d4a2325342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2511431e-ae50-4a65-a732-f34a84d034e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb618822-35da-4b0a-aeb6-50b263375ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d19cec-6b5c-4287-86fe-69aa47269a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1517f771-d116-41c8-ba6a-fc1d22b65ca3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6149e27-1ab5-4b67-9206-57e1b964e7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1f3d66-442e-4ba1-b245-733668eae941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5b268b-f144-4bdc-85cc-77eb35766a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad4d379-64ec-4a60-9a64-eb36599fef42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19aaf76-3818-4645-baa7-aaf61b02da93",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba5bb3e-81fe-4d99-bf00-9df4cf70a373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c677188a-aae8-4bb9-af40-61e75a8576a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "886cd45a-7563-4bda-9da9-98ea99e5a25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226ad369-380e-4917-81d6-59bca3719db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cc3f23-c2a0-411c-91b6-01eac630c593",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1132fca-2374-4fb2-89bf-745fe60ac696",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7416f4c-fd6b-4e0e-9395-efa254bff987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da431ec0-20cb-44aa-be00-a225b5b87443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90661a8-c9fd-492a-a5ff-0bfc5636f2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5448ed8-b6ff-4303-86a0-1ba4f9a41e6f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29b8eca-607c-4e5d-b377-051eca114f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd475ace-46ec-4920-8fcb-3c614979b623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585f6f77-24af-46fc-b2c1-eb69fb6932fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9713bd31-7f21-458a-ac8f-a499d9186685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5485d602-0bca-4991-98cf-894376d531c3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f343847-a93d-4602-8234-fa3ca51a3d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2073530-6fa5-4be5-8286-b20c508a38e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59daba6-d5b0-4514-b823-b2f2ccd3282a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491920c1-072b-44e0-8735-ed63af7465f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e5c065-3ef7-413b-97dd-fc7daf67277e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b6c57f-6c3b-4696-8d45-d88c9976b8bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e37710b-b4df-4be6-ab60-c11029f5d7fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ef69c8-6532-4d59-8b06-6acc0c8492a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b88ac3-2152-49c6-8bf1-526a5f6b3473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670127a5-10ba-4e72-b011-060836869e9d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4443a9d1-760b-4099-be2b-82baf5b3279d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48929ff3-0dc2-4194-bf2b-284322b537b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4483bc5f-7f18-4028-95b2-3b57db81c301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd42cf4-ab8b-4cdb-a456-5e61333f1d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9960a0f2-6728-4173-bfbc-b4e65de64839",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb991cf-9743-4a10-937e-b42e717fb0ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac91d29b-401a-4cbc-9d4d-1072d55fb300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade71a4e-f520-462c-b3de-e8c39b3a7f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b74329e-bc75-4724-bf8e-05413677835f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153362ab-5d7b-4c43-a87e-5f22f9eb292e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6181a1bb-5d24-45d8-b808-947f106a6086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d83f4a1f-6c74-40d2-9c9d-da706f0365b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b1619f-b1f2-4a84-b664-a730caff80a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdd1cdb-8ae1-4b62-9d4e-100f7f7f9e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340773ca-b3b4-4910-8a4c-b08fc7b9a61d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9128a0e-6b2e-4e3b-9062-2981375751c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a81340a-5283-47b4-abe2-6cf0ad007c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c2c030-2d17-4d5e-9ee7-3920eb182a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16038577-549d-4e5e-9fd7-4ca2b225bb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8afc37-3013-4a12-9d91-2b2ac977afb5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1b6874-d549-4ea9-a0f8-921eb5137d99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0db741f8-7838-4e3f-8865-338993d1ad41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298b2ff9-de41-4c32-bcb1-f226e11b9fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc11109f-e642-4102-91dd-7b2bbd7ddb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4266bf-4118-4fb2-8d72-8dd865cef14e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1e9f3e-f2bb-4188-a0dc-626c6ff5135b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0818b4f8-50a8-4980-b311-1018f5b80521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37984882-fdb5-49bb-a146-90b42802fbff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178718c6-6932-4ba0-afe4-102f60e705aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b2c000-9da8-4eeb-8def-02942ab9aff3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a90e43-b6de-468c-b9c4-7577d74b4260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b204b93-da0b-4ff4-9d22-9247ae9d35b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35f6bf2-6191-4c2d-b7ef-6562574b1aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ed35d8-5cdf-45d0-953d-3c72704570c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfe97f4-324d-4b2c-b97b-a119ac5e7356",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036fd0ab-67ad-4e58-9994-636f55148d34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b452847-8d98-48e7-8cb2-6dd5dd1de341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b87748-b721-48b8-8555-a06c9be66938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1352bd4-b63f-418d-bc5c-d107ae4ea672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01e3bf6-6516-492e-a256-13004aa1ef9f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf9056d-af8e-4e6b-af70-56e3fe5d1f52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a696259a-9a63-44fe-9ebd-591f97598a7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ec2a39-4f05-48f8-96f7-0076c6957c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886d7214-6721-461d-ba73-d5689d4d2759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16102ef7-6c89-43c2-9c73-6e3f56ae8b46",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d57a23d-77cc-4cf1-baab-3cb295155c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bc13f82-2ebf-4d7f-b2a7-5b5182637d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a7b186-ffd0-4ea6-88b2-7cebac2aa575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef10022e-98be-41e9-97a7-f83ddc7a4ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b77a82-c106-46b0-8cd4-57e86f7d9ff0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c96608b-65ba-4772-bfd9-e33f6b730335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "321d6cb9-2d5b-4b16-9ea7-a95f6620eb57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888c1e58-8946-4560-afda-1987f46eb7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f04af90-d8cd-4cf9-b4bb-0bf38b8cdce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8adc6aa-54ea-45a9-8d7e-369e4f8fb6a7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e66cb16-842c-44b2-9868-c23ac6d1749b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d66875f9-bb0d-40d6-869d-1008dcedb7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eedee5c-64d9-4b3f-947f-d3c91f2205ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de7a4b4-ddd0-44dd-a2d1-6100452a6406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4863588b-1ead-4351-be21-c542f7189c80",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e364f463-b415-418c-bf14-779e6b603b7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11951d07-df4e-4a5c-aa1c-7f043ea96068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93363d8-b216-430f-b633-587c433e87ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29ca565-70c9-4efb-8d48-7367b7d2aee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3e350b-b808-4606-994b-90b224407b3b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423a846a-f2a3-402f-9cca-81591eb0d1e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c75676f-fd1b-4e61-87c7-1bf46bcdbeea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070af4d1-851a-4f64-9d3b-c6f20f09ee3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d274de-94f3-4fa4-a8e4-67a033b4e2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2e62cc-e00d-4a6c-84b8-a810e2e0113b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b4da97-31a3-4caa-86ff-dc84db9f012e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "362f6c89-a8f3-4088-a543-9e464df9371a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413d65b8-c102-4bbb-95b7-38fc95064f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5019f5d8-d7e2-44c5-afb9-b0e763ac22db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940b3052-3862-434b-8560-eed4e0ca8007",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17e657a-93a4-4119-b8f3-17201f011c0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ca8c176-aa5e-4161-8afb-565e41bbbd42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb5a6d9-779e-44a7-9e06-06568dfcb213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188696b9-51bb-40a4-b2e0-36fb712a23e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4d0ee8-8e36-4a96-9182-3b39866c0ef6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822af259-7610-400b-b2bc-94afd3acaef4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f84d0bc8-fa1d-4dd2-a33f-fa8aecd99b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e8c7ac-7a3e-4eff-9c7b-676102ac37b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e551fa-5da8-4379-8dcc-69c6f9bca8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edffecdb-0367-4b2e-91ad-b0d85bbc9e4b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0d1628-b6c5-4287-a9db-c10628e9ea6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76f4d968-72e6-4fc2-838a-98ad2e4d04df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b05e5d-992d-47cc-aef3-dc1ff4532512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09d6ddc-e6b8-41af-8fd9-35fb3ebd3191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9b22ca-6a6e-4737-a897-26dedb41a608",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8263136-99b1-4cc2-8ce5-a50c2edc1304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3e78fe3-1fda-44f8-83aa-363d06549b8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbd8875-9874-4c0a-b2e1-92afc8ef440b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a792feb-8063-4331-a736-0871e7f3dab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4048c520-67c8-4c4f-9e72-b0638741f704",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ed40de-4cda-4735-aaa3-a64d17fc324a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d6a037-f6cd-473e-9f11-910f6f16a238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2832b009-55be-4a82-88c6-fa22e52d876c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d080a563-6640-4bb8-8a47-274ae8dae06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36151d30-01a6-4eb4-8868-8bdb9b67c5b9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a3374e-02a0-49ee-a8b1-5b1421ed72d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65bcf4a5-460d-40f4-ab82-2a63d573dc31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01cfe55-4778-4b6c-89e4-5c3ad4054b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1035bf0-d31e-4313-8b53-32c695aeba93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9866e635-1cba-4b57-b3ea-853dea0d46bb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd61a620-1ddd-4a5e-adfa-d0c95c6f2a08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d9784a-aa31-4bb2-9905-6593f658ca36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd8a6a6-a94a-46b8-9ccb-e57f6084ad81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2623ffdd-0445-4692-8e09-5e452e55e2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3013c0a5-2296-403e-b158-94e3c605d8f9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675122d1-ae01-4ea9-aa20-d957be86c633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e39130f2-4982-4617-9fe8-e5530f990cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230aea12-b2f7-46fa-aa3a-9c2e2a6c5f9b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d53e704-c798-4d6e-ba5a-d83dc06d9dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5c422e-9164-4384-8b25-5d7921168611",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6e0e37-0c7b-49df-8329-86dfb4caa95c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "072e6fec-009d-4de3-ae97-1f426896e3a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e73f705-6676-41b9-bf7c-3f10b9812f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5850735f-7972-4bbf-8ad5-282bf1fde01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2ecf1c-df6d-4e10-8793-2a8b8e12a5c5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e3b922-1880-4e25-a057-b6a9db1bf1b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3aefdc8-49da-4b27-a95d-2761ccbf1520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00091bac-027d-4b8d-8336-e7e2535903b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e6a98c-e205-444b-9eb6-5ef71ae14d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a256af-216a-433a-a3da-b739e2007d1e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd488e66-2593-4e08-8988-cfbcbb84c773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac50353f-b2ca-4e29-a209-9297c56378f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c7cb53-f098-4e40-b038-4ee5859b1074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b084df61-0293-4bea-a0fe-c705f0e17506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1727888f-4afd-410d-9965-9044a22e841a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1d100b-5718-474f-bce9-6f8dce4cf615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de6951a6-0316-4a0f-b7c7-8d3a2d3b85b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dcbdd0-2659-48f3-bfd7-0db03493b46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537ceba3-bc6f-477d-878b-a0261510846e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6e3ad4-c12b-4fc3-a9f0-58230ee6bf9c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eadb0ce-8981-4925-aa52-3b3e98a7fbf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "553c8ab9-9f6c-420e-9d21-e4f73d07566e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29a7df3-389f-4650-9b59-89f16b41bab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27a24ad-9dd2-4ddd-837a-97e5c8ffca6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbc50b0-431c-42e7-b9c2-89e0c1ef013d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc26907c-9df2-4f37-a644-dcc9f5d256d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d605aa8-0c5d-4595-b93e-d316ee3f5d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b000e8-85a2-4b88-8727-70b59f1763ed",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef71f0a-0a0e-4ece-8859-8e4da327e67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bc5683-2aea-498a-b0d8-3bac659632a1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c7d6b8-f11c-4f2b-9f7a-095f7d9582db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ed33d70-f59a-48ff-99dd-80dd9bc3d691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3869f73-b45f-477e-a13d-14f452de7979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c37cc8-fe72-4e13-965b-7869ed985b52"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d29dea0-532f-4e23-b8d8-bae4906d1cee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "467fe6bb-a573-4f20-ac06-e3a96601a737"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d23c194f-d261-4c53-85f7-e5700b94dfa6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25897c0d-9390-4342-8918-079146f1c8d5"
                    }
                  }
                ]
              },
              {
                "id": "389f4953-c0e6-4893-8d4b-fb665ef6e952",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c25ef128-8646-43fa-896d-266fec754cbb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679da7ed-7264-4cdf-b7ec-5f2a73dca8ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "236ec99a-a35c-4c39-b0c1-d1fa1ca8e408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802aa2b3-6952-43ca-aed3-cafc76579e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fe26206-a247-40de-b46b-6c0df5531563"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe4a103a-e49f-4820-8e83-2576c23902c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c19d5961-59da-4cf7-aef4-d2bfbf86ef08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4a267dd-25df-4b76-b06b-2f119d877622",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1757e3d3-f518-4c29-b0a2-39105bbac115"
                    }
                  }
                ]
              },
              {
                "id": "7df82d82-ee87-4fa3-8e11-8ce22a8b5811",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bdfdea01-504a-464a-857e-8fc92166cba4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a20c62-cb08-48aa-b16a-b7141e754064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "29910173-af91-4d86-a529-4f6990c7bde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57afdbc2-b274-4940-bd07-7271e50721e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9ce6ef-3558-4037-8e1d-17211a65e4ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "29f3d632-7b29-4d51-bbab-2770a33128dd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6707bfe1-6e01-4055-9689-9e082777006a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3f17e29-56c8-4bb9-ba55-1ca0b10f74b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "418968bd-c160-4f29-b3a4-6b551dcc500b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "859e48d8-cab6-4087-b2b3-84e73fb24308",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ece00e5-9dea-4804-a433-bf7747efc3c9"
                    }
                  }
                ]
              },
              {
                "id": "c6251f8a-2aa0-4bf9-b4df-797647e4eb55",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2085c52-a327-44dd-9847-8a5392c6ac62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fd195f24-106d-48f5-a4f3-4bca1b3eac8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36a831e8-475e-4db4-89fb-52d4f11e4d86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f043064-9bc0-49db-92f1-1de0afdaa9a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28bf7d46-6bdd-4ea2-a68c-b6622e81356b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0f23f09d-0d24-42b4-9e59-5c7a5adcb908"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58a7ea67-19f4-450e-934f-b4e21fd3b1cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d821bf4-c55d-4158-8d7c-77e70b1a4123"
            }
          }
        ]
      },
      {
        "id": "0c081ac8-c6b2-4780-820c-940d83efc122",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "eeea02a2-a2bf-4f82-91ab-9e8b7106efd4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fec671ea-fb72-4825-9bb6-73cff84c5e2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "685a0a5c-9a58-4745-b36e-219328abd981",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636409cb-a7da-4e2b-b072-46efe5543ad2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "23680bb6-bc20-4a39-87f5-51a69645ca50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed187ece-f87c-431c-b138-2f568d1347d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c81adf5a-28a3-4091-931e-f6ad582c3702"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c51b0282-5e4e-41b3-b41b-2df1f1ceb58a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82db270d-b983-4356-adc8-9a8aed15ec70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f4f1066-42a7-4400-8857-dc2e5380db09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "614955c5-a4f4-4dbb-81d2-0866943e47a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fab6caa6-0b43-42e3-91c6-d82662ba75fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f3caa256-58c6-4f4e-8c92-e3096388db9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6d82fd2-6023-4db7-8d48-ef7576a1415d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "429e1d27-d1c5-49c8-88c7-f137c4be6483"
            }
          }
        ]
      },
      {
        "id": "df3a0003-3804-4ac7-9885-fcb9912d9ae8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "eec05665-fd56-4e15-8570-74e7e5d7a889",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8525d39d-8bc4-457d-b901-aa86d226d442",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb1670c7-6f8a-44eb-a3d0-3bf3b19f7e17",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30a9638-97bf-4697-8c10-2e138287819f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e53e3e3c-a852-42fa-aa96-1fa3054145c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc6fa8a-2060-4de2-8e17-acb43d692926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4af3a79a-cd7d-4837-8456-2105f5d80b95"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "483c594c-a51c-4482-acd3-eaae5524d4a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ab8dee3-3107-4bc8-b40e-39534c23f7ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8410f20d-82b1-4aa4-8fc4-fe2d4beadab8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e5b9472-ac84-45dd-856b-90f30e2c9c5f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48048e8b-e720-4198-bf6e-93590e684cac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94498f70-2863-429b-9174-ca3839e98e1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db885e14-b6dc-480a-a157-cc4502d9968f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6daa0d5-6bb0-4632-9ccb-e036007868e8"
            }
          }
        ]
      },
      {
        "id": "096932c7-2390-4573-8556-9948685f1f2a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "81d362cd-e63c-4253-9502-a1522e6274dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93f4a9a8-1ac0-408a-b92c-0e601c9bd58e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ed2d14f-95a0-4bff-a73c-0a0f1046f0fc",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebd5625-e049-406d-b7e3-850e82c917e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaaa0918-6dd3-4f6b-93b6-1ebd06df4ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21a75c9-a05e-4731-bb57-d42ed426c181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66119d24-6fd7-46de-944e-8d42916d9bef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b69ab31e-3e5f-4689-8320-9e051aa281ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9caf7eb3-2470-49e2-9531-70d36275dfc8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fddc98e-b265-43a4-97e9-a6b20190869a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "feeef946-377e-4170-92cd-123586573a2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b456b76d-0d0a-4a44-b86e-5a6c54bc1884",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7e108ce3-a675-4829-8788-d89623d6088d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a2e1677-88ea-4612-a88c-f34fe2738ea7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd980b5b-418b-43ce-a223-40516279579e"
            }
          }
        ]
      },
      {
        "id": "3e2a804e-ca72-4879-882f-e6dfaa922157",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c5a5b33-4900-43c6-9ea4-6a5c2b97db4c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91b35cd5-8fcc-45a6-a6c4-5a2a9e99ebdc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "02765825-f45c-433e-8389-56b432c25ad6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1715b486-db4f-4e56-b8ae-8810ea9b9731",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dece355f-743a-445c-851c-34b99ad92d5a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 237.87301587301576,
      "responseMin": 14,
      "responseMax": 4501,
      "responseSd": 716.8901255624877,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716511021759,
      "completed": 1716511090278
    },
    "executions": [
      {
        "id": "b8aca71e-4ee5-4fb6-b0d3-355570719c58",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "af75a07d-1316-4d19-8fde-72c71ab486e5",
          "httpRequestId": "dbe23ac7-4cd4-446b-9c1a-a082c8d34064"
        },
        "item": {
          "id": "b8aca71e-4ee5-4fb6-b0d3-355570719c58",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "29b5b368-60e1-41d4-8249-a615b849a461",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "b8456e36-f43a-4a94-bdec-9290a4f5512a",
        "cursor": {
          "ref": "7c7cc3be-4af8-46a7-8a4d-7adbcfc8b7b1",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "78005975-f00e-4f36-b7c1-fa77343e3c9c"
        },
        "item": {
          "id": "b8456e36-f43a-4a94-bdec-9290a4f5512a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fd3b6f7c-827c-4054-b273-60215a8b0adf",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "c8a138f9-6128-4bc4-bb26-ad85bb4636fa",
        "cursor": {
          "ref": "2a301938-ecbf-414f-86d3-fbde5d7062b4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "84458ce8-c379-40f6-966b-03e9b5c47ed7"
        },
        "item": {
          "id": "c8a138f9-6128-4bc4-bb26-ad85bb4636fa",
          "name": "did_json"
        },
        "response": {
          "id": "1b147882-8cf0-403e-99ae-767ab7d4b20f",
          "status": "OK",
          "code": 200,
          "responseTime": 448,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900341ce-3c2e-4818-aca9-3f60e90d2100",
        "cursor": {
          "ref": "00d1321c-f642-45ec-9ee0-e7beed66c5d3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d0dde6c9-ee35-43be-b174-71e542a96d56"
        },
        "item": {
          "id": "900341ce-3c2e-4818-aca9-3f60e90d2100",
          "name": "did:invalid"
        },
        "response": {
          "id": "811c119e-0cc8-4900-a764-dcae087faba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2323,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900341ce-3c2e-4818-aca9-3f60e90d2100",
        "cursor": {
          "ref": "00d1321c-f642-45ec-9ee0-e7beed66c5d3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d0dde6c9-ee35-43be-b174-71e542a96d56"
        },
        "item": {
          "id": "900341ce-3c2e-4818-aca9-3f60e90d2100",
          "name": "did:invalid"
        },
        "response": {
          "id": "811c119e-0cc8-4900-a764-dcae087faba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2323,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebd9a92-da28-4004-8332-4f7e4a2b2f94",
        "cursor": {
          "ref": "67efc2f0-e8a0-4554-a1ad-8233f1a351fc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "288eaae8-72a1-4d43-857a-08aad2b0ed13"
        },
        "item": {
          "id": "0ebd9a92-da28-4004-8332-4f7e4a2b2f94",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fcb0dc3e-38c2-40d1-aad9-15885d566736",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2794,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a86ee5-7bc6-4a67-9c63-9452897196b2",
        "cursor": {
          "ref": "dbe415ae-8cca-4f04-a8c4-19fb629a7b14",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5f121ec7-ad5b-446b-be22-9764514cbc0f"
        },
        "item": {
          "id": "a4a86ee5-7bc6-4a67-9c63-9452897196b2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "813957fd-28f2-456a-81c6-8a8676cace52",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2341,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815487f0-c63a-488f-a384-16c8ec269a2b",
        "cursor": {
          "ref": "7aee0f2e-19f4-42e7-9416-538b436b835e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ee79cd45-86bc-4c91-bd17-3a1c3a871979"
        },
        "item": {
          "id": "815487f0-c63a-488f-a384-16c8ec269a2b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "caad5e37-a80b-4b1d-bd41-e1a5540c0e64",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2583906e-4577-435c-8cf9-aee123f7256c",
        "cursor": {
          "ref": "ffbec754-9bd4-4f3b-821d-936fc36966ff",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c5178a46-6a5b-467c-97a4-b804f426328a"
        },
        "item": {
          "id": "2583906e-4577-435c-8cf9-aee123f7256c",
          "name": "identifiers"
        },
        "response": {
          "id": "131920c0-6e4c-4807-8c03-ef722e17110d",
          "status": "OK",
          "code": 200,
          "responseTime": 2089,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce62ed3-c234-4bb0-baba-82ba5541abed",
        "cursor": {
          "ref": "8d02bdc5-b956-42d8-af5a-e53b58132411",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cb3cbcb3-5ee6-4657-84a1-00e4bdaf18eb"
        },
        "item": {
          "id": "3ce62ed3-c234-4bb0-baba-82ba5541abed",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "555c3539-24ab-46e9-8e36-edc071f8f014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57804ade-6ebe-41d1-8b36-d49f425f205b",
        "cursor": {
          "ref": "cba87c60-c761-43a2-9e6e-6618df6a1f87",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "20835006-1411-408c-807a-9d731ef12d25"
        },
        "item": {
          "id": "57804ade-6ebe-41d1-8b36-d49f425f205b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6b660c70-42d7-4801-933e-fb7dfad03629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64ef8ee-66ce-40c9-9b28-c6559a87649e",
        "cursor": {
          "ref": "8bc0edca-9ecf-43a6-a21f-7e7621cf5db7",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3c65e919-7540-49b4-947c-bfa1cca11897"
        },
        "item": {
          "id": "f64ef8ee-66ce-40c9-9b28-c6559a87649e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e36eb64b-3e0b-4f1a-9c7c-868a7803403d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef0db56-9617-46be-8b48-86c594a3c7f3",
        "cursor": {
          "ref": "8027ede7-d8d3-41f2-95d5-ef9ed177bc94",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "be06753e-3ed4-46d1-a2d5-37e2f593c25b"
        },
        "item": {
          "id": "3ef0db56-9617-46be-8b48-86c594a3c7f3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "22d8204e-47ef-4d70-9aba-a4848537f396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a457279-5b24-4ecb-b7f1-64500c4637c4",
        "cursor": {
          "ref": "52311200-9995-4312-8fad-8f011a17190b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7235a8ed-54c4-474a-ad11-554355c140d9"
        },
        "item": {
          "id": "5a457279-5b24-4ecb-b7f1-64500c4637c4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1dc352e2-96bf-4b64-bf57-f695dd4631f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7b9b6a-e6c7-407d-933e-e36b9af29add",
        "cursor": {
          "ref": "d68b6757-0d18-4c9a-95b0-87d7060f2568",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b4a23853-58a6-47a7-88b5-9e8a20264818"
        },
        "item": {
          "id": "ee7b9b6a-e6c7-407d-933e-e36b9af29add",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ef1aeee3-7b6c-469d-a465-848fa8eefc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd58229-cbef-47ad-8377-09f782cc11ea",
        "cursor": {
          "ref": "346c273c-ad8c-465d-87a5-5a8f61825192",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "57a4e888-a0c3-4b99-8335-43142cbc66d7"
        },
        "item": {
          "id": "dbd58229-cbef-47ad-8377-09f782cc11ea",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "87815f19-34b0-4720-8a3a-93ece6b9d809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69768ea8-0b17-49e2-8871-daa9e3fec334",
        "cursor": {
          "ref": "7cd012e5-3733-4af3-93da-1214bbda2570",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c7e4316e-961b-4d78-8bd1-626502323e80"
        },
        "item": {
          "id": "69768ea8-0b17-49e2-8871-daa9e3fec334",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f5eae019-316a-402f-bb04-364e11eccd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7012fa6-af14-4d65-b9c2-0416c8b54439",
        "cursor": {
          "ref": "0af0c394-527b-494d-8c7b-344584152411",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c94be03a-6290-40f2-b65d-6de9a346cf0a"
        },
        "item": {
          "id": "d7012fa6-af14-4d65-b9c2-0416c8b54439",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "080e4db9-17a1-4da5-8c8f-430f1916ef6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04fc175-842b-402e-87db-fcad9e9a4975",
        "cursor": {
          "ref": "14224fa2-a81a-4a2e-be47-5940888b7119",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "991bccbb-5865-4f32-bd3c-b0c3270bca1b"
        },
        "item": {
          "id": "f04fc175-842b-402e-87db-fcad9e9a4975",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "65076e57-532b-4d29-afaa-79bc7cba89e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c302e87-221f-4aef-9efb-edd7a523c155",
        "cursor": {
          "ref": "4a9e75e7-e995-4c9d-adad-c723a5f25020",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "45296195-9605-45b4-8732-c54ed1a094cc"
        },
        "item": {
          "id": "3c302e87-221f-4aef-9efb-edd7a523c155",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "811a6b6e-f580-4df3-8297-005416eecbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ff5109-952a-461f-9ec5-3cbd34eb6ba6",
        "cursor": {
          "ref": "0db3ab1f-6c18-4846-9b0e-39efdb591391",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4540d2fa-487a-4561-b44a-6642adb06735"
        },
        "item": {
          "id": "42ff5109-952a-461f-9ec5-3cbd34eb6ba6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "58121ba0-56e6-4c7c-89fa-a8d7166cf70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764f83aa-3370-4bdb-9f4f-96c4e6d5f5b8",
        "cursor": {
          "ref": "97123787-6ce6-4e1e-8551-79bf921a376b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "413ca7b1-989e-4785-adb6-5be3f9f05a14"
        },
        "item": {
          "id": "764f83aa-3370-4bdb-9f4f-96c4e6d5f5b8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2291f1ad-5b33-4c88-b289-b31d1c71f2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ce94ba-ec8f-4300-8ade-3bbf5c1ea964",
        "cursor": {
          "ref": "3ab10089-7d0d-4544-8490-a0f7c6a4e002",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "79d171f5-21ef-4a0c-8fcb-be075834a325"
        },
        "item": {
          "id": "14ce94ba-ec8f-4300-8ade-3bbf5c1ea964",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3e8516e9-cac2-4ca5-9292-144dc3a2eb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92aa76a-72de-41c8-89ea-5aad359846d7",
        "cursor": {
          "ref": "da744339-4fe4-4864-8ec1-d84e297a3961",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "712fe117-c558-4870-bd35-347697b44566"
        },
        "item": {
          "id": "e92aa76a-72de-41c8-89ea-5aad359846d7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8eb5a376-3447-4219-878b-904672c8ce33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72da2cf0-287b-478b-9e69-68535b8945d5",
        "cursor": {
          "ref": "310ff91b-7f24-4450-9cc4-2eb83694c286",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "902e9935-543d-4860-8ea3-93151e960f95"
        },
        "item": {
          "id": "72da2cf0-287b-478b-9e69-68535b8945d5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "51dd7345-6890-476f-8286-5582f4644aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4078b000-76a4-48a9-81c6-0ad8e55dc734",
        "cursor": {
          "ref": "2a93f369-3c9f-4130-84af-44f485f351f4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b42548e0-89bd-4922-b35b-d79c84211c24"
        },
        "item": {
          "id": "4078b000-76a4-48a9-81c6-0ad8e55dc734",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3ea0687d-927c-4346-93ef-06d8cedeb69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8fd3fe-5b46-4630-8af8-2a9ce6248e00",
        "cursor": {
          "ref": "532fb8c2-f4e3-43cc-8a93-3c022b554585",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bd452c01-947b-4643-9d7b-e534d4d0c1a8"
        },
        "item": {
          "id": "6e8fd3fe-5b46-4630-8af8-2a9ce6248e00",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8634777d-cd51-467b-a90b-b0325720cf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a77507-6cfe-4f33-b22d-ce601aac3ada",
        "cursor": {
          "ref": "75c70abd-5d1c-467b-adae-6962ec03fa70",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "40a488c9-8058-4d38-a46d-470cb1a38dd4"
        },
        "item": {
          "id": "96a77507-6cfe-4f33-b22d-ce601aac3ada",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "487a177e-8216-473f-bee4-002da5d41a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b27e26-1b8f-44ca-b512-32d6e4676ffa",
        "cursor": {
          "ref": "f44d33c3-ae50-40ef-bf32-29f7bbb61158",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ca19efcb-496e-4569-b730-100a5b0adc4e"
        },
        "item": {
          "id": "70b27e26-1b8f-44ca-b512-32d6e4676ffa",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b48f998c-90c3-4418-9436-44186ec26cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49573814-e5fd-4e61-9d01-64fcfc1d2eae",
        "cursor": {
          "ref": "4d3676fd-39e2-4f00-a40e-d576ac41dc10",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "693b06d2-7493-4e12-90a6-79f3443ac4b0"
        },
        "item": {
          "id": "49573814-e5fd-4e61-9d01-64fcfc1d2eae",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3345e9c7-668b-47f2-9956-b59161d18f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9f751c-10ad-4dad-8372-a65737b42570",
        "cursor": {
          "ref": "ac92d188-2cb7-40c6-8753-c1b6efc70859",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6a76a501-e5d6-4e82-b349-035af55d3116"
        },
        "item": {
          "id": "9b9f751c-10ad-4dad-8372-a65737b42570",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "37b2caac-aa7e-46d5-b223-74a7f8e7b401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e02d140-b4d2-4872-958e-9780dcb465d7",
        "cursor": {
          "ref": "87367893-7956-4264-b8c6-47345c093a9f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0ee2d2aa-9015-4549-b5ec-d95501cf6518"
        },
        "item": {
          "id": "9e02d140-b4d2-4872-958e-9780dcb465d7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b513a5f7-bbbd-40db-985a-9c788483323c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9317d4dd-d594-49a8-aea2-52b8ab6a1856",
        "cursor": {
          "ref": "c23b48db-c9dc-4045-bd40-db70dcdb6774",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7f763efe-cd0b-4f1f-9fe4-8217de0e00a3"
        },
        "item": {
          "id": "9317d4dd-d594-49a8-aea2-52b8ab6a1856",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "54885266-767e-4f43-9128-6f2a2342f1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ed8c55-40c3-40a2-afe5-d6d92987f8c7",
        "cursor": {
          "ref": "6041ba40-1fe7-4944-8c8f-e99775983091",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "aeccbdce-fb27-499a-bef1-134aa4f30394"
        },
        "item": {
          "id": "11ed8c55-40c3-40a2-afe5-d6d92987f8c7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8499b48d-bea6-43a9-a8dc-74bde7eeaca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05d5138-2881-46a0-ac38-33ead2787d36",
        "cursor": {
          "ref": "a9aad350-d2ca-41cd-9e4a-39bbe6a994c7",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4984e4ca-d84e-4862-9557-b3b3acbf5805"
        },
        "item": {
          "id": "b05d5138-2881-46a0-ac38-33ead2787d36",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fe2c6672-dd2e-43f8-9e61-6aeb94bd22bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c09dde7-ff15-490f-b5c5-56a9c5271156",
        "cursor": {
          "ref": "941e1a9e-529d-4366-8fee-735c8b7fbb1d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7bceef05-f58d-437a-b646-d657477cd412"
        },
        "item": {
          "id": "1c09dde7-ff15-490f-b5c5-56a9c5271156",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "87cfd407-3833-45b3-b978-615536a5f3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2925fe5-5c06-4c08-bda2-de96f65f5b39",
        "cursor": {
          "ref": "7730389f-2c9e-4dc3-b054-b7e22e57c107",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0dd20405-4e4e-42fb-a15f-77ab939f2db4"
        },
        "item": {
          "id": "c2925fe5-5c06-4c08-bda2-de96f65f5b39",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9206f9e4-db7b-442c-90c8-8cbe79998f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4595175c-1596-4a20-9957-82a726ddf2c9",
        "cursor": {
          "ref": "00be19ed-7f9c-4079-bae8-35c6b6a15f13",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6192b15a-0b2a-4390-842e-ef1d1674a0a2"
        },
        "item": {
          "id": "4595175c-1596-4a20-9957-82a726ddf2c9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3b4a9e92-1977-4624-b727-26e3df2b1c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc61f7e-71cf-484e-ac29-0dccdc24bfe3",
        "cursor": {
          "ref": "ac87eae9-c137-47f6-bab1-e7603ab7f475",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e61e29df-2da5-4f04-ac1e-8b76db6dc70d"
        },
        "item": {
          "id": "acc61f7e-71cf-484e-ac29-0dccdc24bfe3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a0b7aa7f-c5ac-441b-8e81-a0cab0b557ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceeb1cab-e0e1-4179-bfa5-3316d0420dcf",
        "cursor": {
          "ref": "5e7b29c6-548d-47a2-9be1-2c2fd520c165",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4ab12fd5-25c8-4a8f-8cf3-c8f795d95fcc"
        },
        "item": {
          "id": "ceeb1cab-e0e1-4179-bfa5-3316d0420dcf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dbb15a6f-178b-425a-a24b-90525737ae72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a6f7e7-d244-4a9a-9aed-1a91fdb46151",
        "cursor": {
          "ref": "292a0926-37f7-4f1b-9447-53e2aa79ef2c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "75f17cd7-d7f2-4673-9d66-dc8d6cd3517d"
        },
        "item": {
          "id": "74a6f7e7-d244-4a9a-9aed-1a91fdb46151",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0b90a558-43e7-4bef-904f-617dfe6ce83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a176b5f3-3541-4071-846e-0b4f2dca1f58",
        "cursor": {
          "ref": "d79460b9-4084-486f-91d8-ffc903b87eb5",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a8cee3c6-f524-4f59-aa33-917a5ac425a3"
        },
        "item": {
          "id": "a176b5f3-3541-4071-846e-0b4f2dca1f58",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9818f297-acfa-4947-b84d-6c03f18700e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a854f9-615a-475f-b100-aded3d24d4bf",
        "cursor": {
          "ref": "343ad888-9a10-4dcd-9ad9-06f9ec7e7d46",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d0b137f4-898c-4f83-8c2b-4618bc3d759c"
        },
        "item": {
          "id": "b5a854f9-615a-475f-b100-aded3d24d4bf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "72f035df-7aeb-47c9-85ab-e689fb212099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b165802b-754d-4a77-9016-f443ce0862da",
        "cursor": {
          "ref": "b0193765-c887-4ebc-bb8e-6504174a6730",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "85806261-1e79-4bf9-a028-56786a5b0e32"
        },
        "item": {
          "id": "b165802b-754d-4a77-9016-f443ce0862da",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ffa9f461-26eb-475d-abad-bd0d6c425244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad3426b-7c1b-4185-a947-191d267bdfd9",
        "cursor": {
          "ref": "c03cf9c1-fafd-4d2f-8389-dff7a05ea547",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "37cfd2ac-1a60-45b1-9a10-53d39696bf75"
        },
        "item": {
          "id": "dad3426b-7c1b-4185-a947-191d267bdfd9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2f63048f-de63-4980-a560-3894a257e1b3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ed1dbc-a06f-483d-8bfb-6b80717b4678",
        "cursor": {
          "ref": "6b767af6-4dac-4709-92c1-5c04453dc131",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3a221102-ad12-49b6-b42b-4bdc884fe32e"
        },
        "item": {
          "id": "05ed1dbc-a06f-483d-8bfb-6b80717b4678",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "42c951b7-5327-4acd-860d-4e6d829a3a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d918f7-54fa-49f4-b7c3-faa4a4222820",
        "cursor": {
          "ref": "e9838399-27c9-44f1-94b1-eb2bec052670",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5199d034-f13c-4656-a85e-12c908a1bb9b"
        },
        "item": {
          "id": "31d918f7-54fa-49f4-b7c3-faa4a4222820",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d5c9fec6-8c42-45ab-bd35-4d3df0d9eaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffec46d8-c7c1-4855-a633-104992e10f26",
        "cursor": {
          "ref": "ce8219c8-ff88-48a3-a8a1-c0105909998a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "73e5f5b5-a64d-4245-86ec-5b20a4d2ccad"
        },
        "item": {
          "id": "ffec46d8-c7c1-4855-a633-104992e10f26",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3af65d74-57d6-40f4-881c-88fdfda466e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192d002d-07c4-449c-9039-14af72640e50",
        "cursor": {
          "ref": "19f71c9e-8e29-46dd-be40-6c56590617c2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8d74e8da-54f4-4613-8590-aa09a91c23de"
        },
        "item": {
          "id": "192d002d-07c4-449c-9039-14af72640e50",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1fd1ec5f-0454-4ede-a71b-76ad3a934f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5fc098-b279-4774-96e6-766f4d737fb1",
        "cursor": {
          "ref": "98c65451-9ad7-4c4a-beb1-2204d37de860",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "aa17586a-c544-4b59-bb3b-2bdc074fe4e0"
        },
        "item": {
          "id": "7e5fc098-b279-4774-96e6-766f4d737fb1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7ece333c-8c07-44b0-a502-2e835ff1f974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33de0629-b352-49db-9e17-2608b5ea1e1f",
        "cursor": {
          "ref": "15241114-619c-448c-b46e-01f67424c528",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bc268141-2b7c-40b5-889f-815b2dfc0006"
        },
        "item": {
          "id": "33de0629-b352-49db-9e17-2608b5ea1e1f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a30cdf47-7082-44fd-89c6-8e8926a6236c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f7daa9-a782-415d-93d2-e11c416a5e92",
        "cursor": {
          "ref": "f216710b-392f-4ecd-8385-dcfa4bdafe54",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4bbaabcd-620f-4528-ac62-9438a3c43fcd"
        },
        "item": {
          "id": "d7f7daa9-a782-415d-93d2-e11c416a5e92",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4d0a173c-8b03-4c8e-b278-bac7d75ee3e3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4957ba0b-798a-4889-8f35-4b55557cb052",
        "cursor": {
          "ref": "5dfe496b-acde-4a49-ade3-0339c8125bf0",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7f8a0554-a7ac-4f92-a726-44d7759a810d"
        },
        "item": {
          "id": "4957ba0b-798a-4889-8f35-4b55557cb052",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c6e736b6-9c78-41e4-8c4e-6bc7bc5582de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30825cb0-0994-4254-b19a-a13bbf7ee66e",
        "cursor": {
          "ref": "39ff8aa8-76d8-4249-bd7d-b60f324430fa",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2a2cbdfa-67d9-406e-bf0a-c16fb654f4bf"
        },
        "item": {
          "id": "30825cb0-0994-4254-b19a-a13bbf7ee66e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "903638b6-1c08-48c7-a2a0-312df9ffc0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9270d5-4f27-4846-974c-437acc2db261",
        "cursor": {
          "ref": "a59b9c50-6317-4544-818b-ea2e607d16d4",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cc4c9e52-5b43-4596-aca3-d36f5100ee08"
        },
        "item": {
          "id": "5a9270d5-4f27-4846-974c-437acc2db261",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c616d677-7fcf-4b45-9460-79e376a99c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8c56dc-88e5-46fa-8783-20f77b23752e",
        "cursor": {
          "ref": "4991f778-ec1a-43a4-bef7-e31a139de97d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f4b7b225-11ab-4e59-8ec9-af91bff848bc"
        },
        "item": {
          "id": "6d8c56dc-88e5-46fa-8783-20f77b23752e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e078a683-607b-490f-88af-9a8f77c571c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d73e200-2fcf-49fc-a191-4fc1b37cbd23",
        "cursor": {
          "ref": "badde5ed-83d3-45ab-9d1a-6c293eedb3d4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "336e807f-d566-4f25-99f5-0b346f38d612"
        },
        "item": {
          "id": "7d73e200-2fcf-49fc-a191-4fc1b37cbd23",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9e82f382-7a1b-4aec-bed4-27a2d1e12379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85cbd8e-05fd-4a61-9194-43d8c23d3719",
        "cursor": {
          "ref": "e2281f78-fc81-4901-93ed-e0f04505d225",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "630651d0-0b0c-4fe2-af29-cfc33843e258"
        },
        "item": {
          "id": "e85cbd8e-05fd-4a61-9194-43d8c23d3719",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ff9d2995-4916-4111-ba65-90892f87a639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b6a50f-99c1-437e-80d1-965aed36d6a6",
        "cursor": {
          "ref": "b7a49cfb-a98a-4aef-a7de-58a4d31d49ee",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5532ecd0-6f8d-4692-931f-d7cea80b1822"
        },
        "item": {
          "id": "05b6a50f-99c1-437e-80d1-965aed36d6a6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ba7b672b-452d-4bcf-a59d-5b08e3913d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ddf6b7-1ef2-46ec-a1f9-0bee67f9f954",
        "cursor": {
          "ref": "e702f5ad-9bda-4d31-918f-1c63a08db536",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d561d5d5-c5bf-4b1d-a36e-ca75a40ca677"
        },
        "item": {
          "id": "a9ddf6b7-1ef2-46ec-a1f9-0bee67f9f954",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2df41b18-8d87-4aa8-86f1-f113a10647a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d3d4fd-1aec-49de-b2cf-35c8390221dd",
        "cursor": {
          "ref": "1bcc710c-1909-429d-8abe-896bf4fc69cc",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b39560e6-f202-48f0-b2f4-7ae9af7d4dbf"
        },
        "item": {
          "id": "f9d3d4fd-1aec-49de-b2cf-35c8390221dd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "10708495-d82d-4ed9-bfa3-dc62e2852efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92e1f5a-0f85-45a7-b7a8-49603ba663c8",
        "cursor": {
          "ref": "80c966b4-50ac-4ad0-9c6f-6d2a6066f851",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "06c9d28f-21f7-446a-b9b8-b1a53affba90"
        },
        "item": {
          "id": "f92e1f5a-0f85-45a7-b7a8-49603ba663c8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "02248c39-dc52-4a31-8378-2a6e2c0d21c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b396def7-eb2f-459b-b7cc-a78595040f84",
        "cursor": {
          "ref": "19fe8d99-3961-4ba7-92c6-d038e443434c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "99215d48-ffd4-4cbd-a50e-efecdf58c5b9"
        },
        "item": {
          "id": "b396def7-eb2f-459b-b7cc-a78595040f84",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d2bcc253-40cb-4aa8-a0e6-322224e81349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49811916-3ec0-498f-80e4-fa6b57d24171",
        "cursor": {
          "ref": "4e3ff432-e0b2-4ea8-8ca6-e53c4325277a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8241653d-11be-4491-b717-8e84127b1d4a"
        },
        "item": {
          "id": "49811916-3ec0-498f-80e4-fa6b57d24171",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7e724063-785d-4693-9a82-1d25914dea17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04efe68-ad5f-455c-ab2f-7b1cc6f3edc4",
        "cursor": {
          "ref": "0f0b7a98-c979-47c4-9eac-4206450d9edd",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4a5efb87-bb8d-4b54-a119-ac4f2f2f853b"
        },
        "item": {
          "id": "b04efe68-ad5f-455c-ab2f-7b1cc6f3edc4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0977bde0-db17-4222-bf38-be9714a392de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de985a2c-a618-4b9a-92c9-559f0c786d9b",
        "cursor": {
          "ref": "c48006dc-7a5f-4f16-9fd9-20df7c81552a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a0ef8b49-6164-406c-8b24-ea5c53e70e89"
        },
        "item": {
          "id": "de985a2c-a618-4b9a-92c9-559f0c786d9b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d83fc18d-05f2-48bf-8c89-57104dffb9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3c2f62-2bee-4ec6-9258-7fff0027454a",
        "cursor": {
          "ref": "18431bbb-d865-410a-a6c9-1a4bb4b0e53f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f3852b8e-bb12-4399-b3fe-f8c3e813d668"
        },
        "item": {
          "id": "0d3c2f62-2bee-4ec6-9258-7fff0027454a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2822bf49-f625-41ff-b0d2-b27568097713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644977d3-cc99-494e-990d-35385411e392",
        "cursor": {
          "ref": "4cf60996-1795-411a-8231-894df76fdb09",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cb2459ef-dfcd-419b-81fa-10feea98f79b"
        },
        "item": {
          "id": "644977d3-cc99-494e-990d-35385411e392",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "76e6cbc9-343e-464f-8570-78ce1e9ec9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f588e25-dc0b-44a1-bb10-d5f4ce93187a",
        "cursor": {
          "ref": "2ffb067b-d77b-4e89-b5fc-6dbdbd4ed256",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "55814a10-8c74-40d0-b64c-8bb35cb5a055"
        },
        "item": {
          "id": "8f588e25-dc0b-44a1-bb10-d5f4ce93187a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f3b6d348-4c2d-41fd-9023-1c653dbed06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a3da78-15f2-489e-8898-46ea70a935a5",
        "cursor": {
          "ref": "a03c6660-e612-4319-8e9a-24c44182cc18",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2dd7a6b5-0e7b-4769-b7ac-aefe28b40de4"
        },
        "item": {
          "id": "27a3da78-15f2-489e-8898-46ea70a935a5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "330fc800-c5bb-4f60-9364-67a3b19860b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b60515-017f-45b2-8ea1-f5114b3ddb2f",
        "cursor": {
          "ref": "cfac462a-b3ed-42bc-8f2b-0bd5b6bf7eaa",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7b2463f3-a95e-4e5c-b768-ae125b95fe86"
        },
        "item": {
          "id": "92b60515-017f-45b2-8ea1-f5114b3ddb2f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "285031cf-4e74-4189-a459-ccc0c66bd264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c97811-64aa-4d0c-be00-07a19d360349",
        "cursor": {
          "ref": "538c3880-a047-48a5-bfc7-78f210198b33",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a208854c-b677-4ed0-adf4-f2728da10116"
        },
        "item": {
          "id": "d0c97811-64aa-4d0c-be00-07a19d360349",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "29f9b7e8-ba4a-4983-ba3f-15891337ce56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b78315-f7a0-4802-9e94-6bd70b788e1f",
        "cursor": {
          "ref": "910130d1-83df-49e0-bf41-7172aee1e8de",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6bbd163c-ffb6-496c-9fbf-f39d1011605c"
        },
        "item": {
          "id": "28b78315-f7a0-4802-9e94-6bd70b788e1f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0bc86f86-d71d-4596-84b6-0ba9fd2f1b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25088d65-579a-4e71-9090-6eabeb6ab314",
        "cursor": {
          "ref": "fd2700ef-1b7d-4ded-b809-972b3ee45ed9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9c2fa038-9644-4e27-adc7-7da686728a82"
        },
        "item": {
          "id": "25088d65-579a-4e71-9090-6eabeb6ab314",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "13f25ee7-520b-414a-afd3-407a97a893c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cecc3a4-92c2-4a17-9d07-82829181ded0",
        "cursor": {
          "ref": "31a3d193-c92b-4ce6-bc7b-51fcb7e87632",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1c2eb43f-e457-4440-8817-e6b6745fb4f9"
        },
        "item": {
          "id": "0cecc3a4-92c2-4a17-9d07-82829181ded0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ad295017-2bce-43c9-901f-6101309b8fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967b5d93-597e-42fa-880c-a0f31ded3bf9",
        "cursor": {
          "ref": "01e82e24-9db8-4d79-ab5d-e8ff17fe40ad",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e092db20-614c-49d8-a463-17be970ddc88"
        },
        "item": {
          "id": "967b5d93-597e-42fa-880c-a0f31ded3bf9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ab2e42b1-d312-458c-aca7-7c414a749044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41bce5a-7b38-4cf6-b7b1-247a2efb785b",
        "cursor": {
          "ref": "fe9b3464-d1c7-4f87-9449-af979335d3a5",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5f0dbcfc-a861-4bfb-afc8-c805ca016247"
        },
        "item": {
          "id": "d41bce5a-7b38-4cf6-b7b1-247a2efb785b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4edc265c-dbc5-4998-871c-88eec459e424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7db94f9-614e-4aba-b1f9-273571677459",
        "cursor": {
          "ref": "be54cfc6-43b1-4973-8559-4697f99b17a9",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6a381c8c-edf2-4ad9-b057-b7abf8c05506"
        },
        "item": {
          "id": "c7db94f9-614e-4aba-b1f9-273571677459",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3541be25-c7ad-4581-8d8a-6557219c785a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7c49a5-efdb-4f6d-a213-f8eaf2c0a4d6",
        "cursor": {
          "ref": "79590428-3b12-4b08-b7a1-51e27a4d808f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e671250a-0a26-4f13-8121-01f24ea0b024"
        },
        "item": {
          "id": "4c7c49a5-efdb-4f6d-a213-f8eaf2c0a4d6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3a2f3304-4840-4b97-946e-3bed2e3d20bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9623770-389b-47b1-94c3-80efa32dfa5c",
        "cursor": {
          "ref": "d2188ee5-b9c9-4bc4-803a-f151d70ba971",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "05e400a2-1069-4371-b527-aa2facf25804"
        },
        "item": {
          "id": "d9623770-389b-47b1-94c3-80efa32dfa5c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1e2c33fc-6a56-4ab8-8406-8ccc5c95b3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e59eac5-1e98-4b46-b08f-354726d76dd3",
        "cursor": {
          "ref": "e4ff9c1e-e0a0-4d23-8f14-0b59a95e05c1",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a0656d96-27d9-400a-b313-98b6ca49d96b"
        },
        "item": {
          "id": "1e59eac5-1e98-4b46-b08f-354726d76dd3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "104c7b34-41d5-42df-89c7-9e68a6135b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed83a9c4-8b2d-4e66-aa02-fd440ce3ebb4",
        "cursor": {
          "ref": "3b96b8d7-0797-4e82-8b1d-506f3bcc38ef",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b53c2e39-fc03-4e8d-bb5c-686314a5b8cc"
        },
        "item": {
          "id": "ed83a9c4-8b2d-4e66-aa02-fd440ce3ebb4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "98ce907e-2627-4474-bb5a-09b98e62d393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f2d3b5-573d-4065-9b0c-fb93fb2267ad",
        "cursor": {
          "ref": "d503291d-fb7b-46b0-9d04-e015f4d3af56",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cadb4648-220f-4879-87ef-2153c7e07f49"
        },
        "item": {
          "id": "f2f2d3b5-573d-4065-9b0c-fb93fb2267ad",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "981b169f-680c-4bb9-b227-fd3f1580326c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d81bfbe-ced5-4fd8-b73e-3bc406653ab1",
        "cursor": {
          "ref": "89d3abaf-1145-41b1-997f-3f1fceb53c85",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e36ef84a-4995-4a22-9453-b7cfb599c880"
        },
        "item": {
          "id": "8d81bfbe-ced5-4fd8-b73e-3bc406653ab1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1d967fcc-7f76-4c62-b3fa-400be1dd6f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43aa7f4d-e926-473e-8c21-e2428e707db6",
        "cursor": {
          "ref": "e215de23-63f8-47fd-9bc4-e139b5fcc28e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "828b4c1f-293e-4dcf-9427-4997e9feb2ab"
        },
        "item": {
          "id": "43aa7f4d-e926-473e-8c21-e2428e707db6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b037857b-1107-4e35-92d4-261cfbe5af0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdb7fd3-1638-483c-a6b4-f82e27a473ff",
        "cursor": {
          "ref": "d286b1de-7606-4b61-b793-cc61c8c093d1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "46c5ed19-167d-48a6-9e5c-b4a001c01d6f"
        },
        "item": {
          "id": "fbdb7fd3-1638-483c-a6b4-f82e27a473ff",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1a93fa14-c183-4cc9-a06e-6f3627b8bab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ae4795-b023-425d-acf4-04ba25a508fa",
        "cursor": {
          "ref": "754329f2-89af-402b-be2c-f7795b3531bb",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c87bb190-ee92-4808-b2f0-f94237649bfa"
        },
        "item": {
          "id": "77ae4795-b023-425d-acf4-04ba25a508fa",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c1835f95-6747-45ac-8731-091e535196c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4dad8da-ab7a-45f1-ba38-fa4c33fc6f2e",
        "cursor": {
          "ref": "bf702ee2-1194-4b2e-a2e7-83d56940fe60",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e873e8b1-dc2f-4b2d-8051-bdf45df70c21"
        },
        "item": {
          "id": "d4dad8da-ab7a-45f1-ba38-fa4c33fc6f2e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a4f0ab3f-6625-42b2-b83b-d4d4cc76378d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83a96be-f26d-48ae-98d2-a306a38c1112",
        "cursor": {
          "ref": "ea1b77b0-89cb-4e7a-b766-345eb8615b3f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "53010dfb-453b-4223-95ba-789034eac5ea"
        },
        "item": {
          "id": "c83a96be-f26d-48ae-98d2-a306a38c1112",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "add2d402-348b-4d9c-84bc-ca3c5199b461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9a281d-67fc-4df0-8269-5e947c5a5a3c",
        "cursor": {
          "ref": "6f14ec27-7e99-420e-a0a1-c7d76a3a8c4b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "73ea3a5f-5400-4742-a718-519779ca06b2"
        },
        "item": {
          "id": "ef9a281d-67fc-4df0-8269-5e947c5a5a3c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3463c409-ca4c-406e-8add-e43dfdd844a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e642ef17-efa2-4b41-b781-52297f11fbdb",
        "cursor": {
          "ref": "bd6246f4-e188-4fd0-85fb-6ed7f6fccff3",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f2cbb602-72c5-4cde-89c8-a8dad3e5a490"
        },
        "item": {
          "id": "e642ef17-efa2-4b41-b781-52297f11fbdb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f438c8d9-9f2f-4ea9-9441-b4c1631c91ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18f5a3d-05f5-45d9-8ebb-d3141d663f28",
        "cursor": {
          "ref": "b5be3fd4-726d-4e31-8f3f-9a8a4bbdad0b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "38fb1095-d1a9-4054-b2b9-b3fa2e80ea6f"
        },
        "item": {
          "id": "d18f5a3d-05f5-45d9-8ebb-d3141d663f28",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2db24d47-a643-44c1-8337-a8c004eeaeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac835c7-41b4-40b3-9e3f-8ddbca7c0adf",
        "cursor": {
          "ref": "c552d999-83a5-487b-aca6-9e509bb1af47",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ef880675-7b0e-441a-86ce-8aa216625c4b"
        },
        "item": {
          "id": "6ac835c7-41b4-40b3-9e3f-8ddbca7c0adf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a83be6e8-3d45-45ee-88e3-3d9302eeb58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bbba84-a8ed-49ca-970b-9116d2b8bdd1",
        "cursor": {
          "ref": "919e88a7-ff38-4afe-a6ae-87936498be89",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "09607c00-e1b9-4a6c-8932-3d619830825d"
        },
        "item": {
          "id": "e2bbba84-a8ed-49ca-970b-9116d2b8bdd1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1d11138e-b1c4-44f2-aa89-d5b628de61db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a8d38a-15bf-479f-b548-fa31bd4efaa6",
        "cursor": {
          "ref": "b5a5a7b1-dabd-46c2-808e-2f17f67b1769",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "40ac4313-d56a-4be0-8410-86323eacb7d4"
        },
        "item": {
          "id": "52a8d38a-15bf-479f-b548-fa31bd4efaa6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0c37b1c9-2463-45a9-8490-28858bb75c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88807cd9-f6d6-4542-89ec-7a31023607a2",
        "cursor": {
          "ref": "10ad9139-f893-402d-997e-ab5a5ab47862",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "63c53258-d92d-4657-a9f8-050b30c190be"
        },
        "item": {
          "id": "88807cd9-f6d6-4542-89ec-7a31023607a2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9dd058c3-1de6-4ebd-bf38-589c91ec2867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e411e20-82fb-41de-a3ee-56c037734efc",
        "cursor": {
          "ref": "009e3ecf-fa63-4048-994c-03ff51b7571c",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "60e2b66d-ba2d-4493-a589-ef6367863630"
        },
        "item": {
          "id": "9e411e20-82fb-41de-a3ee-56c037734efc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "990befd2-a0b7-43a3-a307-ecbc912150ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8089838-33d5-48b6-8166-c33f913d2753",
        "cursor": {
          "ref": "4ebea8b1-578c-475e-80e4-47fcd2a142a4",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4dd9cc0e-96d6-4af4-bf43-0965748bb1f0"
        },
        "item": {
          "id": "c8089838-33d5-48b6-8166-c33f913d2753",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fb3b831e-847f-4a2d-bcc5-42fc4e2baf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803d2d44-70cc-4d1e-bdfa-6679a70d2ee5",
        "cursor": {
          "ref": "d3968dc2-c613-4b8e-8941-5a54e6b3125c",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "281d6d3b-4623-4441-820d-122758d1cc7a"
        },
        "item": {
          "id": "803d2d44-70cc-4d1e-bdfa-6679a70d2ee5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "52232f8d-e7d7-4648-94aa-22b1f34ea8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d66e40a-3c3f-4071-9d77-19c628ab2eae",
        "cursor": {
          "ref": "a7130a09-3623-48ff-8956-24861a279eaa",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "973f6b28-d010-42fd-964f-b0d4ebb8e155"
        },
        "item": {
          "id": "9d66e40a-3c3f-4071-9d77-19c628ab2eae",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "109f2a83-4379-4469-951a-2c3b35933f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca57b229-30a2-4a12-a8b2-4f9c69d3de47",
        "cursor": {
          "ref": "d623d87d-afb8-4f52-a4b5-24395e2b66f9",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ea6cd0f2-45db-49bb-a911-2584ae8df7a8"
        },
        "item": {
          "id": "ca57b229-30a2-4a12-a8b2-4f9c69d3de47",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7229a379-5516-4e0c-8702-16d14006cb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06fa856-4559-4106-8b3d-5ae5bce5b036",
        "cursor": {
          "ref": "28b1c3e1-e204-4abd-a7e2-6458dbdd8f3a",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2202f0dc-fc74-4455-98ab-596071679745"
        },
        "item": {
          "id": "f06fa856-4559-4106-8b3d-5ae5bce5b036",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "75962f92-4b66-4470-9b29-196f0355d5ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bea940-b42a-437d-8e57-ef46a86b157c",
        "cursor": {
          "ref": "854f867f-ea8b-4b2e-8e6d-62b3bf397f82",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9db46c5e-c7dd-4864-9dfc-4644ecf1284c"
        },
        "item": {
          "id": "a7bea940-b42a-437d-8e57-ef46a86b157c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "85e0fcd2-ea00-4a63-bd21-abc4a1211d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "bbc9b888-8d25-4627-9d65-74731b3dce3f",
        "cursor": {
          "ref": "b51ee42a-4b0c-48f9-8eeb-472aeddfad62",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "98d07c1b-2413-41cb-a2bc-8acab7e59653"
        },
        "item": {
          "id": "bbc9b888-8d25-4627-9d65-74731b3dce3f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8e6c3425-400b-40df-b00e-65b6c79ab6a9",
          "status": "Created",
          "code": 201,
          "responseTime": 4501,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fde5953-ddcf-4c51-8e0b-16978679fa73",
        "cursor": {
          "ref": "d7845f9f-79ce-4261-a134-0eea9336e01f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "498cf0b5-2095-4536-9824-2747294ffeb5"
        },
        "item": {
          "id": "7fde5953-ddcf-4c51-8e0b-16978679fa73",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cf869024-ec68-4407-92a5-0ee4f0225903",
          "status": "Created",
          "code": 201,
          "responseTime": 3913,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b854a276-0abb-4162-929a-e3ca9faaab1e",
        "cursor": {
          "ref": "a042d81e-fea3-48c5-a902-c570d2c3807d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ee743275-5412-41e1-bc3d-d46c01e97dbf"
        },
        "item": {
          "id": "b854a276-0abb-4162-929a-e3ca9faaab1e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5d82acf1-a854-4640-8225-4b99bf625908",
          "status": "Created",
          "code": 201,
          "responseTime": 3915,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d82bb2a-e28c-41ea-89c0-4505a3327f42",
        "cursor": {
          "ref": "8ea6d7f4-e6e6-4a54-aca6-6d275f8f6724",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e4f8c5c4-e75d-4ff8-a386-79ee2c7b7e47"
        },
        "item": {
          "id": "9d82bb2a-e28c-41ea-89c0-4505a3327f42",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "70c0abff-a518-4d96-b636-83752681cb65",
          "status": "Created",
          "code": 201,
          "responseTime": 4062,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3909bce1-b6d0-4f2e-b432-ec49388ab219",
        "cursor": {
          "ref": "1f4e1fb2-9909-471b-a082-40a5f86a27ed",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "80195503-6570-4740-a43a-13fa0b259634"
        },
        "item": {
          "id": "3909bce1-b6d0-4f2e-b432-ec49388ab219",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "75501141-ed86-4aea-ace2-7abbed9d40ee",
          "status": "Created",
          "code": 201,
          "responseTime": 4185,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-05-24T00:37:43Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-05-24T00:37:43Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "94e9c31d-e8c9-46fb-817a-150200b5fb1a",
        "cursor": {
          "ref": "ba98e1da-2bc5-4a8c-8191-960a138f4857",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "599caddd-9b04-44ab-8988-a933d8231bf0"
        },
        "item": {
          "id": "94e9c31d-e8c9-46fb-817a-150200b5fb1a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "61b0b5f4-c68e-4a66-a8da-4a6b83d95126",
          "status": "Created",
          "code": 201,
          "responseTime": 3945,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98beeec1-23ab-4af7-9487-19f8f70869b2",
        "cursor": {
          "ref": "eb0ac3ca-baae-41a5-a346-1596e352b536",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ea0b0e92-9571-48ed-adc0-4f80349d75cc"
        },
        "item": {
          "id": "98beeec1-23ab-4af7-9487-19f8f70869b2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9f615629-8599-4c36-b663-f13d0ffeed81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30abb16b-e834-439f-9026-91ab91abe02d",
        "cursor": {
          "ref": "ca22c1e8-87f8-4d9e-a435-67ec9fde6d85",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e885abe6-f7e9-46a2-91ae-de890faeb064"
        },
        "item": {
          "id": "30abb16b-e834-439f-9026-91ab91abe02d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e7ea45d5-ab4f-4e1c-9735-8b7679501f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a8bede-f17e-4305-8aa2-dea9f39ef16b",
        "cursor": {
          "ref": "b32d59e7-a2a5-48f9-ad91-9d47cea98dfb",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "88e5cd40-1241-460c-85c3-403a2485ab06"
        },
        "item": {
          "id": "62a8bede-f17e-4305-8aa2-dea9f39ef16b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "42c305e3-a1ab-4c94-b44e-d89ff45ce790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94bcc9a-ade7-449a-a4f9-a2fb05999a2b",
        "cursor": {
          "ref": "ecad9801-103c-459f-935b-f4f199a1533a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "aec7a0ee-9dea-4dbb-84c7-cd4901a24153"
        },
        "item": {
          "id": "c94bcc9a-ade7-449a-a4f9-a2fb05999a2b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0a57fe0b-160c-40ee-ad75-85c62cca865b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15882599-08c5-4515-a8a3-9defb5eede60",
        "cursor": {
          "ref": "8e3f141d-c60e-4d21-89d8-7ecca2386194",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6348b718-59e4-4b55-a379-41600885e9d5"
        },
        "item": {
          "id": "15882599-08c5-4515-a8a3-9defb5eede60",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "64bd3ce4-baa7-4769-a86b-7dfc4777930a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907f3c03-d3ee-43ae-9822-cb142760b80d",
        "cursor": {
          "ref": "8891c97f-fd76-45e4-9937-d0f265ccff8b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "54183e4d-8e07-4008-8ce4-9ed332cd76a3"
        },
        "item": {
          "id": "907f3c03-d3ee-43ae-9822-cb142760b80d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3258df3a-6f65-4a19-b8ef-8b6a29488360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decb022f-82a6-4b81-8d55-ca840e671a6b",
        "cursor": {
          "ref": "7ef89e93-d35f-4136-a1c3-5ba6ea93b58c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4fc5f1b4-c194-41ed-9793-ec7eee47f607"
        },
        "item": {
          "id": "decb022f-82a6-4b81-8d55-ca840e671a6b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0a7076ff-69b5-4fbb-a52d-48162528c7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba34b5f-4779-4197-afe3-467033b7c47b",
        "cursor": {
          "ref": "f1ca2a5b-5756-483a-b7e4-328b3d2e14e3",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1c31e13f-da63-43b9-bef4-c92b45d9a3e1"
        },
        "item": {
          "id": "9ba34b5f-4779-4197-afe3-467033b7c47b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "81d0d152-d8b6-4acb-b9db-4762260ff620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18998116-f537-4f4b-b13d-d71929c016c5",
        "cursor": {
          "ref": "07288f1e-9ed8-4c09-b81e-3ca3ca4478c1",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2d0ab27b-36c6-4acf-8356-a648d23e0437"
        },
        "item": {
          "id": "18998116-f537-4f4b-b13d-d71929c016c5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c52cc23e-a517-438f-8178-ebb0153ae736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0633eaab-a7b8-47f0-bea7-3873991b1ce4",
        "cursor": {
          "ref": "dfeb9681-1603-4388-ba0b-a3e7070dc995",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "054fe038-a779-4de7-b86a-0ddbd285960a"
        },
        "item": {
          "id": "0633eaab-a7b8-47f0-bea7-3873991b1ce4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "30423749-c2ff-45d9-9264-69b367f9427f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dc97a5-3f33-4d4f-acb3-2aa91f5e5663",
        "cursor": {
          "ref": "635fe166-9a40-46aa-9d07-eb26bf96d9f2",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3169aaa6-44e7-4e1c-b207-5e7866c4cb1a"
        },
        "item": {
          "id": "f2dc97a5-3f33-4d4f-acb3-2aa91f5e5663",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7893a056-bf42-42d3-b0f1-94acf40d1a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035f98f1-cb4d-4120-bf05-cdd35af9974d",
        "cursor": {
          "ref": "e171d0da-ef82-41ce-9bff-62fa194dac91",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3c2baf63-d5b5-4c01-9e3e-a94bd3449e01"
        },
        "item": {
          "id": "035f98f1-cb4d-4120-bf05-cdd35af9974d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "10d61c98-b600-4378-92d4-7e7f059d628b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ccfb40-2383-413d-9363-408003ee10c1",
        "cursor": {
          "ref": "ead649a2-f1a9-4dd2-b1b9-acc3d7003898",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7c17fae9-8a55-4662-833a-340bf437a862"
        },
        "item": {
          "id": "36ccfb40-2383-413d-9363-408003ee10c1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "aff03d40-bd04-4dd7-907b-4f2884cae3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6a4501-fff1-4678-bb5a-0777ec7e9317",
        "cursor": {
          "ref": "65318187-a152-4622-a7c8-1e9ed630fe83",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c562c6a3-59eb-4012-aa2d-4189f634f4a0"
        },
        "item": {
          "id": "1c6a4501-fff1-4678-bb5a-0777ec7e9317",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bd5d8b13-17ce-473e-a99d-320f2bb14826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152889f6-97b7-4864-b1e1-f4ab0707a7d0",
        "cursor": {
          "ref": "6bbf8c85-c0fb-4b80-adc0-aac4a4156a4b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "484e538a-e266-4097-a886-b45d18e56d4b"
        },
        "item": {
          "id": "152889f6-97b7-4864-b1e1-f4ab0707a7d0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "83fe66d8-a327-49aa-be05-5d580f647cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a6327e-112b-4716-a3cf-d63c1c086ac5",
        "cursor": {
          "ref": "dc6398b0-6c9e-4cae-8cbd-b24af3ff9ea1",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "491ee009-70e4-40c3-9c3c-0444a2c10560"
        },
        "item": {
          "id": "c5a6327e-112b-4716-a3cf-d63c1c086ac5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8d6c4d00-e5dd-45f6-8f39-0efcd00e6933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8cd218-c30f-47ae-bc22-b5272d75a8d9",
        "cursor": {
          "ref": "49f82d7c-583e-403b-b208-59abfd0eed32",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d22abcdf-ce50-474f-a2c0-b2dafd42b64d"
        },
        "item": {
          "id": "6b8cd218-c30f-47ae-bc22-b5272d75a8d9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "985971a6-8a10-46d0-97c0-9412364ad483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1810e236-1f29-4915-8353-ecb1db48bd5a",
        "cursor": {
          "ref": "32610afc-31e8-4bef-97e6-f6fd03bb8bc8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9fa4f688-5c5e-4b64-97bd-4a32e6ae68a9"
        },
        "item": {
          "id": "1810e236-1f29-4915-8353-ecb1db48bd5a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9ff0744e-a5f9-4b94-a8bb-3e5868dc74c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9238972-b087-4322-92dc-ca376e7fad56",
        "cursor": {
          "ref": "134bd426-7399-4108-8bcc-2b8584754bd7",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "61114d9e-f728-42bf-ae46-fe173e2d8984"
        },
        "item": {
          "id": "f9238972-b087-4322-92dc-ca376e7fad56",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "07bce48b-948a-46ac-9192-0e7c0c2af480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01daa3b0-6024-4f86-acb2-89a197999250",
        "cursor": {
          "ref": "ae141aa3-6d48-4080-b7ef-12de78987d4f",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a896595a-dcb4-44db-9cc3-e0f1d7cabeb2"
        },
        "item": {
          "id": "01daa3b0-6024-4f86-acb2-89a197999250",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8304a575-4499-48e8-acd2-3e276c2d64c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d9c582-d7dc-43c8-ab2e-90aa7a1ed23b",
        "cursor": {
          "ref": "11c3ba6f-8858-4e78-9b4c-0b7f324b18c6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "560965bf-7bf8-4134-b3c2-8ad418fa7ae5"
        },
        "item": {
          "id": "59d9c582-d7dc-43c8-ab2e-90aa7a1ed23b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4983955f-d5fe-4c42-a28a-3da5f23cc459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b70edb-4357-4054-b73a-64a0d7cf1bfa",
        "cursor": {
          "ref": "4604e431-ce66-423a-829c-ce9bf8ee251d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2a815722-3303-4515-b730-5a869fff1573"
        },
        "item": {
          "id": "54b70edb-4357-4054-b73a-64a0d7cf1bfa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "11c504c6-f378-4b85-a917-26f979a86f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231a881c-fa98-4c39-99a9-534f1e945006",
        "cursor": {
          "ref": "b03921b1-c0ab-4f09-a195-748829f8fbb7",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2fce7a3e-6301-4820-ac00-3c3b262e121e"
        },
        "item": {
          "id": "231a881c-fa98-4c39-99a9-534f1e945006",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "94e1a6cd-99b7-43e9-b9c1-cbb8abbf03d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab2d683-002e-432a-bdd4-c6dc743fe9b1",
        "cursor": {
          "ref": "182248d6-cb71-4e92-84fa-af65a6f42b14",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "34f9cde3-b9c8-487e-95b3-8a9496b90d9b"
        },
        "item": {
          "id": "eab2d683-002e-432a-bdd4-c6dc743fe9b1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "40e23f0b-4002-4616-aa83-52e2aa0e9d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d54964-d982-4ee2-9351-4b2b823e1444",
        "cursor": {
          "ref": "56cf23e6-caf7-49a4-bb15-443b986a087b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7b4a9563-e1cf-493f-a0d1-666bcabc412d"
        },
        "item": {
          "id": "28d54964-d982-4ee2-9351-4b2b823e1444",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9beb90e1-a8be-4cfa-99c8-dde00731158d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef80ea51-a02a-4b9d-b298-1762d0266571",
        "cursor": {
          "ref": "6a2b7c6e-e405-4f74-a652-95a92f2c995d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7aaaa355-0af9-4450-97eb-58e474053504"
        },
        "item": {
          "id": "ef80ea51-a02a-4b9d-b298-1762d0266571",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f93dd4f5-bef8-4855-87cc-cbab66d95c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1937c8a3-6db1-4367-9eca-24c2e93a6080",
        "cursor": {
          "ref": "81c4c484-5220-46eb-b8d3-fa462beed8df",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5f9a8e91-df56-4e50-bed4-a1620baf53d8"
        },
        "item": {
          "id": "1937c8a3-6db1-4367-9eca-24c2e93a6080",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bab3f579-2603-477e-b4d6-e26bf7363175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a259133-8f8a-4c38-8792-401084817033",
        "cursor": {
          "ref": "c08a53c2-974d-4152-a8bc-f0bb7a9acb41",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "320836c3-2a79-4a60-ac12-f8ea4711f763"
        },
        "item": {
          "id": "8a259133-8f8a-4c38-8792-401084817033",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cd6350f1-fee6-4c97-ae8a-3de1c4ce2554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105d78f2-f267-4074-8d45-67d20258ff49",
        "cursor": {
          "ref": "39657f7d-5f51-4a33-83a2-c391591f7948",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2c626778-4509-467a-a96e-b3f1a08ed926"
        },
        "item": {
          "id": "105d78f2-f267-4074-8d45-67d20258ff49",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "05c64dd7-f05d-4902-b61a-890a6c1c3e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598aeabe-ab0d-4122-b41e-9d0756c6834e",
        "cursor": {
          "ref": "34b5b7f6-146e-48cc-86d0-5babb6521a65",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f38ff051-80d6-4361-9f73-c1068fbc685a"
        },
        "item": {
          "id": "598aeabe-ab0d-4122-b41e-9d0756c6834e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "65c9284b-3381-4c2d-bf94-7f28f66a4b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6da9c1b-45f2-4ff5-9308-464cd3facafc",
        "cursor": {
          "ref": "e28898aa-ec4f-4965-b698-f720edcb2a7e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "61edf8dd-4d59-4e0a-b037-b609872c134b"
        },
        "item": {
          "id": "c6da9c1b-45f2-4ff5-9308-464cd3facafc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "927089fc-934f-47b1-985d-8fe3259016f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b63817-7dd8-4bd5-8555-3c8b82b24cb6",
        "cursor": {
          "ref": "b250d001-287e-41ed-b703-fc3c544799bc",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cd28004b-c37d-4def-9d79-8bce34deae02"
        },
        "item": {
          "id": "e2b63817-7dd8-4bd5-8555-3c8b82b24cb6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f970c936-6d68-46c3-9366-ed77a693b134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7056dd7-7688-4098-99f0-eec82a276c65",
        "cursor": {
          "ref": "147404c9-52eb-440f-a8ca-7fd5d2ed0022",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2e469cb6-ac7c-4db6-814e-14a331fe5b14"
        },
        "item": {
          "id": "a7056dd7-7688-4098-99f0-eec82a276c65",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "31c882f8-789a-4b2a-997c-2cbdf6fee01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ca8a5e-4bc1-40cc-b92c-9deb17be1150",
        "cursor": {
          "ref": "fd62f51e-d3bf-4ac2-9340-0c7a7155df89",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5307d95b-cff7-4fbb-bbf0-4bfd255d3418"
        },
        "item": {
          "id": "98ca8a5e-4bc1-40cc-b92c-9deb17be1150",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1680574f-204a-4b36-a4e4-97b11a85b585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041aa627-c97b-4b45-b07e-2db3b4ad0082",
        "cursor": {
          "ref": "2394ad20-582b-44e9-9199-d6d2a09ca26c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6fa2b97b-a166-4724-8256-4ac0a7dddf8e"
        },
        "item": {
          "id": "041aa627-c97b-4b45-b07e-2db3b4ad0082",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1b354cda-254b-42a7-837d-18167e5c1a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e51465-457d-417b-be61-27ac52120cfb",
        "cursor": {
          "ref": "78e28423-02f9-4cdf-99a7-87f489ec9871",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7a9648a4-fa51-409f-a3fd-4f5a305cd55a"
        },
        "item": {
          "id": "69e51465-457d-417b-be61-27ac52120cfb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "594f6e84-0535-4bf0-98b2-294cd4851b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6720a9f1-6fa7-4d1b-b77a-354045b986eb",
        "cursor": {
          "ref": "076616c4-c951-4893-8aa4-8474ff9456bf",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4e4402fa-de63-451d-90f6-283b6d54c8d6"
        },
        "item": {
          "id": "6720a9f1-6fa7-4d1b-b77a-354045b986eb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "45e9d53d-ba79-408e-b5ec-0e6269e439b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82e7be7-d2f2-41dd-95f6-3db06f1fe71c",
        "cursor": {
          "ref": "3d362d6b-193d-4ba4-804d-8d666e678918",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9fdf6ccb-1355-49e8-9814-74e13aea48f9"
        },
        "item": {
          "id": "c82e7be7-d2f2-41dd-95f6-3db06f1fe71c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4a2b6cfc-34e8-4ca6-85f1-c5183065461d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f86bbb-3401-430b-a02e-3d26d65bb423",
        "cursor": {
          "ref": "4c5c3d9b-a66b-491c-84cd-7668caab06a5",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "605a1c3d-6c95-4e39-b844-093530119dd9"
        },
        "item": {
          "id": "52f86bbb-3401-430b-a02e-3d26d65bb423",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "714c179f-a179-436b-866c-2b964ce0ebe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a69be82-7575-4976-a496-e231d3f35a67",
        "cursor": {
          "ref": "623613be-c424-4d49-9ae9-50dea886e94a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4afba7a2-1ac3-4a6c-8182-90def7c9d86c"
        },
        "item": {
          "id": "8a69be82-7575-4976-a496-e231d3f35a67",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "08619b38-8061-4106-985d-4140933d70f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c658e3-4562-4e61-9ffd-8b2434d0a619",
        "cursor": {
          "ref": "7049e4a9-2e7a-4e0d-a774-3d8cf8b071ad",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1cb5c15e-4134-448e-a39e-35515e21e2d7"
        },
        "item": {
          "id": "50c658e3-4562-4e61-9ffd-8b2434d0a619",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "41653476-8081-4613-81eb-2959a01eef28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421c4a89-759b-4ea3-95cd-b46d10dfbb5e",
        "cursor": {
          "ref": "6840ffa6-402f-4b70-ae89-53bc630fc92e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "59826ef5-f6fa-480a-848f-c784f2d8af1b"
        },
        "item": {
          "id": "421c4a89-759b-4ea3-95cd-b46d10dfbb5e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "459aa383-55ca-44e1-958c-bff4b2762fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f875b97-6178-4f73-8136-135f1bed8343",
        "cursor": {
          "ref": "bf140957-9e0d-4877-8415-ecee51bf6a3d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "edcddd15-5445-4548-a9fb-b39fe5d13322"
        },
        "item": {
          "id": "6f875b97-6178-4f73-8136-135f1bed8343",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5380a883-4ec4-4a10-ac99-0becda6dfa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44105294-9c59-4a7a-be62-e377e5a22cea",
        "cursor": {
          "ref": "a3d333ee-9a1c-4426-8629-729eb145ebba",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7166102a-0b5a-4754-803c-5b7beab4ff5e"
        },
        "item": {
          "id": "44105294-9c59-4a7a-be62-e377e5a22cea",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "024d55a5-8d9d-4cdb-87ab-4cd987c16e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd585944-0322-449c-bd96-5688b0e48358",
        "cursor": {
          "ref": "592f99e0-fa33-4a42-89ff-46eac13cae32",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bf435129-3c9b-46d5-ab0c-7aa664b67fbc"
        },
        "item": {
          "id": "fd585944-0322-449c-bd96-5688b0e48358",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d8fd6378-d25d-4e2c-bc0a-100f797615e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a18498-3d29-498e-8589-8c6c21918fb0",
        "cursor": {
          "ref": "4258c1ac-72ff-4f26-bf4a-276c8d97a54c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ac18e680-128f-4997-be07-e3d27e5fbbf9"
        },
        "item": {
          "id": "f8a18498-3d29-498e-8589-8c6c21918fb0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "75599aca-53f6-4c68-99d7-de3b26b55828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341fd08e-05a4-44c7-bc1c-ba9a4c493c4f",
        "cursor": {
          "ref": "b4373e1b-3466-46ed-9e66-3a6b19041b67",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7d24e7e7-977c-4dff-8a81-20817c21ab04"
        },
        "item": {
          "id": "341fd08e-05a4-44c7-bc1c-ba9a4c493c4f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a1dee17e-d5e8-48ba-9239-4987b5719748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa928ed-cd88-4284-937f-bb481deb6bb3",
        "cursor": {
          "ref": "acbd5f0a-44e8-40b8-8011-fb5a118edbbe",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1cf27676-866e-49fe-b8ac-d991a37970e2"
        },
        "item": {
          "id": "daa928ed-cd88-4284-937f-bb481deb6bb3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d0bb9a8a-7659-4c42-b725-ec919569ce7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076164a0-61e4-4146-aa77-9b2b0c0a3522",
        "cursor": {
          "ref": "74787652-3690-4121-b4dd-418c155108b3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "28cb8a7e-1692-463b-a224-63318c15aeaf"
        },
        "item": {
          "id": "076164a0-61e4-4146-aa77-9b2b0c0a3522",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e5aac0ef-362f-4012-b75c-a2153c2a9c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac945fee-7144-42bb-8c0b-1eafd6be4b95",
        "cursor": {
          "ref": "fb3521c8-421a-4588-9628-114e79ed84a2",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ee0a87fb-e4a1-4cd7-b87c-6569404b3d89"
        },
        "item": {
          "id": "ac945fee-7144-42bb-8c0b-1eafd6be4b95",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3e04e1c0-8ebd-484b-970a-f2ba3a546b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46373b7-bd12-4923-a4c2-5702b00b7459",
        "cursor": {
          "ref": "0bc94c73-938d-4586-89f1-e026e14416ea",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "377c6169-fd54-4690-8e35-2a954fb5a712"
        },
        "item": {
          "id": "a46373b7-bd12-4923-a4c2-5702b00b7459",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "53f701fe-3a34-4662-86ef-1cf930311e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd64517-adc7-4365-b7e2-244caf249db7",
        "cursor": {
          "ref": "905392da-572c-4be1-afa2-21f39e38a680",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8a59dec6-a832-4c0a-843e-ef3f5cbda5cf"
        },
        "item": {
          "id": "1fd64517-adc7-4365-b7e2-244caf249db7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f0277351-42db-4f9c-8957-b7a27f10d836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c237310-dd94-4833-b232-d29727b04554",
        "cursor": {
          "ref": "4b2ea659-ec93-46bf-b3df-5fa7dfda1c21",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1b9dcd62-d718-4970-87c0-3d5e514fc5be"
        },
        "item": {
          "id": "5c237310-dd94-4833-b232-d29727b04554",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "138a62b3-edef-428c-836a-8dfb218b0064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eae8cdb-8f1a-4e2d-883c-0cf8336c6721",
        "cursor": {
          "ref": "d4586ae2-976c-4617-a7bc-df911a841c8c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "58e8204d-cc77-4da7-9f6d-815293d61b64"
        },
        "item": {
          "id": "4eae8cdb-8f1a-4e2d-883c-0cf8336c6721",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d4eec147-3c0c-4385-b4a8-b537f1faff9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07433b70-a5fc-4062-bc8f-ca3d6fa3b48e",
        "cursor": {
          "ref": "4ae3c9cd-bb2f-4b91-b1e9-ecd8695136c7",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c3d784ed-46ff-4dc6-9ce8-9220205bce9f"
        },
        "item": {
          "id": "07433b70-a5fc-4062-bc8f-ca3d6fa3b48e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "da89b14e-882d-4de0-840a-2c92cd2d5246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfb80d4-c035-4658-8d32-75ce66f6c334",
        "cursor": {
          "ref": "45084b70-8529-4b5d-9442-2ca098344030",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b06f788f-dca0-43ba-a11e-41f8204f239a"
        },
        "item": {
          "id": "4cfb80d4-c035-4658-8d32-75ce66f6c334",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "79215428-32fc-4127-be3c-fb262bc4e830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134f6f64-4b6f-44e3-b8c6-81bdee0ec550",
        "cursor": {
          "ref": "ea4df3b5-8fdd-4613-ad6c-1b5d7712cd69",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "48d3e9be-33b5-4478-afe5-8071fc32a659"
        },
        "item": {
          "id": "134f6f64-4b6f-44e3-b8c6-81bdee0ec550",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8f9d0d20-79e5-495c-9373-39a996970399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087d72a6-a1ec-4918-a7c1-82a954b08841",
        "cursor": {
          "ref": "5eddc07b-7c42-4d17-8fb5-574ab4768b9e",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "98fba5a8-7e92-4e30-a8cf-0655323d2943"
        },
        "item": {
          "id": "087d72a6-a1ec-4918-a7c1-82a954b08841",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e146a14d-dfa9-4cda-a58d-38326eb43186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae5d0b6-be92-4c38-8ba2-c6da4944d2d1",
        "cursor": {
          "ref": "fc596463-ed3f-4f91-8880-60ccbb6f3405",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "83c3ceb7-5b39-4e8d-ad26-453deac86b94"
        },
        "item": {
          "id": "2ae5d0b6-be92-4c38-8ba2-c6da4944d2d1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "16d6b637-f583-49ff-9ac2-ce8ffe14c9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c34d75-0d79-4cb9-a48e-c5e71218b8d3",
        "cursor": {
          "ref": "c1eef93a-615b-45d7-9b6e-52604d526799",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cb2f72ad-844c-48fd-a8ba-a1cc4ab26690"
        },
        "item": {
          "id": "c4c34d75-0d79-4cb9-a48e-c5e71218b8d3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a7086056-7cda-46ad-b384-c52fdfc77058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fe2635-344a-4b77-b43a-085132af470a",
        "cursor": {
          "ref": "e78bc5c2-cc4a-4e13-9205-2710e566b507",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "479c9fa7-83b8-4814-85ef-c3ef7cdd1cfb"
        },
        "item": {
          "id": "27fe2635-344a-4b77-b43a-085132af470a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9165232e-72ed-43b3-b24a-7431698f8ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18568859-382d-4b1f-bf29-c73b4068784e",
        "cursor": {
          "ref": "e7824523-9f14-469e-a34e-24475dd917c1",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "47ad92d5-27c1-4855-bc25-a760f8dff782"
        },
        "item": {
          "id": "18568859-382d-4b1f-bf29-c73b4068784e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7a8a2f8c-9757-4aa0-a689-e3361c156c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bca8ce-563b-46fd-910e-ff7716bb432e",
        "cursor": {
          "ref": "7bb1229e-ca4c-40d9-ba5c-ebc691764efb",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c2632194-a871-403c-8da2-2973e61bef70"
        },
        "item": {
          "id": "58bca8ce-563b-46fd-910e-ff7716bb432e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b8ca32fa-2081-400f-857c-e873e3b1c2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c43557-6166-450d-bc94-e86e3efc5e7c",
        "cursor": {
          "ref": "f3085967-2250-4a61-a9bd-9a17d4fbcd87",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "99147db6-1045-4200-922b-4a49b6e3a772"
        },
        "item": {
          "id": "94c43557-6166-450d-bc94-e86e3efc5e7c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f15bc337-46b3-41c7-aac9-68a3ecbeffae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7281345c-d729-4c7e-806d-6e98234bb891",
        "cursor": {
          "ref": "f34322ce-deab-4010-8eb2-027a079e9275",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b46796f2-62ad-467f-bb08-ec7bdfe8e9fb"
        },
        "item": {
          "id": "7281345c-d729-4c7e-806d-6e98234bb891",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2d4a8965-399c-4b6a-8fc1-6fdcc7e38c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5b0aed-8711-4980-85ae-d6f87e6f1d34",
        "cursor": {
          "ref": "09397431-55b6-473a-957e-ae61df8b4e18",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "27f281ce-f821-4a92-808a-be389abeda3e"
        },
        "item": {
          "id": "8f5b0aed-8711-4980-85ae-d6f87e6f1d34",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "73041a46-7ecf-4fa4-acf9-d3a464a9f444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ae5f64-9b44-44e1-af13-9ca17465c9a0",
        "cursor": {
          "ref": "2de4d996-9406-461c-bb62-808eb8055765",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0dfd8540-71ac-4489-912d-ccd52786efb7"
        },
        "item": {
          "id": "38ae5f64-9b44-44e1-af13-9ca17465c9a0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0ecc0e56-9f2e-4ca2-b81b-341326010cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280d135a-713c-43fa-a332-493c34ebdb7e",
        "cursor": {
          "ref": "379123a4-7184-4b14-a5fc-625b5ed8a044",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "59724eb4-9542-43d0-a591-f491bf967142"
        },
        "item": {
          "id": "280d135a-713c-43fa-a332-493c34ebdb7e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bd5a3aaf-5e94-490a-aef9-939dad5925b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9700e1d5-4d11-4d3a-a24a-10422b525023",
        "cursor": {
          "ref": "db75f423-1997-474c-96d1-65b528fcaaaf",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6245be6f-19dc-4770-a229-76af8045843f"
        },
        "item": {
          "id": "9700e1d5-4d11-4d3a-a24a-10422b525023",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "95aea155-7656-4656-a5dc-b4007b62bc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9ce6ff-db38-43f2-ac49-4d9b8388b1b3",
        "cursor": {
          "ref": "85789bee-8c21-48ea-bb3c-aa8b2deaf7b5",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d65e7f3e-41c3-492c-a3fd-507b5d0635e0"
        },
        "item": {
          "id": "3a9ce6ff-db38-43f2-ac49-4d9b8388b1b3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fd7b6632-d01f-4aba-85e8-3e66c6a44ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e707af4d-4084-45c1-ae0f-9cb02c2fba77",
        "cursor": {
          "ref": "14cb9399-dbbd-4efd-8f14-6da2ffd058fc",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f8043c41-5a5b-45a0-a549-ce30fbcaf1b1"
        },
        "item": {
          "id": "e707af4d-4084-45c1-ae0f-9cb02c2fba77",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "079bd9d5-53d9-4bec-b22a-0e952452a566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93033dfd-bd9d-415d-98b1-d31818ce6f2d",
        "cursor": {
          "ref": "6602d870-df2f-4afe-a931-79f03e45ff81",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "63796703-35a8-48f6-8c9b-6b75a9f1f39c"
        },
        "item": {
          "id": "93033dfd-bd9d-415d-98b1-d31818ce6f2d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b05ca527-f3ad-439c-8718-fde42a4c32ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1153a6a-0acd-4d18-8bc6-2be9c72733d5",
        "cursor": {
          "ref": "3a1a62f3-06d3-4651-8fc1-fc9af7409ba0",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3e07eb38-0a8c-4212-8e63-08d6e220d766"
        },
        "item": {
          "id": "b1153a6a-0acd-4d18-8bc6-2be9c72733d5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "aa77bcb8-8a6b-4290-9651-3f925c4ab621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aceda8f6-3ec1-47a4-9710-50a14b0aee92",
        "cursor": {
          "ref": "5c3c5914-b11b-44da-8a46-fda5aaf92507",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c6a93866-3250-4c8b-bbee-265609f0e5b9"
        },
        "item": {
          "id": "aceda8f6-3ec1-47a4-9710-50a14b0aee92",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4f4474d2-a3c8-412b-8fa0-1e5651ec9974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d97bbd5-bbb5-42c8-9953-2ff274b5bb3b",
        "cursor": {
          "ref": "825bb500-2c70-40de-ad16-324deaf70654",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "934bd14f-3803-486a-afe3-01f5eef6e61d"
        },
        "item": {
          "id": "7d97bbd5-bbb5-42c8-9953-2ff274b5bb3b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "22f9ddac-ca09-4e5e-9ce6-2a2cf1020d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e6fc77-9296-4fab-a43c-d6ab825708c6",
        "cursor": {
          "ref": "649cf670-75ca-4884-af9c-15fad9b65a14",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a4c7c946-4c82-4bf5-932b-85192e1fcd38"
        },
        "item": {
          "id": "84e6fc77-9296-4fab-a43c-d6ab825708c6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7d6bf98f-df98-4119-92f2-9bcf6d6e968e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcf615e-33e5-45d9-b818-e56dcd17f4e9",
        "cursor": {
          "ref": "7d7da9e7-d0bb-4f57-8237-c07b216a5765",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a96b978a-d559-4e93-b6d3-bdc8ba1ceff8"
        },
        "item": {
          "id": "1bcf615e-33e5-45d9-b818-e56dcd17f4e9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6b9504df-7f73-41cd-8f21-616ace77b45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41590c41-7318-43b6-bc54-5773e3b0cd18",
        "cursor": {
          "ref": "3462cb57-a879-4ded-9a35-4ffa4c244c90",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eff5507e-4a06-4b76-a5a4-ae7c95abbbc6"
        },
        "item": {
          "id": "41590c41-7318-43b6-bc54-5773e3b0cd18",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2bdc4bde-c54a-4329-aaf7-976ee1e26c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dace06fb-48b5-4f98-9dbb-9bc47027b753",
        "cursor": {
          "ref": "d7444e89-2eec-43c6-acd6-dad4c86f62dd",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f6bccce7-aa9d-4712-8471-e18eeccba256"
        },
        "item": {
          "id": "dace06fb-48b5-4f98-9dbb-9bc47027b753",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bc47e8e0-318f-4fda-9903-d1a7091647a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acd4c60-ff53-4b28-8eed-b8d64a2e30b1",
        "cursor": {
          "ref": "d35c4d74-e93f-4024-a6a1-ce4aa576f4ba",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e69b43e3-83fc-4ab2-a313-8e22b809d989"
        },
        "item": {
          "id": "2acd4c60-ff53-4b28-8eed-b8d64a2e30b1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c1756ff3-200a-409f-83f6-1de05d463b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d0185c-3bbe-4aab-8668-08ff49da8b56",
        "cursor": {
          "ref": "1b8d69be-af1a-4d1a-b73c-4fb6993dd53e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e93e6feb-2f61-4ead-bad2-93de6f508b96"
        },
        "item": {
          "id": "01d0185c-3bbe-4aab-8668-08ff49da8b56",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "51788d5c-8749-4999-a4be-3b2071eb163d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11a1aa8-1781-407b-8e07-ff482d0c78e3",
        "cursor": {
          "ref": "a29b381e-d8c7-470c-98a7-f86f82a878ba",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4a29d573-4f5e-4d07-a325-b9b3dea24d08"
        },
        "item": {
          "id": "a11a1aa8-1781-407b-8e07-ff482d0c78e3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f610d8d5-beb4-4c70-a82b-e2743f8a609b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d3d2b8-732c-4737-bc2f-1076648d2fb6",
        "cursor": {
          "ref": "7de0f890-2152-4960-a7b4-8e88eb946a52",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d8c6ed35-ef0d-40bd-a3d0-b3815fe7b5da"
        },
        "item": {
          "id": "a9d3d2b8-732c-4737-bc2f-1076648d2fb6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ac9039d2-bdb4-4010-86bd-e7ccf5254df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c29b057-f10c-45eb-8db5-19a7a2b62a2e",
        "cursor": {
          "ref": "7dcdd2cc-4e14-48d1-89d8-bfdc98b8b2e4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "23bccefb-50b8-472b-812a-7937c7f2fb04"
        },
        "item": {
          "id": "8c29b057-f10c-45eb-8db5-19a7a2b62a2e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5d076e1d-e2d8-4b4f-92d9-c3a0ff1be847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1e1077-c71f-445e-9deb-f4939aba0a63",
        "cursor": {
          "ref": "fcb6f268-ef0b-4d65-81dd-7adb37ae444c",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b2d0f7ce-ce89-4a15-a60d-e4602fe83551"
        },
        "item": {
          "id": "fe1e1077-c71f-445e-9deb-f4939aba0a63",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0d3e8616-1258-4bd2-934e-3727c5fafe33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128b5c3c-ebad-4db8-9da8-4313e1a0d39b",
        "cursor": {
          "ref": "bb08e6fe-641e-4781-9193-bf697bc2b862",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9705b666-1b80-407f-a52e-0bfa6ce4b7f9"
        },
        "item": {
          "id": "128b5c3c-ebad-4db8-9da8-4313e1a0d39b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9feeb711-ee3c-4707-ac2b-e17228081e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70092935-af3c-42e0-840b-f14714fdae14",
        "cursor": {
          "ref": "57648ddd-9225-45cb-a4c1-a5f6db8b76f2",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a2337fe7-6c6c-4085-86b8-ab9175d9b6a8"
        },
        "item": {
          "id": "70092935-af3c-42e0-840b-f14714fdae14",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "06beb807-a504-4203-b522-087ef917e3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607157f7-9fe5-4be6-8c13-c3d1f58de583",
        "cursor": {
          "ref": "a60579ff-0f2f-4912-b555-872102b51d24",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "082ba8ec-e634-46da-8ba6-ea7438e6bd5e"
        },
        "item": {
          "id": "607157f7-9fe5-4be6-8c13-c3d1f58de583",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6f13bb77-a5e7-4948-a734-081cf6fb1ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8a989e-9abf-46f9-8f2e-8bb7e7a85bd6",
        "cursor": {
          "ref": "b7934760-c555-483f-80a8-71945ac617e5",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2e6695f2-c084-49f5-9ab1-f8988aab2ac3"
        },
        "item": {
          "id": "5c8a989e-9abf-46f9-8f2e-8bb7e7a85bd6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6ebd18e3-3171-4d86-b98d-116a22f9ad4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2533496b-f7be-44c6-8dcb-808beb7a7027",
        "cursor": {
          "ref": "cdb05c89-2271-46d4-851e-ab3e5e606bf8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "eccca2fa-2445-454d-a95d-732ea92511cc"
        },
        "item": {
          "id": "2533496b-f7be-44c6-8dcb-808beb7a7027",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f3971ef4-7d72-4066-9344-77916c80464d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c719992-cb66-4488-9f8a-8412e8af2717",
        "cursor": {
          "ref": "3ccc2e9e-0d77-4ffb-b7a3-0b43d0618643",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b92b79d1-3529-41a9-8c95-4e78d8dbdd04"
        },
        "item": {
          "id": "6c719992-cb66-4488-9f8a-8412e8af2717",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a4b39737-a71f-43d7-a0fa-c1accc45014e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c727733-d14c-49f1-9414-1b8c90c98f86",
        "cursor": {
          "ref": "a72accf3-5361-48cd-8c90-d16f33367bc8",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8102942a-5b92-48d9-bbb6-85ed5647fd8e"
        },
        "item": {
          "id": "6c727733-d14c-49f1-9414-1b8c90c98f86",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5b64ebbf-e1da-4d62-a500-b655df014171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e764f72a-0d4b-4734-a585-4cc335eed85b",
        "cursor": {
          "ref": "c771c19c-b546-415b-9b72-25d5ea58cc17",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7b1b3ace-b018-4bfa-bdc4-3137473a8288"
        },
        "item": {
          "id": "e764f72a-0d4b-4734-a585-4cc335eed85b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9c4ff76e-f050-487f-8cea-427df18ef6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ba7dd8-c523-446e-8926-cb00ed482a13",
        "cursor": {
          "ref": "544f8a78-1488-4133-bee3-023898641401",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "60428041-b86b-42b5-84fc-2c3c6873049f"
        },
        "item": {
          "id": "a7ba7dd8-c523-446e-8926-cb00ed482a13",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "29f3ffb4-4841-4dd6-ac6e-cbe72e5e555b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886de21f-0a83-4d1a-b809-f5859c502dcb",
        "cursor": {
          "ref": "2e64fbdc-7646-42a9-a449-a536af63fbe5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2cb932b6-d78c-4a7c-808a-6d0f1f44a3df"
        },
        "item": {
          "id": "886de21f-0a83-4d1a-b809-f5859c502dcb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "95036f6b-4ea7-4b4e-a7b6-c4d05acece3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402bed5e-b244-4698-9051-2858697a34d0",
        "cursor": {
          "ref": "9daa013f-78e4-4432-b05b-e4fa47fbf73c",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "72808846-26c5-4135-b014-602e27a8f8e6"
        },
        "item": {
          "id": "402bed5e-b244-4698-9051-2858697a34d0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "70a54e16-c218-42d0-a3cb-851e486cdfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d99a81b-2b5e-4854-ac29-7b9c8412c968",
        "cursor": {
          "ref": "b9bf5b6f-b245-455f-901f-33df4ecbf649",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0c41eb37-2ee8-43bd-b96c-13006a7e6194"
        },
        "item": {
          "id": "3d99a81b-2b5e-4854-ac29-7b9c8412c968",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5e60f261-c098-4396-8d84-3bf7631835c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef7b377-5545-414d-94fd-6583be2f903e",
        "cursor": {
          "ref": "f0bd0e91-2e90-414f-8d2f-4e11cf2f79aa",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "af99d9d4-4576-45e5-94f0-64f2fdb20bf9"
        },
        "item": {
          "id": "6ef7b377-5545-414d-94fd-6583be2f903e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "86892b34-3b0f-497f-b5eb-8f676b7da68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc39605-2fc1-4c89-9f97-e1597fdbd53b",
        "cursor": {
          "ref": "10d73d87-d768-4424-97e4-5d5c95bc5bae",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1722837a-4b23-4c84-818d-2dc1f35ddf2a"
        },
        "item": {
          "id": "abc39605-2fc1-4c89-9f97-e1597fdbd53b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c0c39a11-e5cf-43a5-9091-8f9c9f353ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1517f771-d116-41c8-ba6a-fc1d22b65ca3",
        "cursor": {
          "ref": "5fbc6878-9408-4c16-8991-7791e49439c4",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3c6a725d-2191-4ff8-be34-0563876b5b91"
        },
        "item": {
          "id": "1517f771-d116-41c8-ba6a-fc1d22b65ca3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d7ff9f18-f4d6-4a45-8a72-7f8b4ffd9fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19aaf76-3818-4645-baa7-aaf61b02da93",
        "cursor": {
          "ref": "9dd27516-9e55-4c78-9e2a-5acbd5f705b9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "95bd7d07-40a7-427e-84a5-c285e98fdb84"
        },
        "item": {
          "id": "d19aaf76-3818-4645-baa7-aaf61b02da93",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b10de1ac-a391-4eff-bd81-de67c32cfc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cc3f23-c2a0-411c-91b6-01eac630c593",
        "cursor": {
          "ref": "e1156080-6e61-4e4a-a417-0a8ef9bf2fd5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e47c549a-d2fe-4677-bc7f-a56430d4b84f"
        },
        "item": {
          "id": "b9cc3f23-c2a0-411c-91b6-01eac630c593",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "717b4a14-5a73-429e-95db-8ca0cf87d653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5448ed8-b6ff-4303-86a0-1ba4f9a41e6f",
        "cursor": {
          "ref": "658f365e-57c7-49c9-aba9-7b3e2d560736",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4eb514b7-0b1f-4504-85b6-cb903d8f91bc"
        },
        "item": {
          "id": "c5448ed8-b6ff-4303-86a0-1ba4f9a41e6f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a04167ad-a424-4fb1-ae23-6296ac83fd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5485d602-0bca-4991-98cf-894376d531c3",
        "cursor": {
          "ref": "0358cc25-4ad7-4d8c-925b-fa0b85abfd97",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e91de84f-674b-4c99-acc7-a86bbd4f79a8"
        },
        "item": {
          "id": "5485d602-0bca-4991-98cf-894376d531c3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5d4400d1-c070-4143-94b0-d11cfaefaff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e5c065-3ef7-413b-97dd-fc7daf67277e",
        "cursor": {
          "ref": "94e242bf-7efa-4f20-a070-b4e54ef43cb5",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "413676b1-dab0-434a-b3c9-874036b59961"
        },
        "item": {
          "id": "02e5c065-3ef7-413b-97dd-fc7daf67277e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "da247f04-018e-44b2-afa8-15a5cff55b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670127a5-10ba-4e72-b011-060836869e9d",
        "cursor": {
          "ref": "2016de7a-bc10-4d63-8fd1-0db8795707e9",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f9c053c3-1427-4ff5-91da-5a7fe930b39f"
        },
        "item": {
          "id": "670127a5-10ba-4e72-b011-060836869e9d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4d0cc08b-fec6-4224-8858-db49495e978f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9960a0f2-6728-4173-bfbc-b4e65de64839",
        "cursor": {
          "ref": "d3ac2ea2-91c6-405b-9f92-6dfd88f1c3d8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b0882ab6-adf4-4a1a-bb65-bfc0795a5be9"
        },
        "item": {
          "id": "9960a0f2-6728-4173-bfbc-b4e65de64839",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "25d7a07d-1325-49be-ae57-1dd5c280939b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153362ab-5d7b-4c43-a87e-5f22f9eb292e",
        "cursor": {
          "ref": "13595df5-6894-41d8-b101-d70ba8120c7d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d9e152b7-843f-4f06-a3b2-c0257d97ed35"
        },
        "item": {
          "id": "153362ab-5d7b-4c43-a87e-5f22f9eb292e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a1a72f56-0caa-4039-8fb4-3a5f52eb13b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340773ca-b3b4-4910-8a4c-b08fc7b9a61d",
        "cursor": {
          "ref": "83ff7cdd-5165-4959-8b84-55f514776633",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9a205faf-399f-478b-adba-8b9025f20167"
        },
        "item": {
          "id": "340773ca-b3b4-4910-8a4c-b08fc7b9a61d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e077acb2-d0d2-452a-9008-ff4dd6fea229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8afc37-3013-4a12-9d91-2b2ac977afb5",
        "cursor": {
          "ref": "d056efe7-c4af-41cd-90b0-2c1b49eb6b30",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "61e8966a-72df-43ed-9b0b-931fb540e311"
        },
        "item": {
          "id": "9a8afc37-3013-4a12-9d91-2b2ac977afb5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4dbd32f0-4eaf-489a-80dc-33d118202a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4266bf-4118-4fb2-8d72-8dd865cef14e",
        "cursor": {
          "ref": "b9512bd3-4202-4b7e-9e33-5f21462ea7f0",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e3f502ca-1a79-4d88-8252-d9607dd38c7b"
        },
        "item": {
          "id": "ab4266bf-4118-4fb2-8d72-8dd865cef14e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "51a22931-1e82-4d8c-acee-deabda6efa9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b2c000-9da8-4eeb-8def-02942ab9aff3",
        "cursor": {
          "ref": "141b0d83-9a6d-412d-9411-99683ee3e251",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "24e5e380-8370-4093-9d2a-ec6c044166f0"
        },
        "item": {
          "id": "f6b2c000-9da8-4eeb-8def-02942ab9aff3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a4145296-bf6d-4cf5-b146-fb30657212bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfe97f4-324d-4b2c-b97b-a119ac5e7356",
        "cursor": {
          "ref": "adc3ad88-c6f3-4f3b-9cab-f4cb5dc399a5",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "56ac5702-8765-4d34-975d-dee0ec70698e"
        },
        "item": {
          "id": "cbfe97f4-324d-4b2c-b97b-a119ac5e7356",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e8145553-8a41-4e2f-8a8e-7b522abb00f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01e3bf6-6516-492e-a256-13004aa1ef9f",
        "cursor": {
          "ref": "a7da240c-7927-4448-a99a-00aefc04449e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9f60e0b8-1c59-4a50-ab21-0f2dfb8b3b41"
        },
        "item": {
          "id": "f01e3bf6-6516-492e-a256-13004aa1ef9f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bd8f01ea-1946-4c6a-8886-823545c8e0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16102ef7-6c89-43c2-9c73-6e3f56ae8b46",
        "cursor": {
          "ref": "2d58c657-f1e5-4e91-a6a1-8ea81ddb86eb",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "57520bfb-a1f5-44f7-a99a-2613cdb842e8"
        },
        "item": {
          "id": "16102ef7-6c89-43c2-9c73-6e3f56ae8b46",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "48b0c96e-bb3d-49fa-b6e8-83f178acb5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b77a82-c106-46b0-8cd4-57e86f7d9ff0",
        "cursor": {
          "ref": "dafd2d77-2d8d-48ae-81f9-ae2d8bff1444",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "82919578-3acb-4cb6-8caf-ecdba90208ac"
        },
        "item": {
          "id": "c1b77a82-c106-46b0-8cd4-57e86f7d9ff0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ef350c21-dd8c-4e28-a15c-7a8b129e4d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8adc6aa-54ea-45a9-8d7e-369e4f8fb6a7",
        "cursor": {
          "ref": "eed2902e-7793-4e50-b464-115d7c5d2e42",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1291fdc9-0210-4729-810b-756d8516a9e1"
        },
        "item": {
          "id": "d8adc6aa-54ea-45a9-8d7e-369e4f8fb6a7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "071658b0-b076-43c5-a64f-f4655b5d9678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4863588b-1ead-4351-be21-c542f7189c80",
        "cursor": {
          "ref": "2de0138e-6689-4b40-99e8-d3aff70724f7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5d25c7ad-8d6f-4a62-b295-59e49e0da023"
        },
        "item": {
          "id": "4863588b-1ead-4351-be21-c542f7189c80",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "49f3e1d0-de29-44c0-a0f4-152191fa5ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3e350b-b808-4606-994b-90b224407b3b",
        "cursor": {
          "ref": "e42640f7-be26-498b-aeb1-de7970e8bfde",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9c93c2df-05d4-4917-93ac-29b1832065de"
        },
        "item": {
          "id": "5c3e350b-b808-4606-994b-90b224407b3b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ccaddda9-5d5e-435a-be8a-259dcc26ef62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2e62cc-e00d-4a6c-84b8-a810e2e0113b",
        "cursor": {
          "ref": "fd7678ea-b9d3-451c-a2bb-dbb8a5fce1ad",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e81af1c3-55bc-4d75-8f09-335d750d49fd"
        },
        "item": {
          "id": "ce2e62cc-e00d-4a6c-84b8-a810e2e0113b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7b3327eb-d435-439c-a142-d371a6ae5f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940b3052-3862-434b-8560-eed4e0ca8007",
        "cursor": {
          "ref": "7dea2bd0-6367-4843-95c4-bcbf02759d95",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "03f55609-7fc2-447e-92d1-137f6c5c7530"
        },
        "item": {
          "id": "940b3052-3862-434b-8560-eed4e0ca8007",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "334eb7e4-2100-4f99-8cc7-85c7a8194f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4d0ee8-8e36-4a96-9182-3b39866c0ef6",
        "cursor": {
          "ref": "1a82ec5a-34f7-45f2-8a6a-b01b8275c5e0",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1dfb95d0-90fb-446e-a685-9522094d8038"
        },
        "item": {
          "id": "2a4d0ee8-8e36-4a96-9182-3b39866c0ef6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4df28bc7-f750-4be5-97db-3146e8588f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edffecdb-0367-4b2e-91ad-b0d85bbc9e4b",
        "cursor": {
          "ref": "e6507a58-240a-4ef2-b80c-fcdaf77ae3a4",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "860e20e8-348b-4833-b5a1-0c70c45f3f7c"
        },
        "item": {
          "id": "edffecdb-0367-4b2e-91ad-b0d85bbc9e4b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2bb405bd-2b9f-4551-a4aa-394a94421b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9b22ca-6a6e-4737-a897-26dedb41a608",
        "cursor": {
          "ref": "efe2fdcd-edb3-4954-80cf-54ce80d2ed6b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "45e19cc1-73e0-44dd-96e2-86405245a0d6"
        },
        "item": {
          "id": "5a9b22ca-6a6e-4737-a897-26dedb41a608",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b17ff7a2-b221-4bc7-a511-0617a28ba462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4048c520-67c8-4c4f-9e72-b0638741f704",
        "cursor": {
          "ref": "002a164e-cec7-4abf-8fa6-c9f526304ee6",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "50e48d22-eb57-41d0-aa2a-8f83ef7a2cbb"
        },
        "item": {
          "id": "4048c520-67c8-4c4f-9e72-b0638741f704",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5312d957-08c8-4c59-a8d2-61fad81b5a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36151d30-01a6-4eb4-8868-8bdb9b67c5b9",
        "cursor": {
          "ref": "ed9cc34f-267c-46f6-8bc1-9285a00f4431",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c0e63797-8ba6-4954-97b5-2fa8487ba9dd"
        },
        "item": {
          "id": "36151d30-01a6-4eb4-8868-8bdb9b67c5b9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6eaa36dc-1b8a-4acc-a7f7-c4d6abaa7900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9866e635-1cba-4b57-b3ea-853dea0d46bb",
        "cursor": {
          "ref": "3c916412-5ada-4c0f-b32d-537c4a11892d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c73549d8-1b49-4d69-a4dc-a75e350616e4"
        },
        "item": {
          "id": "9866e635-1cba-4b57-b3ea-853dea0d46bb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3070b0ed-e793-4aad-9636-61a9cbac5a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3013c0a5-2296-403e-b158-94e3c605d8f9",
        "cursor": {
          "ref": "4989eb8a-2467-4ead-8224-fc1099d9a947",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f5a1b366-4116-48fc-a260-440b3ca8b44f"
        },
        "item": {
          "id": "3013c0a5-2296-403e-b158-94e3c605d8f9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "522cdfb3-c8d6-4cfe-b10d-fdeaa10b0d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5c422e-9164-4384-8b25-5d7921168611",
        "cursor": {
          "ref": "bbf9e945-6197-46e5-b991-bb06b99a1bd2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8f26a221-eda6-4108-8be0-b878d042fdee"
        },
        "item": {
          "id": "da5c422e-9164-4384-8b25-5d7921168611",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "966d2a8f-34a1-4d77-91d4-6586f9d87d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2ecf1c-df6d-4e10-8793-2a8b8e12a5c5",
        "cursor": {
          "ref": "3eae5262-efdf-45ed-b302-0cac8aabe8d5",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bfb89297-38e8-405c-adc2-52aacb47b005"
        },
        "item": {
          "id": "1b2ecf1c-df6d-4e10-8793-2a8b8e12a5c5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9d956204-914c-40d1-a90c-b73eff023a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a256af-216a-433a-a3da-b739e2007d1e",
        "cursor": {
          "ref": "47bc411f-9b1c-4f9d-8945-0d698ccaa617",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "450283f3-3eaf-45df-b162-d63186f2a1ed"
        },
        "item": {
          "id": "f8a256af-216a-433a-a3da-b739e2007d1e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e8994e18-1bdf-4e2c-9997-b82d11bdc9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1727888f-4afd-410d-9965-9044a22e841a",
        "cursor": {
          "ref": "17179460-5314-47a1-9fbb-c1a1d05b8e0a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1adf79d0-7837-4072-a459-a9f22a7817d2"
        },
        "item": {
          "id": "1727888f-4afd-410d-9965-9044a22e841a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1aefb922-1ca1-4a7a-b65a-3407512a129c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6e3ad4-c12b-4fc3-a9f0-58230ee6bf9c",
        "cursor": {
          "ref": "66f9b83d-6af2-486a-835f-5d5934373553",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1bb0d6c2-13c1-4164-a992-019a2ccd818c"
        },
        "item": {
          "id": "de6e3ad4-c12b-4fc3-a9f0-58230ee6bf9c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "32014b71-de62-4d09-a0e8-ad50773dc107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbc50b0-431c-42e7-b9c2-89e0c1ef013d",
        "cursor": {
          "ref": "ca15d606-5872-4c43-8e17-68a02ab7b518",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fc06d7d7-3cb8-4002-8285-dfb1575662fb"
        },
        "item": {
          "id": "bdbc50b0-431c-42e7-b9c2-89e0c1ef013d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7c25b02f-7053-4496-a0e4-b742075211fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bc5683-2aea-498a-b0d8-3bac659632a1",
        "cursor": {
          "ref": "bd18b2dc-d94d-434e-9585-cdfd90bcd103",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a6545584-cfdf-43f3-993b-602fccc2db7d"
        },
        "item": {
          "id": "e3bc5683-2aea-498a-b0d8-3bac659632a1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "680a8700-9a76-44b7-b4d6-861b7a251e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25ef128-8646-43fa-896d-266fec754cbb",
        "cursor": {
          "ref": "0bda10ec-49f9-4e1d-bfad-96cb209b30d9",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6c0e68ee-a59a-4f5a-aefa-d150416e2eb9"
        },
        "item": {
          "id": "c25ef128-8646-43fa-896d-266fec754cbb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4e19e3f3-7592-4718-aeb0-05845bd9ada7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfdea01-504a-464a-857e-8fc92166cba4",
        "cursor": {
          "ref": "61ebcb4d-dac7-42ea-acdd-400d8e27b316",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e3b03aaa-74fe-4b27-ba47-5310a12b479b"
        },
        "item": {
          "id": "bdfdea01-504a-464a-857e-8fc92166cba4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f4229b93-8568-41c7-8d7c-a45a8163d69e",
          "status": "OK",
          "code": 200,
          "responseTime": 2279,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6707bfe1-6e01-4055-9689-9e082777006a",
        "cursor": {
          "ref": "5bfcabcf-caa7-488b-bf8e-f2cf73623d0d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bf210262-7d85-4f80-bbcd-6dd2e538af38"
        },
        "item": {
          "id": "6707bfe1-6e01-4055-9689-9e082777006a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "543a8ebe-2775-427f-abac-650787269259",
          "status": "OK",
          "code": 200,
          "responseTime": 2529,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6251f8a-2aa0-4bf9-b4df-797647e4eb55",
        "cursor": {
          "ref": "5bbbc3fb-52d9-4efe-ae42-255bf7e2ea08",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "31a1b99f-8902-4e85-8768-4d4009317ff1"
        },
        "item": {
          "id": "c6251f8a-2aa0-4bf9-b4df-797647e4eb55",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5452ea15-8ad6-466d-8114-f1dd7056238e",
          "status": "OK",
          "code": 200,
          "responseTime": 2638,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "685a0a5c-9a58-4745-b36e-219328abd981",
        "cursor": {
          "ref": "29831d7e-8737-4d9e-8bb1-9897d76be242",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "46b138ba-b8bc-4579-b92c-56739be7bcfa"
        },
        "item": {
          "id": "685a0a5c-9a58-4745-b36e-219328abd981",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "29b450cd-6e49-46c3-9853-c44862462631",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685a0a5c-9a58-4745-b36e-219328abd981",
        "cursor": {
          "ref": "29831d7e-8737-4d9e-8bb1-9897d76be242",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "46b138ba-b8bc-4579-b92c-56739be7bcfa"
        },
        "item": {
          "id": "685a0a5c-9a58-4745-b36e-219328abd981",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "29b450cd-6e49-46c3-9853-c44862462631",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1670c7-6f8a-44eb-a3d0-3bf3b19f7e17",
        "cursor": {
          "ref": "15e1a8be-3858-4ca4-8e99-89c56b85f55a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7aa2d427-8798-452e-9142-120d97a4bc03"
        },
        "item": {
          "id": "bb1670c7-6f8a-44eb-a3d0-3bf3b19f7e17",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "69e8cc69-39c3-4f6d-804f-68019e26be85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed2d14f-95a0-4bff-a73c-0a0f1046f0fc",
        "cursor": {
          "ref": "580a5eef-a0d6-4aa2-85bf-61e5253d9e8d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b6ae4b51-34ad-49de-95d3-a6285768e53f"
        },
        "item": {
          "id": "0ed2d14f-95a0-4bff-a73c-0a0f1046f0fc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d7a87b4e-feae-42d8-bced-3b9038fd18ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}